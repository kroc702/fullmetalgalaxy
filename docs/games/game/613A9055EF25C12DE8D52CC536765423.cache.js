var $wnd = $wnd || window.parent;
var __gwtModuleFunction = $wnd.game;
var $sendStats = __gwtModuleFunction.__sendStats;
$sendStats('moduleStartup', 'moduleEvalStart');
var $gwt_version = "2.9.0";
var $strongName = '613A9055EF25C12DE8D52CC536765423';
var $gwt = {};
var $doc = $wnd.document;
var $moduleName, $moduleBase;
function __gwtStartLoadingFragment(frag) {
var fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';
return __gwtModuleFunction.__startLoadingFragment(fragFile);
}
function __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}
function __gwt_isKnownPropertyValue(propName, propValue) {
return __gwtModuleFunction.__gwt_isKnownPropertyValue(propName, propValue);
}
function __gwt_getMetaProperty(name) {
return __gwtModuleFunction.__gwt_getMetaProperty(name);
}
var $stats = $wnd.__gwtStatsEvent ? function(a) {
return $wnd.__gwtStatsEvent && $wnd.__gwtStatsEvent(a);
} : null;
var $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;
var _, prototypesByTypeId_0, initFnList_0, permutationId = -1;
function getPermutationId(){
  if (!(permutationId != -1)) {
    debugger;
    throw toJs(makeAssertionError_Object('The bootstrap linker did not provide a soft permutation id to the gwtOnLoad function'));
  }
  return permutationId;
}

function setGwtProperty(propertyName, propertyValue){
  if (typeof window === 'object' && typeof window['$gwt'] === 'object') {
    window['$gwt'][propertyName] = propertyValue;
  }
}

function registerEntry_0(){
  return registerEntry();
}

function gwtOnLoad_0(errFn, modName, modBase, softPermutationId){
  ensureModuleInit();
  var initFnList = initFnList_0;
  $moduleName = modName;
  $moduleBase = modBase;
  permutationId = softPermutationId;
  function initializeModules(){
    for (var i = 0; i < initFnList.length; i++) {
      initFnList[i]();
    }
  }

  if (errFn) {
    try {
      $entry(initializeModules)();
    }
     catch (e) {
      errFn(modName, e);
    }
  }
   else {
    $entry(initializeModules)();
  }
}

function ensureModuleInit(){
  if (initFnList_0 == null) {
    initFnList_0 = [];
  }
}

function addInitFunctions(){
  ensureModuleInit();
  var initFnList = initFnList_0;
  for (var i = 0; i < arguments.length; i++) {
    initFnList.push(arguments[i]);
  }
}

function uniqueId(id_0){
  return jsinterop.closure.getUniqueId(id_0);
}

function typeMarkerFn(){
}

function toString_46(object){
  if (Array.isArray(object) && hasTypeMarker(object)) {
    return toString_2(object);
  }
  return object.toString();
}

function provide(namespace, optCtor){
  var cur = $wnd;
  if (namespace === '') {
    return cur;
  }
  var parts = namespace.split('.');
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript('var ' + parts[0]);
  }
  if (optCtor) {
    var clazz = optCtor.prototype.___clazz;
    clazz.jsConstructor = optCtor;
  }
  for (var part; parts.length && (part = parts.shift());) {
    cur = cur[part] = cur[part] || (!parts.length && optCtor || {});
  }
  return cur;
}

function portableObjCreate(obj){
  function F(){
  }

  ;
  F.prototype = obj || {};
  return new F;
}

function maybeGetClassLiteralFromPlaceHolder(entry){
  return entry instanceof Array?entry[0]:null;
}

function makeLambdaFunction(samMethod, ctor, ctorArguments){
  var lambda = function(){
    return samMethod.apply(lambda, arguments);
  }
  ;
  ctor.apply(lambda, ctorArguments);
  return lambda;
}

function getClassPrototype(typeId){
  return prototypesByTypeId_0[typeId];
}

function emptyMethod(){
}

function defineProperties(proto, propertyDefinition){
  for (var key in propertyDefinition) {
    propertyDefinition[key]['configurable'] = true;
  }
  Object.defineProperties(proto, propertyDefinition);
}

function defineClass(typeId, superTypeIdOrPrototype, castableTypeMap){
  var prototypesByTypeId = prototypesByTypeId_0;
  var prototype_0 = prototypesByTypeId[typeId];
  var clazz = maybeGetClassLiteralFromPlaceHolder(prototype_0);
  if (prototype_0 && !clazz) {
    _ = prototype_0;
  }
   else {
    _ = createSubclassPrototype(superTypeIdOrPrototype);
    _.castableTypeMap = castableTypeMap;
    if (!superTypeIdOrPrototype) {
      _.typeMarker = typeMarkerFn;
    }
    prototypesByTypeId[typeId] = _;
  }
  for (var i = 3; i < arguments.length; ++i) {
    arguments[i].prototype = _;
  }
  if (clazz) {
    _.___clazz = clazz;
  }
}

function createSubclassPrototype(superTypeIdOrPrototype){
  var superPrototype = superTypeIdOrPrototype && superTypeIdOrPrototype.prototype;
  if (!superPrototype) {
    superPrototype = prototypesByTypeId_0[superTypeIdOrPrototype];
  }
  return portableObjCreate(superPrototype);
}

function copyObjectProperties(from, to){
  for (var property in from) {
    if (to[property] === undefined) {
      to[property] = from[property];
    }
  }
}

function bootstrap(){
  prototypesByTypeId_0 = {};
  if (!Array.isArray) {
    Array.isArray = function(vArg){
      return Object.prototype.toString.call(vArg) === '[object Array]';
    }
    ;
  }
  function now_0(){
    return (new Date).getTime();
  }

  if (!Date.now) {
    Date.now = now_0;
  }
}

$wnd.goog = $wnd.goog || {};
$wnd.goog.global = $wnd.goog.global || $wnd;
bootstrap();
function $clinit_Object(){
  $clinit_Object = emptyMethod;
}

function $$init(this$static){
}

function $equals(this$static, other){
  return maskUndefined(this$static) === maskUndefined(other);
}

function $getClass(this$static){
  return this$static.___clazz;
}

function $hashCode(this$static){
  return getObjectIdentityHashCode(this$static);
}

function $init__V__devirtual$(this$static){
  return instanceOfString(this$static)?$$init_2(this$static):instanceOfDouble(this$static)?$$init_1(this$static):instanceOfBoolean(this$static)?$$init_0(this$static):hasJavaObjectVirtualDispatch(this$static)?this$static.$init():$$init(this$static);
}

function Object_0(){
  $clinit_Object();
  $init__V__devirtual$(this);
}

function equals_Ljava_lang_Object__Z__devirtual$(this$static, other){
  $clinit_Object();
  return instanceOfString(this$static)?$equals_3(this$static, other):instanceOfDouble(this$static)?$equals_2(this$static, other):instanceOfBoolean(this$static)?$equals_1(this$static, other):hasJavaObjectVirtualDispatch(this$static)?this$static.equals_0(other):isJavaArray(this$static)?$equals(this$static, other):$equals_0(this$static, other);
}

function getClass__Ljava_lang_Class___devirtual$(this$static){
  $clinit_Object();
  return instanceOfString(this$static)?$getClass_3(this$static):instanceOfDouble(this$static)?$getClass_2(this$static):instanceOfBoolean(this$static)?$getClass_1(this$static):hasJavaObjectVirtualDispatch(this$static)?this$static.___clazz:isJavaArray(this$static)?$getClass(this$static):$getClass_0(this$static);
}

function hashCode__I__devirtual$(this$static){
  $clinit_Object();
  return instanceOfString(this$static)?$hashCode_3(this$static):instanceOfDouble(this$static)?$hashCode_2(this$static):instanceOfBoolean(this$static)?$hashCode_1(this$static):hasJavaObjectVirtualDispatch(this$static)?this$static.hashCode_1():isJavaArray(this$static)?$hashCode(this$static):$hashCode_0(this$static);
}

function toString_2(object){
  $clinit_Object();
  return getClass__Ljava_lang_Class___devirtual$(object).getName() + '@' + toHexString(hashCode__I__devirtual$(object));
}

defineClass(1, null, {1:1}, Object_0);
_.$init = function $init(){
  $$init(this);
}
;
_.equals_0 = function equals(other){
  return $equals(this, other);
}
;
_.hashCode_1 = function hashCode_0(){
  return $hashCode(this);
}
;
_.toString_0 = function toString_1(){
  return toString_2(this);
}
;
_.equals = function(other){
  return this.equals_0(other);
}
;
_.hashCode = function(){
  return this.hashCode_1();
}
;
_.toString = function(){
  return this.toString_0();
}
;
function $clinit_JavaScriptObject(){
  $clinit_JavaScriptObject = emptyMethod;
  $clinit_Object();
}

function $cast(this$static){
  $clinit_JavaScriptObject();
  return this$static;
}

function $equals_0(this$static, other){
  $clinit_JavaScriptObject();
  if (!isClient()) {
    return getClassPrototype(1).equals_0.call(this$static, other);
  }
  return hasEquals(this$static)?callEquals(this$static, other):getClassPrototype(1).equals_0.call(this$static, other);
}

function $getClass_0(this$static){
  $clinit_JavaScriptObject();
  return getClass_0(this$static);
}

function $hashCode_0(this$static){
  $clinit_JavaScriptObject();
  if (!isClient()) {
    return getClassPrototype(1).hashCode_1.call(this$static);
  }
  return hasHashCode(this$static)?callHashCode(this$static):getClassPrototype(1).hashCode_1.call(this$static);
}

function callEquals(thisObject, thatObject){
  return thisObject.equals(thatObject);
}

function callHashCode(object){
  return object.hashCode();
}

function createArray(){
  $clinit_JavaScriptObject();
  return [];
}

function createObject(){
  $clinit_JavaScriptObject();
  return {};
}

function hasEquals(object){
  return !!object && !!object.equals;
}

function hasHashCode(object){
  return !!object && !!object.hashCode;
}

function toStringSimple(obj){
  return obj.toString?obj.toString():'[JavaScriptObject]';
}

function toStringVerbose(obj){
  var defined = function(m){
    return typeof m != 'undefined';
  }
  ;
  var strip = function(s){
    return s.replace(/\r\n/g, '');
  }
  ;
  if (defined(obj.outerHTML))
    return strip(obj.outerHTML);
  if (defined(obj.innerHTML) && obj.cloneNode) {
    $doc.createElement('div').appendChild(obj.cloneNode(true)).innerHTML;
  }
  if (defined(obj.nodeType) && obj.nodeType == 3) {
    return "'" + obj.data.replace(/ /g, '\u25AB').replace(/\u00A0/, '\u25AA') + "'";
  }
  if (typeof defined(obj.htmlText) && obj.collapse) {
    var html = obj.htmlText;
    if (html) {
      return 'IETextRange [' + strip(html) + ']';
    }
     else {
      var dup = obj.duplicate();
      dup.pasteHTML('|');
      var out = 'IETextRange ' + strip(obj.parentElement().outerHTML);
      dup.moveStart('character', -1);
      dup.pasteHTML('');
      return out;
    }
  }
  return obj.toString?obj.toString():'[JavaScriptObject]';
}

function $clinit_Cast(){
  $clinit_Cast = emptyMethod;
  $clinit_Object();
}

function canCast(src_0, dstId){
  $clinit_Cast();
  if (instanceOfString(src_0)) {
    return !!stringCastMap[dstId];
  }
   else if (src_0.castableTypeMap) {
    return !!src_0.castableTypeMap[dstId];
  }
   else if (instanceOfDouble(src_0)) {
    return !!doubleCastMap[dstId];
  }
   else if (instanceOfBoolean(src_0)) {
    return !!booleanCastMap[dstId];
  }
  return false;
}

function castTo(src_0, dstId){
  $clinit_Cast();
  checkType(jsEquals(src_0, null) || canCast(src_0, dstId));
  return src_0;
}

function castToAllowJso(src_0, dstId){
  $clinit_Cast();
  checkType(jsEquals(src_0, null) || isJavaScriptObject(src_0) || canCast(src_0, dstId));
  return src_0;
}

function castToArray(src_0){
  $clinit_Cast();
  checkType(jsEquals(src_0, null) || instanceOfArray(src_0));
  return src_0;
}

function castToBoolean(src_0){
  $clinit_Cast();
  checkType(jsEquals(src_0, null) || instanceOfBoolean(src_0));
  return src_0;
}

function castToDouble(src_0){
  $clinit_Cast();
  checkType(jsEquals(src_0, null) || instanceOfDouble(src_0));
  return src_0;
}

function castToJso(src_0){
  $clinit_Cast();
  checkType(jsEquals(src_0, null) || isJavaScriptObject(src_0));
  return src_0;
}

function castToString(src_0){
  $clinit_Cast();
  checkType(jsEquals(src_0, null) || instanceOfString(src_0));
  return src_0;
}

function castToUnknownNative(src_0){
  $clinit_Cast();
  return src_0;
}

function charToString(x_0){
  $clinit_Cast();
  return String.fromCharCode(x_0);
}

function getClass_0(array){
  $clinit_Cast();
  return array.___clazz || (Array.isArray(array) && getClassLiteralForArray(Lcom_google_gwt_core_client_JavaScriptObject_2_classLit, 1) || Lcom_google_gwt_core_client_JavaScriptObject_2_classLit);
}

function hasJavaObjectVirtualDispatch(src_0){
  $clinit_Cast();
  return !isArray(src_0) && hasTypeMarker(src_0);
}

function instanceOf(src_0, dstId){
  $clinit_Cast();
  return jsNotEquals(src_0, null) && canCast(src_0, dstId);
}

function instanceOfArray(src_0){
  $clinit_Cast();
  return isArray(src_0) && !isPrimitiveArray(src_0);
}

function instanceOfBoolean(src_0){
  $clinit_Cast();
  return typeof src_0 === 'boolean';
}

function instanceOfDouble(src_0){
  $clinit_Cast();
  return typeof src_0 === 'number';
}

function instanceOfFunction(src_0){
  $clinit_Cast();
  return jsNotEquals(src_0, null) && isFunction(src_0);
}

function instanceOfJsObject(src_0){
  $clinit_Cast();
  return jsNotEquals(src_0, null) && isJsObject(src_0);
}

function instanceOfJso(src_0){
  $clinit_Cast();
  return jsNotEquals(src_0, null) && isJavaScriptObject(src_0);
}

function instanceOfString(src_0){
  $clinit_Cast();
  return typeof src_0 === 'string';
}

function isArray(src_0){
  $clinit_Cast();
  return Array.isArray(src_0);
}

function isFunction(src_0){
  return typeof src_0 === 'function';
}

function isJavaScriptObject(src_0){
  $clinit_Cast();
  return isJsObjectOrFunction(src_0) && !hasTypeMarker(src_0);
}

function isJsObject(src_0){
  return typeof src_0 === 'object' || typeof src_0 == 'function';
}

function isJsObjectOrFunction(src_0){
  return typeof src_0 === 'object' || typeof src_0 === 'function';
}

function isNotNull(src_0){
  $clinit_Cast();
  return !!src_0;
}

function isNull(src_0){
  $clinit_Cast();
  return !src_0;
}

function jsEquals(a, b){
  $clinit_Cast();
  return a == b;
}

function jsNotEquals(a, b){
  $clinit_Cast();
  return a != b;
}

function maskUndefined(src_0){
  $clinit_Cast();
  return src_0 == null?null:src_0;
}

function narrow_byte(x_0){
  $clinit_Cast();
  return x_0 << 24 >> 24;
}

function narrow_char(x_0){
  $clinit_Cast();
  return x_0 & 65535;
}

function narrow_int(x_0){
  $clinit_Cast();
  return x_0 | 0;
}

function narrow_short(x_0){
  $clinit_Cast();
  return x_0 << 16 >> 16;
}

function round_int(x_0){
  $clinit_Cast();
  return Math.max(Math.min(x_0, 2147483647), -2147483648) | 0;
}

var booleanCastMap, doubleCastMap, stringCastMap;
function $clinit_Util(){
  $clinit_Util = emptyMethod;
  $clinit_Object();
}

function getCastableTypeMap(o){
  $clinit_Util();
  return o.castableTypeMap;
}

function hasTypeMarker(o){
  $clinit_Util();
  return o.typeMarker === typeMarkerFn;
}

function setCastableTypeMap(o, castableTypeMap){
  $clinit_Util();
  o.castableTypeMap = castableTypeMap;
}

function setTypeMarker(o){
  $clinit_Util();
  o.typeMarker = typeMarkerFn;
}

function $clinit_Serializable(){
  $clinit_Serializable = emptyMethod;
}

function $clinit_Comparable(){
  $clinit_Comparable = emptyMethod;
}

function $clinit_Boolean(){
  $clinit_Boolean = emptyMethod;
  $clinit_Object();
  FALSE_2 = valueOf_32(false);
  TRUE_2 = valueOf_32(true);
  TYPE_27 = Z_classLit;
}

function $$init_0(this$static){
}

function $booleanValue(this$static){
  return unsafeCastToBoolean(checkNotNull(this$static));
}

function $compareTo(this$static, b){
  return compare_2(booleanValue__Z__devirtual$(this$static), booleanValue__Z__devirtual$(b));
}

function $compareTo_0(this$static, b){
  return compareTo_Ljava_lang_Boolean__I__devirtual$(this$static, castToBoolean(b));
}

function $create(x_0){
  return uncheckedCast(x_0);
}

function $equals_1(this$static, o){
  return maskUndefined(checkNotNull(this$static)) === maskUndefined(o);
}

function $getClass_1(this$static){
  return Ljava_lang_Boolean_2_classLit;
}

function $hashCode_1(this$static){
  return hashCode_19(booleanValue__Z__devirtual$(this$static));
}

function booleanValue__Z__devirtual$(this$static){
  $clinit_Boolean();
  return $booleanValue(this$static);
}

function compare_2(x_0, y_0){
  $clinit_Boolean();
  return x_0 == y_0?0:x_0?1:-1;
}

function compareTo_Ljava_lang_Boolean__I__devirtual$(this$static, b){
  return $compareTo(this$static, b);
}

function compareTo_Ljava_lang_Object__I__devirtual$(this$static, other){
  $clinit_Boolean();
  return instanceOfString(this$static)?$compareTo_3(this$static, other):instanceOfDouble(this$static)?$compareTo_2(this$static, other):instanceOfBoolean(this$static)?$compareTo_0(this$static, other):this$static.compareTo_0(other);
}

function equals_Ljava_lang_Object__Z__devirtual$_0(this$static, o){
  $clinit_Boolean();
  return $equals_1(this$static, o);
}

function hashCode_19(value_0){
  $clinit_Boolean();
  return value_0?1231:1237;
}

function toString_54(x_0){
  return valueOf_48(x_0);
}

function valueOf_32(b){
  $clinit_Boolean();
  return b?$create(true):$create(false);
}

booleanCastMap = {4:1, 545:1, 8:1, 1:1};
var FALSE_2, TRUE_2, TYPE_27;
function $clinit_CharSequence(){
  $clinit_CharSequence = emptyMethod;
}

function $clinit_Type(){
  $clinit_Type = emptyMethod;
}

function $clinit_Class(){
  $clinit_Class = emptyMethod;
  $clinit_Object();
}

function Class(){
  Object_0.call(this);
  this.$init_819();
  this.typeName = null;
  this.simpleName = null;
  this.packageName = null;
  this.compoundName = null;
  this.canonicalName = null;
  this.typeId = null;
  this.arrayLiterals = null;
}

function createClassObject(packageName, compoundClassName, typeId){
  var clazz;
  clazz = new Class;
  if (isClassMetadataEnabled()) {
    clazz.packageName = packageName;
    clazz.compoundName = compoundClassName;
  }
   else {
    synthesizeClassNamesFromTypeId(clazz, typeId);
  }
  return clazz;
}

function createForClass(packageName, compoundClassName, typeId, superclass){
  $clinit_Class();
  var clazz;
  clazz = createClassObject(packageName, compoundClassName, typeId);
  maybeSetClassLiteral(typeId, clazz);
  clazz.superclass = superclass;
  return clazz;
}

function createForEnum(packageName, compoundClassName, typeId, superclass, enumConstantsFunc, enumValueOfFunc){
  $clinit_Class();
  var clazz;
  clazz = createClassObject(packageName, compoundClassName, typeId);
  maybeSetClassLiteral(typeId, clazz);
  clazz.modifiers = isNotNull(enumConstantsFunc)?8:0;
  clazz.superclass = clazz.enumSuperclass = superclass;
  clazz.enumConstantsFunc = enumConstantsFunc;
  clazz.enumValueOfFunc = enumValueOfFunc;
  return clazz;
}

function createForInterface(packageName, compoundClassName){
  $clinit_Class();
  var clazz;
  clazz = createClassObject(packageName, compoundClassName, null);
  clazz.modifiers = 2;
  return clazz;
}

function createForPrimitive(className, primitiveTypeId){
  $clinit_Class();
  var clazz;
  clazz = createClassObject('', className, primitiveTypeId);
  clazz.typeId = primitiveTypeId;
  clazz.modifiers = 1;
  return clazz;
}

function getClassLiteralForArray_0(leafClass, dimensions){
  $clinit_Class();
  var arrayLiterals = leafClass.arrayLiterals = leafClass.arrayLiterals || [];
  return arrayLiterals[dimensions] || (arrayLiterals[dimensions] = leafClass.createClassLiteralForArray(dimensions));
}

function getPrototypeForClass(clazz){
  $clinit_Class();
  if (clazz.isPrimitive()) {
    return null;
  }
  var typeId = clazz.typeId;
  return prototypesByTypeId_0[typeId];
}

function initializeNames(clazz){
  if (clazz.isArray_0()) {
    var componentType = clazz.componentType;
    if (componentType.isPrimitive()) {
      clazz.typeName = '[' + componentType.typeId;
    }
     else if (!componentType.isArray_0()) {
      clazz.typeName = '[L' + componentType.getName() + ';';
    }
     else {
      clazz.typeName = '[' + componentType.getName();
    }
    clazz.canonicalName = componentType.getCanonicalName() + '[]';
    clazz.simpleName = componentType.getSimpleName() + '[]';
    return;
  }
  var packageName = clazz.packageName;
  var compoundName = clazz.compoundName;
  compoundName = compoundName.split('/');
  clazz.typeName = join_0('.', [packageName, join_0('$', compoundName)]);
  clazz.canonicalName = join_0('.', [packageName, join_0('.', compoundName)]);
  clazz.simpleName = compoundName[compoundName.length - 1];
}

function isClassMetadataEnabled(){
  $clinit_Class();
  return true;
}

function join_0(separator, strings){
  var i = 0;
  while (!strings[i] || strings[i] == '') {
    i++;
  }
  var result = strings[i++];
  for (; i < strings.length; i++) {
    if (!strings[i] || strings[i] == '') {
      continue;
    }
    result += separator + strings[i];
  }
  return result;
}

function maybeSetClassLiteral(typeId, clazz){
  var proto;
  if (!typeId) {
    return;
  }
  clazz.typeId = typeId;
  var prototype_0 = getPrototypeForClass(clazz);
  if (!prototype_0) {
    prototypesByTypeId_0[typeId] = [clazz];
    return;
  }
  prototype_0.___clazz = clazz;
}

function synthesizeClassNamesFromTypeId(clazz, typeId){
  $clinit_Class();
  clazz.typeName = 'Class$' + (!!typeId?'S' + typeId:'' + clazz.sequentialId);
  clazz.canonicalName = clazz.typeName;
  clazz.simpleName = clazz.typeName;
}

defineClass(371, 1, {1:1}, Class);
_.$init_819 = function $init_819(){
  this.sequentialId = nextSequentialId++;
}
;
_.createClassLiteralForArray = function createClassLiteralForArray(dimensions){
  var clazz;
  clazz = new Class;
  clazz.modifiers = 4;
  clazz.superclass = Ljava_lang_Object_2_classLit;
  if (dimensions > 1) {
    clazz.componentType = getClassLiteralForArray_0(this, dimensions - 1);
  }
   else {
    clazz.componentType = this;
  }
  return clazz;
}
;
_.desiredAssertionStatus = function desiredAssertionStatus(){
  return true;
}
;
_.ensureNamesAreInitialized = function ensureNamesAreInitialized(){
  if (jsNotEquals(this.typeName, null)) {
    return;
  }
  initializeNames(this);
}
;
_.getCanonicalName = function getCanonicalName(){
  this.ensureNamesAreInitialized();
  return this.canonicalName;
}
;
_.getComponentType = function getComponentType(){
  return this.componentType;
}
;
_.getEnumConstants = function getEnumConstants(){
  return this.enumConstantsFunc && this.enumConstantsFunc();
}
;
_.getEnumSuperclass = function getEnumSuperclass(){
  return this.enumSuperclass;
}
;
_.getName = function getName_4(){
  this.ensureNamesAreInitialized();
  return this.typeName;
}
;
_.getSimpleName = function getSimpleName(){
  this.ensureNamesAreInitialized();
  return this.simpleName;
}
;
_.isArray_0 = function isArray_0(){
  return (this.modifiers & 4) != 0;
}
;
_.isInterface = function isInterface(){
  return (this.modifiers & 2) != 0;
}
;
_.isPrimitive = function isPrimitive(){
  return (this.modifiers & 1) != 0;
}
;
_.toString_0 = function toString_59(){
  return (this.isInterface()?'interface ':this.isPrimitive()?'':'class ') + ('' + this.getName());
}
;
_.modifiers = 0;
_.sequentialId = 0;
var nextSequentialId = 1;
function $clinit_Number(){
  $clinit_Number = emptyMethod;
  $clinit_Object();
}

function $init__V__devirtual$_0(this$static){
  return instanceOfDouble(this$static)?$$init_1(this$static):this$static.$init_816();
}

function Number_0(){
  $clinit_Number();
  Object_0.call(this);
  $init__V__devirtual$_0(this);
}

function __isValidDouble(str){
  if (jsEquals(floatRegex, null)) {
    floatRegex = new RegExp('^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$');
  }
  return floatRegex.test(str);
}

function __parseAndValidateDouble(s){
  $clinit_Number();
  if (!__isValidDouble(s)) {
    throw toJs(forInputString(s));
  }
  return parseFloat(s);
}

function __parseAndValidateInt(s, radix, lowerBound, upperBound){
  $clinit_Number();
  var i, isTooLow, length_0, startIndex, toReturn;
  if (jsEquals(s, null)) {
    throw toJs(forNullInputString());
  }
  if (radix < 2 || radix > 36) {
    throw toJs(forRadix(radix));
  }
  length_0 = length__I__devirtual$(s);
  startIndex = length_0 > 0 && (charAt_I_C__devirtual$(s, 0) == 45 || charAt_I_C__devirtual$(s, 0) == 43)?1:0;
  for (i = startIndex; i < length_0; i++) {
    if (digit_0(charAt_I_C__devirtual$(s, i), radix) == -1) {
      throw toJs(forInputString(s));
    }
  }
  toReturn = parseInt(s, radix);
  isTooLow = toReturn < lowerBound;
  if (isNaN(toReturn)) {
    throw toJs(forInputString(s));
  }
   else if (isTooLow || toReturn > upperBound) {
    throw toJs(forInputString(s));
  }
  return toReturn;
}

function __parseAndValidateLong(s, radix){
  $clinit_Number();
  var c, firstTime, head, i, length_0, maxDigits, minValue, negative, orig, radixPower, toReturn;
  if (jsEquals(s, null)) {
    throw toJs(forNullInputString());
  }
  if (radix < 2 || radix > 36) {
    throw toJs(forRadix(radix));
  }
  orig = s;
  length_0 = length__I__devirtual$(s);
  negative = false;
  if (length_0 > 0) {
    c = charAt_I_C__devirtual$(s, 0);
    if (c == 45 || c == 43) {
      s = substring_I_Ljava_lang_String___devirtual$(s, 1);
      length_0--;
      negative = c == 45;
    }
  }
  if (length_0 == 0) {
    throw toJs(forInputString(orig));
  }
  while (length__I__devirtual$(s) > 0 && charAt_I_C__devirtual$(s, 0) == 48) {
    s = substring_I_Ljava_lang_String___devirtual$(s, 1);
    length_0--;
  }
  if (length_0 > ($clinit_Number$__ParseLong() , maxLengthForRadix)[radix]) {
    throw toJs(forInputString(orig));
  }
  for (i = 0; i < length_0; i++) {
    if (digit_0(charAt_I_C__devirtual$(s, i), radix) == -1) {
      throw toJs(forInputString(orig));
    }
  }
  toReturn = 0;
  maxDigits = ($clinit_Number$__ParseLong() , maxDigitsForRadix)[radix];
  radixPower = fromInt_0(($clinit_Number$__ParseLong() , maxDigitsRadixPower)[radix]);
  minValue = neg_0(($clinit_Number$__ParseLong() , maxValueForRadix)[radix]);
  firstTime = true;
  head = length_0 % maxDigits;
  if (head > 0) {
    toReturn = fromInt_0(-parseInt(substring_II_Ljava_lang_String___devirtual$(s, 0, head), radix));
    s = substring_I_Ljava_lang_String___devirtual$(s, head);
    length_0 -= head;
    firstTime = false;
  }
  while (length_0 >= maxDigits) {
    head = parseInt(substring_II_Ljava_lang_String___devirtual$(s, 0, maxDigits), radix);
    s = substring_I_Ljava_lang_String___devirtual$(s, maxDigits);
    length_0 -= maxDigits;
    if (!firstTime) {
      if (lt(toReturn, minValue)) {
        throw toJs(forInputString(orig));
      }
      toReturn = mul_0(toReturn, radixPower);
    }
     else {
      firstTime = false;
    }
    toReturn = sub_1(toReturn, fromInt_0(head));
  }
  if (gt(toReturn, 0)) {
    throw toJs(forInputString(orig));
  }
  if (!negative) {
    toReturn = neg_0(toReturn);
    if (lt(toReturn, 0)) {
      throw toJs(forInputString(orig));
    }
  }
  return toReturn;
}

function doubleValue__D__devirtual$(this$static){
  $clinit_Number();
  return instanceOfDouble(this$static)?$doubleValue(this$static):this$static.doubleValue();
}

function longValue__J__devirtual$(this$static){
  $clinit_Number();
  return instanceOfDouble(this$static)?$longValue(this$static):this$static.longValue();
}

defineClass(111, 1, {4:1, 1:1});
_.$init_816 = function $init_816(){
}
;
var floatRegex;
function $clinit_Double(){
  $clinit_Double = emptyMethod;
  $clinit_Number();
  MIN_EXPONENT = -1022;
  NaN_0 = 0 / 0;
  NEGATIVE_INFINITY = -1 / 0;
  POSITIVE_INFINITY = 1 / 0;
  BYTES_1 = narrow_int(64 / 8);
  TYPE_30 = D_classLit;
}

function $$init_1(this$static){
}

function $compareTo_1(this$static, b){
  return compare_5(doubleValue__D__devirtual$_0(this$static), doubleValue__D__devirtual$_0(b));
}

function $compareTo_2(this$static, b){
  return compareTo_Ljava_lang_Double__I__devirtual$(this$static, castToDouble(b));
}

function $create_0(x_0){
  return uncheckedCast(x_0);
}

function $doubleValue(this$static){
  return unsafeCastToDouble(checkNotNull(this$static));
}

function $equals_2(this$static, o){
  return maskUndefined(checkNotNull(this$static)) === maskUndefined(o);
}

function $getClass_2(this$static){
  return Ljava_lang_Double_2_classLit;
}

function $hashCode_2(this$static){
  return hashCode_24(doubleValue__D__devirtual$_0(this$static));
}

function $intValue(this$static){
  return round_int(doubleValue__D__devirtual$_0(this$static));
}

function $longValue(this$static){
  return fromDouble_0(doubleValue__D__devirtual$_0(this$static));
}

function compare_5(x_0, y_0){
  $clinit_Double();
  if (x_0 < y_0) {
    return -1;
  }
  if (x_0 > y_0) {
    return 1;
  }
  if (x_0 == y_0) {
    return x_0 == 0?compare_5(1 / x_0, 1 / y_0):0;
  }
  if (isNaN(x_0)) {
    if (isNaN(y_0)) {
      return 0;
    }
     else {
      return 1;
    }
  }
   else {
    return -1;
  }
}

function compareTo_Ljava_lang_Double__I__devirtual$(this$static, b){
  return $compareTo_1(this$static, b);
}

function doubleValue__D__devirtual$_0(this$static){
  return $doubleValue(this$static);
}

function equals_Ljava_lang_Object__Z__devirtual$_1(this$static, o){
  $clinit_Double();
  return $equals_2(this$static, o);
}

function hashCode_24(d){
  $clinit_Double();
  return round_int(d);
}

function intValue__I__devirtual$(this$static){
  $clinit_Double();
  return $intValue(this$static);
}

function isInfinite(x_0){
  $clinit_Double();
  return !isNaN(x_0) && !isFinite(x_0);
}

function parseDouble(s){
  $clinit_Double();
  return __parseAndValidateDouble(s);
}

function toString_60(b){
  return valueOf_43(b);
}

function valueOf_35(d){
  $clinit_Double();
  return $create_0(d);
}

doubleCastMap = {4:1, 8:1, 546:1, 1:1};
var BYTES_1 = 0, MIN_EXPONENT = 0, NEGATIVE_INFINITY = 0, NaN_0 = 0, POSITIVE_INFINITY = 0, TYPE_30;
function $clinit_String(){
  $clinit_String = emptyMethod;
  $clinit_Object();
  $clinit_CharSequence();
  CASE_INSENSITIVE_ORDER = new String$1;
}

function $$init_2(this$static){
}

function $asNativeString(this$static){
  return uncheckedCast(this$static);
}

function $charAt(this$static, index_0){
  checkStringElementIndex(index_0, length__I__devirtual$(this$static));
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).charCodeAt(index_0);
}

function $compareTo_3(this$static, other){
  return compareTo_Ljava_lang_String__I__devirtual$(this$static, castToString(other));
}

function $compareTo_4(this$static, other){
  var a, b;
  a = unsafeCastToDouble(checkNotNull(this$static));
  b = unsafeCastToDouble(checkNotNull(other));
  return a == b?0:a < b?-1:1;
}

function $compareToIgnoreCase(this$static, other){
  return compareTo_Ljava_lang_String__I__devirtual$(toLowerCase__Ljava_lang_String___devirtual$(this$static), toLowerCase__Ljava_lang_String___devirtual$(other));
}

function $contains(this$static, s){
  return indexOf_Ljava_lang_String__I__devirtual$(this$static, toString_46(s)) != -1;
}

function $create_2(value_0){
  $clinit_String();
  return valueOf_49(value_0);
}

function $create_3(value_0, offset, count){
  $clinit_String();
  return valueOf_50(value_0, offset, count);
}

function $endsWith(this$static, suffix){
  var suffixlength;
  suffixlength = length__I__devirtual$(suffix);
  return equals_Ljava_lang_Object__Z__devirtual$_2(asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).substr(length__I__devirtual$(this$static) - suffixlength, suffixlength), suffix);
}

function $equals_3(this$static, other){
  return maskUndefined(checkNotNull(this$static)) === maskUndefined(other);
}

function $equalsIgnoreCase(this$static, other){
  checkNotNull(this$static);
  if (jsEquals(other, null)) {
    return false;
  }
  if (equals_Ljava_lang_Object__Z__devirtual$_2(this$static, other)) {
    return true;
  }
  return length__I__devirtual$(this$static) == length__I__devirtual$(other) && equals_Ljava_lang_Object__Z__devirtual$_2(toLowerCase__Ljava_lang_String___devirtual$(this$static), toLowerCase__Ljava_lang_String___devirtual$(other));
}

function $getClass_3(this$static){
  return Ljava_lang_String_2_classLit;
}

function $hashCode_3(this$static){
  return getStringHashCode(this$static);
}

function $indexOf(this$static, codePoint){
  return indexOf_Ljava_lang_String__I__devirtual$(this$static, fromCodePoint(codePoint));
}

function $indexOf_0(this$static, str){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).indexOf(str);
}

function $indexOf_1(this$static, str, startIndex){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).indexOf(str, startIndex);
}

function $isEmpty(this$static){
  return length__I__devirtual$(this$static) == 0;
}

function $lastIndexOf(this$static, codePoint){
  return lastIndexOf_Ljava_lang_String__I__devirtual$(this$static, fromCodePoint(codePoint));
}

function $lastIndexOf_0(this$static, codePoint, startIndex){
  return lastIndexOf_Ljava_lang_String_I_I__devirtual$(this$static, fromCodePoint(codePoint), startIndex);
}

function $lastIndexOf_1(this$static, str){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).lastIndexOf(str);
}

function $lastIndexOf_2(this$static, str, start_0){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).lastIndexOf(str, start_0);
}

function $length_1(this$static){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).length;
}

function $matches(this$static, regex){
  return (new RegExp('^(' + regex + ')$')).test(this$static);
}

function $nativeReplaceAll(this$static, regex, replace){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).replace(new RegExp(regex, 'g'), replace);
}

function $replace_0(this$static, from, to){
  var regex, replacement;
  regex = replaceAll_Ljava_lang_String_Ljava_lang_String__Ljava_lang_String___devirtual$(toString_46(from), '([/\\\\\\.\\*\\+\\?\\|\\(\\)\\[\\]\\{\\}$^])', '\\\\$1');
  replacement = replaceAll_Ljava_lang_String_Ljava_lang_String__Ljava_lang_String___devirtual$(replaceAll_Ljava_lang_String_Ljava_lang_String__Ljava_lang_String___devirtual$(toString_46(to), '\\\\', '\\\\\\\\'), '\\$', '\\\\$');
  return replaceAll_Ljava_lang_String_Ljava_lang_String__Ljava_lang_String___devirtual$(this$static, regex, replacement);
}

function $replaceAll(this$static, regex, replace){
  replace = translateReplaceString(replace);
  return nativeReplaceAll_Ljava_lang_String_Ljava_lang_String__Ljava_lang_String___devirtual$(this$static, regex, replace);
}

function $split_0(this$static, regex){
  return split_Ljava_lang_String_I__Ljava_lang_String___devirtual$(this$static, regex, 0);
}

function $split_1(this$static, regex, maxMatch){
  var compiled, count, lastNonEmpty, lastTrail, matchIndex, matchObj, out, trail;
  compiled = new RegExp(regex, 'g');
  out = initUnidimensionalArray(Ljava_lang_String_2_classLit, {4:1, 1:1, 5:1}, 2, 0, 6, 1);
  count = 0;
  trail = this$static;
  lastTrail = null;
  while (true) {
    matchObj = compiled.exec(trail);
    if (jsEquals(matchObj, null) || jsEquals(trail, '') || count == maxMatch - 1 && maxMatch > 0) {
      out[count] = trail;
      break;
    }
     else {
      matchIndex = matchObj.index;
      out[count] = substring_II_Ljava_lang_String___devirtual$(trail, 0, matchIndex);
      trail = substring_II_Ljava_lang_String___devirtual$(trail, matchIndex + length__I__devirtual$($asArray(matchObj)[0]), length__I__devirtual$(trail));
      compiled.lastIndex = 0;
      if (jsEquals(lastTrail, trail)) {
        out[count] = substring_II_Ljava_lang_String___devirtual$(trail, 0, 1);
        trail = substring_I_Ljava_lang_String___devirtual$(trail, 1);
      }
      lastTrail = trail;
      count++;
    }
  }
  if (maxMatch == 0 && length__I__devirtual$(this$static) > 0) {
    lastNonEmpty = out.length;
    while (lastNonEmpty > 0 && jsEquals(out[lastNonEmpty - 1], '')) {
      --lastNonEmpty;
    }
    if (lastNonEmpty < out.length) {
      setLength_0(out, lastNonEmpty);
    }
  }
  return out;
}

function $startsWith(this$static, prefix){
  return startsWith_Ljava_lang_String_I_Z__devirtual$(this$static, prefix, 0);
}

function $startsWith_0(this$static, prefix, toffset){
  return toffset >= 0 && equals_Ljava_lang_Object__Z__devirtual$_2(asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).substr(toffset, length__I__devirtual$(prefix)), prefix);
}

function $substring(this$static, beginIndex){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).substr(beginIndex);
}

function $substring_0(this$static, beginIndex, endIndex){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).substr(beginIndex, endIndex - beginIndex);
}

function $toLowerCase(this$static){
  return asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).toLowerCase();
}

function $toLowerCase_0(this$static, locale){
  return jsEquals(locale, getDefault_0())?asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).toLocaleLowerCase():asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static).toLowerCase();
}

function $trim(this$static){
  var end, length_0, start_0;
  length_0 = length__I__devirtual$(this$static);
  start_0 = 0;
  while (start_0 < length_0 && charAt_I_C__devirtual$(this$static, start_0) <= 32) {
    start_0++;
  }
  end = length_0;
  while (end > start_0 && charAt_I_C__devirtual$(this$static, end - 1) <= 32) {
    end--;
  }
  return start_0 > 0 || end < length_0?substring_II_Ljava_lang_String___devirtual$(this$static, start_0, end):this$static;
}

function asNativeString__Ljava_lang_String$NativeString___devirtual$(this$static){
  return $asNativeString(this$static);
}

function charAt_I_C__devirtual$(this$static, index_0){
  $clinit_String();
  return $charAt(this$static, index_0);
}

function compareToIgnoreCase_Ljava_lang_String__I__devirtual$(this$static, other){
  $clinit_String();
  return $compareToIgnoreCase(this$static, other);
}

function compareTo_Ljava_lang_String__I__devirtual$(this$static, other){
  $clinit_String();
  return $compareTo_4(this$static, other);
}

function contains_Ljava_lang_CharSequence__Z__devirtual$(this$static, s){
  $clinit_String();
  return $contains(this$static, s);
}

function endsWith_Ljava_lang_String__Z__devirtual$(this$static, suffix){
  $clinit_String();
  return $endsWith(this$static, suffix);
}

function equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(this$static, other){
  $clinit_String();
  return $equalsIgnoreCase(this$static, other);
}

function equals_Ljava_lang_Object__Z__devirtual$_2(this$static, other){
  $clinit_String();
  return $equals_3(this$static, other);
}

function fromCharCode(array){
  return String.fromCharCode.apply(null, array);
}

function fromCodePoint(codePoint){
  $clinit_String();
  var hiSurrogate, loSurrogate;
  if (codePoint >= 65536) {
    hiSurrogate = getHighSurrogate(codePoint);
    loSurrogate = getLowSurrogate(codePoint);
    return valueOf_42(hiSurrogate) + ('' + valueOf_42(loSurrogate));
  }
   else {
    return valueOf_42(narrow_char(codePoint));
  }
}

function hashCode__I__devirtual$_0(this$static){
  $clinit_String();
  return $hashCode_3(this$static);
}

function indexOf_I_I__devirtual$(this$static, codePoint){
  $clinit_String();
  return $indexOf(this$static, codePoint);
}

function indexOf_Ljava_lang_String_I_I__devirtual$(this$static, str, startIndex){
  $clinit_String();
  return $indexOf_1(this$static, str, startIndex);
}

function indexOf_Ljava_lang_String__I__devirtual$(this$static, str){
  $clinit_String();
  return $indexOf_0(this$static, str);
}

function isEmpty__Z__devirtual$(this$static){
  $clinit_String();
  return $isEmpty(this$static);
}

function lastIndexOf_II_I__devirtual$(this$static, codePoint, startIndex){
  $clinit_String();
  return $lastIndexOf_0(this$static, codePoint, startIndex);
}

function lastIndexOf_I_I__devirtual$(this$static, codePoint){
  $clinit_String();
  return $lastIndexOf(this$static, codePoint);
}

function lastIndexOf_Ljava_lang_String_I_I__devirtual$(this$static, str, start_0){
  $clinit_String();
  return $lastIndexOf_2(this$static, str, start_0);
}

function lastIndexOf_Ljava_lang_String__I__devirtual$(this$static, str){
  $clinit_String();
  return $lastIndexOf_1(this$static, str);
}

function length__I__devirtual$(this$static){
  $clinit_String();
  return $length_1(this$static);
}

function matches_Ljava_lang_String__Z__devirtual$(this$static, regex){
  $clinit_String();
  return $matches(this$static, regex);
}

function nativeReplaceAll_Ljava_lang_String_Ljava_lang_String__Ljava_lang_String___devirtual$(this$static, regex, replace){
  return $nativeReplaceAll(this$static, regex, replace);
}

function replaceAll_Ljava_lang_String_Ljava_lang_String__Ljava_lang_String___devirtual$(this$static, regex, replace){
  return $replaceAll(this$static, regex, replace);
}

function replace_Ljava_lang_CharSequence_Ljava_lang_CharSequence__Ljava_lang_String___devirtual$(this$static, from, to){
  $clinit_String();
  return $replace_0(this$static, from, to);
}

function split_Ljava_lang_String_I__Ljava_lang_String___devirtual$(this$static, regex, maxMatch){
  return $split_1(this$static, regex, maxMatch);
}

function split_Ljava_lang_String___Ljava_lang_String___devirtual$(this$static, regex){
  $clinit_String();
  return $split_0(this$static, regex);
}

function startsWith_Ljava_lang_String_I_Z__devirtual$(this$static, prefix, toffset){
  $clinit_String();
  return $startsWith_0(this$static, prefix, toffset);
}

function startsWith_Ljava_lang_String__Z__devirtual$(this$static, prefix){
  $clinit_String();
  return $startsWith(this$static, prefix);
}

function substring_II_Ljava_lang_String___devirtual$(this$static, beginIndex, endIndex){
  $clinit_String();
  return $substring_0(this$static, beginIndex, endIndex);
}

function substring_I_Ljava_lang_String___devirtual$(this$static, beginIndex){
  $clinit_String();
  return $substring(this$static, beginIndex);
}

function toLowerCase_Ljava_util_Locale__Ljava_lang_String___devirtual$(this$static, locale){
  $clinit_String();
  return $toLowerCase_0(this$static, locale);
}

function toLowerCase__Ljava_lang_String___devirtual$(this$static){
  return $toLowerCase(this$static);
}

function translateReplaceString(replaceStr){
  var pos;
  pos = 0;
  while (0 <= (pos = indexOf_Ljava_lang_String_I_I__devirtual$(replaceStr, '\\', pos))) {
    if (charAt_I_C__devirtual$(replaceStr, pos + 1) == 36) {
      replaceStr = substring_II_Ljava_lang_String___devirtual$(replaceStr, 0, pos) + '$' + substring_I_Ljava_lang_String___devirtual$(replaceStr, ++pos);
    }
     else {
      replaceStr = substring_II_Ljava_lang_String___devirtual$(replaceStr, 0, pos) + ('' + substring_I_Ljava_lang_String___devirtual$(replaceStr, ++pos));
    }
  }
  return replaceStr;
}

function trim__Ljava_lang_String___devirtual$(this$static){
  $clinit_String();
  return $trim(this$static);
}

function valueOf_42(x_0){
  $clinit_String();
  return String.fromCharCode(x_0);
}

function valueOf_43(x_0){
  $clinit_String();
  return '' + x_0;
}

function valueOf_44(x_0){
  $clinit_String();
  return '' + x_0;
}

function valueOf_45(x_0){
  $clinit_String();
  return '' + x_0;
}

function valueOf_46(x_0){
  $clinit_String();
  return '' + toString_45(x_0);
}

function valueOf_47(x_0){
  $clinit_String();
  return jsEquals(x_0, null)?'null':toString_46(x_0);
}

function valueOf_48(x_0){
  $clinit_String();
  return '' + x_0;
}

function valueOf_49(x_0){
  $clinit_String();
  return valueOf_50(x_0, 0, x_0.length);
}

function valueOf_50(x_0, offset, count){
  $clinit_String();
  var batchEnd, batchSize, batchStart, end, s;
  end = offset + count;
  checkCriticalStringBounds(offset, end, x_0.length);
  batchSize = 10000;
  s = '';
  for (batchStart = offset; batchStart < end;) {
    batchEnd = $wnd.Math.min(batchStart + batchSize, end);
    s += '' + fromCharCode(unsafeClone(x_0, batchStart, batchEnd));
    batchStart = batchEnd;
  }
  return s;
}

stringCastMap = {4:1, 221:1, 8:1, 1:1, 2:1};
var CASE_INSENSITIVE_ORDER;
function $clinit_Comparator(){
  $clinit_Comparator = emptyMethod;
}

function $clinit_String$1(){
  $clinit_String$1 = emptyMethod;
  $clinit_Object();
  $clinit_Comparator();
}

function String$1(){
  $clinit_String$1();
  Object_0.call(this);
  this.$init_830();
}

defineClass(501, 1, {1:1, 107:1}, String$1);
_.$init_830 = function $init_830(){
}
;
_.compare = function compare_10(a, b){
  return this.compare_0(castToString(a), castToString(b));
}
;
_.equals_0 = function equals_27(other){
  return getClassPrototype(1).equals_0.call(this, other);
}
;
_.compare_0 = function compare_11(a, b){
  return compareToIgnoreCase_Ljava_lang_String__I__devirtual$(a, b);
}
;
function $clinit_JsUtils(){
  $clinit_JsUtils = emptyMethod;
  $clinit_Object();
}

function getProperty(map_0, key){
  $clinit_JsUtils();
  return map_0[key];
}

function isUndefined(value_0){
  $clinit_JsUtils();
  return value_0 === undefined;
}

function setProperty(map_0, key, value_0){
  $clinit_JsUtils();
  map_0[key] = value_0;
}

function uncheckedCast(o){
  $clinit_JsUtils();
  return o;
}

function unsafeCastToBoolean(bool){
  $clinit_JsUtils();
  return bool;
}

function unsafeCastToDouble(number){
  $clinit_JsUtils();
  return number;
}

defineClass(1175, 1, {1:1});
var Ljava_lang_Object_2_classLit = createForClass('java.lang', 'Object', 1, null);
var Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client', 'JavaScriptObject$', 0, Ljava_lang_Object_2_classLit);
var Ljava_io_Serializable_2_classLit = createForInterface('java.io', 'Serializable');
var Ljava_lang_Comparable_2_classLit = createForInterface('java.lang', 'Comparable');
var Ljava_lang_Boolean_2_classLit = createForClass('java.lang', 'Boolean', 545, Ljava_lang_Object_2_classLit);
var Ljava_lang_CharSequence_2_classLit = createForInterface('java.lang', 'CharSequence');
var Ljava_lang_reflect_Type_2_classLit = createForInterface('java.lang.reflect', 'Type');
var Ljava_lang_Class_2_classLit = createForClass('java.lang', 'Class', 371, Ljava_lang_Object_2_classLit);
var Ljava_lang_Number_2_classLit = createForClass('java.lang', 'Number', 111, Ljava_lang_Object_2_classLit);
var Ljava_lang_Double_2_classLit = createForClass('java.lang', 'Double', 546, Ljava_lang_Number_2_classLit);
var Ljava_lang_String_2_classLit = createForClass('java.lang', 'String', 2, Ljava_lang_Object_2_classLit);
var Ljava_util_Comparator_2_classLit = createForInterface('java.util', 'Comparator');
var Ljava_lang_String$1_2_classLit = createForClass('java.lang', 'String/1', 501, Ljava_lang_Object_2_classLit);
var Ljavaemul_internal_JsUtils_2_classLit = createForClass('javaemul.internal', 'JsUtils', 1175, Ljava_lang_Object_2_classLit);
function $clinit_EntryPoint(){
  $clinit_EntryPoint = emptyMethod;
}

var Lcom_google_gwt_core_client_EntryPoint_2_classLit = createForInterface('com.google.gwt.core.client', 'EntryPoint');
function $clinit_EventListener_0(){
  $clinit_EventListener_0 = emptyMethod;
}

var Ljava_util_EventListener_2_classLit = createForInterface('java.util', 'EventListener');
function $clinit_WindowResizeListener(){
  $clinit_WindowResizeListener = emptyMethod;
}

var Lcom_google_gwt_user_client_WindowResizeListener_2_classLit = createForInterface('com.google.gwt.user.client', 'WindowResizeListener');
function $clinit_HistoryListener(){
  $clinit_HistoryListener = emptyMethod;
}

var Lcom_google_gwt_user_client_HistoryListener_2_classLit = createForInterface('com.google.gwt.user.client', 'HistoryListener');
function $clinit_SourcesPreviewEvents(){
  $clinit_SourcesPreviewEvents = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_event_SourcesPreviewEvents_2_classLit = createForInterface('com.fullmetalgalaxy.client.event', 'SourcesPreviewEvents');
function $clinit_EventHandler(){
  $clinit_EventHandler = emptyMethod;
}

var Lcom_google_gwt_event_shared_EventHandler_2_classLit = createForInterface('com.google.gwt.event.shared', 'EventHandler');
function $clinit_Event$NativePreviewHandler(){
  $clinit_Event$NativePreviewHandler = emptyMethod;
}

var Lcom_google_gwt_user_client_Event$NativePreviewHandler_2_classLit = createForInterface('com.google.gwt.user.client', 'Event/NativePreviewHandler');
function $clinit_AppRoot(){
  $clinit_AppRoot = emptyMethod;
  $clinit_Object();
  logger_0 = getLogger_0('AppRoot');
}

function AppRoot(){
  $clinit_AppRoot();
  Object_0.call(this);
  this.$init_0();
  s_instance = this;
}

function getEventBus(){
  $clinit_AppRoot();
  return instance_0().m_eventBus;
}

function instance_0(){
  return s_instance;
}

defineClass(361, 1, {13:1, 148:1, 524:1, 312:1, 1:1});
_.$init_0 = function $init_0(){
  this.m_loadingPanel = new PopupPanel_1(false, true);
  this.m_isLoading = 0;
  this.m_historyState = new HistoryState;
  this.m_previewListenerCollection = new EventPreviewHandlerCollection;
  this.m_eventBus = new SimpleEventBus_1;
}
;
_.addPreviewListener = function addPreviewListener(p_listener){
  if (!this.m_previewListenerCollection.contains_0(p_listener)) {
    this.m_previewListenerCollection.add_5(p_listener);
  }
}
;
_.getDefaultHistoryState = function getDefaultHistoryState(){
  if (isNotNull(get_2663('app_history'))) {
    return new HistoryState_0(getElementAttribute(get_2663('app_history').getElement(), 'content'));
  }
  return new HistoryState;
}
;
_.isLoading = function isLoading(){
  return this.m_isLoading > 0;
}
;
_.onHistoryChanged = function onHistoryChanged(p_historyToken){
}
;
_.onModuleLoad = function onModuleLoad(){
  var initToken;
  this.m_loadingPanel.setWidget(new Image_1(($clinit_Icons() , s_instance_5).loading()));
  this.m_loadingPanel.setVisible(true);
  this.m_loadingPanel.setStyleName('gwt-DialogBox');
  this.m_loadingPanel.addStyleName('fmp-loading');
  addWindowResizeListener(this);
  addNativePreviewHandler(this);
  addHistoryListener(this);
  initToken = getToken_5();
  this.m_historyState.fromString(initToken);
  if (jsEquals(initToken, null) || isEmpty__Z__devirtual$(initToken)) {
    this.m_historyState = this.getDefaultHistoryState();
    initToken = this.m_historyState.toString_0();
  }
  this.onHistoryChanged(initToken);
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent(p_event){
  var elmt, type_0;
  if (isNull(p_event) || isNull(p_event.getNativeEvent()) || isNull($getEventTarget(p_event.getNativeEvent()))) {
    return;
  }
  elmt = as($getEventTarget(p_event.getNativeEvent()));
  if (instanceOfJso(elmt)) {
    type_0 = $getType(elmt);
    if (jsNotEquals(type_0, null) && (equals_Ljava_lang_Object__Z__devirtual$_2(type_0, 'text') || equals_Ljava_lang_Object__Z__devirtual$_2(type_0, 'password') || equals_Ljava_lang_Object__Z__devirtual$_2(type_0, 'textarea'))) {
      return;
    }
  }
  this.m_previewListenerCollection.fireEventPreview(p_event);
}
;
_.onWindowResized = function onWindowResized(p_width, p_height){
  if (this.m_isLoading > 0) {
    this.m_loadingPanel.center();
  }
}
;
_.removePreviewListener = function removePreviewListener(p_listener){
  this.m_previewListenerCollection.remove_1(p_listener);
}
;
_.startLoading = function startLoading(){
  if (this.m_isLoading < 0) {
    this.m_isLoading = 0;
  }
  this.m_isLoading++;
  this.m_loadingPanel.show();
  this.m_loadingPanel.center();
}
;
_.stopLoading = function stopLoading(){
  if (this.m_isLoading > 0) {
    this.m_isLoading--;
  }
  if (this.m_isLoading == 0) {
    this.m_loadingPanel.hide();
  }
}
;
_.m_isLoading = 0;
var logger_0, s_instance = null;
var Lcom_fullmetalgalaxy_client_AppRoot_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppRoot', 361, Ljava_lang_Object_2_classLit);
function $clinit_SourcesChannelMessageEvents(){
  $clinit_SourcesChannelMessageEvents = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_event_SourcesChannelMessageEvents_2_classLit = createForInterface('com.fullmetalgalaxy.client.event', 'SourcesChannelMessageEvents');
function $clinit_Window$ClosingHandler(){
  $clinit_Window$ClosingHandler = emptyMethod;
}

var Lcom_google_gwt_user_client_Window$ClosingHandler_2_classLit = createForInterface('com.google.gwt.user.client', 'Window/ClosingHandler');
function $clinit_AppMain(){
  $clinit_AppMain = emptyMethod;
  $clinit_AppRoot();
  WATCHDOG_PERIOD_MS = 1000 * 60 * 2;
  s_gameService = castTo(new GameServices_Proxy, 1142);
}

function AppMain(){
  $clinit_AppMain();
  var hPanel, serviceUrl;
  AppRoot.call(this);
  this.$init_1();
  s_instance_0 = this;
  serviceUrl = readGwtPropertyString('service_url');
  if (jsNotEquals(serviceUrl, null)) {
    castTo(getRpcService(), 1143).setServiceEntryPoint(serviceUrl);
  }
  this.loadAccountInfoFromPage();
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).takeOff32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).unconnected()));
  this.m_pnlChannelDisconnected = new FocusPanel_0(hPanel);
  addWindowClosingHandler(this);
}

function fireEventChannelMessage(p_object){
  $clinit_AppMain();
  if (jsNotEquals(p_object, null))
    instance_1().m_channelMessageHandlerCollection.fireEventChanelMessage(p_object);
}

function getRpcService(){
  $clinit_AppMain();
  return s_gameService;
}

function instance_1(){
  $clinit_AppMain();
  return s_instance_0;
}

defineClass(494, 361, {257:1, 13:1, 148:1, 524:1, 528:1, 312:1, 1:1}, AppMain);
_.$init_1 = function $init_1(){
  this.m_pnlChannelDisconnected = null;
  this.m_myAccount = new EbPublicAccount;
  this.m_myAccountAdmin = false;
  this.m_channelToken = null;
  this.m_gameId = 0;
  this.m_pageId = 0;
  this.m_isChannelConnected = false;
  this.m_channelMessageHandlerCollection = new ChannelMessageHandlerCollection;
  this.m_isCheckChannelTimerScheduled = false;
  this.m_checkChannelTimer = new AppMain$1(this);
  this.m_channelWatchDogTimer = new AppMain$2(this);
  this.m_chatEngine = null;
  this.m_dummyCallback = new AppMain$3(this);
  this.m_reconnectCallback = new AppMain$4(this);
  this.m_callbackChannel = new AppMain$5(this);
}
;
_.addChannelMessageEventHandler = function addChannelMessageEventHandler(p_class, p_handler){
  this.m_channelMessageHandlerCollection.addChannelMessageEventHandler(p_class, p_handler);
}
;
_.cancelCheckChannelTimer = function cancelCheckChannelTimer(){
  if (this.m_isCheckChannelTimerScheduled) {
    this.m_checkChannelTimer.cancel();
    this.m_isCheckChannelTimerScheduled = false;
  }
}
;
_.deserialize = function deserialize(p_serial){
  $clinit_AppMain();
  var e, factory, object, reader;
  object = null;
  try {
    factory = castTo(new GameServices_Proxy, 362);
    reader = factory.createStreamReader(p_serial);
    object = reader.readObject();
    if (jsNotEquals(object, null)) {
      return object;
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      e = $e0;
      ($clinit_AppRoot() , logger_0).severe(e.getMessage());
    }
     else 
      throw toJs($e0);
  }
  return object;
}
;
_.getMyAccount = function getMyAccount(){
  return this.m_myAccount;
}
;
_.getMyPresence = function getMyPresence(){
  var presence;
  presence = new Presence_0(instance_1().getMyAccount().getPseudo(), this.m_gameId, instance_1().getPageId());
  return presence;
}
;
_.getPageId = function getPageId(){
  return this.m_pageId;
}
;
_.getPresenceRoom = function getPresenceRoom(){
  if (isNotNull(this.m_chatEngine)) {
    return this.m_chatEngine.getPresenceRoom();
  }
  return new PresenceRoom_0(0);
}
;
_.iAmAdmin = function iAmAdmin(){
  return this.m_myAccountAdmin;
}
;
_.isChannelConnected = function isChannelConnected(){
  return this.m_isChannelConnected;
}
;
_.isUserConnected = function isUserConnected(p_pseudo){
  if (isNotNull(this.m_chatEngine) && jsNotEquals(p_pseudo, null)) {
    return this.m_chatEngine.isUserConnected(p_pseudo);
  }
  return false;
}
;
_.loadAccountInfoFromPage = function loadAccountInfoFromPage(){
  this.getMyAccount().setPseudo(readGwtPropertyString('fmp_userpseudo'));
  this.getMyAccount().setId(readGwtPropertyLong('fmp_userid').longValue());
  this.m_myAccountAdmin = readGwtPropertyBoolean('fmp_useradmin');
  this.m_pageId = readGwtPropertyLong('fmp_pageid').intValue();
  this.m_gameId = readGwtPropertyLong('fmp_gameid').longValue();
  this.m_channelToken = readGwtProperty('fmp_channelToken');
  if (jsNotEquals(this.m_channelToken, null) && !equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(this.m_channelToken, 'null')) {
    this.m_reconnectCallback.onSuccess(this.m_channelToken);
  }
}
;
_.onChannelConnected = function onChannelConnected(){
  $clinit_AppMain();
  this.m_isChannelConnected = true;
  ($clinit_MAppMessagesStack() , s_instance_1).removeMessage(this.m_pnlChannelDisconnected);
}
;
_.onChannelDisconnected = function onChannelDisconnected(){
  $clinit_AppMain();
  this.m_isChannelConnected = false;
  if (jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Initiation))) {
    ($clinit_MAppMessagesStack() , s_instance_1).showPersitentMessage(this.m_pnlChannelDisconnected);
  }
}
;
_.onModuleLoad = function onModuleLoad_0(){
  getClassPrototype(361).onModuleLoad.call(this);
  if (isNotNull(get_2663('GameEngine'))) {
    (new GameEngine).onModuleLoad();
  }
  if (isNotNull(get_2663('ChatEngine'))) {
    this.m_chatEngine = new ChatEngine;
    this.m_chatEngine.onModuleLoad();
  }
  if (isNotNull(get_2663('context'))) {
    (new MAppContext).onModuleLoad();
  }
  if (isNotNull(get_2663('new'))) {
    runAsync(1, new AppMain$6(this));
  }
  if (isNotNull(get_2663('status'))) {
    (new MAppStatusBar).onModuleLoad();
  }
  if (isNotNull(get_2663('MessagesStack'))) {
    (new MAppMessagesStack).onModuleLoad();
  }
  if (isNotNull(get_2663('board'))) {
    (new MAppBoard).onModuleLoad();
  }
  if (isNotNull(get_2663('tabmenu'))) {
    (new MAppTabMenu).onModuleLoad();
  }
  if (isNotNull(get_2663('LittlePresences'))) {
    (new MAppLittlePresences).onModuleLoad();
  }
  if (isNotNull(get_2663('Presences'))) {
    (new MAppPresences).onModuleLoad();
  }
  if (isNotNull(get_2663('Chat'))) {
    (new MAppChat).onModuleLoad();
  }
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  this.onChannelDisconnected();
}
;
_.onWindowClosing = function onWindowClosing(p_event){
  getRpcService().disconnect(this.getMyPresence(), this.m_dummyCallback);
}
;
_.removeChannelMessageEventHandler = function removeChannelMessageEventHandler(p_class, p_handler){
  this.m_channelMessageHandlerCollection.removeChannelMessageEventHandler(p_class, p_handler);
}
;
_.scheduleCheckChannelTimer = function scheduleCheckChannelTimer(){
  this.m_checkChannelTimer.schedule(5000);
  this.m_isCheckChannelTimerScheduled = true;
}
;
_.m_gameId = 0;
_.m_isChannelConnected = false;
_.m_isCheckChannelTimerScheduled = false;
_.m_myAccountAdmin = false;
_.m_pageId = 0;
var WATCHDOG_PERIOD_MS = 0, s_gameService, s_instance_0 = null;
var Lcom_fullmetalgalaxy_client_AppMain_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain', 494, Lcom_fullmetalgalaxy_client_AppRoot_2_classLit);
function $clinit_Timer(){
  $clinit_Timer = emptyMethod;
  $clinit_Object();
}

function Timer(){
  $clinit_Timer();
  Object_0.call(this);
  this.$init_2();
}

function clearInterval_0(timerId){
  $wnd.clearInterval(timerId);
}

function clearTimeout_0(timerId){
  $wnd.clearTimeout(timerId);
}

function createCallback(timer, cancelCounter){
  return $entry(function(){
    timer.fire(cancelCounter);
  }
  );
}

function setInterval_0(func, time){
  return $wnd.setInterval(func, time);
}

function setTimeout_0(func, time){
  return $wnd.setTimeout(func, time);
}

defineClass(93, 1, {1:1});
_.$init_2 = function $init_2(){
  this.timerId = null;
  this.cancelCounter = 0;
}
;
_.cancel = function cancel(){
  if (!this.isRunning_0()) {
    return;
  }
  this.cancelCounter++;
  if (this.isRepeating) {
    clearInterval_0(this.timerId.intValue());
  }
   else {
    clearTimeout_0(this.timerId.intValue());
  }
  this.timerId = null;
}
;
_.fire = function fire(scheduleCancelCounter){
  if (scheduleCancelCounter != this.cancelCounter) {
    return;
  }
  if (!this.isRepeating) {
    this.timerId = null;
  }
  this.run();
}
;
_.isRunning_0 = function isRunning(){
  return isNotNull(this.timerId);
}
;
_.schedule = function schedule(delayMillis){
  if (delayMillis < 0) {
    throw toJs(new IllegalArgumentException_0('must be non-negative'));
  }
  if (this.isRunning_0()) {
    this.cancel();
  }
  this.isRepeating = false;
  this.timerId = valueOf_37(setTimeout_0(createCallback(this, this.cancelCounter), delayMillis));
}
;
_.scheduleRepeating = function scheduleRepeating(periodMillis){
  if (periodMillis <= 0) {
    throw toJs(new IllegalArgumentException_0('must be positive'));
  }
  if (this.isRunning_0()) {
    this.cancel();
  }
  this.isRepeating = true;
  this.timerId = valueOf_37(setInterval_0(createCallback(this, this.cancelCounter), periodMillis));
}
;
_.cancelCounter = 0;
_.isRepeating = false;
var Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client', 'Timer', 93, Ljava_lang_Object_2_classLit);
function $clinit_AppMain$1(){
  $clinit_AppMain$1 = emptyMethod;
  $clinit_Timer();
}

function AppMain$1(this$0){
  $clinit_AppMain$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_3();
}

defineClass(505, 93, {1:1}, AppMain$1);
_.$init_3 = function $init_3(){
}
;
_.run = function run(){
  this.this$01.m_isCheckChannelTimerScheduled = false;
  this.this$01.onChannelDisconnected();
}
;
var Lcom_fullmetalgalaxy_client_AppMain$1_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain/1', 505, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_AppMain$2(){
  $clinit_AppMain$2 = emptyMethod;
  $clinit_Timer();
}

function AppMain$2(this$0){
  $clinit_AppMain$2();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_4();
}

defineClass(506, 93, {1:1}, AppMain$2);
_.$init_4 = function $init_4(){
}
;
_.run = function run_0(){
  var msg;
  msg = new ChatMessage_0(this.this$01.m_gameId, this.this$01.getMyPresence().getPseudo(), null);
  getRpcService().sendChatMessage(msg, this.this$01.m_dummyCallback);
  this.this$01.scheduleCheckChannelTimer();
}
;
var Lcom_fullmetalgalaxy_client_AppMain$2_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain/2', 506, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_AsyncCallback(){
  $clinit_AsyncCallback = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_AsyncCallback_2_classLit = createForInterface('com.google.gwt.user.client.rpc', 'AsyncCallback');
function $clinit_AppMain$3(){
  $clinit_AppMain$3 = emptyMethod;
  $clinit_Object();
}

function AppMain$3(this$0){
  $clinit_AppMain$3();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_5();
}

defineClass(507, 1, {1:1}, AppMain$3);
_.$init_5 = function $init_5(){
}
;
_.onSuccess = function onSuccess(p_result){
  this.onSuccess_0(castTo(p_result, 205));
}
;
_.onFailure = function onFailure(p_caught){
}
;
_.onSuccess_0 = function onSuccess_0(p_result){
}
;
var Lcom_fullmetalgalaxy_client_AppMain$3_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain/3', 507, Ljava_lang_Object_2_classLit);
function $clinit_AppMain$4(){
  $clinit_AppMain$4 = emptyMethod;
  $clinit_Object();
}

function AppMain$4(this$0){
  $clinit_AppMain$4();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_6();
}

defineClass(508, 1, {1:1}, AppMain$4);
_.$init_6 = function $init_6(){
}
;
_.onSuccess = function onSuccess_1(p_result){
  this.onSuccess_1(castToString(p_result));
}
;
_.onFailure = function onFailure_0(p_caught){
  alert_0('server (re)connexion error !!!');
}
;
_.onSuccess_1 = function onSuccess_2(p_result){
  this.this$01.m_channelToken = p_result;
  if (jsEquals(this.this$01.m_channelToken, null) || equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(this.this$01.m_channelToken, 'null')) {
    alert_0('server (re)connexion error !!!');
  }
   else {
    createChannel(this.this$01.m_channelToken, this.this$01.m_callbackChannel);
  }
}
;
var Lcom_fullmetalgalaxy_client_AppMain$4_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain/4', 508, Ljava_lang_Object_2_classLit);
function $clinit_ChannelFactory$ChannelCreatedCallback(){
  $clinit_ChannelFactory$ChannelCreatedCallback = emptyMethod;
}

var Lcom_google_gwt_appengine_channel_client_ChannelFactory$ChannelCreatedCallback_2_classLit = createForInterface('com.google.gwt.appengine.channel.client', 'ChannelFactory/ChannelCreatedCallback');
function $clinit_AppMain$5(){
  $clinit_AppMain$5 = emptyMethod;
  $clinit_Object();
}

function AppMain$5(this$0){
  $clinit_AppMain$5();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_7();
}

defineClass(509, 1, {1:1}, AppMain$5);
_.$init_7 = function $init_7(){
}
;
_.onChannelCreated = function onChannelCreated(channel){
  $open(channel, new AppMain$5$1(this));
}
;
var Lcom_fullmetalgalaxy_client_AppMain$5_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain/5', 509, Ljava_lang_Object_2_classLit);
function $clinit_SocketListener(){
  $clinit_SocketListener = emptyMethod;
}

var Lcom_google_gwt_appengine_channel_client_SocketListener_2_classLit = createForInterface('com.google.gwt.appengine.channel.client', 'SocketListener');
function $clinit_AppMain$5$1(){
  $clinit_AppMain$5$1 = emptyMethod;
  $clinit_Object();
}

function AppMain$5$1(this$1){
  $clinit_AppMain$5$1();
  this.this$11 = this$1;
  Object_0.call(this);
  this.$init_8();
}

defineClass(520, 1, {1:1}, AppMain$5$1);
_.$init_8 = function $init_8(){
}
;
_.onClose_0 = function onClose(){
  this.this$11.this$01.onChannelDisconnected();
  getRpcService().reconnect(this.this$11.this$01.getMyPresence(), this.this$11.this$01.m_reconnectCallback);
}
;
_.onError = function onError(error){
  this.this$11.this$01.onChannelDisconnected();
  ($clinit_MAppMessagesStack() , s_instance_1).showWarning('Error: ' + $getDescription(error));
}
;
_.onMessage = function onMessage(message){
  var keepAliveMessage, object, p_msg;
  this.this$11.this$01.cancelCheckChannelTimer();
  if (this.this$11.this$01.isChannelConnected()) {
    this.this$11.this$01.m_channelWatchDogTimer.cancel();
  }
  this.this$11.this$01.m_channelWatchDogTimer.schedule(120000);
  this.this$11.this$01.onChannelConnected();
  object = this.this$11.this$01.deserialize(message);
  if (instanceOf(object, 132)) {
    p_msg = castTo(object, 132);
    if (p_msg.isEmpty() && !equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(this.this$11.this$01.getMyAccount().getPseudo(), p_msg.getFromPseudo())) {
      keepAliveMessage = new ChatMessage;
      keepAliveMessage.setGameId(model_0().getGame().getId());
      keepAliveMessage.setFromPageId(instance_1().getPageId());
      keepAliveMessage.setFromPseudo(instance_1().getMyAccount().getPseudo());
      getRpcService().sendChatMessage(keepAliveMessage, this.this$11.this$01.m_dummyCallback);
    }
  }
  this.this$11.this$01.m_channelMessageHandlerCollection.fireEventChanelMessage(object);
}
;
_.onOpen = function onOpen(){
  var message;
  message = new ChatMessage;
  message.setGameId(this.this$11.this$01.m_gameId);
  message.setFromPageId(this.this$11.this$01.getPageId());
  message.setFromPseudo(instance_1().getMyAccount().getPseudo());
  getRpcService().sendChatMessage(message, this.this$11.this$01.m_dummyCallback);
}
;
var Lcom_fullmetalgalaxy_client_AppMain$5$1_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain/5/1', 520, Ljava_lang_Object_2_classLit);
function $clinit_RunAsyncCallback(){
  $clinit_RunAsyncCallback = emptyMethod;
}

var Lcom_google_gwt_core_client_RunAsyncCallback_2_classLit = createForInterface('com.google.gwt.core.client', 'RunAsyncCallback');
function $clinit_AppMain$6(){
  $clinit_AppMain$6 = emptyMethod;
  $clinit_Object();
}

function AppMain$6(this$0){
  $clinit_AppMain$6();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_9();
}

defineClass(513, 1, {315:1, 1:1}, AppMain$6);
_.$init_9 = function $init_9(){
}
;
_.onFailure = function onFailure_1(caught){
  alert_0('Error while downloading script: ' + caught.getLocalizedMessage());
}
;
var Lcom_fullmetalgalaxy_client_AppMain$6_2_classLit = createForClass('com.fullmetalgalaxy.client', 'AppMain/6', 513, Ljava_lang_Object_2_classLit);
function $clinit_ClientUtil(){
  $clinit_ClientUtil = emptyMethod;
  $clinit_Object();
  HTTP_URL_MATCHER = compile('https?\\://[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(/\\S*)?');
  s_dateTimeFormat = getFormat(getMisc(0).dateTimeFormat());
  s_shortDateFormat = getFormat(getMisc(0).shortDateFormat());
  s_timeFormat = getFormat(getMisc(0).timeFormat());
  m_initialLoadDate = currentTimeMillis_2();
  s_rules = new HashMap;
}

function formatDateTime(p_date){
  $clinit_ClientUtil();
  var shift_0;
  if (isNull(p_date)) {
    return '';
  }
  shift_0 = sub_1(p_date.getTime_1(), serverTimeMillis());
  if (lt(shift_0, 0) || gt(shift_0, fromInt_0(24 * 60 * 60 * 1000))) {
    return s_dateTimeFormat.format(p_date);
  }
  return s_timeFormat.format(p_date);
}

function formatTimeElapsed(p_millis){
  $clinit_ClientUtil();
  p_millis = div_1(p_millis, fromInt_0(1000 * 60));
  return '' + toString_45(div_1(p_millis, 60)) + 'h' + toString_45(mod_0(p_millis, 60));
}

function formatUserMessage(p_message){
  $clinit_ClientUtil();
  var text_0;
  text_0 = htmlEscape(p_message);
  text_0 = $replace(HTTP_URL_MATCHER, text_0, "<a target='_blank' href='$&'>$&<\/a>");
  text_0 = ($clinit_SmileyCollection() , INSTANCE_0).replace_0(text_0);
  text_0 = replace_Ljava_lang_CharSequence_Ljava_lang_CharSequence__Ljava_lang_String___devirtual$(text_0, '\n', '<br/>');
  return text_0;
}

function getJSString(name_0){
  $clinit_ClientUtil();
  return eval('$wnd.' + name_0);
}

function getNavigator(){
  $clinit_ClientUtil();
  var e;
  try {
    {
      s_rules;
      return jsGetNavigator();
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      e = $e0;
      e.printStackTrace();
    }
     else 
      throw toJs($e0);
  }
  return -1;
}

function getUrl(){
  return $wnd.location.href;
}

function getUrlParameter(p_parameter){
  $clinit_ClientUtil();
  var i, param, url_0;
  url_0 = getUrl();
  param = split_Ljava_lang_String___Ljava_lang_String___devirtual$(url_0, '[?&]');
  for (i = 0; i < param.length; i++) {
    if (startsWith_Ljava_lang_String__Z__devirtual$(param[i], p_parameter)) {
      return substring_I_Ljava_lang_String___devirtual$(param[i], length__I__devirtual$(p_parameter) + 1);
    }
  }
  return null;
}

function gotoUrl(p_url){
  $clinit_ClientUtil();
  $wnd.location = p_url;
}

function isPageVisible(){
  $clinit_ClientUtil();
  if (typeof $doc.hidden !== 'undefined') {
    return !$doc.hidden;
  }
   else if (typeof $doc.mozHidden !== 'undefined') {
    return !$doc.mozHidden;
  }
   else if (typeof $doc.msHidden !== 'undefined') {
    return !$doc.msHidden;
  }
   else if (typeof $doc.webkitHidden !== 'undefined') {
    return !$doc.webkitHidden;
  }
  return true;
}

function jsGetNavigator(){
  if (!$doc.styleSheets) {
    return -1;
  }
  if ($doc.styleSheets[0].cssRules) {
    return 0;
  }
   else if ($doc.styleSheets[0].rules) {
    return 1;
  }
  return -1;
}

function jsNewCssRules(p_ruleName, p_rule){
  if (!$doc.styleSheets) {
    return 0;
  }
  var oldlength = 0;
  if ($doc.styleSheets[0].cssRules) {
    oldlength = $doc.styleSheets[0].cssRules.length;
    $doc.styleSheets[0].insertRule(p_ruleName + ' ' + p_rule, oldlength);
  }
   else if ($doc.styleSheets[0].rules) {
    oldlength = $doc.styleSheets[0].rules.length;
    $doc.styleSheets[0].addRule(p_ruleName, p_rule);
  }
  return oldlength + 1;
}

function jsSetCssRules(p_ruleIndex, p_rule){
  var theRules = new Array;
  if ($doc.styleSheets[0].cssRules)
    theRules = $doc.styleSheets[0].cssRules;
  else if ($doc.styleSheets[0].rules)
    theRules = $doc.styleSheets[0].rules;
  else 
    return;
  theRules[p_ruleIndex].style = p_rule;
}

function pageLoadTimeMillis(){
  return m_initialLoadDate;
}

function readGwtProperty(p_id){
  $clinit_ClientUtil();
  var panel;
  panel = get_2663(p_id);
  if (isNull(panel)) {
    return null;
  }
   else {
    return getElementAttribute(panel.getElement(), 'content');
  }
}

function readGwtPropertyBoolean(p_id){
  $clinit_ClientUtil();
  var str;
  str = readGwtProperty(p_id);
  if (jsEquals(str, null)) {
    return false;
  }
  return true;
}

function readGwtPropertyLong(p_id){
  $clinit_ClientUtil();
  var str;
  str = readGwtProperty(p_id);
  if (jsEquals(str, null)) {
    str = '0';
  }
  return valueOf_40(parseLong(str));
}

function readGwtPropertyString(p_id){
  $clinit_ClientUtil();
  var str;
  str = readGwtProperty(p_id);
  if (jsEquals(str, null)) {
    str = '';
  }
  return str;
}

function reload(){
  $clinit_ClientUtil();
  $wnd.location.reload();
}

function scrollToTop(){
  $clinit_ClientUtil();
  $wnd.scrollTo(0, 0);
}

function sendPM(p_fromId, p_toId, p_subject, p_msg){
  $clinit_ClientUtil();
  var form_0 = document.createElement('form');
  form_0.setAttribute('method', 'post');
  form_0.setAttribute('action', '/PMServlet');
  form_0.setAttribute('enctype', 'multipart/form-data');
  var hiddenField = document.createElement('input');
  hiddenField.setAttribute('type', 'hidden');
  hiddenField.setAttribute('name', 'fromid');
  hiddenField.setAttribute('value', p_fromId);
  form_0.appendChild(hiddenField);
  var hiddenField = document.createElement('input');
  hiddenField.setAttribute('type', 'hidden');
  hiddenField.setAttribute('name', 'toid');
  hiddenField.setAttribute('value', p_toId);
  form_0.appendChild(hiddenField);
  var hiddenField = document.createElement('input');
  hiddenField.setAttribute('type', 'hidden');
  hiddenField.setAttribute('name', 'subject');
  hiddenField.setAttribute('value', p_subject);
  form_0.appendChild(hiddenField);
  var hiddenField = document.createElement('input');
  hiddenField.setAttribute('type', 'hidden');
  hiddenField.setAttribute('name', 'msg');
  hiddenField.setAttribute('value', p_msg);
  form_0.appendChild(hiddenField);
  document.body.appendChild(form_0);
  form_0.submit();
}

function serverTimeMillis(){
  $clinit_ClientUtil();
  if (eq(s_serverClientShiftMillis, {l:4194303, m:4194303, h:524287})) {
    s_serverClientShiftMillis = readGwtPropertyLong('fmp_servertime').longValue();
    if (neq(s_serverClientShiftMillis, 0)) {
      s_serverClientShiftMillis = sub_1(s_serverClientShiftMillis, pageLoadTimeMillis());
    }
  }
  return add_19(currentTimeMillis_2(), s_serverClientShiftMillis);
}

function setCssRule(p_ruleIndex, p_rule){
  var e;
  try {
    {
      s_rules;
      jsSetCssRules(p_ruleIndex, p_rule);
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      e = $e0;
      e.printStackTrace();
    }
     else 
      throw toJs($e0);
  }
}

function setCssRule_0(p_ruleName, p_rule){
  $clinit_ClientUtil();
  var e, index_0;
  index_0 = 0;
  {
    s_rules;
    if (s_rules.containsKey(p_ruleName)) {
      index_0 = castTo(s_rules.get_1(p_ruleName), 28).intValue();
      setCssRule(index_0, p_rule);
    }
     else {
      try {
        index_0 = jsNewCssRules(p_ruleName, p_rule);
        s_rules.put(p_ruleName, valueOf_37(index_0));
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 25)) {
          e = $e0;
          e.printStackTrace();
        }
         else 
          throw toJs($e0);
      }
    }
  }
  return index_0;
}

var HTTP_URL_MATCHER, m_initialLoadDate = 0, s_dateTimeFormat, s_rules, s_serverClientShiftMillis = {l:4194303, m:4194303, h:524287}, s_shortDateFormat, s_timeFormat;
function $clinit_FmpCallback(){
  $clinit_FmpCallback = emptyMethod;
  $clinit_Object();
}

function FmpCallback(){
  $clinit_FmpCallback();
  Object_0.call(this);
  this.$init_10();
}

defineClass(113, 1, {1:1});
_.$init_10 = function $init_10(){
}
;
_.onFailure = function onFailure_2(p_caught){
  if (isNotNull(p_caught)) {
    logError_0(p_caught.getMessage(), p_caught);
  }
  if (instanceOf(p_caught, 10)) {
    ($clinit_MAppMessagesStack() , s_instance_1).showWarning(castTo(p_caught, 10).getLocalizedMessage());
  }
   else if (instanceOf(p_caught, 95) || instanceOf(p_caught, 211)) {
    alert_0(($clinit_MAppBoard() , s_messages_0).wrongGameVersion());
    reload();
  }
   else {
    ($clinit_MAppMessagesStack() , s_instance_1).showWarning(($clinit_MAppBoard() , s_messages_0).unknownError());
  }
}
;
_.onSuccess = function onSuccess_4(p_result){
}
;
var Lcom_fullmetalgalaxy_client_FmpCallback_2_classLit = createForClass('com.fullmetalgalaxy.client', 'FmpCallback', 113, Ljava_lang_Object_2_classLit);
function $clinit_HistoryState(){
  $clinit_HistoryState = emptyMethod;
  $clinit_Object();
}

function HistoryState(){
  $clinit_HistoryState();
  Object_0.call(this);
  this.$init_11();
}

function HistoryState_0(p_strToken){
  $clinit_HistoryState();
  Object_0.call(this);
  this.$init_11();
  this.fromString(p_strToken);
}

defineClass(311, 1, {1:1}, HistoryState, HistoryState_0);
_.$init_11 = function $init_11(){
  this.m_properties = new HashMap;
}
;
_.clear_0 = function clear_0(){
  this.m_properties.clear_0();
}
;
_.fromString = function fromString(p_strToken){
  var i, key, tokens, value_0;
  this.clear_0();
  tokens = split_Ljava_lang_String___Ljava_lang_String___devirtual$(p_strToken, '_');
  key = null;
  value_0 = null;
  i = 0;
  while (i < tokens.length) {
    key = tokens[i];
    i++;
    if (i < tokens.length) {
      value_0 = tokens[i];
      if (length__I__devirtual$(value_0) == 0) {
        value_0 = null;
      }
      i++;
    }
     else {
      value_0 = null;
    }
    this.setString(key, value_0);
  }
}
;
_.setString = function setString(p_key, p_value){
  if (!jsNotEquals(p_key, null)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.m_properties.put(p_key, p_value);
}
;
_.toString_0 = function toString_3(){
  var buffer, entry, entrySet, it, value_0;
  buffer = new StringBuffer;
  entrySet = this.m_properties.entrySet();
  for (it = entrySet.iterator_0(); it.hasNext_0();) {
    entry = castTo(castTo(it.next_1(), 39), 39);
    buffer.append_3(castToString(castToString(entry.getKey())));
    buffer.append_3('_');
    value_0 = castToString(castToString(entry.getValue_0()));
    if (jsNotEquals(value_0, null)) {
      buffer.append_3(value_0);
    }
    buffer.append_3('_');
  }
  return buffer.toString_0();
}
;
var Lcom_fullmetalgalaxy_client_HistoryState_2_classLit = createForClass('com.fullmetalgalaxy.client', 'HistoryState', 311, Ljava_lang_Object_2_classLit);
function $clinit_HasVisibility(){
  $clinit_HasVisibility = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasVisibility_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasVisibility');
function $clinit_UIObject(){
  $clinit_UIObject = emptyMethod;
  $clinit_Object();
  debugIdImpl = castTo(new UIObject$DebugIdImpl, 266);
}

function UIObject(){
  $clinit_UIObject();
  Object_0.call(this);
  this.$init_12();
}

function getStyleName(elem){
  return $getClassName(elem);
}

function getStylePrimaryName_0(elem){
  var fullClassName, spaceIdx;
  fullClassName = getStyleName(elem);
  spaceIdx = indexOf_I_I__devirtual$(fullClassName, 32);
  if (spaceIdx >= 0) {
    return substring_II_Ljava_lang_String___devirtual$(fullClassName, 0, spaceIdx);
  }
  return fullClassName;
}

function isVisible_0(elem){
  return elem.style.display != 'none';
}

function setStyleName(elem, styleName){
  $clinit_UIObject();
  $setClassName(elem, styleName);
}

function setStyleName_0(elem, style, add_0){
  $clinit_UIObject();
  if (isNull(elem)) {
    throw toJs(new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.'));
  }
  style = trim__Ljava_lang_String___devirtual$(style);
  if (length__I__devirtual$(style) == 0) {
    throw toJs(new IllegalArgumentException_0('Style names cannot be empty'));
  }
  if (add_0) {
    $addClassName(elem, style);
  }
   else {
    $removeClassName(elem, style);
  }
}

function setStylePrimaryName(elem, style){
  if (isNull(elem)) {
    throw toJs(new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.'));
  }
  style = trim__Ljava_lang_String___devirtual$(style);
  if (length__I__devirtual$(style) == 0) {
    throw toJs(new IllegalArgumentException_0('Style names cannot be empty'));
  }
  updatePrimaryAndDependentStyleNames(elem, style);
}

function setVisible(elem, visible){
  $clinit_UIObject();
  elem.style.display = visible?'':'none';
  if (visible) {
    elem.removeAttribute('aria-hidden');
  }
   else {
    elem.setAttribute('aria-hidden', 'true');
  }
}

function updatePrimaryAndDependentStyleNames(elem, newPrimaryStyle){
  var classes = (elem.className || '').split(/\s+/);
  if (!classes) {
    return;
  }
  var oldPrimaryStyle = classes[0];
  var oldPrimaryStyleLen = oldPrimaryStyle.length;
  classes[0] = newPrimaryStyle;
  for (var i = 1, n = classes.length; i < n; i++) {
    var name_0 = classes[i];
    if (name_0.length > oldPrimaryStyleLen && (name_0.charAt(oldPrimaryStyleLen) == '-' && name_0.indexOf(oldPrimaryStyle) == 0)) {
      classes[i] = newPrimaryStyle + name_0.substring(oldPrimaryStyleLen);
    }
  }
  elem.className = classes.join(' ');
}

defineClass(14, 1, {14:1, 1:1});
_.$init_12 = function $init_12(){
}
;
_.addStyleDependentName = function addStyleDependentName(styleSuffix){
  this.setStyleDependentName(styleSuffix, true);
}
;
_.addStyleName = function addStyleName(style){
  this.setStyleName_0(style, true);
}
;
_.extractLengthValue = function extractLengthValue(s){
  if (s == 'auto' || (s == 'inherit' || s == '')) {
    return 0;
  }
   else {
    var numberRegex = numberRegex_0;
    if (!numberRegex) {
      numberRegex = numberRegex_0 = /^(\s*[+-]?((\d+\.?\d*)|(\.\d+))([eE][+-]?\d+)?)(.*)$/;
    }
    s = s.replace(numberRegex, '$1');
    return parseFloat(s);
  }
}
;
_.getAbsoluteLeft = function getAbsoluteLeft(){
  return $getAbsoluteLeft(this.getElement());
}
;
_.getAbsoluteTop = function getAbsoluteTop(){
  return $getAbsoluteTop(this.getElement());
}
;
_.getElement = function getElement(){
  if (!isNotNull(this.element)) {
    debugger;
    throw toJs(makeAssertionError_Object("This UIObject's element is not set; you may be missing a call to either Composite.initWidget() or UIObject.setElement()"));
  }
  return asOld(this.element);
}
;
_.getOffsetHeight = function getOffsetHeight(){
  return $getPropertyInt(this.getElement(), 'offsetHeight');
}
;
_.getOffsetWidth = function getOffsetWidth(){
  return $getPropertyInt(this.getElement(), 'offsetWidth');
}
;
_.getStyleElement = function getStyleElement(){
  return this.getElement();
}
;
_.getStylePrimaryName = function getStylePrimaryName(){
  return getStylePrimaryName_0(this.getStyleElement());
}
;
_.getTitle = function getTitle(){
  return $getPropertyString(this.getElement(), 'title');
}
;
_.isVisible = function isVisible(){
  return isVisible_0(this.getElement());
}
;
_.removeStyleDependentName = function removeStyleDependentName(styleSuffix){
  this.setStyleDependentName(styleSuffix, false);
}
;
_.removeStyleName = function removeStyleName(style){
  this.setStyleName_0(style, false);
}
;
_.replaceElement = function replaceElement(elem){
  if (isNotNull(this.element)) {
    this.replaceNode(this.element, elem);
  }
  this.element = elem;
}
;
_.replaceNode = function replaceNode(node, newNode){
  var p = node.parentNode;
  if (!p) {
    return;
  }
  p.insertBefore(newNode, node);
  p.removeChild(node);
}
;
_.resolvePotentialElement = function resolvePotentialElement(){
  throw toJs(new UnsupportedOperationException);
}
;
_.setElement = function setElement(elem){
  this.setElement_0(asOld(elem));
}
;
_.setElement_0 = function setElement_0(elem){
  if (!(isNull(this.element) || isPotential_0(this.element))) {
    debugger;
    throw toJs(makeAssertionError_Object('Element may only be set once'));
  }
  this.element = elem;
}
;
_.setHeight = function setHeight(height){
  if (!(this.extractLengthValue(toLowerCase_Ljava_util_Locale__Ljava_lang_String___devirtual$(trim__Ljava_lang_String___devirtual$(height), ($clinit_Locale() , ROOT))) >= 0)) {
    debugger;
    throw toJs(makeAssertionError_Object('CSS heights should not be negative'));
  }
  $setProperty_0($getStyle(this.getElement()), 'height', height);
}
;
_.setPixelSize = function setPixelSize(width_0, height){
  if (width_0 >= 0) {
    this.setWidth(width_0 + 'px');
  }
  if (height >= 0) {
    this.setHeight(height + 'px');
  }
}
;
_.setSize = function setSize(width_0, height){
  this.setWidth(width_0);
  this.setHeight(height);
}
;
_.setStyleDependentName = function setStyleDependentName(styleSuffix, add_0){
  this.setStyleName_0(this.getStylePrimaryName() + '-' + styleSuffix, add_0);
}
;
_.setStyleName = function setStyleName_1(style){
  setStyleName(this.getStyleElement(), style);
}
;
_.setStyleName_0 = function setStyleName_2(style, add_0){
  setStyleName_0(this.getStyleElement(), style, add_0);
}
;
_.setStylePrimaryName = function setStylePrimaryName_0(style){
  setStylePrimaryName(this.getStyleElement(), style);
}
;
_.setTitle = function setTitle(title_0){
  if (jsEquals(title_0, null) || length__I__devirtual$(title_0) == 0) {
    $removeAttribute(this.getElement(), 'title');
  }
   else {
    $setAttribute(this.getElement(), 'title', title_0);
  }
}
;
_.setVisible = function setVisible_0(visible){
  setVisible(this.getElement(), visible);
}
;
_.setWidth = function setWidth(width_0){
  if (!(this.extractLengthValue(toLowerCase_Ljava_util_Locale__Ljava_lang_String___devirtual$(trim__Ljava_lang_String___devirtual$(width_0), ($clinit_Locale() , ROOT))) >= 0)) {
    debugger;
    throw toJs(makeAssertionError_Object('CSS widths should not be negative'));
  }
  $setProperty_0($getStyle(this.getElement()), 'width', width_0);
}
;
_.sinkBitlessEvent = function sinkBitlessEvent(eventTypeName){
  sinkBitlessEvent_0(this.getElement(), eventTypeName);
}
;
_.sinkEvents = function sinkEvents(eventBitsToAdd){
  sinkEvents_1(this.getElement(), eventBitsToAdd | getEventsSunk(this.getElement()));
}
;
_.toString_0 = function toString_4(){
  if (isNull(this.element)) {
    return '(null handle)';
  }
  return $getString(this.getElement());
}
;
var debugIdImpl, numberRegex_0;
var Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui', 'UIObject', 14, Ljava_lang_Object_2_classLit);
function $clinit_EventListener(){
  $clinit_EventListener = emptyMethod;
}

var Lcom_google_gwt_user_client_EventListener_2_classLit = createForInterface('com.google.gwt.user.client', 'EventListener');
function $clinit_HasHandlers(){
  $clinit_HasHandlers = emptyMethod;
}

var Lcom_google_gwt_event_shared_HasHandlers_2_classLit = createForInterface('com.google.gwt.event.shared', 'HasHandlers');
function $clinit_HasAttachHandlers(){
  $clinit_HasAttachHandlers = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_HasAttachHandlers_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'HasAttachHandlers');
function $clinit_IsWidget(){
  $clinit_IsWidget = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_IsWidget_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'IsWidget');
function $clinit_Widget(){
  $clinit_Widget = emptyMethod;
  $clinit_UIObject();
}

function Widget(){
  $clinit_Widget();
  UIObject.call(this);
  this.$init_13();
}

defineClass(11, 14, {18:1, 14:1, 11:1, 1:1});
_.$init_13 = function $init_13(){
}
;
_.addAttachHandler = function addAttachHandler(handler){
  return this.addHandler(handler, getType_50());
}
;
_.addDomHandler = function addDomHandler(handler, type_0){
  var typeInt;
  if (!isNotNull(handler)) {
    debugger;
    throw toJs(makeAssertionError_Object('handler must not be null'));
  }
  if (!isNotNull(type_0)) {
    debugger;
    throw toJs(makeAssertionError_Object('type must not be null'));
  }
  typeInt = getTypeInt(type_0.getName());
  if (typeInt == -1) {
    this.sinkBitlessEvent(type_0.getName());
  }
   else {
    this.sinkEvents(typeInt);
  }
  return this.ensureHandlers().addHandler_1(type_0, handler);
}
;
_.addHandler = function addHandler(handler, type_0){
  return this.ensureHandlers().addHandler_1(type_0, handler);
}
;
_.asWidget = function asWidget(){
  return this;
}
;
_.createHandlerManager = function createHandlerManager(){
  return new HandlerManager(this);
}
;
_.doAttachChildren = function doAttachChildren(){
}
;
_.doDetachChildren = function doDetachChildren(){
}
;
_.ensureHandlers = function ensureHandlers(){
  return isNull(this.handlerManager)?(this.handlerManager = this.createHandlerManager()):this.handlerManager;
}
;
_.fireEvent = function fireEvent(event_0){
  if (isNotNull(this.handlerManager)) {
    this.handlerManager.fireEvent(event_0);
  }
}
;
_.getParent = function getParent(){
  return this.parent_0;
}
;
_.isAttached = function isAttached(){
  return this.attached;
}
;
_.isOrWasAttached = function isOrWasAttached(){
  return this.eventsToSink == -1;
}
;
_.onAttach = function onAttach(){
  var bitsToAdd;
  if (this.isAttached()) {
    throw toJs(new IllegalStateException_0("Should only call onAttach when the widget is detached from the browser's document"));
  }
  this.attached = true;
  setEventListener(this.getElement(), this);
  bitsToAdd = this.eventsToSink;
  this.eventsToSink = -1;
  if (bitsToAdd > 0) {
    this.sinkEvents(bitsToAdd);
  }
  this.doAttachChildren();
  this.onLoad();
  fire_1(this, true);
}
;
_.onBrowserEvent = function onBrowserEvent(event_0){
  var related;
  switch (eventGetType_0(event_0)) {
    case 16:
    case 32:
      related = $cast($getRelatedEventTarget(event_0));
      if (isNotNull(related) && $isOrHasChild(this.getElement(), related)) {
        return;
      }

      break;
  }
  fireNativeEvent(event_0, this, this.getElement());
}
;
_.onDetach = function onDetach(){
  if (!this.isAttached()) {
    throw toJs(new IllegalStateException_0("Should only call onDetach when the widget is attached to the browser's document"));
  }
  try {
    this.onUnload();
    fire_1(this, false);
  }
   finally {
    try {
      this.doDetachChildren();
    }
     finally {
      setEventListener(this.getElement(), null);
      this.attached = false;
    }
  }
}
;
_.onLoad = function onLoad(){
}
;
_.onUnload = function onUnload(){
}
;
_.removeFromParent = function removeFromParent(){
  if (isNull(this.parent_0)) {
    if (isInDetachList(this)) {
      detachNow(this);
    }
  }
   else if (instanceOf(this.parent_0, 45)) {
    castTo(this.parent_0, 45).remove_0(this);
  }
   else if (isNotNull(this.parent_0)) {
    throw toJs(new IllegalStateException_0("This widget's parent does not implement HasWidgets"));
  }
}
;
_.replaceElement = function replaceElement_0(elem){
  if (this.isAttached()) {
    setEventListener(this.getElement(), null);
  }
  getClassPrototype(14).replaceElement.call(this, elem);
  if (this.isAttached()) {
    setEventListener(this.getElement(), this);
  }
}
;
_.setParent = function setParent(parent_0){
  var oldParent;
  oldParent = this.parent_0;
  if (isNull(parent_0)) {
    try {
      if (isNotNull(oldParent) && oldParent.isAttached()) {
        this.onDetach();
        if (!!this.isAttached()) {
          debugger;
          throw toJs(makeAssertionError_Object('Failure of ' + getClass__Ljava_lang_Class___devirtual$(this).getName() + ' to call super.onDetach()'));
        }
      }
    }
     finally {
      this.parent_0 = null;
    }
  }
   else {
    if (isNotNull(oldParent)) {
      throw toJs(new IllegalStateException_0('Cannot set a new parent without first clearing the old parent'));
    }
    this.parent_0 = parent_0;
    if (parent_0.isAttached()) {
      this.onAttach();
      if (!this.isAttached()) {
        debugger;
        throw toJs(makeAssertionError_Object('Failure of ' + getClass__Ljava_lang_Class___devirtual$(this).getName() + ' to call super.onAttach()'));
      }
    }
  }
}
;
_.sinkEvents = function sinkEvents_0(eventBitsToAdd){
  if (this.isOrWasAttached()) {
    getClassPrototype(14).sinkEvents.call(this, eventBitsToAdd);
  }
   else {
    this.eventsToSink |= eventBitsToAdd;
  }
}
;
_.attached = false;
_.eventsToSink = 0;
var Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Widget', 11, Lcom_google_gwt_user_client_ui_UIObject_2_classLit);
function $clinit_IsRenderable(){
  $clinit_IsRenderable = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_IsRenderable_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'IsRenderable');
function $clinit_Composite(){
  $clinit_Composite = emptyMethod;
  $clinit_Widget();
}

function Composite(){
  $clinit_Composite();
  Widget.call(this);
  this.$init_14();
}

defineClass(59, 11, {18:1, 44:1, 14:1, 11:1, 1:1});
_.$init_14 = function $init_14(){
}
;
_.checkInit = function checkInit(){
  if (isNull(this.widget)) {
    throw toJs(new IllegalStateException_0('initWidget() is not called yet'));
  }
}
;
_.initWidget = function initWidget(widget){
  var elem;
  if (isNotNull(this.widget)) {
    throw toJs(new IllegalStateException_0('Composite.initWidget() may only be called once.'));
  }
  if (isNull(widget)) {
    throw toJs(new NullPointerException_0('widget cannot be null'));
  }
  if (instanceOf(widget, 44)) {
    this.renderable = castTo(widget, 44);
  }
  widget.removeFromParent();
  elem = widget.getElement();
  this.setElement(elem);
  if (isPotential_0(elem)) {
    $setResolver(as_3(elem), this);
  }
  this.widget = widget;
  widget.setParent(this);
}
;
_.isAttached = function isAttached_0(){
  if (isNotNull(this.widget)) {
    return this.widget.isAttached();
  }
  return false;
}
;
_.onAttach = function onAttach_0(){
  this.checkInit();
  if (!this.isOrWasAttached()) {
    this.widget.sinkEvents(this.eventsToSink);
    this.eventsToSink = -1;
  }
  this.widget.onAttach();
  setEventListener(this.getElement(), this);
  this.doAttachChildren();
  this.onLoad();
  fire_1(this, true);
}
;
_.onBrowserEvent = function onBrowserEvent_0(event_0){
  getClassPrototype(11).onBrowserEvent.call(this, event_0);
  this.widget.onBrowserEvent(event_0);
}
;
_.onDetach = function onDetach_0(){
  try {
    this.onUnload();
    this.doDetachChildren();
    fire_1(this, false);
  }
   finally {
    this.widget.onDetach();
  }
}
;
_.resolvePotentialElement = function resolvePotentialElement_0(){
  this.setElement(this.widget.resolvePotentialElement());
  return this.getElement();
}
;
var Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Composite', 59, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $clinit_GuiEntryPoint(){
  $clinit_GuiEntryPoint = emptyMethod;
  $clinit_Composite();
}

function GuiEntryPoint(){
  $clinit_GuiEntryPoint();
  Composite.call(this);
  this.$init_15();
}

defineClass(118, 59, {18:1, 44:1, 14:1, 11:1, 1:1});
_.$init_15 = function $init_15(){
}
;
_.onModuleLoad = function onModuleLoad_1(){
  var panel;
  panel = get_2663(this.getHistoryId());
  if (isNotNull(panel)) {
    panel.setVisible(true);
    if (panel.getWidgetCount() == 0) {
      panel.add_0(this);
    }
  }
   else {
    ($clinit_AppRoot() , logger_0).log_1(($clinit_Level() , WARNING), "couldn't display mini app " + this.getHistoryId());
  }
}
;
var Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'GuiEntryPoint', 118, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_ChannelMessageEventHandler(){
  $clinit_ChannelMessageEventHandler = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_event_ChannelMessageEventHandler_2_classLit = createForInterface('com.fullmetalgalaxy.client.event', 'ChannelMessageEventHandler');
function $clinit_MAppMessagesStack(){
  $clinit_MAppMessagesStack = emptyMethod;
  $clinit_GuiEntryPoint();
  s_instance_1 = new MAppMessagesStack;
}

function MAppMessagesStack(){
  $clinit_MAppMessagesStack();
  GuiEntryPoint.call(this);
  this.$init_16();
  this.initWidget(this.m_panel);
  s_instance_1 = this;
  instance_1().addChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_ChatMessage_2_classLit, this);
}

defineClass(363, 118, {251:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppMessagesStack);
_.$init_16 = function $init_16(){
  this.s_messagesPanels = new HashMap;
  this.m_panel = new VerticalPanel;
}
;
_.getHistoryId = function getHistoryId(){
  return 'MessagesStack';
}
;
_.onChannelMessage = function onChannelMessage(p_message){
  var label_0, p_msg, text_0;
  if (instanceOf(p_message, 132)) {
    p_msg = castTo(p_message, 132);
    if (!p_msg.isEmpty()) {
      text_0 = formatUserMessage(p_msg.getText());
      label_0 = new HTML_0('<b>[' + p_msg.getFromPseudo() + ']<\/b> ' + text_0);
      this.showMessage(label_0);
    }
  }
}
;
_.removeMessage = function removeMessage(p_wgt){
  var timer;
  if (isNull(p_wgt)) {
    return;
  }
  timer = castTo(this.s_messagesPanels.get_1(p_wgt), 235);
  if (isNotNull(timer)) {
    timer.cancel();
    this.s_messagesPanels.remove_4(timer);
  }
  this.m_panel.remove_0(p_wgt);
}
;
_.showMessage = function showMessage(p_wgt){
  var timer;
  if (isNull(p_wgt)) {
    return;
  }
  timer = castTo(this.s_messagesPanels.get_1(p_wgt), 235);
  if (isNull(timer)) {
    p_wgt.setWidth('100%');
    timer = new MAppMessagesStack$PopupTimer(this, p_wgt);
    this.s_messagesPanels.put(p_wgt, timer);
    this.m_panel.add_0(p_wgt);
  }
   else {
    timer.cancel();
  }
  timer.schedule(15 * 1000);
}
;
_.showMessage_0 = function showMessage_0(p_msg){
  this.showMessage(new Label_1(p_msg));
}
;
_.showPersitentMessage = function showPersitentMessage(p_wgt){
  var timer;
  if (isNull(p_wgt)) {
    return;
  }
  timer = castTo(this.s_messagesPanels.get_1(p_wgt), 235);
  if (isNotNull(timer)) {
    timer.cancel();
    this.s_messagesPanels.remove_4(timer);
  }
  this.m_panel.add_0(p_wgt);
}
;
_.showWarning = function showWarning(p_msg){
  var image, panel;
  panel = new HorizontalPanel;
  image = new Image_1(($clinit_Icons() , s_instance_5).cancel32());
  panel.add_0(image);
  panel.add_0(new Label_1(p_msg));
  this.showMessage(panel);
}
;
var s_instance_1;
var Lcom_fullmetalgalaxy_client_MAppMessagesStack_2_classLit = createForClass('com.fullmetalgalaxy.client', 'MAppMessagesStack', 363, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_MAppMessagesStack$PopupTimer(){
  $clinit_MAppMessagesStack$PopupTimer = emptyMethod;
  $clinit_Timer();
}

function MAppMessagesStack$PopupTimer(this$0, wdg){
  $clinit_MAppMessagesStack$PopupTimer();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_17();
  this.m_wdg = wdg;
}

defineClass(235, 93, {235:1, 1:1}, MAppMessagesStack$PopupTimer);
_.$init_17 = function $init_17(){
  this.m_wdg = null;
}
;
_.run = function run_1(){
  if (isNull(this.m_wdg)) {
    return;
  }
  this.m_wdg.removeFromParent();
  this.this$01.s_messagesPanels.remove_4(this.m_wdg);
}
;
var Lcom_fullmetalgalaxy_client_MAppMessagesStack$PopupTimer_2_classLit = createForClass('com.fullmetalgalaxy.client', 'MAppMessagesStack/PopupTimer', 235, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_ChatEngine(){
  $clinit_ChatEngine = emptyMethod;
  $clinit_Object();
  m_sendMessageCallback = new ChatEngine$1;
}

function ChatEngine(){
  $clinit_ChatEngine();
  Object_0.call(this);
  this.$init_18();
  s_instance_2 = this;
}

function sendMessage(p_msg){
  $clinit_ChatEngine();
  if (isNull(s_instance_2) || jsEquals(p_msg, null) || isEmpty__Z__devirtual$(p_msg)) {
    return;
  }
  s_instance_2.m_lastMsg.setFromPseudo(instance_1().getMyAccount().getPseudo());
  s_instance_2.m_lastMsg.setGameId(s_instance_2.m_presenceRoom.getGameId());
  s_instance_2.m_lastMsg.setFromPageId(instance_1().getPageId());
  s_instance_2.m_lastMsg.setText(p_msg);
  s_instance_2.m_lastMsg.getDate_0().setTime_0(serverTimeMillis());
  getRpcService().sendChatMessage(s_instance_2.m_lastMsg, m_sendMessageCallback);
}

defineClass(511, 1, {251:1, 13:1, 1:1}, ChatEngine);
_.$init_18 = function $init_18(){
  this.m_lastMsg = new ChatMessage;
  this.m_presenceRoom = new PresenceRoom_0(0);
}
;
_.getPresenceRoom = function getPresenceRoom_0(){
  return this.m_presenceRoom;
}
;
_.isUserConnected = function isUserConnected_0(p_pseudo){
  if (!jsNotEquals(p_pseudo, null)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return this.getPresenceRoom().isConnected(p_pseudo);
}
;
_.loadPresenceRoomFromPage = function loadPresenceRoomFromPage(){
  var e, factory, object, reader, strRoom;
  strRoom = getJSString('fmp_room');
  if (jsNotEquals(strRoom, null) && !equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(strRoom, 'null')) {
    try {
      factory = castTo(new GameServices_Proxy, 362);
      reader = factory.createStreamReader(strRoom);
      object = reader.readObject();
      if (instanceOf(object, 146)) {
        this.m_presenceRoom = castTo(object, 146);
      }
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 95)) {
        e = $e0;
        ($clinit_AppRoot() , logger_0).log_1(($clinit_Level() , WARNING), e.getMessage());
      }
       else 
        throw toJs($e0);
    }
  }
}
;
_.onChannelMessage = function onChannelMessage_0(p_message){
  if (instanceOf(p_message, 146)) {
    this.m_presenceRoom = castTo(p_message, 146);
  }
}
;
_.onModuleLoad = function onModuleLoad_2(){
  var e, gameId, id_0;
  id_0 = getUrlParameter('id');
  gameId = 0;
  try {
    gameId = parseLong(id_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      e = $e0;
      gameId = 0;
    }
     else 
      throw toJs($e0);
  }
  this.m_presenceRoom.setGameId(gameId);
  this.loadPresenceRoomFromPage();
  instance_1().addChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_PresenceRoom_2_classLit, this);
}
;
var m_sendMessageCallback, s_instance_2 = null;
var Lcom_fullmetalgalaxy_client_chat_ChatEngine_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'ChatEngine', 511, Ljava_lang_Object_2_classLit);
function $clinit_ChatEngine$1(){
  $clinit_ChatEngine$1 = emptyMethod;
  $clinit_Object();
}

function ChatEngine$1(){
  $clinit_ChatEngine$1();
  Object_0.call(this);
  this.$init_19();
}

defineClass(571, 1, {1:1}, ChatEngine$1);
_.$init_19 = function $init_19(){
}
;
_.onSuccess = function onSuccess_5(p_result){
  this.onSuccess_0(castTo(p_result, 205));
}
;
_.onFailure = function onFailure_3(p_caught){
}
;
_.onSuccess_0 = function onSuccess_6(p_result){
}
;
var Lcom_fullmetalgalaxy_client_chat_ChatEngine$1_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'ChatEngine/1', 571, Ljava_lang_Object_2_classLit);
function $clinit_Iterable(){
  $clinit_Iterable = emptyMethod;
}

var Ljava_lang_Iterable_2_classLit = createForInterface('java.lang', 'Iterable');
function $clinit_HasWidgets(){
  $clinit_HasWidgets = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasWidgets_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasWidgets');
function $clinit_HasWidgets$ForIsWidget(){
  $clinit_HasWidgets$ForIsWidget = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasWidgets$ForIsWidget_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasWidgets/ForIsWidget');
function $clinit_Panel(){
  $clinit_Panel = emptyMethod;
  $clinit_Widget();
  $clinit_Iterable();
}

function Panel(){
  $clinit_Panel();
  Widget.call(this);
  this.$init_20();
}

defineClass(317, 11, {18:1, 45:1, 14:1, 11:1, 1:1});
_.$init_20 = function $init_20(){
}
;
_.add_0 = function add_1(child){
  throw toJs(new UnsupportedOperationException_0('This panel does not support no-arg add()'));
}
;
_.adopt = function adopt(child){
  if (!isNull(child.getParent())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  child.setParent(this);
}
;
_.clear_0 = function clear_1(){
  var it;
  it = this.iterator_0();
  while (it.hasNext_0()) {
    it.next_1();
    it.remove_3();
  }
}
;
_.doAttachChildren = function doAttachChildren_0(){
  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));
}
;
_.doDetachChildren = function doDetachChildren_0(){
  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));
}
;
_.orphan = function orphan(child){
  if (!jsEquals(child.getParent(), this)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  child.setParent(null);
}
;
var Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Panel', 317, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $clinit_AcceptsOneWidget(){
  $clinit_AcceptsOneWidget = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_AcceptsOneWidget_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'AcceptsOneWidget');
function $clinit_HasOneWidget(){
  $clinit_HasOneWidget = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasOneWidget_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasOneWidget');
function $clinit_SimplePanel(){
  $clinit_SimplePanel = emptyMethod;
  $clinit_Panel();
}

function SimplePanel(){
  $clinit_SimplePanel();
  SimplePanel_0.call(this, createDiv());
}

function SimplePanel_0(elem){
  $clinit_SimplePanel();
  Panel.call(this);
  this.$init_21();
  this.setElement(elem);
}

defineClass(112, 317, {18:1, 45:1, 14:1, 11:1, 1:1}, SimplePanel, SimplePanel_0);
_.$init_21 = function $init_21(){
}
;
_.add_0 = function add_2(w){
  if (isNotNull(this.getWidget())) {
    throw toJs(new IllegalStateException_0('SimplePanel can only contain one child widget'));
  }
  this.setWidget(w);
}
;
_.getContainerElement = function getContainerElement(){
  return this.getElement();
}
;
_.getWidget = function getWidget(){
  return this.widget;
}
;
_.iterator_0 = function iterator_0(){
  return new SimplePanel$1(this);
}
;
_.remove_0 = function remove_0(w){
  if (jsNotEquals(this.widget, w)) {
    return false;
  }
  try {
    this.orphan(w);
  }
   finally {
    $removeChild(this.getContainerElement(), w.getElement());
    this.widget = null;
  }
  return true;
}
;
_.setWidget = function setWidget(w){
  if (jsEquals(w, this.widget)) {
    return;
  }
  if (isNotNull(w)) {
    w.removeFromParent();
  }
  if (isNotNull(this.widget)) {
    this.remove_0(this.widget);
  }
  this.widget = w;
  if (isNotNull(w)) {
    appendChild(this.getContainerElement(), this.widget.getElement());
    this.adopt(w);
  }
}
;
var Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'SimplePanel', 112, Lcom_google_gwt_user_client_ui_Panel_2_classLit);
function $clinit_SourcesPopupEvents(){
  $clinit_SourcesPopupEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesPopupEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesPopupEvents');
function $clinit_EventPreview(){
  $clinit_EventPreview = emptyMethod;
}

var Lcom_google_gwt_user_client_EventPreview_2_classLit = createForInterface('com.google.gwt.user.client', 'EventPreview');
function $clinit_HasAnimation(){
  $clinit_HasAnimation = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasAnimation_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasAnimation');
function $clinit_HasCloseHandlers(){
  $clinit_HasCloseHandlers = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_HasCloseHandlers_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'HasCloseHandlers');
function $clinit_PopupPanel(){
  $clinit_PopupPanel = emptyMethod;
  $clinit_SimplePanel();
  impl_0 = castTo(new PopupImpl, 336);
}

function PopupPanel(){
  SimplePanel.call(this);
  this.$init_22();
  $appendChild(getClassPrototype(112).getContainerElement.call(this), impl_0.createElement_2());
  this.setPopupPosition(0, 0);
  this.setStyleName('gwt-PopupPanel');
  setStyleName(this.getContainerElement(), 'popupContent');
}

function PopupPanel_0(autoHide){
  PopupPanel.call(this);
  this.autoHide = autoHide;
  this.autoHideOnHistoryEvents = autoHide;
}

function PopupPanel_1(autoHide, modal){
  $clinit_PopupPanel();
  PopupPanel_0.call(this, autoHide);
  this.modal = modal;
}

defineClass(147, 112, {18:1, 45:1, 14:1, 11:1, 1:1}, PopupPanel_1);
_.$init_22 = function $init_22(){
  this.glassResizer = new PopupPanel$1(this);
  this.animType = ($clinit_PopupPanel$AnimationType() , CENTER_0);
  this.glassStyleName = 'gwt-PopupPanelGlass';
  this.isAnimationEnabled = false;
  this.leftPosition = -1;
  this.resizeAnimation = new PopupPanel$ResizeAnimation(this);
  this.topPosition = -1;
}
;
_.blur_0 = function blur_0(elt){
  if (elt.blur && elt != $doc.body) {
    elt.blur();
  }
}
;
_.center = function center(){
  var elem, initiallyAnimated, initiallyShowing, left, top_0;
  initiallyShowing = this.showing;
  initiallyAnimated = this.isAnimationEnabled;
  if (!initiallyShowing) {
    this.setVisible(false);
    this.setAnimationEnabled(false);
    this.show();
  }
  elem = this.getElement();
  $setPropertyPx($getStyle(elem), 'left', 0);
  $setPropertyPx($getStyle(elem), 'top', 0);
  left = getClientWidth() - this.getOffsetWidth() >> 1;
  top_0 = getClientHeight() - this.getOffsetHeight() >> 1;
  this.setPopupPosition($wnd.Math.max(getScrollLeft_2() + left, 0), $wnd.Math.max(getScrollTop_0() + top_0, 0));
  if (!initiallyShowing) {
    this.setAnimationEnabled(initiallyAnimated);
    if (initiallyAnimated) {
      impl_0.setClip(this.getElement(), 'rect(0px, 0px, 0px, 0px)');
      this.setVisible(true);
      this.resizeAnimation.run_0(200);
    }
     else {
      this.setVisible(true);
    }
  }
}
;
_.eventTargetsPartner = function eventTargetsPartner(event_0){
  var elem, elem$iterator, target;
  if (isNull(this.autoHidePartners)) {
    return false;
  }
  target = $getEventTarget(event_0);
  if (is_0(target)) {
    for (elem$iterator = this.autoHidePartners.iterator_0(); elem$iterator.hasNext_0();) {
      elem = castToJso(elem$iterator.next_1());
      if ($isOrHasChild(elem, as(target))) {
        return true;
      }
    }
  }
  return false;
}
;
_.eventTargetsPopup = function eventTargetsPopup(event_0){
  var target;
  target = $getEventTarget(event_0);
  if (is_0(target)) {
    return $isOrHasChild(this.getElement(), as(target));
  }
  return false;
}
;
_.getContainerElement = function getContainerElement_0(){
  return $cast(impl_0.getContainerElement_0(this.getPopupImplElement()));
}
;
_.getOffsetHeight = function getOffsetHeight_0(){
  return getClassPrototype(14).getOffsetHeight.call(this);
}
;
_.getOffsetWidth = function getOffsetWidth_0(){
  return getClassPrototype(14).getOffsetWidth.call(this);
}
;
_.getPopupImplElement = function getPopupImplElement(){
  return getFirstChild(getClassPrototype(112).getContainerElement.call(this));
}
;
_.getStyleElement = function getStyleElement_0(){
  return $cast(impl_0.getStyleElement_0(this.getPopupImplElement()));
}
;
_.getTitle = function getTitle_0(){
  return $getPropertyString(this.getContainerElement(), 'title');
}
;
_.hide = function hide(){
  this.hide_0(false);
}
;
_.hide_0 = function hide_0(autoClosed){
  if (!this.isShowing()) {
    return;
  }
  this.resizeAnimation.setState_0(false, false);
  fire_4(this, this, autoClosed);
}
;
_.isShowing = function isShowing(){
  return this.showing;
}
;
_.isVisible = function isVisible_1(){
  return !equals_Ljava_lang_Object__Z__devirtual$_2('hidden', $getProperty($getStyle(this.getElement()), 'visibility'));
}
;
_.maybeUpdateSize = function maybeUpdateSize(){
  var w;
  w = getClassPrototype(112).getWidget.call(this);
  if (isNotNull(w)) {
    if (jsNotEquals(this.desiredHeight, null)) {
      w.setHeight(this.desiredHeight);
    }
    if (jsNotEquals(this.desiredWidth, null)) {
      w.setWidth(this.desiredWidth);
    }
  }
}
;
_.onEventPreview = function onEventPreview(event_0){
  return true;
}
;
_.onKeyDownPreview = function onKeyDownPreview(key, modifiers){
  return true;
}
;
_.onKeyPressPreview = function onKeyPressPreview(key, modifiers){
  return true;
}
;
_.onKeyUpPreview = function onKeyUpPreview(key, modifiers){
  return true;
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_0(event_0){
  if (event_0.isFirstHandler_0() && !this.onEventPreview(as_2(event_0.getNativeEvent()))) {
    event_0.cancel();
  }
}
;
_.onUnload = function onUnload_0(){
  getClassPrototype(11).onUnload.call(this);
  if (this.isShowing()) {
    this.resizeAnimation.setState_0(false, true);
  }
}
;
_.previewNativeEvent = function previewNativeEvent(event_0){
  $clinit_PopupPanel();
  var eventTargetsPopupOrPartner, nativeEvent, target, type_0;
  if (event_0.isCanceled_0() || !this.previewAllNativeEvents && event_0.isConsumed_0()) {
    if (this.modal) {
      event_0.cancel();
    }
    return;
  }
  this.onPreviewNativeEvent(event_0);
  if (event_0.isCanceled_0()) {
    return;
  }
  nativeEvent = as_2(event_0.getNativeEvent());
  eventTargetsPopupOrPartner = this.eventTargetsPopup(nativeEvent) || this.eventTargetsPartner(nativeEvent);
  if (eventTargetsPopupOrPartner) {
    event_0.consume();
  }
  if (this.modal) {
    event_0.cancel();
  }
  type_0 = $getTypeInt(nativeEvent);
  switch (type_0) {
    case 128:
      {
        if (!this.onKeyDownPreview(narrow_char($getKeyCode(nativeEvent)), getKeyboardModifiers(nativeEvent))) {
          event_0.cancel();
        }
        return;
      }

    case 512:
      {
        if (!this.onKeyUpPreview(narrow_char($getKeyCode(nativeEvent)), getKeyboardModifiers(nativeEvent))) {
          event_0.cancel();
        }
        return;
      }

    case 256:
      {
        if (!this.onKeyPressPreview(narrow_char($getKeyCode(nativeEvent)), getKeyboardModifiers(nativeEvent))) {
          event_0.cancel();
        }
        return;
      }

    case 4:
    case 1048576:
      if (isNotNull(getCaptureElement())) {
        event_0.consume();
        return;
      }

      if (!eventTargetsPopupOrPartner && this.autoHide) {
        this.hide_0(true);
        return;
      }

      break;
    case 8:
    case 64:
    case 1:
    case 2:
    case 4194304:
      {
        if (isNotNull(getCaptureElement())) {
          event_0.consume();
          return;
        }
        break;
      }

    case 2048:
      {
        target = $getTarget_0(nativeEvent);
        if (this.modal && !eventTargetsPopupOrPartner && isNotNull(target)) {
          this.blur_0(target);
          event_0.cancel();
          return;
        }
        break;
      }

  }
}
;
_.setAnimationEnabled = function setAnimationEnabled(enable){
  this.isAnimationEnabled = enable;
}
;
_.setHeight = function setHeight_0(height){
  this.desiredHeight = height;
  this.maybeUpdateSize();
  if (length__I__devirtual$(height) == 0) {
    this.desiredHeight = null;
  }
}
;
_.setPopupPosition = function setPopupPosition(left, top_0){
  var elem;
  this.leftPosition = left;
  this.topPosition = top_0;
  left -= $getBodyOffsetLeft(get_2654());
  top_0 -= $getBodyOffsetTop(get_2654());
  elem = this.getElement();
  $setPropertyPx($getStyle(elem), 'left', left);
  $setPropertyPx($getStyle(elem), 'top', top_0);
}
;
_.setTitle = function setTitle_0(title_0){
  var containerElement;
  containerElement = this.getContainerElement();
  if (jsEquals(title_0, null) || length__I__devirtual$(title_0) == 0) {
    $removeAttribute(containerElement, 'title');
  }
   else {
    $setAttribute(containerElement, 'title', title_0);
  }
}
;
_.setVisible = function setVisible_1(visible){
  $setProperty_0($getStyle(this.getElement()), 'visibility', visible?'visible':'hidden');
  if (isNotNull(this.glass)) {
    $setProperty_0($getStyle(this.glass), 'visibility', visible?'visible':'hidden');
  }
}
;
_.setWidget = function setWidget_0(w){
  getClassPrototype(112).setWidget.call(this, w);
  this.maybeUpdateSize();
}
;
_.setWidth = function setWidth_0(width_0){
  this.desiredWidth = width_0;
  this.maybeUpdateSize();
  if (length__I__devirtual$(width_0) == 0) {
    this.desiredWidth = null;
  }
}
;
_.show = function show(){
  if (this.showing) {
    return;
  }
   else if (this.isAttached()) {
    this.removeFromParent();
  }
  this.resizeAnimation.setState_0(true, false);
}
;
_.updateHandlers = function updateHandlers(){
  $clinit_PopupPanel();
  if (isNotNull(this.nativePreviewHandlerRegistration)) {
    this.nativePreviewHandlerRegistration.removeHandler();
    this.nativePreviewHandlerRegistration = null;
  }
  if (isNotNull(this.historyHandlerRegistration)) {
    this.historyHandlerRegistration.removeHandler();
    this.historyHandlerRegistration = null;
  }
  if (this.showing) {
    this.nativePreviewHandlerRegistration = addNativePreviewHandler(new PopupPanel$3(this));
    this.historyHandlerRegistration = addValueChangeHandler_1(new PopupPanel$4(this));
  }
}
;
_.autoHide = false;
_.autoHideOnHistoryEvents = false;
_.isAnimationEnabled = false;
_.isGlassEnabled = false;
_.leftPosition = 0;
_.modal = false;
_.previewAllNativeEvents = false;
_.showing = false;
_.topPosition = 0;
var impl_0;
var Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'PopupPanel', 147, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit);
function $clinit_DecoratedPopupPanel(){
  $clinit_DecoratedPopupPanel = emptyMethod;
  $clinit_PopupPanel();
}

function DecoratedPopupPanel(autoHide, modal, prefix){
  $clinit_DecoratedPopupPanel();
  var rowStyles;
  PopupPanel_1.call(this, autoHide, modal);
  this.$init_23();
  rowStyles = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, [prefix + 'Top', prefix + 'Middle', prefix + 'Bottom']);
  this.decPanel = new DecoratorPanel(rowStyles, 1);
  this.decPanel.setStyleName('');
  this.setStylePrimaryName('gwt-DecoratedPopupPanel');
  getClassPrototype(147).setWidget.call(this, this.decPanel);
  setStyleName_0(this.getContainerElement(), 'popupContent', false);
  setStyleName_0(this.decPanel.getContainerElement(), prefix + 'Content', true);
}

defineClass(351, 147, {18:1, 45:1, 14:1, 11:1, 1:1});
_.$init_23 = function $init_23(){
}
;
_.clear_0 = function clear_2(){
  this.decPanel.clear_0();
}
;
_.doAttachChildren = function doAttachChildren_1(){
  this.decPanel.onAttach();
}
;
_.doDetachChildren = function doDetachChildren_1(){
  this.decPanel.onDetach();
}
;
_.getCellElement = function getCellElement(row, cell){
  return asOld(this.decPanel.getCellElement(row, cell));
}
;
_.getWidget = function getWidget_0(){
  return this.decPanel.getWidget();
}
;
_.iterator_0 = function iterator_1(){
  return this.decPanel.iterator_0();
}
;
_.remove_0 = function remove_1(w){
  return this.decPanel.remove_0(w);
}
;
_.setWidget = function setWidget_1(w){
  this.decPanel.setWidget(w);
  this.maybeUpdateSize();
}
;
var Lcom_google_gwt_user_client_ui_DecoratedPopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DecoratedPopupPanel', 351, Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit);
function $clinit_HasText(){
  $clinit_HasText = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasText_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasText');
function $clinit_HasHTML(){
  $clinit_HasHTML = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasHTML_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasHTML');
function $clinit_HasSafeHtml(){
  $clinit_HasSafeHtml = emptyMethod;
}

var Lcom_google_gwt_safehtml_client_HasSafeHtml_2_classLit = createForInterface('com.google.gwt.safehtml.client', 'HasSafeHtml');
function $clinit_MouseListener(){
  $clinit_MouseListener = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_MouseListener_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'MouseListener');
function $clinit_DialogBox(){
  $clinit_DialogBox = emptyMethod;
  $clinit_DecoratedPopupPanel();
}

function DialogBox(autoHide, modal){
  $clinit_DialogBox();
  DialogBox_0.call(this, autoHide, modal, new DialogBox$CaptionImpl);
}

function DialogBox_0(autoHide, modal, captionWidget){
  var mouseHandler, td;
  DecoratedPopupPanel.call(this, autoHide, modal, 'dialog');
  this.$init_24();
  if (!isNotNull(captionWidget)) {
    debugger;
    throw toJs(makeAssertionError_Object('The caption must not be null'));
  }
  captionWidget.asWidget().removeFromParent();
  this.caption = captionWidget;
  td = this.getCellElement(0, 1);
  appendChild(td, this.caption.asWidget().getElement());
  this.adopt(this.caption.asWidget());
  this.setStyleName('gwt-DialogBox');
  this.windowWidth = getClientWidth();
  this.clientLeft = $getBodyOffsetLeft(get_2654());
  this.clientTop = $getBodyOffsetTop(get_2654());
  mouseHandler = new DialogBox$MouseHandler(this);
  this.addDomHandler(mouseHandler, getType_40());
  this.addDomHandler(mouseHandler, getType_44());
  this.addDomHandler(mouseHandler, getType_41());
  this.addDomHandler(mouseHandler, getType_43());
  this.addDomHandler(mouseHandler, getType_42());
}

defineClass(141, 351, {18:1, 45:1, 130:1, 14:1, 11:1, 1:1});
_.$init_24 = function $init_24(){
}
;
_.beginDragging = function beginDragging(event_0){
  this.onMouseDown(this.caption.asWidget(), event_0.getX(), event_0.getY());
}
;
_.continueDragging = function continueDragging(event_0){
  this.onMouseMove(this.caption.asWidget(), event_0.getX(), event_0.getY());
}
;
_.doAttachChildren = function doAttachChildren_2(){
  try {
    getClassPrototype(351).doAttachChildren.call(this);
  }
   finally {
    this.caption.asWidget().onAttach();
  }
}
;
_.doDetachChildren = function doDetachChildren_2(){
  try {
    getClassPrototype(351).doDetachChildren.call(this);
  }
   finally {
    this.caption.asWidget().onDetach();
  }
}
;
_.endDragging = function endDragging(event_0){
  this.onMouseUp(this.caption.asWidget(), event_0.getX(), event_0.getY());
}
;
_.hide_0 = function hide_1(autoClosed){
  if (isNotNull(this.resizeHandlerRegistration)) {
    this.resizeHandlerRegistration.removeHandler();
    this.resizeHandlerRegistration = null;
  }
  getClassPrototype(147).hide_0.call(this, autoClosed);
}
;
_.isCaptionEvent = function isCaptionEvent(event_0){
  var target;
  target = $getEventTarget(event_0);
  if (is_0(target)) {
    return $isOrHasChild($getParentElement(this.getCellElement(0, 1)), as(target));
  }
  return false;
}
;
_.onBrowserEvent = function onBrowserEvent_1(event_0){
  switch ($getTypeInt(event_0)) {
    case 4:
    case 8:
    case 64:
    case 16:
    case 32:
      if (!this.dragging && !this.isCaptionEvent(event_0)) {
        return;
      }

  }
  getClassPrototype(11).onBrowserEvent.call(this, event_0);
}
;
_.onMouseDown = function onMouseDown(sender, x_0, y_0){
  if (isNull(getCaptureElement())) {
    this.dragging = true;
    setCapture(this.getElement());
    this.dragStartX = x_0;
    this.dragStartY = y_0;
  }
}
;
_.onMouseEnter = function onMouseEnter(sender){
}
;
_.onMouseLeave = function onMouseLeave(sender){
}
;
_.onMouseMove = function onMouseMove(sender, x_0, y_0){
  var absX, absY;
  if (this.dragging) {
    absX = x_0 + this.getAbsoluteLeft();
    absY = y_0 + this.getAbsoluteTop();
    if (absX < this.clientLeft || absX >= this.windowWidth || absY < this.clientTop) {
      return;
    }
    this.setPopupPosition(absX - this.dragStartX, absY - this.dragStartY);
  }
}
;
_.onMouseUp = function onMouseUp(sender, x_0, y_0){
  this.dragging = false;
  releaseCapture(this.getElement());
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_1(event_0){
  var nativeEvent;
  nativeEvent = event_0.getNativeEvent();
  if (!event_0.isCanceled_0() && event_0.getTypeInt() == 4 && this.isCaptionEvent(nativeEvent)) {
    $preventDefault(nativeEvent);
  }
  getClassPrototype(147).onPreviewNativeEvent.call(this, event_0);
}
;
_.setText = function setText(text_0){
  this.caption.setText(text_0);
}
;
_.show = function show_0(){
  if (isNull(this.resizeHandlerRegistration)) {
    this.resizeHandlerRegistration = addResizeHandler(new DialogBox$1(this));
  }
  getClassPrototype(147).show.call(this);
}
;
_.clientLeft = 0;
_.clientTop = 0;
_.dragStartX = 0;
_.dragStartY = 0;
_.dragging = false;
_.windowWidth = 0;
var Lcom_google_gwt_user_client_ui_DialogBox_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DialogBox', 141, Lcom_google_gwt_user_client_ui_DecoratedPopupPanel_2_classLit);
function $clinit_ClickHandler(){
  $clinit_ClickHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_ClickHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'ClickHandler');
function $clinit_KeyDownHandler(){
  $clinit_KeyDownHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_KeyDownHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'KeyDownHandler');
function $clinit_DlgChatInput(){
  $clinit_DlgChatInput = emptyMethod;
  $clinit_DialogBox();
}

function DlgChatInput(){
  DialogBox.call(this, true, true);
  this.$init_25();
  this.setText('tapez votre message');
  this.m_text.addKeyDownHandler(this);
  this.m_text.setWidth('400px');
  this.m_panel.add_0(this.m_text);
  this.m_btnOk.addClickHandler(this);
  this.m_btnOk.setWidth('50px');
  this.m_panel.add_0(this.m_btnOk);
  this.setWidget(this.m_panel);
}

function isChatMode(){
  $clinit_DlgChatInput();
  if (isNull(m_dlg)) {
    return false;
  }
  return m_dlg.m_isChatMode;
}

function showDialog(){
  $clinit_DlgChatInput();
  if (isNull(m_dlg)) {
    m_dlg = new DlgChatInput;
  }
  m_dlg.center();
  m_dlg.show();
}

defineClass(1022, 141, {72:1, 485:1, 13:1, 18:1, 45:1, 130:1, 14:1, 11:1, 1:1}, DlgChatInput);
_.$init_25 = function $init_25(){
  this.m_btnOk = new Button_0(($clinit_MAppBoard() , s_messages_0).ok());
  this.m_panel = new HorizontalPanel;
  this.m_text = new TextBox;
  this.m_isChatMode = false;
  this.m_setChatFalseTimer = new DlgChatInput$1(this);
}
;
_.hide = function hide_2(){
  getClassPrototype(147).hide.call(this);
  this.m_setChatFalseTimer.schedule(300);
}
;
_.hide_0 = function hide_3(p_autoClosed){
  getClassPrototype(141).hide_0.call(this, p_autoClosed);
  this.m_setChatFalseTimer.schedule(300);
}
;
_.onClick = function onClick(p_event){
  if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnOk)) {
    this.sendMessage();
  }
}
;
_.onKeyDown = function onKeyDown(p_event){
  switch (p_event.getNativeKeyCode()) {
    case 27:
      this.hide();
      p_event.stopPropagation_0();
      break;
    case 13:
      this.sendMessage();
      p_event.stopPropagation_0();
      $stopPropagation(p_event.getNativeEvent());
      break;
    default:break;
  }
}
;
_.sendMessage = function sendMessage_0(){
  sendMessage(this.m_text.getText());
  this.hide();
}
;
_.show = function show_1(){
  if (isChatMode()) {
    return;
  }
  this.m_text.setText('');
  this.m_isChatMode = true;
  addCommand(new DlgChatInput$2(this));
  getClassPrototype(141).show.call(this);
}
;
_.m_isChatMode = false;
var m_dlg = null;
var Lcom_fullmetalgalaxy_client_chat_DlgChatInput_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'DlgChatInput', 1022, Lcom_google_gwt_user_client_ui_DialogBox_2_classLit);
function $clinit_DlgChatInput$1(){
  $clinit_DlgChatInput$1 = emptyMethod;
  $clinit_Timer();
}

function DlgChatInput$1(this$0){
  $clinit_DlgChatInput$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_26();
}

defineClass(1023, 93, {1:1}, DlgChatInput$1);
_.$init_26 = function $init_26(){
}
;
_.run = function run_2(){
  this.this$01.m_isChatMode = false;
}
;
var Lcom_fullmetalgalaxy_client_chat_DlgChatInput$1_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'DlgChatInput/1', 1023, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_Scheduler$ScheduledCommand(){
  $clinit_Scheduler$ScheduledCommand = emptyMethod;
}

var Lcom_google_gwt_core_client_Scheduler$ScheduledCommand_2_classLit = createForInterface('com.google.gwt.core.client', 'Scheduler/ScheduledCommand');
function $clinit_Command(){
  $clinit_Command = emptyMethod;
}

var Lcom_google_gwt_user_client_Command_2_classLit = createForInterface('com.google.gwt.user.client', 'Command');
function $clinit_DlgChatInput$2(){
  $clinit_DlgChatInput$2 = emptyMethod;
  $clinit_Object();
}

function DlgChatInput$2(this$0){
  $clinit_DlgChatInput$2();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_27();
}

defineClass(1024, 1, {360:1, 1:1}, DlgChatInput$2);
_.$init_27 = function $init_27(){
}
;
_.execute = function execute(){
  this.this$01.m_text.setFocus(true);
}
;
var Lcom_fullmetalgalaxy_client_chat_DlgChatInput$2_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'DlgChatInput/2', 1024, Ljava_lang_Object_2_classLit);
function $clinit_MAppChat(){
  $clinit_MAppChat = emptyMethod;
  $clinit_GuiEntryPoint();
}

function MAppChat(){
  $clinit_MAppChat();
  var hpanel;
  GuiEntryPoint.call(this);
  this.$init_28();
  this.m_panel.setSize('100%', '100%');
  this.scrollPanel.setHeight('400px');
  this.m_msgList.setStyleName('msglist');
  this.scrollPanel.add_0(this.m_msgList);
  this.m_panel.add_0(this.scrollPanel);
  hpanel = new HorizontalPanel;
  hpanel.setSize('100%', '100%');
  hpanel.add_0(this.m_text);
  this.m_text.setWidth('100%');
  this.m_text.addKeyDownHandler(this);
  hpanel.add_0(this.m_btnOk);
  this.m_btnOk.addClickHandler(this);
  this.m_panel.add_0(hpanel);
  this.initWidget(this.m_panel);
}

defineClass(519, 118, {251:1, 72:1, 485:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppChat);
_.$init_28 = function $init_28(){
  this.m_msgList = new VerticalPanel;
  this.m_btnOk = new Button_0('Envoyer');
  this.m_text = new TextBox;
  this.scrollPanel = new ScrollPanel;
  this.m_panel = new VerticalPanel;
}
;
_.getHistoryId = function getHistoryId_0(){
  return 'Chat';
}
;
_.onChannelMessage = function onChannelMessage_1(p_message){
  var label_0, p_msg, text_0;
  if (instanceOf(p_message, 132)) {
    p_msg = castTo(p_message, 132);
    if (!p_msg.isEmpty()) {
      text_0 = htmlEscape(p_msg.getText());
      text_0 = ($clinit_SmileyCollection() , INSTANCE_0).replace_0(text_0);
      text_0 = replace_Ljava_lang_CharSequence_Ljava_lang_CharSequence__Ljava_lang_String___devirtual$(text_0, '\n', '<br/>');
      label_0 = new HTML_0('<b>[' + p_msg.getFromPseudo() + ']<\/b> ' + text_0);
      this.m_msgList.add_0(label_0);
      this.scrollPanel.ensureVisible(label_0);
    }
  }
}
;
_.onClick = function onClick_0(p_event){
  this.sendMessage();
}
;
_.onKeyDown = function onKeyDown_0(p_event){
  if (p_event.getNativeKeyCode() == 13) {
    this.sendMessage();
  }
}
;
_.onLoad = function onLoad_0(){
  getClassPrototype(11).onLoad.call(this);
  this.onChannelMessage(instance_1().getPresenceRoom());
  instance_1().addChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_ChatMessage_2_classLit, this);
}
;
_.onUnload = function onUnload_1(){
  getClassPrototype(11).onUnload.call(this);
  instance_1().removeChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_ChatMessage_2_classLit, this);
}
;
_.sendMessage = function sendMessage_1(){
  if (!isEmpty__Z__devirtual$(this.m_text.getText())) {
    sendMessage(this.m_text.getText());
  }
  this.m_text.setText('');
  this.setFocus(true);
}
;
_.setFocus = function setFocus(p_focused){
  this.m_text.setFocus(p_focused);
}
;
var Lcom_fullmetalgalaxy_client_chat_MAppChat_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'MAppChat', 519, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_MAppLittlePresences(){
  $clinit_MAppLittlePresences = emptyMethod;
  $clinit_GuiEntryPoint();
}

function MAppLittlePresences(){
  $clinit_MAppLittlePresences();
  GuiEntryPoint.call(this);
  this.$init_29();
  this.m_btnChat.addClickHandler(this);
  this.m_btnChat.setTitle('Envoyer un message');
  this.m_btnChat.setStyleName('fmp-PushButton32');
  this.initWidget(this.m_panel);
}

defineClass(517, 118, {251:1, 72:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppLittlePresences);
_.$init_29 = function $init_29(){
  this.m_panel = new HorizontalPanel;
  this.m_btnChat = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).chat32()));
}
;
_.getHistoryId = function getHistoryId_1(){
  return 'LittlePresences';
}
;
_.onChannelMessage = function onChannelMessage_2(p_message){
  var image, newPresenceRoom, presence, presence$iterator, pseudoList;
  newPresenceRoom = castTo(p_message, 146);
  this.m_panel.clear_0();
  pseudoList = new HashSet;
  for (presence$iterator = newPresenceRoom.iterator_0(); presence$iterator.hasNext_0();) {
    presence = castTo(presence$iterator.next_1(), 109);
    if (!pseudoList.contains_0(presence.getPseudo())) {
      pseudoList.add_5(presence.getPseudo());
      image = new Image_4(presence.getAvatarUrl());
      image.setPixelSize(32, 32);
      image.setAltText(presence.getPseudo());
      image.setTitle(presence.getPseudo());
      this.m_panel.add_0(image);
    }
  }
  if (pseudoList.size_1() <= 1) {
    this.m_panel.clear_0();
  }
   else {
    this.m_panel.add_0(this.m_btnChat);
  }
}
;
_.onClick = function onClick_1(p_event){
  showDialog();
}
;
_.onLoad = function onLoad_1(){
  getClassPrototype(11).onLoad.call(this);
  this.onChannelMessage(instance_1().getPresenceRoom());
  instance_1().addChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_PresenceRoom_2_classLit, this);
}
;
_.onUnload = function onUnload_2(){
  getClassPrototype(11).onUnload.call(this);
  instance_1().removeChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_PresenceRoom_2_classLit, this);
}
;
var Lcom_fullmetalgalaxy_client_chat_MAppLittlePresences_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'MAppLittlePresences', 517, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_MAppPresences(){
  $clinit_MAppPresences = emptyMethod;
  $clinit_GuiEntryPoint();
}

function MAppPresences(){
  $clinit_MAppPresences();
  GuiEntryPoint.call(this);
  this.$init_30();
  this.initWidget(this.m_panel);
}

defineClass(518, 118, {251:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppPresences);
_.$init_30 = function $init_30(){
  this.m_panel = new VerticalPanel;
}
;
_.getHistoryId = function getHistoryId_2(){
  return 'Presences';
}
;
_.onChannelMessage = function onChannelMessage_3(p_message){
  var image, newPresenceRoom, panel, presence, presence$iterator, pseudoList;
  newPresenceRoom = castTo(p_message, 146);
  this.m_panel.clear_0();
  pseudoList = new HashSet;
  for (presence$iterator = newPresenceRoom.iterator_0(); presence$iterator.hasNext_0();) {
    presence = castTo(presence$iterator.next_1(), 109);
    if (!pseudoList.contains_0(presence.getPseudo())) {
      pseudoList.add_5(presence.getPseudo());
      panel = new HorizontalPanel;
      image = new Image_4(presence.getAvatarUrl());
      image.setPixelSize(32, 32);
      image.setAltText(presence.getPseudo());
      image.setTitle(presence.getPseudo());
      panel.add_0(image);
      panel.add_0(new Label_1(presence.getPseudo()));
      this.m_panel.add_0(panel);
    }
  }
}
;
_.onLoad = function onLoad_2(){
  getClassPrototype(11).onLoad.call(this);
  this.onChannelMessage(instance_1().getPresenceRoom());
  instance_1().addChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_PresenceRoom_2_classLit, this);
}
;
_.onUnload = function onUnload_3(){
  getClassPrototype(11).onUnload.call(this);
  instance_1().removeChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_PresenceRoom_2_classLit, this);
}
;
var Lcom_fullmetalgalaxy_client_chat_MAppPresences_2_classLit = createForClass('com.fullmetalgalaxy.client.chat', 'MAppPresences', 518, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_ModelUpdateEvent$Handler(){
  $clinit_ModelUpdateEvent$Handler = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_event_ModelUpdateEvent$Handler_2_classLit = createForInterface('com.fullmetalgalaxy.client.event', 'ModelUpdateEvent/Handler');
function $clinit_SelectionHandler(){
  $clinit_SelectionHandler = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_SelectionHandler_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'SelectionHandler');
function $clinit_Localizable_0(){
  $clinit_Localizable_0 = emptyMethod;
}

var Lcom_google_gwt_i18n_shared_Localizable_2_classLit = createForInterface('com.google.gwt.i18n.shared', 'Localizable');
function $clinit_Localizable(){
  $clinit_Localizable = emptyMethod;
}

var Lcom_google_gwt_i18n_client_Localizable_2_classLit = createForInterface('com.google.gwt.i18n.client', 'Localizable');
function $clinit_LocalizableResource(){
  $clinit_LocalizableResource = emptyMethod;
}

var Lcom_google_gwt_i18n_client_LocalizableResource_2_classLit = createForInterface('com.google.gwt.i18n.client', 'LocalizableResource');
function $clinit_Messages_0(){
  $clinit_Messages_0 = emptyMethod;
}

var Lcom_google_gwt_i18n_client_Messages_2_classLit = createForInterface('com.google.gwt.i18n.client', 'Messages');
function $clinit_IndexedPanel(){
  $clinit_IndexedPanel = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_IndexedPanel_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'IndexedPanel');
function $clinit_IndexedPanel$ForIsWidget(){
  $clinit_IndexedPanel$ForIsWidget = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_IndexedPanel$ForIsWidget_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'IndexedPanel/ForIsWidget');
function $clinit_ComplexPanel(){
  $clinit_ComplexPanel = emptyMethod;
  $clinit_Panel();
}

function ComplexPanel(){
  $clinit_ComplexPanel();
  Panel.call(this);
  this.$init_39();
}

defineClass(134, 317, {18:1, 45:1, 14:1, 11:1, 1:1});
_.$init_39 = function $init_39(){
  this.children = new WidgetCollection(this);
}
;
_.add_1 = function add_3(child, container){
  this.add_2(child, asOld(container));
}
;
_.add_2 = function add_4(child, container){
  child.removeFromParent();
  this.getChildren().add_0(child);
  appendChild(container, child.getElement());
  this.adopt(child);
}
;
_.adjustIndex = function adjustIndex(child, beforeIndex){
  var idx;
  this.checkIndexBoundsForInsertion(beforeIndex);
  if (jsEquals(child.getParent(), this)) {
    idx = this.getWidgetIndex(child);
    if (idx < beforeIndex) {
      beforeIndex--;
    }
  }
  return beforeIndex;
}
;
_.checkIndexBoundsForInsertion = function checkIndexBoundsForInsertion(index_0){
  if (index_0 < 0 || index_0 > this.getWidgetCount()) {
    throw toJs(new IndexOutOfBoundsException);
  }
}
;
_.doLogicalClear = function doLogicalClear(){
  if (isNull(this.orphanCommand)) {
    this.orphanCommand = new ComplexPanel$1(this);
  }
  try {
    tryCommand(this, this.orphanCommand);
  }
   finally {
    this.children = new WidgetCollection(this);
  }
}
;
_.getChildren = function getChildren(){
  return this.children;
}
;
_.getWidgetCount = function getWidgetCount(){
  return this.getChildren().size_1();
}
;
_.getWidgetIndex = function getWidgetIndex(child){
  return this.getChildren().indexOf_2(child);
}
;
_.insert_0 = function insert_0(child, container, beforeIndex, domInsert){
  beforeIndex = this.adjustIndex(child, beforeIndex);
  child.removeFromParent();
  this.getChildren().insert_1(child, beforeIndex);
  if (domInsert) {
    insertChild(container, child.getElement(), beforeIndex);
  }
   else {
    appendChild(container, child.getElement());
  }
  this.adopt(child);
}
;
_.iterator_0 = function iterator_2(){
  return this.getChildren().iterator_0();
}
;
_.remove_0 = function remove_2(w){
  var elem;
  if (jsNotEquals(w.getParent(), this)) {
    return false;
  }
  try {
    this.orphan(w);
  }
   finally {
    elem = w.getElement();
    $removeChild(getParent_1(elem), elem);
    this.getChildren().remove_9(w);
  }
  return true;
}
;
var Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ComplexPanel', 134, Lcom_google_gwt_user_client_ui_Panel_2_classLit);
function $clinit_InsertPanel(){
  $clinit_InsertPanel = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_InsertPanel_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'InsertPanel');
function $clinit_InsertPanel$ForIsWidget(){
  $clinit_InsertPanel$ForIsWidget = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_InsertPanel$ForIsWidget_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'InsertPanel/ForIsWidget');
function $clinit_AbsolutePanel(){
  $clinit_AbsolutePanel = emptyMethod;
  $clinit_ComplexPanel();
}

function AbsolutePanel(){
  $clinit_AbsolutePanel();
  AbsolutePanel_0.call(this, createDiv());
  $setProperty_0($getStyle(this.getElement()), 'position', 'relative');
  $setProperty_0($getStyle(this.getElement()), 'overflow', 'hidden');
}

function AbsolutePanel_0(elem){
  $clinit_AbsolutePanel();
  ComplexPanel.call(this);
  this.$init_40();
  this.setElement(elem);
}

function changeToStaticPositioning(elem){
  $setProperty_0($getStyle(elem), 'left', '');
  $setProperty_0($getStyle(elem), 'top', '');
  $setProperty_0($getStyle(elem), 'position', '');
}

defineClass(119, 134, {18:1, 45:1, 14:1, 11:1, 1:1}, AbsolutePanel);
_.$init_40 = function $init_40(){
}
;
_.add_3 = function add_5(w, left, top_0){
  this.add_4(w.asWidget(), left, top_0);
}
;
_.add_0 = function add_6(w){
  getClassPrototype(134).add_2.call(this, w, this.getElement());
}
;
_.add_4 = function add_7(w, left, top_0){
  var beforeIndex;
  w.removeFromParent();
  beforeIndex = this.getWidgetCount();
  this.setWidgetPositionImpl(w, left, top_0);
  this.insert_1(w, beforeIndex);
  this.verifyPositionNotStatic(w);
}
;
_.checkWidgetParent = function checkWidgetParent(w){
  if (jsNotEquals(w.getParent(), this)) {
    throw toJs(new IllegalArgumentException_0('Widget must be a child of this panel.'));
  }
}
;
_.getWidgetLeft = function getWidgetLeft(w){
  this.checkWidgetParent(w);
  return $getAbsoluteLeft(w.getElement()) - $getAbsoluteLeft(this.getElement());
}
;
_.getWidgetTop = function getWidgetTop(w){
  this.checkWidgetParent(w);
  return $getAbsoluteTop(w.getElement()) - $getAbsoluteTop(this.getElement());
}
;
_.insert_1 = function insert_1(w, beforeIndex){
  this.insert_0(w, this.getElement(), beforeIndex, true);
}
;
_.remove_0 = function remove_3(w){
  var removed;
  removed = getClassPrototype(134).remove_0.call(this, w);
  if (removed) {
    changeToStaticPositioning(w.getElement());
  }
  return removed;
}
;
_.setWidgetPosition = function setWidgetPosition(w, left, top_0){
  this.checkWidgetParent(w);
  this.setWidgetPositionImpl(w, left, top_0);
  this.verifyPositionNotStatic(w);
}
;
_.setWidgetPositionImpl = function setWidgetPositionImpl(w, left, top_0){
  var h;
  h = w.getElement();
  if (left == -1 && top_0 == -1) {
    changeToStaticPositioning(h);
  }
   else {
    $setProperty_0($getStyle(h), 'position', 'absolute');
    $setProperty_0($getStyle(h), 'left', left + 'px');
    $setProperty_0($getStyle(h), 'top', top_0 + 'px');
  }
}
;
_.verifyPositionNotStatic = function verifyPositionNotStatic(child){
  var className;
  if (isProdMode()) {
    return;
  }
  if (!this.isAttached()) {
    return;
  }
  if (isNull($getOffsetParent(child.getElement()))) {
    return;
  }
  if (jsEquals($getOffsetParent(child.getElement()), this.getElement())) {
    return;
  }
  if (equals_Ljava_lang_Object__Z__devirtual$_2('body', toLowerCase_Ljava_util_Locale__Ljava_lang_String___devirtual$($getNodeName(this.getElement()), ($clinit_Locale() , ROOT)))) {
    return;
  }
  className = getClass__Ljava_lang_Class___devirtual$(this).getName();
  log_1('Warning: ' + className + ' descendants will be incorrectly ' + 'positioned, i.e. not relative to their parent element, when ' + "'position:static', which is the CSS default, is in effect. One " + 'possible fix is to call ' + "'panel.getElement().getStyle().setPosition(Position.RELATIVE)'.", new IllegalStateException_0(className + " is missing CSS 'position:{relative,absolute,fixed}'"));
}
;
var Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AbsolutePanel', 119, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit);
function $clinit_BoardLayer(){
  $clinit_BoardLayer = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_game_board_BoardLayer_2_classLit = createForInterface('com.fullmetalgalaxy.client.game.board', 'BoardLayer');
function $clinit_WgtBoardLayerBase(){
  $clinit_WgtBoardLayerBase = emptyMethod;
  $clinit_AbsolutePanel();
}

function WgtBoardLayerBase(){
  $clinit_WgtBoardLayerBase();
  AbsolutePanel.call(this);
  this.$init_41();
}

defineClass(57, 119, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1});
_.$init_41 = function $init_41(){
  this.m_leftPix = 0;
  this.m_topPix = 0;
  this.m_botomPix = 0;
  this.m_rightPix = 0;
  this.m_cropLeftHex = 0;
  this.m_cropTopHex = 0;
  this.m_cropBotomHex = 10;
  this.m_cropRightHex = 10;
  this.m_lastGameId_0 = 0;
}
;
_.convertHexPositionToPixPosition = function convertHexPositionToPixPosition(p_wgtHexPosition){
  var wgtHexPosition;
  wgtHexPosition = p_wgtHexPosition;
  if (jsNotEquals(game_0().getMapShape(), ($clinit_MapShape() , Flat))) {
    wgtHexPosition = new AnPair_1(p_wgtHexPosition);
  }
  if (game_0().getMapShape().isEWLinked()) {
    if (wgtHexPosition.getX() < this.m_cropLeftHex) {
      wgtHexPosition.setX(p_wgtHexPosition.getX() + game_0().getLandWidth());
    }
  }
  if (game_0().getMapShape().isNSLinked()) {
    if (wgtHexPosition.getY() < this.m_cropTopHex) {
      wgtHexPosition.setY(p_wgtHexPosition.getY() + game_0().getLandHeight());
    }
  }
  return convertHexPositionToPixPosition_0(wgtHexPosition, this.getZoom(), new AnPair_0(this.m_cropLeftHex, this.m_cropTopHex));
}
;
_.cropDisplay = function cropDisplay(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  this.m_cropLeftHex = p_cropLeftHex;
  if (this.m_cropLeftHex < 0)
    this.m_cropLeftHex = 0;
  this.m_cropTopHex = p_cropTopHex;
  if (this.m_cropTopHex < 0)
    this.m_cropTopHex = 0;
  this.m_cropBotomHex = p_cropBotomHex;
  this.m_cropRightHex = p_cropRightHex;
}
;
_.getCropTopLeft = function getCropTopLeft(){
  return new AnPair_0(this.m_cropLeftHex, this.m_cropTopHex);
}
;
_.getZoom = function getZoom(){
  return model_0().getZoomDisplayed();
}
;
_.isHexVisible = function isHexVisible(p_wgtHexPosition){
  return true;
}
;
_.onModelChange = function onModelChange(){
  this.onModelChange_0(false);
}
;
_.onModelChange_0 = function onModelChange_0(p_forceRedraw){
  var game;
  game = model_0().getGame();
  if (neq(game.getId(), this.m_lastGameId_0) || p_forceRedraw) {
    this.resetPixelSize();
    this.m_lastGameId_0 = game.getId();
  }
}
;
_.redraw = function redraw_0(){
}
;
_.redraw_0 = function redraw_1(p_left, p_top, p_right, p_botom){
  this.m_topPix = p_top;
  this.m_botomPix = p_botom;
  if (this.m_botomPix > this.getOffsetHeight()) {
    this.m_botomPix = this.getOffsetHeight();
  }
  this.m_leftPix = p_left;
  this.m_rightPix = p_right;
  if (this.m_rightPix > this.getOffsetWidth()) {
    this.m_rightPix = this.getOffsetWidth();
  }
  this.redraw();
}
;
_.resetPixelSize = function resetPixelSize(){
  var height, pxH, pxW, width_0;
  width_0 = this.m_cropRightHex - this.m_cropLeftHex;
  height = this.m_cropBotomHex - this.m_cropTopHex;
  pxW = landWidthHex2Pix(width_0, this.getZoom());
  pxH = landHeightHex2Pix(height, this.getZoom());
  this.setPixelSize(pxW, pxH);
}
;
_.setWidgetHexPosition = function setWidgetHexPosition(p_w, p_wgtHexPosition){
  var wgtPxPosition;
  wgtPxPosition = this.convertHexPositionToPixPosition(p_wgtHexPosition);
  this.setWidgetPixPosition_0(p_w, wgtPxPosition);
}
;
_.setWidgetHexPosition_0 = function setWidgetHexPosition_0(p_w, p_wgtHexPosition, p_heightPixOffset){
  var wgtPxPosition;
  wgtPxPosition = this.convertHexPositionToPixPosition(p_wgtHexPosition);
  wgtPxPosition.setY(wgtPxPosition.getY() + p_heightPixOffset);
  this.setWidgetPixPosition_0(p_w, wgtPxPosition);
}
;
_.setWidgetPixPosition = function setWidgetPixPosition(p_w, p_wgtPixPosition){
  getClassPrototype(119).setWidgetPosition.call(this, p_w, p_wgtPixPosition.getX() - narrow_int(p_w.getWidth() / 2), p_wgtPixPosition.getY() - narrow_int(p_w.getHeight() / 2));
}
;
_.setWidgetPixPosition_0 = function setWidgetPixPosition_0(p_w, p_wgtPixPosition){
  getClassPrototype(119).setWidgetPosition.call(this, p_w, p_wgtPixPosition.getX() - narrow_int(p_w.getOffsetWidth() / 2), p_wgtPixPosition.getY() - narrow_int(p_w.getOffsetHeight() / 2));
}
;
_.setZoom = function setZoom(p_zoom){
  this.resetPixelSize();
}
;
_.show = function show_3(){
}
;
_.m_botomPix = 0;
_.m_cropBotomHex = 0;
_.m_cropLeftHex = 0;
_.m_cropRightHex = 0;
_.m_cropTopHex = 0;
_.m_lastGameId_0 = 0;
_.m_leftPix = 0;
_.m_rightPix = 0;
_.m_topPix = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerBase', 57, Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit);
function $clinit_WgtBoardLayerLand(){
  $clinit_WgtBoardLayerLand = emptyMethod;
  $clinit_WgtBoardLayerBase();
  {
    createLandsRules();
  }
}

function WgtBoardLayerLand(){
  $clinit_WgtBoardLayerLand();
  WgtBoardLayerBase.call(this);
  this.$init_42();
  this.add_4(this.m_html, 0, 0);
  this.m_baseUrl = getUrlParameter('graphicpack');
  if (jsEquals(this.m_baseUrl, null)) {
    this.m_baseUrl = 'images/board/';
  }
  if (!endsWith_Ljava_lang_String__Z__devirtual$(this.m_baseUrl, '/')) {
    this.m_baseUrl += '/';
  }
}

function createLandsRules(){
  s_firstLandRuleIndex1 = setCssRule_0('.fmp-None1', '{position: absolute; width: 77px; background: url(images/clear.cache.gif);}') - 1;
  setCssRule_0('.fmp-Sea1', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/sea1.png);}');
  setCssRule_0('.fmp-Reef1', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/reef_hight1.png);}');
  setCssRule_0('.fmp-Marsh1', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/swamp_low1.png);}');
  setCssRule_0('.fmp-Plain1', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/plain1.png);}');
  setCssRule_0('.fmp-Montain1', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/montain1.png);}');
  s_firstLandRuleIndex2 = setCssRule_0('.fmp-None2', '{position: absolute; width: 77px; background: url(images/clear.cache.gif);}') - 1;
  setCssRule_0('.fmp-Sea2', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/sea2.png);}');
  setCssRule_0('.fmp-Reef2', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/reef_hight2.png);}');
  setCssRule_0('.fmp-Marsh2', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/swamp_low2.png);}');
  setCssRule_0('.fmp-Plain2', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/plain2.png);}');
  setCssRule_0('.fmp-Montain2', ' {position: absolute; width: 77px; background: url(' + 'images/board/' + 'desert/tactic/montain2.png);}');
}

function getHexHeightMargin(p_zoom){
  $clinit_WgtBoardLayerLand();
  switch (p_zoom) {
    case 0:
      return 3;
    default:case 1:
      return 6;
  }
}

function getHexMontainHeightMargin(p_zoom){
  $clinit_WgtBoardLayerLand();
  switch (p_zoom) {
    case 0:
      return 17;
    default:case 1:
      return 27;
  }
}

function getHexMontainWidthMargin(p_zoom){
  $clinit_WgtBoardLayerLand();
  switch (p_zoom) {
    case 0:
      return 22;
    default:case 1:
      return 40;
  }
}

function getHexWidthMargin(p_zoom){
  $clinit_WgtBoardLayerLand();
  switch (p_zoom) {
    case 0:
      return 3;
    default:case 1:
      return 6;
  }
}

function getTextureHexCount(p_land){
  switch (p_land.ordinal_0()) {
    default:case ($clinit_LandType() , Montain).ordinal_0():
      return 1;
    case ($clinit_LandType() , Marsh).ordinal_0():
    case ($clinit_LandType() , Reef).ordinal_0():
      return 2;
    case ($clinit_LandType() , Plain).ordinal_0():
    case ($clinit_LandType() , Sea).ordinal_0():
      return 4;
    case ($clinit_LandType() , None).ordinal_0():
      return 50;
  }
}

function setBackgroundRules(p_index, p_value){
  var theRules = new Array;
  if ($doc.styleSheets[0].cssRules)
    theRules = $doc.styleSheets[0].cssRules;
  else if ($doc.styleSheets[0].rules)
    theRules = $doc.styleSheets[0].rules;
  else 
    return;
  theRules[p_index].style.background = p_value;
}

function setLandsImages(p_land, p_imageUrl){
  setBackgroundRules(s_firstLandRuleIndex1 + p_land.ordinal_0(), 'url(' + p_imageUrl + '1.png)');
  setBackgroundRules(s_firstLandRuleIndex2 + p_land.ordinal_0(), 'url(' + p_imageUrl + '2.png)');
}

function setLandsWidth(p_land, p_widthPx){
  setWidthRules(s_firstLandRuleIndex1 + p_land.ordinal_0(), '' + p_widthPx + 'px');
  setWidthRules(s_firstLandRuleIndex2 + p_land.ordinal_0(), '' + p_widthPx + 'px');
}

function setWidthRules(p_index, p_value){
  var theRules = new Array;
  if ($doc.styleSheets[0].cssRules)
    theRules = $doc.styleSheets[0].cssRules;
  else if ($doc.styleSheets[0].rules)
    theRules = $doc.styleSheets[0].rules;
  else 
    return;
  theRules[p_index].style.width = p_value;
}

defineClass(240, 57, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerLand);
_.$init_42 = function $init_42(){
  this.m_html = new HTML;
  this.m_baseUrl = null;
  this.m_lastTideValue = ($clinit_Tide() , Unknown_1);
  this.m_lastGameId = 0;
  this.m_htmlLandTactic = null;
  this.m_htmlLandStrategy = null;
}
;
_.buildHtmlLand = function buildHtmlLand(p_game, p_zoom){
  var hexHeight, html, i, indexTextures, ix, iy, land, pxHexHeight, pxHexWidth, pxX, pxY, tmppxX, yOffset;
  html = new StringBuffer;
  indexTextures = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, values_5().length, 15, 1);
  for (i = 0; i < indexTextures.length; i++) {
    indexTextures[i] = 1;
  }
  this.resetPixelSize();
  pxHexWidth = getHexWidth(p_zoom);
  pxHexHeight = getHexHeight(p_zoom);
  html.append_3('<div style="overflow: hidden; width: 100%; height: 100%;">');
  for (ix = this.m_cropLeftHex; ix < p_game.getLandWidth() && ix < this.m_cropRightHex; ix++) {
    tmppxX = (ix - this.m_cropLeftHex) * narrow_int(pxHexWidth * 3 / 4);
    yOffset = 0;
    if (ix % 2 != 0) {
      yOffset = narrow_int(pxHexHeight / 2);
    }
    iy = this.m_cropTopHex;
    while (iy < p_game.getLandHeight() && iy < this.m_cropBotomHex) {
      pxY = (iy - this.m_cropTopHex) * pxHexHeight;
      land = p_game.getLand(ix, iy);
      hexHeight = 1;
      iy++;
      while (iy < p_game.getLandHeight() && iy < this.m_cropBotomHex && jsEquals(land, p_game.getLand(ix, iy)) && hexHeight < getTextureHexCount(land)) {
        hexHeight++;
        iy++;
      }
      pxX = tmppxX;
      if (jsEquals(land, ($clinit_LandType() , Montain))) {
        pxX -= getHexMontainWidthMargin(p_zoom);
        pxY += yOffset - getHexMontainHeightMargin(p_zoom);
        html.append_3('<div style="left: ' + pxX + 'px; top: ' + pxY + 'px; height: ' + (hexHeight * pxHexHeight + getHexMontainHeightMargin(p_zoom) + getHexHeightMargin(p_zoom)) + 'px; z-index:' + (iy * 2 + ix % 2 - 1) + ';" class="fmp-' + land + indexTextures[land.ordinal_0()] + '"><\/div>');
      }
       else {
        pxX -= getHexWidthMargin(p_zoom);
        pxY += yOffset - getHexHeightMargin(p_zoom);
        html.append_3('<div style="left: ' + pxX + 'px; top: ' + pxY + 'px; height: ' + (hexHeight * pxHexHeight + getHexHeightMargin(p_zoom) * 2) + 'px;" class="fmp-' + land + indexTextures[land.ordinal_0()] + '"><\/div>');
      }
      if (indexTextures[land.ordinal_0()] == 1)
        indexTextures[land.ordinal_0()] = 2;
      else 
        indexTextures[land.ordinal_0()] = 1;
    }
    if (yOffset == 0) {
      land = null;
      if (iy >= p_game.getLandHeight()) {
        land = p_game.getLand(ix, 0);
      }
       else {
        land = p_game.getLand(ix, iy);
      }
      if (jsEquals(land, ($clinit_LandType() , Montain))) {
        pxY = (iy - this.m_cropTopHex) * pxHexHeight;
        pxX = tmppxX;
        pxX -= getHexMontainWidthMargin(p_zoom);
        pxY += yOffset - getHexMontainHeightMargin(p_zoom);
        html.append_3('<div style="left: ' + pxX + 'px; top: ' + pxY + 'px; height: ' + (pxHexHeight + getHexMontainHeightMargin(p_zoom) + getHexHeightMargin(p_zoom)) + 'px; z-index:' + (iy * 2 + ix % 2 - 1) + ';" class="fmp-' + land + indexTextures[land.ordinal_0()] + '"><\/div>');
      }
    }
  }
  html.append_3('<\/div>');
  return html.toString_0();
}
;
_.getHtmlLand = function getHtmlLand(){
  switch (this.getZoom().getValue_1()) {
    default:case 1:
      if (jsEquals(this.m_htmlLandTactic, null)) {
        this.m_htmlLandTactic = this.buildHtmlLand(model_0().getGame(), 1);
      }

      return this.m_htmlLandTactic;
    case 0:
      if (jsEquals(this.m_htmlLandStrategy, null)) {
        this.m_htmlLandStrategy = this.buildHtmlLand(model_0().getGame(), 0);
      }

      return this.m_htmlLandStrategy;
  }
}
;
_.onModelChange_0 = function onModelChange_1(p_forceRedraw){
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  if (this.isVisible() == model_0().isCustomMapDisplayed()) {
    this.setVisible(!model_0().isCustomMapDisplayed());
  }
  if (!this.isVisible()) {
    return;
  }
  if (neq(this.m_lastGameId, model_0().getGame().getId()) || p_forceRedraw) {
    this.m_lastGameId = model_0().getGame().getId();
    this.m_lastTideValue = model_0().getGame().getCurrentTide();
    this.m_htmlLandTactic = null;
    this.m_htmlLandStrategy = null;
    this.setZoom(this.getZoom());
  }
  if (jsNotEquals(this.m_lastTideValue, model_0().getGame().getCurrentTide())) {
    this.m_lastTideValue = model_0().getGame().getCurrentTide();
    this.onTideChange();
  }
}
;
_.onTideChange = function onTideChange(){
  var baseUrl, game;
  game = model_0().getGame();
  baseUrl = this.m_baseUrl + ('' + game.getPlanetType().getFolderName());
  if (this.getZoom().getValue_1() == 0) {
    baseUrl += '/strategy/';
  }
   else {
    baseUrl += '/tactic/';
  }
  switch (game.getCurrentTide().ordinal_0()) {
    case ($clinit_Tide() , Low).ordinal_0():
      setLandsImages(($clinit_LandType() , Reef), baseUrl + 'reef_low');
      setLandsImages(($clinit_LandType() , Marsh), baseUrl + 'swamp_low');
      break;
    default:case ($clinit_Tide() , Medium_0).ordinal_0():
      setLandsImages(($clinit_LandType() , Reef), baseUrl + 'reef_hight');
      setLandsImages(($clinit_LandType() , Marsh), baseUrl + 'swamp_low');
      break;
    case ($clinit_Tide() , Hight).ordinal_0():
      setLandsImages(($clinit_LandType() , Reef), baseUrl + 'reef_hight');
      setLandsImages(($clinit_LandType() , Marsh), baseUrl + 'swamp_hight');
      break;
  }
  setLandsImages(($clinit_LandType() , Sea), baseUrl + 'sea');
  setLandsImages(($clinit_LandType() , Plain), baseUrl + 'plain');
  setLandsImages(($clinit_LandType() , Montain), baseUrl + 'montain');
}
;
_.setZoom = function setZoom_0(p_zoom){
  var width_0;
  getClassPrototype(57).setZoom.call(this, p_zoom);
  width_0 = getHexWidth_0(p_zoom) + getHexWidthMargin(p_zoom.getValue_1()) * 2;
  setLandsWidth(($clinit_LandType() , Sea), width_0);
  setLandsWidth(($clinit_LandType() , Reef), width_0);
  setLandsWidth(($clinit_LandType() , Marsh), width_0);
  setLandsWidth(($clinit_LandType() , Plain), width_0);
  width_0 = getHexWidth_0(p_zoom) + (getHexMontainWidthMargin(p_zoom.getValue_1()) + getHexWidthMargin(p_zoom.getValue_1()));
  setLandsWidth(($clinit_LandType() , Montain), width_0);
  this.m_html.setHTML_0(this.getHtmlLand());
  this.onTideChange();
  this.show();
}
;
_.m_lastGameId = 0;
var s_firstLandRuleIndex1 = 0, s_firstLandRuleIndex2 = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerLand_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerLand', 240, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_Focusable(){
  $clinit_Focusable = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_Focusable_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'Focusable');
function $clinit_SourcesFocusEvents(){
  $clinit_SourcesFocusEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesFocusEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesFocusEvents');
function $clinit_SourcesKeyboardEvents(){
  $clinit_SourcesKeyboardEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesKeyboardEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesKeyboardEvents');
function $clinit_HasFocus(){
  $clinit_HasFocus = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasFocus_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasFocus');
function $clinit_SourcesClickEvents(){
  $clinit_SourcesClickEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesClickEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesClickEvents');
function $clinit_SourcesMouseEvents(){
  $clinit_SourcesMouseEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesMouseEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesMouseEvents');
function $clinit_SourcesMouseWheelEvents(){
  $clinit_SourcesMouseWheelEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesMouseWheelEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesMouseWheelEvents');
function $clinit_HasDragEndHandlers(){
  $clinit_HasDragEndHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDragEndHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDragEndHandlers');
function $clinit_HasDragEnterHandlers(){
  $clinit_HasDragEnterHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDragEnterHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDragEnterHandlers');
function $clinit_HasDragLeaveHandlers(){
  $clinit_HasDragLeaveHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDragLeaveHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDragLeaveHandlers');
function $clinit_HasDragHandlers(){
  $clinit_HasDragHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDragHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDragHandlers');
function $clinit_HasDragOverHandlers(){
  $clinit_HasDragOverHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDragOverHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDragOverHandlers');
function $clinit_HasDragStartHandlers(){
  $clinit_HasDragStartHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDragStartHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDragStartHandlers');
function $clinit_HasDropHandlers(){
  $clinit_HasDropHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDropHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDropHandlers');
function $clinit_HasAllDragAndDropHandlers(){
  $clinit_HasAllDragAndDropHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasAllDragAndDropHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasAllDragAndDropHandlers');
function $clinit_HasMouseDownHandlers(){
  $clinit_HasMouseDownHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasMouseDownHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasMouseDownHandlers');
function $clinit_HasMouseUpHandlers(){
  $clinit_HasMouseUpHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasMouseUpHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasMouseUpHandlers');
function $clinit_HasMouseOutHandlers(){
  $clinit_HasMouseOutHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasMouseOutHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasMouseOutHandlers');
function $clinit_HasMouseOverHandlers(){
  $clinit_HasMouseOverHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasMouseOverHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasMouseOverHandlers');
function $clinit_HasMouseMoveHandlers(){
  $clinit_HasMouseMoveHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasMouseMoveHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasMouseMoveHandlers');
function $clinit_HasMouseWheelHandlers(){
  $clinit_HasMouseWheelHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasMouseWheelHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasMouseWheelHandlers');
function $clinit_HasAllMouseHandlers(){
  $clinit_HasAllMouseHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasAllMouseHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasAllMouseHandlers');
function $clinit_HasClickHandlers(){
  $clinit_HasClickHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasClickHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasClickHandlers');
function $clinit_HasDoubleClickHandlers(){
  $clinit_HasDoubleClickHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasDoubleClickHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasDoubleClickHandlers');
function $clinit_HasKeyUpHandlers(){
  $clinit_HasKeyUpHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasKeyUpHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasKeyUpHandlers');
function $clinit_HasKeyDownHandlers(){
  $clinit_HasKeyDownHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasKeyDownHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasKeyDownHandlers');
function $clinit_HasKeyPressHandlers(){
  $clinit_HasKeyPressHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasKeyPressHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasKeyPressHandlers');
function $clinit_HasAllKeyHandlers(){
  $clinit_HasAllKeyHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasAllKeyHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasAllKeyHandlers');
function $clinit_HasFocusHandlers(){
  $clinit_HasFocusHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasFocusHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasFocusHandlers');
function $clinit_HasBlurHandlers(){
  $clinit_HasBlurHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasBlurHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasBlurHandlers');
function $clinit_HasAllFocusHandlers(){
  $clinit_HasAllFocusHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasAllFocusHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasAllFocusHandlers');
function $clinit_HasGestureStartHandlers(){
  $clinit_HasGestureStartHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasGestureStartHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasGestureStartHandlers');
function $clinit_HasGestureChangeHandlers(){
  $clinit_HasGestureChangeHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasGestureChangeHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasGestureChangeHandlers');
function $clinit_HasGestureEndHandlers(){
  $clinit_HasGestureEndHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasGestureEndHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasGestureEndHandlers');
function $clinit_HasAllGestureHandlers(){
  $clinit_HasAllGestureHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasAllGestureHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasAllGestureHandlers');
function $clinit_HasTouchStartHandlers(){
  $clinit_HasTouchStartHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasTouchStartHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasTouchStartHandlers');
function $clinit_HasTouchMoveHandlers(){
  $clinit_HasTouchMoveHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasTouchMoveHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasTouchMoveHandlers');
function $clinit_HasTouchEndHandlers(){
  $clinit_HasTouchEndHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasTouchEndHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasTouchEndHandlers');
function $clinit_HasTouchCancelHandlers(){
  $clinit_HasTouchCancelHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasTouchCancelHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasTouchCancelHandlers');
function $clinit_HasAllTouchHandlers(){
  $clinit_HasAllTouchHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasAllTouchHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasAllTouchHandlers');
function $clinit_FocusPanel(){
  $clinit_FocusPanel = emptyMethod;
  $clinit_SimplePanel();
  impl_1 = getFocusImplForPanel();
}

function FocusPanel(){
  $clinit_FocusPanel();
  SimplePanel_0.call(this, impl_1.createFocusable());
  this.$init_44();
}

function FocusPanel_0(child){
  $clinit_FocusPanel();
  FocusPanel.call(this);
  this.setWidget(child);
}

defineClass(108, 112, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 45:1, 14:1, 11:1, 1:1}, FocusPanel, FocusPanel_0);
_.$init_44 = function $init_44(){
}
;
_.addClickHandler = function addClickHandler(handler){
  return this.addDomHandler(handler, getType_36());
}
;
_.addKeyUpHandler = function addKeyUpHandler(handler){
  return this.addDomHandler(handler, getType_38());
}
;
_.addMouseDownHandler = function addMouseDownHandler(handler){
  return this.addDomHandler(handler, getType_40());
}
;
_.addMouseMoveHandler = function addMouseMoveHandler(handler){
  return this.addDomHandler(handler, getType_41());
}
;
_.addMouseOutHandler = function addMouseOutHandler(handler){
  return this.addDomHandler(handler, getType_42());
}
;
_.addMouseOverHandler = function addMouseOverHandler(handler){
  return this.addDomHandler(handler, getType_43());
}
;
_.addMouseUpHandler = function addMouseUpHandler(handler){
  return this.addDomHandler(handler, getType_44());
}
;
_.addTouchCancelHandler = function addTouchCancelHandler(handler){
  return this.addDomHandler(handler, getType_46());
}
;
_.addTouchEndHandler = function addTouchEndHandler(handler){
  return this.addDomHandler(handler, getType_47());
}
;
_.addTouchMoveHandler = function addTouchMoveHandler(handler){
  return this.addDomHandler(handler, getType_48());
}
;
_.addTouchStartHandler = function addTouchStartHandler(handler){
  return this.addDomHandler(handler, getType_49());
}
;
_.setFocus = function setFocus_0(focused){
  if (focused) {
    impl_1.focus_0(this.getElement());
  }
   else {
    impl_1.blur_1(this.getElement());
  }
}
;
var impl_1;
var Lcom_google_gwt_user_client_ui_FocusPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'FocusPanel', 108, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit);
function $clinit_ScrollListener(){
  $clinit_ScrollListener = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_ScrollListener_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'ScrollListener');
function $clinit_ValueChangeHandler(){
  $clinit_ValueChangeHandler = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_ValueChangeHandler_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'ValueChangeHandler');
function $clinit_ChangeHandler(){
  $clinit_ChangeHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_ChangeHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'ChangeHandler');
function $clinit_WgtView(){
  $clinit_WgtView = emptyMethod;
  $clinit_Composite();
}

function WgtView(){
  $clinit_WgtView();
  Composite.call(this);
  this.$init_56();
}

defineClass(237, 59, {115:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1});
_.$init_56 = function $init_56(){
}
;
var Lcom_fullmetalgalaxy_client_widget_WgtView_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'WgtView', 237, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_ChannelMessageHandlerCollection(){
  $clinit_ChannelMessageHandlerCollection = emptyMethod;
  $clinit_Object();
}

function ChannelMessageHandlerCollection(){
  $clinit_ChannelMessageHandlerCollection();
  Object_0.call(this);
  this.$init_75();
}

defineClass(504, 1, {1:1}, ChannelMessageHandlerCollection);
_.$init_75 = function $init_75(){
  this.m_handlerMap = new HashMap;
}
;
_.addChannelMessageEventHandler = function addChannelMessageEventHandler_0(p_class, p_handler){
  var handlerList;
  handlerList = castTo(this.m_handlerMap.get_1(p_class), 12);
  if (isNull(handlerList)) {
    handlerList = new ArrayList;
    this.m_handlerMap.put(p_class, handlerList);
  }
  handlerList.add_5(p_handler);
}
;
_.fireEventChanelMessage = function fireEventChanelMessage(p_message){
  var e, handler, handler$iterator, handlerList;
  if (jsEquals(p_message, null)) {
    return;
  }
  handlerList = castTo(this.m_handlerMap.get_1(getClass__Ljava_lang_Class___devirtual$(p_message)), 12);
  if (isNotNull(handlerList)) {
    for (handler$iterator = handlerList.iterator_0(); handler$iterator.hasNext_0();) {
      handler = castTo(handler$iterator.next_1(), 251);
      if (isNotNull(handler)) {
        try {
          handler.onChannelMessage(p_message);
        }
         catch ($e0) {
          $e0 = toJava($e0);
          if (instanceOf($e0, 25)) {
            e = $e0;
            ($clinit_AppRoot() , logger_0).log_2(($clinit_Level() , WARNING), 'the listener ' + toString_46(handler) + ' bug while notify a ChannelMessageEvent', e);
          }
           else 
            throw toJs($e0);
        }
      }
    }
  }
}
;
_.removeChannelMessageEventHandler = function removeChannelMessageEventHandler_0(p_class, p_handler){
  var handlerList;
  handlerList = castTo(this.m_handlerMap.get_1(p_class), 12);
  if (isNotNull(handlerList)) {
    handlerList.remove_1(p_handler);
  }
}
;
var Lcom_fullmetalgalaxy_client_event_ChannelMessageHandlerCollection_2_classLit = createForClass('com.fullmetalgalaxy.client.event', 'ChannelMessageHandlerCollection', 504, Ljava_lang_Object_2_classLit);
function $clinit_Collection(){
  $clinit_Collection = emptyMethod;
}

var Ljava_util_Collection_2_classLit = createForInterface('java.util', 'Collection');
function $clinit_AbstractCollection(){
  $clinit_AbstractCollection = emptyMethod;
  $clinit_Object();
  $clinit_Iterable();
  $clinit_Collection();
}

function AbstractCollection(){
  $clinit_AbstractCollection();
  Object_0.call(this);
  this.$init_76();
}

defineClass(325, 1, {1:1, 47:1});
_.$init_76 = function $init_76(){
}
;
_.add_5 = function add_8(o){
  throw toJs(new UnsupportedOperationException_0('Add not supported on this collection'));
}
;
_.addAll = function addAll(c){
  var changed, e, e$iterator;
  checkNotNull(c);
  changed = false;
  for (e$iterator = c.iterator_0(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    changed = changed | this.add_5(e);
  }
  return changed;
}
;
_.advanceToFind = function advanceToFind(o, remove){
  var e, iter;
  for (iter = this.iterator_0(); iter.hasNext_0();) {
    e = iter.next_1();
    if (equals_40(o, e)) {
      if (remove) {
        iter.remove_3();
      }
      return true;
    }
  }
  return false;
}
;
_.clear_0 = function clear_3(){
  var iter;
  for (iter = this.iterator_0(); iter.hasNext_0();) {
    iter.next_1();
    iter.remove_3();
  }
}
;
_.contains_0 = function contains(o){
  return this.advanceToFind(o, false);
}
;
_.containsAll = function containsAll(c){
  var e, e$iterator;
  checkNotNull(c);
  for (e$iterator = c.iterator_0(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    if (!this.contains_0(e)) {
      return false;
    }
  }
  return true;
}
;
_.isEmpty = function isEmpty_0(){
  return this.size_1() == 0;
}
;
_.remove_1 = function remove_4(o){
  return this.advanceToFind(o, true);
}
;
_.removeAll = function removeAll(c){
  var changed, iter, o;
  checkNotNull(c);
  changed = false;
  for (iter = this.iterator_0(); iter.hasNext_0();) {
    o = iter.next_1();
    if (c.contains_0(o)) {
      iter.remove_3();
      changed = true;
    }
  }
  return changed;
}
;
_.toArray = function toArray(){
  return this.toArray_0(initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, this.size_1(), 5, 1));
}
;
_.toArray_0 = function toArray_0(a){
  var i, it, result, size_0;
  size_0 = this.size_1();
  if (a.length < size_0) {
    a = createFrom(a, size_0);
  }
  result = a;
  it = this.iterator_0();
  for (i = 0; i < size_0; ++i) {
    setCheck(result, i, it.next_1());
  }
  if (a.length > size_0) {
    setCheck(a, size_0, null);
  }
  return a;
}
;
_.toString_0 = function toString_5(){
  var e, e$iterator, joiner;
  joiner = new StringJoiner(', ', '[', ']');
  for (e$iterator = this.iterator_0(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    joiner.add_14(maskUndefined(e) === maskUndefined(this)?'(this Collection)':valueOf_47(e));
  }
  return joiner.toString_0();
}
;
var Ljava_util_AbstractCollection_2_classLit = createForClass('java.util', 'AbstractCollection', 325, Ljava_lang_Object_2_classLit);
function $clinit_List(){
  $clinit_List = emptyMethod;
}

function $sort(this$static, c){
  var a, i;
  a = this$static.toArray();
  sort_4(a, castTo(c, 107));
  for (i = 0; i < a.length; i++) {
    this$static.set_1(i, a[i]);
  }
}

var Ljava_util_List_2_classLit = createForInterface('java.util', 'List');
function $clinit_AbstractList(){
  $clinit_AbstractList = emptyMethod;
  $clinit_AbstractCollection();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_List();
}

function AbstractList(){
  $clinit_AbstractList();
  AbstractCollection.call(this);
  this.$init_77();
}

defineClass(192, 325, {1:1, 47:1, 38:1});
_.$init_77 = function $init_77(){
}
;
_.sort_0 = function sort_0(c){
  $sort(this, c);
}
;
_.add_6 = function add_9(index_0, element){
  throw toJs(new UnsupportedOperationException_0('Add not supported on this list'));
}
;
_.add_5 = function add_10(obj){
  this.add_6(this.size_1(), obj);
  return true;
}
;
_.clear_0 = function clear_4(){
  this.removeRange(0, this.size_1());
}
;
_.equals_0 = function equals_0(o){
  var elem, elem$iterator, elemOther, iterOther, other;
  if (maskUndefined(o) === maskUndefined(this)) {
    return true;
  }
  if (!instanceOf(o, 38)) {
    return false;
  }
  other = castTo(o, 38);
  if (this.size_1() != other.size_1()) {
    return false;
  }
  iterOther = other.iterator_0();
  for (elem$iterator = this.iterator_0(); elem$iterator.hasNext_0();) {
    elem = elem$iterator.next_1();
    elemOther = iterOther.next_1();
    if (!equals_40(elem, elemOther)) {
      return false;
    }
  }
  return true;
}
;
_.hashCode_1 = function hashCode_1(){
  return hashCode_42(this);
}
;
_.indexOf_0 = function indexOf(toFind){
  var i, n;
  for (i = 0 , n = this.size_1(); i < n; ++i) {
    if (equals_40(toFind, this.get_0(i))) {
      return i;
    }
  }
  return -1;
}
;
_.iterator_0 = function iterator_3(){
  return new AbstractList$IteratorImpl(this);
}
;
_.listIterator = function listIterator(){
  return this.listIterator_0(0);
}
;
_.listIterator_0 = function listIterator_0(from){
  return new AbstractList$ListIteratorImpl(this, from);
}
;
_.remove_2 = function remove_5(index_0){
  throw toJs(new UnsupportedOperationException_0('Remove not supported on this list'));
}
;
_.removeRange = function removeRange(fromIndex, endIndex){
  var i, iter;
  iter = this.listIterator_0(fromIndex);
  for (i = fromIndex; i < endIndex; ++i) {
    iter.next_1();
    iter.remove_3();
  }
}
;
_.set_1 = function set_1(index_0, o){
  throw toJs(new UnsupportedOperationException_0('Set not supported on this list'));
}
;
var Ljava_util_AbstractList_2_classLit = createForClass('java.util', 'AbstractList', 192, Ljava_util_AbstractCollection_2_classLit);
function $clinit_Cloneable(){
  $clinit_Cloneable = emptyMethod;
}

var Ljava_lang_Cloneable_2_classLit = createForInterface('java.lang', 'Cloneable');
function $clinit_RandomAccess(){
  $clinit_RandomAccess = emptyMethod;
}

var Ljava_util_RandomAccess_2_classLit = createForInterface('java.util', 'RandomAccess');
function $clinit_ArrayList(){
  $clinit_ArrayList = emptyMethod;
  $clinit_AbstractList();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_List();
}

function ArrayList(){
  $clinit_ArrayList();
  AbstractList.call(this);
  this.$init_78();
}

function ArrayList_0(c){
  $clinit_ArrayList();
  AbstractList.call(this);
  this.$init_78();
  insertTo_0(this.array, 0, c.toArray());
}

defineClass(12, 192, {4:1, 1:1, 12:1, 47:1, 38:1, 158:1}, ArrayList, ArrayList_0);
_.$init_78 = function $init_78(){
  this.array = castToArray(initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, 0, 5, 1));
}
;
_.add_6 = function add_11(index_0, o){
  checkPositionIndex(index_0, this.array.length);
  insertTo(this.array, index_0, o);
}
;
_.add_5 = function add_12(o){
  setCheck(this.array, this.array.length, o);
  return true;
}
;
_.addAll = function addAll_0(c){
  var cArray, len;
  cArray = c.toArray();
  len = cArray.length;
  if (len == 0) {
    return false;
  }
  insertTo_0(this.array, this.array.length, cArray);
  return true;
}
;
_.clear_0 = function clear_5(){
  this.array = castToArray(initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, 0, 5, 1));
}
;
_.contains_0 = function contains_0(o){
  return this.indexOf_0(o) != -1;
}
;
_.get_0 = function get_0(index_0){
  checkElementIndex(index_0, this.array.length);
  return this.array[index_0];
}
;
_.indexOf_0 = function indexOf_0(o){
  return this.indexOf_1(o, 0);
}
;
_.indexOf_1 = function indexOf_1(o, index_0){
  for (; index_0 < this.array.length; ++index_0) {
    if (equals_40(o, this.array[index_0])) {
      return index_0;
    }
  }
  return -1;
}
;
_.isEmpty = function isEmpty_1(){
  return this.array.length == 0;
}
;
_.iterator_0 = function iterator_4(){
  return new ArrayList$1(this);
}
;
_.remove_2 = function remove_6(index_0){
  var previous;
  previous = this.get_0(index_0);
  removeFrom(this.array, index_0, 1);
  return previous;
}
;
_.remove_1 = function remove_7(o){
  var i;
  i = this.indexOf_0(o);
  if (i == -1) {
    return false;
  }
  this.remove_2(i);
  return true;
}
;
_.removeRange = function removeRange_0(fromIndex, endIndex){
  var count;
  checkPositionIndexes(fromIndex, endIndex, this.array.length);
  count = endIndex - fromIndex;
  removeFrom(this.array, fromIndex, count);
}
;
_.set_1 = function set_2(index_0, o){
  var previous;
  previous = this.get_0(index_0);
  setCheck(this.array, index_0, o);
  return previous;
}
;
_.size_1 = function size_1(){
  return this.array.length;
}
;
_.sort_0 = function sort_1(c){
  sort_3(this.array, 0, this.array.length, c);
}
;
_.toArray = function toArray_1(){
  return clone_1(this.array, 0, this.array.length);
}
;
_.toArray_0 = function toArray_2(out){
  var i, size_0;
  size_0 = this.array.length;
  if (out.length < size_0) {
    out = createFrom(out, size_0);
  }
  for (i = 0; i < size_0; ++i) {
    setCheck(out, i, this.array[i]);
  }
  if (out.length > size_0) {
    setCheck(out, size_0, null);
  }
  return out;
}
;
var Ljava_util_ArrayList_2_classLit = createForClass('java.util', 'ArrayList', 12, Ljava_util_AbstractList_2_classLit);
function $clinit_EventPreviewHandlerCollection(){
  $clinit_EventPreviewHandlerCollection = emptyMethod;
  $clinit_ArrayList();
}

function EventPreviewHandlerCollection(){
  $clinit_EventPreviewHandlerCollection();
  ArrayList.call(this);
  this.$init_79();
}

defineClass(522, 12, {4:1, 1:1, 12:1, 47:1, 38:1, 158:1}, EventPreviewHandlerCollection);
_.$init_79 = function $init_79(){
}
;
_.fireEventPreview = function fireEventPreview(p_event){
  var e, it, listener;
  listener = null;
  for (it = this.iterator_0(); it.hasNext_0();) {
    listener = castTo(castTo(it.next_1(), 148), 148);
    try {
      listener.onPreviewNativeEvent(p_event);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        ($clinit_AppRoot() , logger_0).log_2(($clinit_Level() , WARNING), 'the listener ' + toString_46(listener) + ' bug while notify a modefireEventPreview', e);
      }
       else 
        throw toJs($e0);
    }
  }
}
;
var Lcom_fullmetalgalaxy_client_event_EventPreviewHandlerCollection_2_classLit = createForClass('com.fullmetalgalaxy.client.event', 'EventPreviewHandlerCollection', 522, Ljava_util_ArrayList_2_classLit);
function $clinit_Event(){
  $clinit_Event = emptyMethod;
  $clinit_Object();
}

function Event_0(){
  $clinit_Event();
  Object_0.call(this);
  this.$init_80();
}

defineClass(46, 1, {1:1});
_.$init_80 = function $init_80(){
}
;
_.getSource = function getSource(){
  return this.source;
}
;
_.setSource = function setSource(source){
  this.source = source;
}
;
_.toString_0 = function toString_6(){
  return 'An event type';
}
;
var Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared', 'Event', 46, Ljava_lang_Object_2_classLit);
function $clinit_GwtEvent(){
  $clinit_GwtEvent = emptyMethod;
  $clinit_Event();
}

function GwtEvent(){
  $clinit_GwtEvent();
  Event_0.call(this);
  this.$init_81();
}

defineClass(110, 46, {46:1, 1:1});
_.$init_81 = function $init_81(){
}
;
_.dispatch = function dispatch(handler){
  this.dispatch_0(castTo(handler, 13));
}
;
_.getAssociatedType = function getAssociatedType(){
  return this.getAssociatedType_0();
}
;
_.assertLive = function assertLive(){
  if (!!this.dead) {
    debugger;
    throw toJs(makeAssertionError_Object('This event has already finished being processed by its original handler manager, so you can no longer access it'));
  }
}
;
_.getSource = function getSource_0(){
  this.assertLive();
  return getClassPrototype(46).getSource.call(this);
}
;
_.isLive = function isLive(){
  return !this.dead;
}
;
_.kill = function kill(){
  this.dead = true;
  this.setSource(null);
}
;
_.overrideSource = function overrideSource(source){
  getClassPrototype(46).setSource.call(this, source);
}
;
_.revive = function revive(){
  this.dead = false;
  this.setSource(null);
}
;
_.dead = false;
var Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared', 'GwtEvent', 110, Lcom_google_web_bindery_event_shared_Event_2_classLit);
function $clinit_GameActionEvent(){
  $clinit_GameActionEvent = emptyMethod;
  $clinit_GwtEvent();
  TYPE = new GwtEvent$Type;
}

function GameActionEvent(p_modelSender){
  $clinit_GameActionEvent();
  GwtEvent.call(this);
  this.$init_82();
  this.m_modelSender = p_modelSender;
}

function GameActionEvent_0(p_modelSender, p_modelUpdateProcessor){
  $clinit_GameActionEvent();
  GwtEvent.call(this);
  this.$init_82();
  this.m_modelSender = p_modelSender;
  this.m_modelUpdateProcessor = p_modelUpdateProcessor;
}

defineClass(271, 110, {46:1, 1:1}, GameActionEvent, GameActionEvent_0);
_.$init_82 = function $init_82(){
  this.m_modelSender = null;
  this.m_modelUpdateProcessor = null;
}
;
_.dispatch_0 = function dispatch_1(p_handler){
  this.dispatch_1(castTo(p_handler, 1057));
}
;
_.getAssociatedType = function getAssociatedType_1(){
  return this.getAssociatedType_0();
}
;
_.dispatch_1 = function dispatch_0(p_handler){
  p_handler.onGameEvent(this.m_modelSender, this.m_modelUpdateProcessor);
}
;
_.getAssociatedType_0 = function getAssociatedType_0(){
  return TYPE;
}
;
var TYPE;
var Lcom_fullmetalgalaxy_client_event_GameActionEvent_2_classLit = createForClass('com.fullmetalgalaxy.client.event', 'GameActionEvent', 271, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_GameActionEvent$Handler(){
  $clinit_GameActionEvent$Handler = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_event_GameActionEvent$Handler_2_classLit = createForInterface('com.fullmetalgalaxy.client.event', 'GameActionEvent/Handler');
function $clinit_GameLoadEvent(){
  $clinit_GameLoadEvent = emptyMethod;
  $clinit_GwtEvent();
  TYPE_0 = new GwtEvent$Type;
}

function GameLoadEvent(p_game){
  $clinit_GameLoadEvent();
  GwtEvent.call(this);
  this.$init_83();
  this.m_game = p_game;
}

defineClass(675, 110, {46:1, 1:1}, GameLoadEvent);
_.$init_83 = function $init_83(){
  this.m_game = null;
}
;
_.dispatch_0 = function dispatch_3(p_handler){
  this.dispatch_2(castTo(p_handler, 486));
}
;
_.getAssociatedType = function getAssociatedType_3(){
  return this.getAssociatedType_0();
}
;
_.dispatch_2 = function dispatch_2(p_handler){
  if (isNotNull(this.m_game)) {
    p_handler.onGameLoad(this.m_game);
  }
}
;
_.getAssociatedType_0 = function getAssociatedType_2(){
  return TYPE_0;
}
;
var TYPE_0;
var Lcom_fullmetalgalaxy_client_event_GameLoadEvent_2_classLit = createForClass('com.fullmetalgalaxy.client.event', 'GameLoadEvent', 675, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_GameLoadEvent$Handler(){
  $clinit_GameLoadEvent$Handler = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_event_GameLoadEvent$Handler_2_classLit = createForInterface('com.fullmetalgalaxy.client.event', 'GameLoadEvent/Handler');
function $clinit_ModelUpdateEvent(){
  $clinit_ModelUpdateEvent = emptyMethod;
  $clinit_GwtEvent();
  TYPE_1 = new GwtEvent$Type;
}

function ModelUpdateEvent(p_modelSender){
  $clinit_ModelUpdateEvent();
  GwtEvent.call(this);
  this.$init_84();
  this.m_modelSender = p_modelSender;
}

defineClass(42, 110, {46:1, 1:1}, ModelUpdateEvent);
_.$init_84 = function $init_84(){
  this.m_modelSender = null;
}
;
_.dispatch_0 = function dispatch_5(p_handler){
  this.dispatch_3(castTo(p_handler, 115));
}
;
_.getAssociatedType = function getAssociatedType_5(){
  return this.getAssociatedType_0();
}
;
_.dispatch_3 = function dispatch_4(p_handler){
  p_handler.onModelUpdate(this.m_modelSender);
}
;
_.getAssociatedType_0 = function getAssociatedType_4(){
  return TYPE_1;
}
;
var TYPE_1;
var Lcom_fullmetalgalaxy_client_event_ModelUpdateEvent_2_classLit = createForClass('com.fullmetalgalaxy.client.event', 'ModelUpdateEvent', 42, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_GameEngine(){
  $clinit_GameEngine = emptyMethod;
  $clinit_Object();
  logger_1 = getLogger_0('GameEngine');
  EVENTS_POLLING_PERIOD_MS = 1000 * 30;
}

function GameEngine(){
  $clinit_GameEngine();
  Object_0.call(this);
  this.$init_85();
  s_ModelFmpMain = this;
}

function coordinateSystem_0(){
  $clinit_GameEngine();
  return model_0().getGame().getCoordinateSystem();
}

function game_0(){
  $clinit_GameEngine();
  return model_0().getGame();
}

function model_0(){
  $clinit_GameEngine();
  return s_ModelFmpMain;
}

defineClass(510, 1, {251:1, 13:1, 1:1}, GameEngine);
_.$init_85 = function $init_85(){
  this.m_game = new Game;
  this.m_generator = new GameGenerator(this.m_game);
  this.m_actionBuilder = new EventsPlayBuilder;
  this.m_isGridDisplayed = false;
  this.m_isFireCoverDisplayed = false;
  this.m_zoomDisplayed = new EnuZoom(1);
  this.m_isAtmosphereDisplayed = true;
  this.m_isCustomMapDisplayed = false;
  this.m_isTimeLineMode = false;
  this.m_currentActionIndex = 0;
  this.m_lastTurnPlayed = 0;
  this.m_successiveRpcErrorCount = 0;
  this.loadGameCallback = new GameEngine$1(this);
  this.m_eventsPollingTimer = new GameEngine$2(this);
  this.m_lastModelUpdateClientID = 0;
  this.m_callbackEvents = new GameEngine$3(this);
  this.pendingUpdates = new LinkedList;
  this.m_isAnimationPlaying = false;
  this.m_animationTimer = new GameEngine$4(this);
}
;
_.applyHMIFlags = function applyHMIFlags(p_flags){
  var i;
  if (jsEquals(p_flags, null)) {
    return;
  }
  for (i = 0; i < length__I__devirtual$(p_flags); i++) {
    switch (charAt_I_C__devirtual$(p_flags, i)) {
      case 71:
        this.setGridDisplayed(true);
        break;
      case 103:
        this.setGridDisplayed(false);
        break;
      case 65:
        this.setAtmosphereDisplayed(true);
        break;
      case 97:
        this.setAtmosphereDisplayed(false);
        break;
      case 90:
        this.setZoomDisplayed(1);
        break;
      case 122:
        this.setZoomDisplayed(0);
        break;
      case 70:
        this.setFireCoverDisplayed(true);
        break;
      case 102:
        this.setFireCoverDisplayed(false);
        break;
      default:}
  }
}
;
_.backupHMIFlags = function backupHMIFlags(){
  setCookie('HMIFlags', this.buildHMIFlags(), new Date_1({l:4194303, m:4194303, h:524287}));
}
;
_.buildHMIFlags = function buildHMIFlags(){
  var flags;
  flags = new StringBuffer;
  flags.append_1(this.isGridDisplayed()?71:103);
  flags.append_1(this.isAtmosphereDisplayed()?65:97);
  flags.append_1(this.getZoomDisplayed().getValue_1() == 1?90:122);
  flags.append_1(this.isFireCoverDisplayed()?70:102);
  return flags.toString_0();
}
;
_.canCancelAction = function canCancelAction(){
  var event_0, i;
  if (jsEquals(this.getGame().getGameType(), ($clinit_GameType() , Puzzle_0))) {
    return true;
  }
  if (isNull(this.getMyRegistration())) {
    return false;
  }
  if (jsEquals(this.getGame().getGameType(), ($clinit_GameType() , Initiation)) && eq(this.getMyRegistration().getAccount_0().getId(), this.getGame().getAccountCreator().getId())) {
    return true;
  }
  if (this.m_lastTurnPlayed != this.getGame().getCurrentTimeStep()) {
    return false;
  }
  if (this.getGame().isFinished()) {
    return false;
  }
  if (jsEquals(this.getGame().getConfigGameTime(), ($clinit_ConfigGameTime() , StandardAsynch))) {
    event_0 = null;
    for (i = this.m_currentActionIndex; i < this.getGame().getLogs().size_1(); i++) {
      event_0 = castTo(this.getGame().getLogs().get_0(i), 20);
      if (isNull(event_0) || !instanceOf(event_0, 17) || neq(castTo(event_0, 17).getAccountId(), instance_1().getMyAccount().getId())) {
        return false;
      }
    }
    return true;
  }
  if (!this.getGame().getConfigGameTime().isParallel()) {
    event_0 = null;
    for (i = this.m_currentActionIndex; i < this.getGame().getLogs().size_1(); i++) {
      event_0 = castTo(this.getGame().getLogs().get_0(i), 20);
      if (isNull(event_0) || !instanceOf(event_0, 33)) {
        return false;
      }
      if (instanceOf(event_0, 89)) {
        return false;
      }
      if (neq(castTo(event_0, 33).getAccountId(), instance_1().getMyAccount().getId())) {
        return false;
      }
    }
    return true;
  }
  return false;
}
;
_.getActionBuilder = function getActionBuilder(){
  return this.m_actionBuilder;
}
;
_.getActionList = function getActionList(){
  return this.getActionBuilder().getActionList();
}
;
_.getCurrentAction = function getCurrentAction(){
  if (!model_0().isTimeLineMode()) {
    return this.getGame().getLastGameLog();
  }
  if (this.m_currentActionIndex < this.getGame().getLogs().size_1()) {
    return castTo(this.getGame().getLogs().get_0(this.m_currentActionIndex), 20);
  }
  if (isNotNull(this.getMyRegistration()) && this.m_currentActionIndex < this.getGame().getLogs().size_1() + this.getMyRegistration().getTeam_1(this.getGame()).getMyEvents().size_1()) {
    return castTo(this.getMyRegistration().getTeam_1(this.getGame()).getMyEvents().get_0(this.m_currentActionIndex - this.getGame().getLogs().size_1()), 20);
  }
  return null;
}
;
_.getCurrentActionIndex = function getCurrentActionIndex(){
  return this.m_currentActionIndex;
}
;
_.getGame = function getGame(){
  return this.m_game;
}
;
_.getLastTurnPlayed = function getLastTurnPlayed(){
  if (!this.isTimeLineMode()) {
    return this.getGame().getCurrentTimeStep();
  }
  return this.m_lastTurnPlayed;
}
;
_.getMyRegistration = function getMyRegistration(){
  var it, registration;
  if (jsEquals(this.getGame().getGameType(), ($clinit_GameType() , Puzzle_0))) {
    return this.getGame().getRegistration_0(castTo(this.getGame().getCurrentPlayerIds().get_0(0), 66).longValue());
  }
  if (!this.isLogged()) {
    return null;
  }
  for (it = this.getGame().getSetRegistration().iterator_0(); it.hasNext_0();) {
    registration = castTo(castTo(it.next_1(), 51), 51);
    if (registration.haveAccount() && eq(registration.getAccount_0().getId(), instance_1().getMyAccount().getId())) {
      return registration;
    }
  }
  return null;
}
;
_.getZoomDisplayed = function getZoomDisplayed(){
  return this.m_zoomDisplayed;
}
;
_.isAnimationPlaying = function isAnimationPlaying(){
  return this.m_isAnimationPlaying;
}
;
_.isAtmosphereDisplayed = function isAtmosphereDisplayed(){
  return this.m_isAtmosphereDisplayed;
}
;
_.isCustomMapDisplayed = function isCustomMapDisplayed(){
  return this.m_isCustomMapDisplayed;
}
;
_.isFireCoverDisplayed = function isFireCoverDisplayed(){
  return this.m_isFireCoverDisplayed;
}
;
_.isGridDisplayed = function isGridDisplayed(){
  return this.m_isGridDisplayed;
}
;
_.isJoined = function isJoined(){
  return isNotNull(this.getMyRegistration());
}
;
_.isLogged = function isLogged(){
  return neq(instance_1().getMyAccount().getId(), 0);
}
;
_.isTimeLineMode = function isTimeLineMode(){
  return this.m_isTimeLineMode;
}
;
_.loadAdditionalEvents = function loadAdditionalEvents(){
  var callbackLoadAdditionalEvents;
  if (this.getGame().getAdditionalEventCount() > 0) {
    callbackLoadAdditionalEvents = new GameEngine$5(this);
    instance_1().startLoading();
    getRpcService().getAdditionalGameLog(this.getGame().getId(), callbackLoadAdditionalEvents);
  }
}
;
_.onChannelMessage = function onChannelMessage_4(p_message){
  if (instanceOf(p_message, 138)) {
    this.receiveModelUpdate(castTo(p_message, 138));
  }
}
;
_.onModuleLoad = function onModuleLoad_3(){
  var e, factory, gameId, object, reader, strModel;
  instance_1().startLoading();
  this.restoreHMIFlags();
  strModel = getJSString('fmp_model');
  if (jsNotEquals(strModel, null)) {
    try {
      factory = castTo(new GameServices_Proxy, 362);
      reader = factory.createStreamReader(strModel);
      object = reader.readObject();
      if (instanceOf(object, 193)) {
        this.loadGameCallback.onSuccess(castTo(object, 193));
      }
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 95)) {
        e = $e0;
        ($clinit_AppRoot() , logger_0).log_1(($clinit_Level() , WARNING), e.getMessage());
      }
       else 
        throw toJs($e0);
    }
  }
  if (instance_1().isLoading()) {
    gameId = getUrlParameter('id');
    if (jsNotEquals(gameId, null)) {
      getRpcService().getModelFmpInit(gameId, this.loadGameCallback);
    }
     else {
      instance_1().stopLoading();
    }
  }
}
;
_.receiveModelUpdate = function receiveModelUpdate(p_result){
  if (isNull(p_result) || isNull(this.getGame())) {
    return;
  }
  this.pendingUpdates.add_5(new GameEngine$ProcessModelUpdate(this, p_result));
  if (this.pendingUpdates.size_1() == 1) {
    castTo(this.pendingUpdates.get_0(0), 207).start_1();
  }
}
;
_.restoreHMIFlags = function restoreHMIFlags(){
  this.applyHMIFlags(getCookie('HMIFlags'));
}
;
_.runCurrentAction = function runCurrentAction(){
  var ex, modelUpdate, p_caught;
  if (this.m_lastModelUpdateClientID != 0) {
    alert_0("Une action a d\xE9j\xE0 \xE9t\xE9 envoy\xE9 au serveur... sans r\xE9ponse pour l'instant");
    return;
  }
  instance_1().startLoading();
  this.m_lastModelUpdateClientID = nextInt();
  modelUpdate = new ModelFmpUpdate_0(this.getGame());
  modelUpdate.setClientID(this.m_lastModelUpdateClientID);
  try {
    if (!model_0().isJoined()) {
      throw toJs(new RpcFmpException_0("you didn't join this game."));
    }
    this.getActionBuilder().unexec_0();
    if (jsEquals(this.getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(this.getGame().getGameType(), ($clinit_GameType() , Initiation))) {
      instance_1().scheduleCheckChannelTimer();
      modelUpdate.setFromPageId(instance_1().getPageId());
      modelUpdate.setFromPseudo(instance_1().getMyAccount().getPseudo());
      modelUpdate.setGameEvents(new ArrayList);
      modelUpdate.getGameEvents().addAll(this.getActionBuilder().getActionList());
      getRpcService().runModelUpdate(modelUpdate, this.m_callbackEvents);
    }
     else {
      runAction(this.getActionBuilder().getActionList(), this.m_callbackEvents, this);
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 10)) {
      ex = $e0;
      alert_0(ex.getLocalizedMessage());
      this.m_lastModelUpdateClientID = 0;
      instance_1().stopLoading();
      this.getActionBuilder().cancel();
    }
     else if (instanceOf($e0, 24)) {
      p_caught = $e0;
      alert_0('Unknown error on client: ' + p_caught);
      this.m_lastModelUpdateClientID = 0;
      instance_1().stopLoading();
      this.getActionBuilder().cancel();
      getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
    }
     else 
      throw toJs($e0);
  }
}
;
_.runSingleAction = function runSingleAction(p_action){
  var ex, modelUpdate, p_caught;
  if (this.m_lastModelUpdateClientID != 0) {
    alert_0('An action is already send to server... wait for server response.');
    return;
  }
  instance_1().startLoading();
  this.m_lastModelUpdateClientID = nextInt();
  modelUpdate = new ModelFmpUpdate_0(this.getGame());
  modelUpdate.setClientID(this.m_lastModelUpdateClientID);
  try {
    if (!model_0().isLogged() && (jsEquals(this.getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(this.getGame().getGameType(), ($clinit_GameType() , Initiation)))) {
      throw toJs(new RpcFmpException_0('You must be logged to do this action'));
    }
    if (jsEquals(this.getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(this.getGame().getGameType(), ($clinit_GameType() , Initiation))) {
      instance_1().scheduleCheckChannelTimer();
      modelUpdate.setFromPageId(instance_1().getPageId());
      modelUpdate.setFromPseudo(instance_1().getMyAccount().getPseudo());
      modelUpdate.setGameEvents(new ArrayList);
      modelUpdate.getGameEvents().add_5(p_action);
      getRpcService().runModelUpdate(modelUpdate, this.m_callbackEvents);
    }
     else {
      runEvent(p_action, this.m_callbackEvents, this);
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 10)) {
      ex = $e0;
      alert_0(ex.getLocalizedMessage());
      this.m_lastModelUpdateClientID = 0;
      instance_1().stopLoading();
      this.getActionBuilder().cancel();
      getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
    }
     else if (instanceOf($e0, 24)) {
      p_caught = $e0;
      alert_0('Unknown error on client: ' + p_caught);
      this.m_lastModelUpdateClientID = 0;
      instance_1().stopLoading();
      this.getActionBuilder().cancel();
    }
     else 
      throw toJs($e0);
  }
}
;
_.setAtmosphereDisplayed = function setAtmosphereDisplayed(p_isAtmosphereDisplayed){
  this.m_isAtmosphereDisplayed = p_isAtmosphereDisplayed;
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  this.backupHMIFlags();
}
;
_.setCustomMapDisplayed = function setCustomMapDisplayed(p_isCustomMapDisplayed){
  this.m_isCustomMapDisplayed = p_isCustomMapDisplayed;
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.setFireCoverDisplayed = function setFireCoverDisplayed(p_isFireCoverDisplayed){
  this.m_isFireCoverDisplayed = p_isFireCoverDisplayed;
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  this.backupHMIFlags();
}
;
_.setGridDisplayed = function setGridDisplayed(p_isGridDisplayed){
  this.m_isGridDisplayed = p_isGridDisplayed;
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  this.backupHMIFlags();
}
;
_.setTimeLineMode = function setTimeLineMode(p_isTimeLineMode){
  this.getActionBuilder().clear_0();
  if (this.m_isTimeLineMode == p_isTimeLineMode) {
    return;
  }
  this.getActionBuilder().setReadOnly(p_isTimeLineMode);
  this.m_isTimeLineMode = p_isTimeLineMode;
  this.m_lastTurnPlayed = this.getGame().getCurrentTimeStep();
  if (!p_isTimeLineMode) {
    this.timePlay(99999);
  }
  this.m_currentActionIndex = this.getGame().getLogs().size_1();
  if (isNotNull(this.getMyRegistration())) {
    this.m_currentActionIndex += this.getMyRegistration().getTeam_1(this.getGame()).getMyEvents().size_1();
  }
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.setZoomDisplayed = function setZoomDisplayed(p_zoomValueDisplayed){
  this.setZoomDisplayed_0(new EnuZoom(p_zoomValueDisplayed));
}
;
_.setZoomDisplayed_0 = function setZoomDisplayed_0(p_zoomDisplayed){
  this.m_zoomDisplayed = p_zoomDisplayed;
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  this.backupHMIFlags();
}
;
_.startPlayAnimation = function startPlayAnimation(){
  if (this.isTimeLineMode()) {
    this.m_isAnimationPlaying = true;
    this.m_animationTimer.schedule(1);
  }
}
;
_.stopPlayAnimation = function stopPlayAnimation(){
  this.m_isAnimationPlaying = false;
  this.m_animationTimer.cancel();
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.timeBack = function timeBack(p_actionCount){
  var action, e, logs;
  if (p_actionCount > this.m_currentActionIndex) {
    model_0().loadAdditionalEvents();
    return;
  }
  logs = this.getGame().getLogs();
  while (this.m_currentActionIndex > 0 && p_actionCount > 0) {
    this.m_currentActionIndex--;
    action = null;
    if (this.m_currentActionIndex >= logs.size_1() && isNotNull(this.getMyRegistration())) {
      action = castTo(this.getMyRegistration().getTeam_1(this.getGame()).getMyEvents().get_0(this.m_currentActionIndex - logs.size_1()), 20);
    }
     else {
      action = castTo(logs.get_0(this.m_currentActionIndex), 20);
    }
    if (isNotNull(action) && !instanceOf(action, 89) && !instanceOf(action, 157) && !instanceOf(action, 140)) {
      try {
        action.unexec(this.getGame());
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 10)) {
          e = $e0;
          logError_0('error ', e);
          alert_0('unexpected error : ' + e);
          getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
          return;
        }
         else 
          throw toJs($e0);
      }
      if (!action.isAuto()) {
        p_actionCount--;
      }
      action = null;
      if (this.m_currentActionIndex >= logs.size_1() + 1 && isNotNull(this.getMyRegistration())) {
        action = castTo(this.getMyRegistration().getTeam_1(this.getGame()).getMyEvents().get_0(this.m_currentActionIndex - logs.size_1() - 1), 20);
      }
       else if (this.m_currentActionIndex > 0) {
        action = castTo(logs.get_0(this.m_currentActionIndex - 1), 20);
      }
      if (isNotNull(action) && jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
        p_actionCount++;
      }
    }
  }
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.timePlay = function timePlay(p_actionCount){
  var action, e, execAnimation, logs, totalEventCount;
  logs = this.getGame().getLogs();
  execAnimation = p_actionCount == 1;
  totalEventCount = logs.size_1();
  if (isNotNull(model_0().getMyRegistration())) {
    totalEventCount += model_0().getMyRegistration().getTeam_1(this.getGame()).getMyEvents().size_1();
  }
  while (this.m_currentActionIndex < totalEventCount && p_actionCount > 0) {
    action = null;
    if (this.m_currentActionIndex >= logs.size_1() && isNotNull(this.getMyRegistration())) {
      action = castTo(this.getMyRegistration().getTeam_1(this.getGame()).getMyEvents().get_0(this.m_currentActionIndex - logs.size_1()), 20);
    }
     else {
      action = castTo(logs.get_0(this.m_currentActionIndex), 20);
    }
    if (!instanceOf(action, 89) && !instanceOf(action, 157) && !instanceOf(action, 140)) {
      try {
        action.exec_0(this.getGame());
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 10)) {
          e = $e0;
          logger_1.severe(e.getMessage());
          alert_0('unexpected error : ' + e);
          return;
        }
         else 
          throw toJs($e0);
      }
      if (!action.isAuto() && jsNotEquals(action.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
        p_actionCount--;
      }
      if (this.m_currentActionIndex < logs.size_1() - 1 && castTo(logs.get_0(this.m_currentActionIndex + 1), 20).isAuto()) {
        p_actionCount++;
      }
      if (!instanceOf(action, 137) && execAnimation) {
        getEventBus().fireEvent(new GameActionEvent(action));
      }
    }
    this.m_currentActionIndex++;
  }
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.timePlay_0 = function timePlay_0(p_event){
  var currentEvent, e, timeForward;
  if (!this.isTimeLineMode() || isNull(p_event) || neq(p_event.getIdGame(), this.getGame().getId())) {
    logger_1.warning('time play command but wrong mode or wrong params');
    return;
  }
  currentEvent = this.getCurrentAction();
  timeForward = false;
  if (isNotNull(currentEvent) && lt(currentEvent.getLastUpdate().getTime_1(), p_event.getLastUpdate().getTime_1())) {
    timeForward = true;
  }
  try {
    while (jsNotEquals(currentEvent, p_event)) {
      if (timeForward) {
        currentEvent.exec_0(this.getGame());
        this.m_currentActionIndex++;
        currentEvent = this.getCurrentAction();
      }
       else {
        this.m_currentActionIndex--;
        currentEvent = this.getCurrentAction();
        if (!instanceOf(currentEvent, 89) && !instanceOf(currentEvent, 157) && !instanceOf(currentEvent, 140)) {
          currentEvent.unexec(this.getGame());
        }
      }
      if (this.m_currentActionIndex < 0 || this.m_currentActionIndex >= this.getGame().getLogs().size_1()) {
        logger_1.severe("time play command but given event wasn't found");
        getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
        return;
      }
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
      logger_1.severe(e.getMessage());
      alert_0('unexpected error : ' + e);
    }
     else 
      throw toJs($e0);
  }
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.m_currentActionIndex = 0;
_.m_isAnimationPlaying = false;
_.m_isAtmosphereDisplayed = false;
_.m_isCustomMapDisplayed = false;
_.m_isFireCoverDisplayed = false;
_.m_isGridDisplayed = false;
_.m_isTimeLineMode = false;
_.m_lastModelUpdateClientID = 0;
_.m_lastTurnPlayed = 0;
_.m_successiveRpcErrorCount = 0;
var EVENTS_POLLING_PERIOD_MS = 0, logger_1, s_ModelFmpMain = null;
var Lcom_fullmetalgalaxy_client_game_GameEngine_2_classLit = createForClass('com.fullmetalgalaxy.client.game', 'GameEngine', 510, Ljava_lang_Object_2_classLit);
function $clinit_GameEngine$1(){
  $clinit_GameEngine$1 = emptyMethod;
  $clinit_FmpCallback();
}

function GameEngine$1(this$0){
  $clinit_GameEngine$1();
  this.this$01 = this$0;
  FmpCallback.call(this);
  this.$init_86();
}

defineClass(593, 113, {1:1}, GameEngine$1);
_.$init_86 = function $init_86(){
}
;
_.onSuccess = function onSuccess_16(p_result){
  this.onSuccess_3(castTo(p_result, 193));
}
;
_.onSuccess_3 = function onSuccess_15(p_result){
  var e, event_0, event$iterator, model;
  getClassPrototype(113).onSuccess.call(this, p_result);
  model = castTo(p_result, 193);
  if (isNull(model)) {
    alert_0(($clinit_MAppBoard() , s_messages_0).unknownGame());
    return;
  }
   else {
    if (isNotNull(model.getPresenceRoom())) {
    }
    this.this$01.m_game = model.getGame();
    if (isNotNull(this.this$01.m_generator)) {
      this.this$01.m_generator.setGame(this.this$01.m_game);
    }
    this.this$01.getActionBuilder().setGame(this.this$01.getGame());
    this.this$01.getActionBuilder().setMyAccount(instance_1().getMyAccount());
    try {
      if (isNotNull(this.this$01.getMyRegistration())) {
        for (event$iterator = this.this$01.getMyRegistration().getTeam_1(this.this$01.getGame()).getMyEvents().iterator_0(); event$iterator.hasNext_0();) {
          event_0 = castTo(event$iterator.next_1(), 20);
          event_0.exec_0(this.this$01.getGame());
        }
      }
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 24)) {
        e = $e0;
        logError_0('error ', e);
        alert_0('unexpected error : ' + e);
      }
       else 
        throw toJs($e0);
    }
    getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
    getEventBus().fireEvent(new GameLoadEvent(this.this$01.m_game));
    if (jsEquals(this.this$01.m_game.getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(this.this$01.m_game.getGameType(), ($clinit_GameType() , Initiation))) {
      instance_1().addChannelMessageEventHandler(Lcom_fullmetalgalaxy_model_ModelFmpUpdate_2_classLit, model_0());
      this.this$01.m_eventsPollingTimer.scheduleRepeating(30000);
    }
     else {
      loadGame(model_0());
    }
    instance_1().stopLoading();
    if (jsEquals(this.this$01.m_game.getStatus(), ($clinit_GameStatus() , Open)) && isNotNull(instance_1().getMyAccount()) && eq(instance_1().getMyAccount().getId(), this.this$01.m_game.getAccountCreator().getId()) && isNull(this.this$01.getMyRegistration())) {
      instance_5().show();
      instance_5().center();
    }
  }
}
;
var Lcom_fullmetalgalaxy_client_game_GameEngine$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game', 'GameEngine/1', 593, Lcom_fullmetalgalaxy_client_FmpCallback_2_classLit);
function $clinit_GameEngine$2(){
  $clinit_GameEngine$2 = emptyMethod;
  $clinit_Timer();
}

function GameEngine$2(this$0){
  $clinit_GameEngine$2();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_87();
}

defineClass(594, 93, {1:1}, GameEngine$2);
_.$init_87 = function $init_87(){
}
;
_.run = function run_3(){
  if (!instance_1().isChannelConnected() && this.this$01.m_lastModelUpdateClientID == 0 && (jsEquals(this.this$01.getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(this.this$01.getGame().getGameType(), ($clinit_GameType() , Initiation)))) {
    getRpcService().getUpdate(this.this$01.getGame().getId(), this.this$01.getGame().getVersion(), this.this$01.m_callbackEvents);
  }
}
;
var Lcom_fullmetalgalaxy_client_game_GameEngine$2_2_classLit = createForClass('com.fullmetalgalaxy.client.game', 'GameEngine/2', 594, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_GameEngine$3(){
  $clinit_GameEngine$3 = emptyMethod;
  $clinit_FmpCallback();
}

function GameEngine$3(this$0){
  $clinit_GameEngine$3();
  this.this$01 = this$0;
  FmpCallback.call(this);
  this.$init_88();
}

defineClass(595, 113, {1:1}, GameEngine$3);
_.$init_88 = function $init_88(){
}
;
_.onSuccess = function onSuccess_18(p_result){
  this.onSuccess_5(castTo(p_result, 138));
}
;
_.onFailure = function onFailure_7(p_caught){
  this.this$01.m_successiveRpcErrorCount++;
  this.this$01.m_lastModelUpdateClientID = 0;
  instance_1().stopLoading();
  this.this$01.getActionBuilder().cancel();
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  if (this.this$01.m_successiveRpcErrorCount <= 2 && instance_1().isChannelConnected()) {
    if (instanceOf(p_caught, 10)) {
      ($clinit_MAppMessagesStack() , s_instance_1).showWarning(castTo(p_caught, 10).getLocalizedMessage());
    }
     else if (jsNotEquals(getUrlParameter('debug'), null)) {
      ($clinit_MAppMessagesStack() , s_instance_1).showWarning(p_caught.getMessage());
    }
  }
   else {
    reload();
  }
}
;
_.onSuccess_5 = function onSuccess_17(p_result){
  getClassPrototype(113).onSuccess.call(this, p_result);
  this.this$01.m_successiveRpcErrorCount = 0;
  this.this$01.m_lastModelUpdateClientID = 0;
  instance_1().stopLoading();
  this.this$01.getActionBuilder().clear_0();
  fireEventChannelMessage(p_result);
}
;
var Lcom_fullmetalgalaxy_client_game_GameEngine$3_2_classLit = createForClass('com.fullmetalgalaxy.client.game', 'GameEngine/3', 595, Lcom_fullmetalgalaxy_client_FmpCallback_2_classLit);
function $clinit_GameEngine$4(){
  $clinit_GameEngine$4 = emptyMethod;
  $clinit_Timer();
}

function GameEngine$4(this$0){
  $clinit_GameEngine$4();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_89();
}

defineClass(596, 93, {1:1}, GameEngine$4);
_.$init_89 = function $init_89(){
}
;
_.run = function run_4(){
  var action, anim, e;
  if (!this.this$01.isTimeLineMode()) {
    this.this$01.stopPlayAnimation();
    return;
  }
  action = this.this$01.getCurrentAction();
  if (isNull(action)) {
    this.this$01.stopPlayAnimation();
    return;
  }
  if (!instanceOf(action, 89) && !instanceOf(action, 157) && !instanceOf(action, 140)) {
    try {
      action.exec_0(this.this$01.getGame());
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 10)) {
        e = $e0;
        ($clinit_GameEngine() , logger_1).severe(e.getMessage());
        alert_0('unexpected error : ' + e);
        this.this$01.stopPlayAnimation();
        return;
      }
       else 
        throw toJs($e0);
    }
    if (!instanceOf(action, 137)) {
      getEventBus().fireEvent(new GameActionEvent(action));
    }
  }
  this.this$01.m_currentActionIndex++;
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  anim = createAnimEvent(null, action);
  if (isNotNull(anim)) {
    this.this$01.m_animationTimer.schedule(anim.getDurration());
  }
   else {
    this.this$01.m_animationTimer.schedule(1);
  }
}
;
var Lcom_fullmetalgalaxy_client_game_GameEngine$4_2_classLit = createForClass('com.fullmetalgalaxy.client.game', 'GameEngine/4', 596, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_GameEngine$5(){
  $clinit_GameEngine$5 = emptyMethod;
  $clinit_FmpCallback();
}

function GameEngine$5(this$0){
  $clinit_GameEngine$5();
  this.this$01 = this$0;
  FmpCallback.call(this);
  this.$init_90();
}

defineClass(597, 113, {1:1}, GameEngine$5);
_.$init_90 = function $init_90(){
}
;
_.onSuccess = function onSuccess_20(p_gameLog){
  this.onSuccess_6(castTo(p_gameLog, 345));
}
;
_.onSuccess_6 = function onSuccess_19(p_gameLog){
  instance_1().stopLoading();
  this.this$01.getGame().setAdditionalEventCount(this.this$01.getGame().getAdditionalEventCount() - p_gameLog.getLog().size_1());
  this.this$01.m_currentActionIndex += p_gameLog.getLog().size_1();
  p_gameLog.getLog().addAll(this.this$01.getGame().getLogs());
  this.this$01.getGame().setLogs(p_gameLog.getLog());
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
var Lcom_fullmetalgalaxy_client_game_GameEngine$5_2_classLit = createForClass('com.fullmetalgalaxy.client.game', 'GameEngine/5', 597, Lcom_fullmetalgalaxy_client_FmpCallback_2_classLit);
function $clinit_GameEngine$ProcessModelUpdate(){
  $clinit_GameEngine$ProcessModelUpdate = emptyMethod;
  $clinit_Object();
}

function GameEngine$ProcessModelUpdate(this$0, p_modelUpdate){
  $clinit_GameEngine$ProcessModelUpdate();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_91();
  this.m_modelUpdate = p_modelUpdate;
}

defineClass(207, 1, {207:1, 1:1}, GameEngine$ProcessModelUpdate);
_.$init_91 = function $init_91(){
  this.index_0 = 0;
  this.m_modelUpdate = null;
  this.isNewPlayerTurn = false;
}
;
_.finish = function finish(){
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  if (this.isNewPlayerTurn && !isPageVisible() && isNotNull(this.this$01.getMyRegistration()) && (this.this$01.getGame().getCurrentPlayerIds().size_1() == 0 || this.this$01.getGame().getCurrentPlayerIds().contains_0(valueOf_40(this.this$01.getMyRegistration().getId())))) {
    this.isNewPlayerTurn = false;
    alert_0(($clinit_MAppBoard() , s_messages_0).yourTurnToPlay());
  }
  if (!this.this$01.pendingUpdates.isEmpty() && maskUndefined(this.this$01.pendingUpdates.get_0(0)) === maskUndefined(this)) {
    this.this$01.pendingUpdates.remove_2(0);
  }
  if (!this.this$01.pendingUpdates.isEmpty()) {
    castTo(this.this$01.pendingUpdates.get_0(0), 207).start_1();
  }
}
;
_.nextEvent = function nextEvent(){
  var e, event_0, i, myTeam;
  if (this.index_0 >= this.m_modelUpdate.getGameEvents().size_1()) {
    this.finish();
    return;
  }
  try {
    event_0 = castTo(this.m_modelUpdate.getGameEvents().get_0(this.index_0), 20);
    this.index_0++;
    if (instanceOf(event_0, 144) && this.this$01.getGame().getCurrentPlayerIds().size_1() == 1) {
      this.isNewPlayerTurn = true;
      if (this.this$01.getGame().isTimeStepParallelHidden(this.this$01.getGame().getCurrentTimeStep()) && isNotNull(this.this$01.getMyRegistration()) && !this.this$01.getMyRegistration().getTeam_1(this.this$01.getGame()).getMyEvents().isEmpty()) {
        for (i = this.this$01.getMyRegistration().getTeam_1(this.this$01.getGame()).getMyEvents().size_1() - 1; i >= 0; i--) {
          castTo(this.this$01.getMyRegistration().getTeam_1(this.this$01.getGame()).getMyEvents().get_0(i), 20).unexec(this.this$01.getGame());
        }
      }
    }
    if (jsEquals(event_0.getType_0(), ($clinit_GameLogType() , EvtCancel))) {
      castTo(event_0, 140).execCancel(this.this$01.getGame());
      this.nextEvent();
    }
     else if (instanceOf(event_0, 33) && event_0.canBeParallelHidden() && this.this$01.getGame().isTimeStepParallelHidden(this.this$01.getGame().getCurrentTimeStep()) && isNotNull(castTo(event_0, 33).getMyRegistration_0(this.this$01.getGame()))) {
      myTeam = castTo(event_0, 33).getMyRegistration_0(this.this$01.getGame()).getTeam_1(this.this$01.getGame());
      myTeam.addMyEvent(event_0);
      if (jsEquals(myTeam, this.this$01.getMyRegistration().getTeam_1(this.this$01.getGame()))) {
        event_0.exec_0(this.this$01.getGame());
        this.this$01.getGame().updateLastTokenUpdate(null);
        getEventBus().fireEvent(new GameActionEvent_0(event_0, this));
      }
       else {
        this.nextEvent();
      }
    }
     else {
      event_0.exec_0(this.this$01.getGame());
      this.this$01.getGame().addEvent(event_0);
      this.this$01.getGame().updateLastTokenUpdate(null);
      getEventBus().fireEvent(new GameActionEvent_0(event_0, this));
      if (instanceOf(event_0, 84) && eq(instance_1().getMyAccount().getId(), castTo(event_0, 84).getAccountId())) {
        this.nextEvent();
      }
      if (jsEquals(this.this$01.getGame().getGameType(), ($clinit_GameType() , Puzzle_0))) {
        this.nextEvent();
      }
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 24)) {
      e = $e0;
      logError_0('error ', e);
      alert_0('unexpected error : ' + e);
      if (!this.this$01.pendingUpdates.isEmpty() && maskUndefined(this.this$01.pendingUpdates.get_0(0)) === maskUndefined(this)) {
        this.this$01.pendingUpdates.remove_2(0);
      }
    }
     else 
      throw toJs($e0);
  }
}
;
_.start_1 = function start_1(){
  if ((jsEquals(this.this$01.getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(this.this$01.getGame().getGameType(), ($clinit_GameType() , Initiation))) && gte_0(this.this$01.getGame().getVersion(), this.m_modelUpdate.getToVersion())) {
    if (!this.this$01.pendingUpdates.isEmpty() && maskUndefined(this.this$01.pendingUpdates.get_0(0)) === maskUndefined(this)) {
      this.this$01.pendingUpdates.remove_2(0);
    }
    return;
  }
  if (lt(this.this$01.getGame().getVersion(), this.m_modelUpdate.getFromVersion()) || neq(this.this$01.getGame().getVersion(), this.m_modelUpdate.getFromVersion()) && lt(this.this$01.getGame().getVersion(), this.m_modelUpdate.getToVersion())) {
    alert_0('Error: receive incoherant model update (' + toString_45(this.m_modelUpdate.getFromVersion()) + ' expected ' + toString_45(this.this$01.getGame().getVersion()) + '). reload page');
    reload();
    return;
  }
  if (this.m_modelUpdate.getClientID() == this.this$01.m_lastModelUpdateClientID) {
    instance_1().stopLoading();
    this.this$01.getActionBuilder().clear_0();
  }
  if (eq(this.m_modelUpdate.getAccountId(), instance_1().getMyAccount().getId())) {
    this.this$01.getActionBuilder().clear_0();
  }
  this.this$01.getGame().setVersion(this.m_modelUpdate.getToVersion());
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
  this.nextEvent();
}
;
_.index_0 = 0;
_.isNewPlayerTurn = false;
var Lcom_fullmetalgalaxy_client_game_GameEngine$ProcessModelUpdate_2_classLit = createForClass('com.fullmetalgalaxy.client.game', 'GameEngine/ProcessModelUpdate', 207, Ljava_lang_Object_2_classLit);
function $clinit_LocalGame(){
  $clinit_LocalGame = emptyMethod;
  $clinit_Object();
}

function loadGame(p_model){
  $clinit_LocalGame();
  var action, action$iterator, condition, condition$iterator, events, game, trigger, trigger$iterator, updates;
  updates = new ModelFmpUpdate;
  events = new ArrayList;
  game = model_0().getGame();
  updates.setFromVersion(game.getVersion());
  for (trigger$iterator = game.getTriggers().iterator_0(); trigger$iterator.hasNext_0();) {
    trigger = castTo(trigger$iterator.next_1(), 248);
    if (trigger.isEnable()) {
      for (condition$iterator = trigger.getConditions().iterator_0(); condition$iterator.hasNext_0();) {
        condition = castTo(condition$iterator.next_1(), 98);
        if (instanceOf(condition, 348)) {
          for (action$iterator = trigger.getActions().iterator_0(); action$iterator.hasNext_0();) {
            action = castTo(action$iterator.next_1(), 127);
            events.addAll(action.createEvents_0(game, new ArrayList));
          }
        }
      }
    }
  }
  updates.setGameEvents(events);
  p_model.receiveModelUpdate(updates);
}

function runAction(p_actionList, callbackUpdates, p_model){
  $clinit_LocalGame();
  var eventPlay, eventPlay$iterator, events, game, updates;
  game = model_0().getGame();
  updates = new ModelFmpUpdate;
  updates.setFromPageId(instance_1().getPageId());
  updates.setFromPseudo(instance_1().getMyAccount().getPseudo());
  updates.setFromVersion(game.getVersion());
  updates.setToVersion(game.getVersion());
  events = new ArrayList;
  for (eventPlay$iterator = p_actionList.iterator_0(); eventPlay$iterator.hasNext_0();) {
    eventPlay = castTo(eventPlay$iterator.next_1(), 17);
    events.add_5(eventPlay);
  }
  updates.setGameEvents(events);
  callbackUpdates.onSuccess(null);
  p_model.receiveModelUpdate(updates);
  events = new ArrayList;
  events.addAll(game.createTriggersEvents());
  updates = new ModelFmpUpdate;
  updates.setFromPageId(instance_1().getPageId());
  updates.setFromPseudo(instance_1().getMyAccount().getPseudo());
  updates.setFromVersion(game.getVersion());
  updates.setToVersion(game.getVersion());
  updates.setGameEvents(events);
  callbackUpdates.onSuccess(null);
  p_model.receiveModelUpdate(updates);
}

function runEvent(p_action, callbackUpdates, p_model){
  $clinit_LocalGame();
  var events, game, updates;
  game = model_0().getGame();
  updates = new ModelFmpUpdate;
  updates.setFromVersion(game.getVersion());
  updates.setToVersion(game.getVersion());
  events = new ArrayList;
  events.add_5(p_action);
  events.addAll(game.createTriggersEvents());
  updates.setGameEvents(events);
  callbackUpdates.onSuccess(null);
  p_model.receiveModelUpdate(updates);
  if (instanceOf(p_action, 140)) {
    p_model.getGame().getLogs().remove_1(p_action);
  }
  events = new ArrayList;
  events.addAll(game.createTriggersEvents());
  updates = new ModelFmpUpdate;
  updates.setFromVersion(game.getVersion());
  updates.setToVersion(game.getVersion());
  updates.setGameEvents(events);
  callbackUpdates.onSuccess(null);
  p_model.receiveModelUpdate(updates);
}

function $clinit_BoardConvert(){
  $clinit_BoardConvert = emptyMethod;
  $clinit_Object();
}

function convertHexPositionToPixPosition_0(p_wgtHexPosition, p_zoom, p_wgtHexTopLeftCrop){
  $clinit_BoardConvert();
  var wgtPxPosition;
  wgtPxPosition = new AnPair;
  wgtPxPosition.setX((p_wgtHexPosition.getX() - p_wgtHexTopLeftCrop.getX()) * narrow_int(getHexWidth_0(p_zoom) * 3 / 4) + narrow_int(getHexWidth_0(p_zoom) / 2));
  if (p_wgtHexPosition.getX() % 2 == 0) {
    wgtPxPosition.setY((p_wgtHexPosition.getY() - p_wgtHexTopLeftCrop.getY()) * getHexHeight_0(p_zoom) + narrow_int(getHexHeight_0(p_zoom) / 2));
  }
   else {
    wgtPxPosition.setY((p_wgtHexPosition.getY() - p_wgtHexTopLeftCrop.getY()) * getHexHeight_0(p_zoom) + getHexHeight_0(p_zoom));
  }
  return wgtPxPosition;
}

function convertPixPositionToHexPosition(p_pixPosition, p_zoom, p_wgtHexTopLeftCrop){
  $clinit_BoardConvert();
  var anBoardPosition;
  anBoardPosition = new AnBoardPosition_0(0, 0);
  anBoardPosition.setX(narrow_int((p_pixPosition.getX() - narrow_int(getHexWidth_0(p_zoom) / 8)) / narrow_int(getHexWidth_0(p_zoom) * 3 / 4)));
  if (anBoardPosition.getX() % 2 == p_wgtHexTopLeftCrop.getX() % 2) {
    anBoardPosition.setY(narrow_int(p_pixPosition.getY() / getHexHeight_0(p_zoom)));
  }
   else {
    anBoardPosition.setY(narrow_int((p_pixPosition.getY() - narrow_int(getHexHeight_0(p_zoom) / 2)) / getHexHeight_0(p_zoom)));
  }
  anBoardPosition.setX(anBoardPosition.getX() + p_wgtHexTopLeftCrop.getX());
  anBoardPosition.setY(anBoardPosition.getY() + p_wgtHexTopLeftCrop.getY());
  return anBoardPosition;
}

function landHeightHex2Pix(p_landHeightHex, p_zoom){
  $clinit_BoardConvert();
  return p_landHeightHex * getHexHeight_0(p_zoom) + narrow_int(getHexHeight_0(p_zoom) / 2);
}

function landWidthHex2Pix(p_landWidthHex, p_zoom){
  $clinit_BoardConvert();
  return p_landWidthHex * narrow_int(getHexWidth_0(p_zoom) * 3 / 4) + narrow_int(getHexWidth_0(p_zoom) / 4);
}

function $clinit_BoardLayerCollection(){
  $clinit_BoardLayerCollection = emptyMethod;
  $clinit_ArrayList();
}

function BoardLayerCollection(){
  $clinit_BoardLayerCollection();
  ArrayList.call(this);
  this.$init_92();
}

defineClass(212, 12, {102:1, 212:1, 4:1, 1:1, 12:1, 47:1, 38:1, 158:1}, BoardLayerCollection);
_.$init_92 = function $init_92(){
  this.m_panel = new AbsolutePanel;
  this.m_gameId = fromInt_0(-1);
}
;
_.addLayer = function addLayer(p_layer){
  this.m_panel.add_4(p_layer.asWidget(), 0, 0);
  this.add_5(p_layer);
}
;
_.asWidget = function asWidget_0(){
  return this.m_panel;
}
;
_.cropDisplay = function cropDisplay_0(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  var layer, layer$iterator;
  for (layer$iterator = this.iterator_0(); layer$iterator.hasNext_0();) {
    layer = castTo(layer$iterator.next_1(), 102);
    layer.cropDisplay(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  }
}
;
_.getCropTopLeft = function getCropTopLeft_0(){
  if (!this.isEmpty()) {
    return castTo(this.get_0(0), 102).getCropTopLeft();
  }
  return new AnPair_0(0, 0);
}
;
_.onModelChange = function onModelChange_3(){
  var e, layer, layer$iterator;
  for (layer$iterator = this.iterator_0(); layer$iterator.hasNext_0();) {
    layer = castTo(layer$iterator.next_1(), 102);
    try {
      layer.onModelChange();
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        logError_0('a board layer bug while notify a model update', e);
      }
       else 
        throw toJs($e0);
    }
  }
}
;
_.redraw_0 = function redraw_4(p_left, p_top, p_right, p_botom){
  var layer, layer$iterator;
  for (layer$iterator = this.iterator_0(); layer$iterator.hasNext_0();) {
    layer = castTo(layer$iterator.next_1(), 102);
    layer.redraw_0(p_left, p_top, p_right, p_botom);
  }
}
;
_.setZoom = function setZoom_1(p_zoom){
  var isSizeReset, layer, layer$iterator;
  isSizeReset = false;
  for (layer$iterator = this.iterator_0(); layer$iterator.hasNext_0();) {
    layer = castTo(layer$iterator.next_1(), 102);
    layer.setZoom(p_zoom);
    if (!isSizeReset && layer.asWidget().isVisible()) {
      isSizeReset = true;
      this.m_panel.setPixelSize(layer.asWidget().getOffsetWidth(), layer.asWidget().getOffsetHeight());
    }
  }
}
;
_.show = function show_4(){
  var layer, layer$iterator;
  for (layer$iterator = this.iterator_0(); layer$iterator.hasNext_0();) {
    layer = castTo(layer$iterator.next_1(), 102);
    layer.show();
  }
  this.setZoom(model_0().getZoomDisplayed());
}
;
_.m_gameId = 0;
var Lcom_fullmetalgalaxy_client_game_board_BoardLayerCollection_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'BoardLayerCollection', 212, Ljava_util_ArrayList_2_classLit);
function $clinit_DlgAIJoinGame(){
  $clinit_DlgAIJoinGame = emptyMethod;
  $clinit_DialogBox();
}

function DlgAIJoinGame(){
  DialogBox.call(this, false, true);
  this.$init_93();
  this.setText(($clinit_MAppBoard() , s_messages_0).joinTitle());
  this.listAI.addItem_2('stai', '5180826044071936');
  this.listAI.addItem_2('killerai', '5087341249036288');
  this.listAI.addItem_2('niceai', '5148254354276352');
  this.listAI.setItemSelected(0, true);
  this.listAI.setVisibleItemCount(3);
  this.m_btnCancel.addClickHandler(this);
  this.m_btnOk.addClickHandler(this);
  this.setWidget(this.m_panel);
}

function instance_2(){
  $clinit_DlgAIJoinGame();
  if (isNull(s_dlg)) {
    s_dlg = new DlgAIJoinGame;
  }
  return s_dlg;
}

defineClass(1025, 141, {72:1, 13:1, 18:1, 45:1, 130:1, 14:1, 11:1, 1:1}, DlgAIJoinGame);
_.$init_93 = function $init_93(){
  this.m_btnCancel = new Button_0(($clinit_MAppBoard() , s_messages_0).cancel_0());
  this.m_btnOk = new Button_0(($clinit_MAppBoard() , s_messages_0).ok());
  this.m_panel = new VerticalPanel;
  this.listAI = new ListBox;
  this.intAPBonus = new IntegerBox;
}
;
_.onClick = function onClick_10(p_event){
  var account, joinEvent;
  if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnCancel)) {
    this.hide();
    return;
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnOk)) {
    account = new EbPublicAccount;
    account.setId(parseLong(this.listAI.getValue_4(this.listAI.getSelectedIndex())));
    account.setPseudo(this.listAI.getItemText(this.listAI.getSelectedIndex()));
    account.setAI(true);
    joinEvent = new EbGameJoin;
    joinEvent.setAccount(account);
    joinEvent.setActionPointBonus(castTo(this.intAPBonus.getValue_0(), 28).intValue());
    this.hide();
    instance_3().setJoinEvent(joinEvent);
    instance_3().show();
    instance_3().center();
    return;
  }
}
;
_.show = function show_5(){
  var hPanel;
  this.m_panel.clear_0();
  this.m_panel.add_0(new HTML_0('Add an automatic player<hr/>Action point bonus:'));
  this.intAPBonus.setValue_1(valueOf_37(0));
  this.m_panel.add_0(this.intAPBonus);
  this.m_panel.add_0(new HTML_0('Select avaliable player'));
  this.m_panel.add_0(this.listAI);
  hPanel = new HorizontalPanel;
  hPanel.add_0(this.m_btnCancel);
  hPanel.add_0(this.m_btnOk);
  this.m_panel.add_0(hPanel);
  getClassPrototype(141).show.call(this);
}
;
var s_dlg = null;
var Lcom_fullmetalgalaxy_client_game_board_DlgAIJoinGame_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgAIJoinGame', 1025, Lcom_google_gwt_user_client_ui_DialogBox_2_classLit);
function $clinit_DlgJoinChooseColor(){
  $clinit_DlgJoinChooseColor = emptyMethod;
  $clinit_DialogBox();
}

function DlgJoinChooseColor(){
  var color_0, color$iterator, colorValue, company, company$array, company$index, company$iterator, company$max, company0, freeColors, freeCompany, hpanel, registration, team, team$iterator;
  DialogBox.call(this, false, true);
  this.$init_94();
  this.setText(($clinit_MAppBoard() , s_messages_0).unitsTitle());
  freeCompany = new ArrayList;
  for (company$array = values_2() , company$index = 0 , company$max = company$array.length; company$index < company$max; ++company$index) {
    company0 = company$array[company$index];
    if (jsNotEquals(company0, ($clinit_Company() , Freelancer))) {
      freeCompany.add_5(company0);
    }
  }
  if (!model_0().getGame().isTeamAllowed()) {
    for (team$iterator = model_0().getGame().getTeams().iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      if (isNotNull(team.getCompany()) && jsNotEquals(team.getCompany(), ($clinit_Company() , Freelancer))) {
        freeCompany.remove_1(team.getCompany());
      }
    }
    freeCompany.add_6(0, ($clinit_Company() , Freelancer));
  }
   else {
    this.m_panel.add_0(new HTML_0('<b>' + ($clinit_MAppBoard() , s_messages_0).warningTeamAllowed() + '<\/b>'));
    if (model_0().getGame().getMaxTeamAllowed() <= model_0().getGame().getTeams().size_1()) {
      freeCompany.clear_0();
      for (team$iterator = model_0().getGame().getTeams().iterator_0(); team$iterator.hasNext_0();) {
        team = castTo(team$iterator.next_1(), 43);
        freeCompany.add_5(team.getCompany());
      }
    }
  }
  for (company$iterator = freeCompany.iterator_0(); company$iterator.hasNext_0();) {
    company0 = castTo(company$iterator.next_1(), 120);
    this.m_companySelection.addItem_2(company0.getFullName(), company0.toString_0());
  }
  this.m_companySelection.setSelectedIndex(nextInt_0(this.m_companySelection.getItemCount()));
  company = valueOf_1(this.m_companySelection.getValue_4(this.m_companySelection.getSelectedIndex()));
  this.m_companyPreview.setUrl('/images/avatar/' + company + '.jpg');
  this.m_companySelection.addChangeHandler(new DlgJoinChooseColor$1(this));
  hpanel = new HorizontalPanel;
  hpanel.add_0(this.m_companySelection);
  hpanel.add_0(this.m_companyPreview);
  this.m_panel.add_0(new HTML_0('<b>' + ($clinit_MAppBoard() , s_messages_0).chooseCompany() + '<\/b>'));
  this.m_panel.add_0(hpanel);
  freeColors = null;
  if (model_0().getGame().getSetRegistration().size_1() >= model_0().getGame().getMaxNumberOfPlayer()) {
    this.m_companySelection.setVisible(false);
    freeColors = model_0().getGame().getFreeRegistrationColors();
  }
   else {
    freeColors = model_0().getGame().getFreePlayersColors();
  }
  for (color$iterator = freeColors.iterator_0(); color$iterator.hasNext_0();) {
    color_0 = castTo(color$iterator.next_1(), 34);
    if (color_0.getValue_1() != 0) {
      this.m_colorSelection.addItem_2(getColorString(0, color_0.getValue_1()), '' + color_0.getValue_1());
    }
  }
  this.m_colorSelection.setSelectedIndex(nextInt_0(this.m_colorSelection.getItemCount()));
  colorValue = parseInt_1(this.m_colorSelection.getValue_4(this.m_colorSelection.getSelectedIndex()));
  registration = model_0().getGame().getRegistrationByColor(colorValue);
  if (isNotNull(registration) && isNotNull(registration.getTeam_1(model_0().getGame()))) {
    this.m_companyPreview.setUrl('/images/avatar/' + registration.getTeam_1(model_0().getGame()).getCompany() + '.jpg');
  }
  this.m_colorPreview.setUrl('images/board/' + (new EnuColor_0(colorValue)).toString_0() + '/preview.jpg');
  this.m_colorSelection.addChangeHandler(new DlgJoinChooseColor$2(this));
  hpanel = new HorizontalPanel;
  hpanel.add_0(this.m_colorSelection);
  hpanel.add_0(this.m_colorPreview);
  this.m_panel.add_0(new HTML_0('<b>' + ($clinit_MAppBoard() , s_messages_0).chooseColor() + '<\/b>'));
  this.m_panel.add_0(hpanel);
  hpanel = new HorizontalPanel;
  this.m_btnCancel.addClickHandler(new DlgJoinChooseColor$3(this));
  hpanel.add_0(this.m_btnCancel);
  this.m_btnOk.addClickHandler(new DlgJoinChooseColor$4(this));
  hpanel.add_0(this.m_btnOk);
  this.m_panel.add_0(hpanel);
  this.setWidget(this.m_panel);
}

function instance_3(){
  $clinit_DlgJoinChooseColor();
  if (isNull(s_dlg_0)) {
    s_dlg_0 = new DlgJoinChooseColor;
  }
  return s_dlg_0;
}

defineClass(1029, 141, {18:1, 45:1, 130:1, 14:1, 11:1, 1:1}, DlgJoinChooseColor);
_.$init_94 = function $init_94(){
  this.account = null;
  this.m_companySelection = new ListBox;
  this.m_companyPreview = new Image_0;
  this.m_colorSelection = new ListBox;
  this.m_colorPreview = new Image_0;
  this.m_btnOk = new Button_0(($clinit_MAppBoard() , s_messages_0).ok());
  this.m_btnCancel = new Button_0(($clinit_MAppBoard() , s_messages_0).cancel_0());
  this.m_panel = new VerticalPanel;
}
;
_.getJoinEvent = function getJoinEvent(){
  if (isNull(this.account)) {
    this.account = new EbGameJoin;
    this.account.setAccount(instance_1().getMyAccount());
  }
  return this.account;
}
;
_.hide = function hide_4(){
  this.account = null;
  getClassPrototype(147).hide.call(this);
}
;
_.setJoinEvent = function setJoinEvent(p_account){
  this.account = p_account;
}
;
var s_dlg_0 = null;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinChooseColor_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinChooseColor', 1029, Lcom_google_gwt_user_client_ui_DialogBox_2_classLit);
function $clinit_DlgJoinChooseColor$1(){
  $clinit_DlgJoinChooseColor$1 = emptyMethod;
  $clinit_Object();
}

function DlgJoinChooseColor$1(this$0){
  $clinit_DlgJoinChooseColor$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_95();
}

defineClass(1030, 1, {116:1, 13:1, 1:1}, DlgJoinChooseColor$1);
_.$init_95 = function $init_95(){
}
;
_.onChange = function onChange_11(p_event){
  var company;
  company = valueOf_1(this.this$01.m_companySelection.getValue_4(this.this$01.m_companySelection.getSelectedIndex()));
  this.this$01.m_companyPreview.setUrl('/images/avatar/' + company + '.jpg');
}
;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinChooseColor$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinChooseColor/1', 1030, Ljava_lang_Object_2_classLit);
function $clinit_DlgJoinChooseColor$2(){
  $clinit_DlgJoinChooseColor$2 = emptyMethod;
  $clinit_Object();
}

function DlgJoinChooseColor$2(this$0){
  $clinit_DlgJoinChooseColor$2();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_96();
}

defineClass(1031, 1, {116:1, 13:1, 1:1}, DlgJoinChooseColor$2);
_.$init_96 = function $init_96(){
}
;
_.onChange = function onChange_12(p_event){
  var color_0, colorValue, registration;
  colorValue = parseInt_1(this.this$01.m_colorSelection.getValue_4(this.this$01.m_colorSelection.getSelectedIndex()));
  color_0 = new EnuColor_0(colorValue);
  this.this$01.m_colorPreview.setUrl('images/board/' + color_0.toString_0() + '/preview.jpg');
  this.this$01.m_btnOk.setEnabled(true);
  registration = model_0().getGame().getRegistrationByColor(colorValue);
  if (isNotNull(registration) && isNotNull(registration.getTeam_1(model_0().getGame()))) {
    this.this$01.m_companyPreview.setUrl('/images/avatar/' + registration.getTeam_1(model_0().getGame()).getCompany() + '.jpg');
  }
}
;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinChooseColor$2_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinChooseColor/2', 1031, Ljava_lang_Object_2_classLit);
function $clinit_DlgJoinChooseColor$3(){
  $clinit_DlgJoinChooseColor$3 = emptyMethod;
  $clinit_Object();
}

function DlgJoinChooseColor$3(this$0){
  $clinit_DlgJoinChooseColor$3();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_97();
}

defineClass(1032, 1, {72:1, 13:1, 1:1}, DlgJoinChooseColor$3);
_.$init_97 = function $init_97(){
}
;
_.onClick = function onClick_11(p_event){
  this.this$01.hide();
}
;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinChooseColor$3_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinChooseColor/3', 1032, Ljava_lang_Object_2_classLit);
function $clinit_DlgJoinChooseColor$4(){
  $clinit_DlgJoinChooseColor$4 = emptyMethod;
  $clinit_Object();
}

function DlgJoinChooseColor$4(this$0){
  $clinit_DlgJoinChooseColor$4();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_98();
}

defineClass(1033, 1, {72:1, 13:1, 1:1}, DlgJoinChooseColor$4);
_.$init_98 = function $init_98(){
}
;
_.onClick = function onClick_12(p_event){
  var action, color_0, colorValue, company, e;
  colorValue = parseInt_1(this.this$01.m_colorSelection.getValue_4(this.this$01.m_colorSelection.getSelectedIndex()));
  color_0 = new EnuColor_0(colorValue);
  action = this.this$01.getJoinEvent();
  company = ($clinit_Company() , Freelancer);
  try {
    company = valueOf_1(this.this$01.m_companySelection.getValue_4(this.this$01.m_companySelection.getSelectedIndex()));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      e = $e0;
    }
     else 
      throw toJs($e0);
  }
  action.setCompany(company);
  action.setGame(model_0().getGame());
  action.setColor(color_0.getValue_1());
  model_0().runSingleAction(action);
  this.this$01.hide();
}
;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinChooseColor$4_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinChooseColor/4', 1033, Ljava_lang_Object_2_classLit);
function $clinit_DlgJoinDisplayVariant(){
  $clinit_DlgJoinDisplayVariant = emptyMethod;
  $clinit_DialogBox();
}

function DlgJoinDisplayVariant(){
  var hpanel;
  DialogBox.call(this, false, true);
  this.$init_99();
  this.setText(($clinit_MAppBoard() , s_messages_0).variantTitle());
  this.m_panel.add_0(new HTML_0('<b>' + ($clinit_MAppBoard() , s_messages_0).commonConstructReserve() + '<\/b>'));
  this.m_panel.add_0(this.createTokenList(model_0().getGame().getConstructReserve()));
  this.m_panel.add_0(new HTML_0('<b>' + ($clinit_MAppBoard() , s_messages_0).initialHold() + '<\/b>'));
  this.m_panel.add_0(this.createTokenList(model_0().getGame().getInitialHolds()));
  hpanel = new HorizontalPanel;
  this.m_btnCancel.addClickHandler(new DlgJoinDisplayVariant$1(this));
  hpanel.add_0(this.m_btnCancel);
  this.m_btnOk.addClickHandler(new DlgJoinDisplayVariant$2(this));
  hpanel.add_0(this.m_btnOk);
  this.m_panel.add_0(hpanel);
  this.setWidget(this.m_panel);
}

function instance_4(){
  $clinit_DlgJoinDisplayVariant();
  if (isNull(s_dlg_1)) {
    s_dlg_1 = new DlgJoinDisplayVariant;
  }
  return s_dlg_1;
}

defineClass(1026, 141, {18:1, 45:1, 130:1, 14:1, 11:1, 1:1}, DlgJoinDisplayVariant);
_.$init_99 = function $init_99(){
  this.m_btnOk = new Button_0(($clinit_MAppBoard() , s_messages_0).ok());
  this.m_btnCancel = new Button_0(($clinit_MAppBoard() , s_messages_0).cancel_0());
  this.m_panel = new VerticalPanel;
}
;
_.createTokenList = function createTokenList(p_tokenList){
  var entry, entry$iterator, panel;
  panel = new FlowPanel;
  for (entry$iterator = p_tokenList.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    if (castTo(entry.getValue_0(), 28).intValue() > 0) {
      panel.add_0(new Label_1(' ' + getTokenString(0, castTo(entry.getKey(), 55)) + ': ' + entry.getValue_0()));
    }
  }
  return panel;
}
;
var s_dlg_1 = null;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinDisplayVariant_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinDisplayVariant', 1026, Lcom_google_gwt_user_client_ui_DialogBox_2_classLit);
function $clinit_DlgJoinDisplayVariant$1(){
  $clinit_DlgJoinDisplayVariant$1 = emptyMethod;
  $clinit_Object();
}

function DlgJoinDisplayVariant$1(this$0){
  $clinit_DlgJoinDisplayVariant$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_100();
}

defineClass(1027, 1, {72:1, 13:1, 1:1}, DlgJoinDisplayVariant$1);
_.$init_100 = function $init_100(){
}
;
_.onClick = function onClick_13(p_event){
  this.this$01.hide();
}
;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinDisplayVariant$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinDisplayVariant/1', 1027, Ljava_lang_Object_2_classLit);
function $clinit_DlgJoinDisplayVariant$2(){
  $clinit_DlgJoinDisplayVariant$2 = emptyMethod;
  $clinit_Object();
}

function DlgJoinDisplayVariant$2(this$0){
  $clinit_DlgJoinDisplayVariant$2();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_101();
}

defineClass(1028, 1, {72:1, 13:1, 1:1}, DlgJoinDisplayVariant$2);
_.$init_101 = function $init_101(){
}
;
_.onClick = function onClick_14(p_event){
  this.this$01.hide();
  instance_3().show();
  instance_3().center();
}
;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinDisplayVariant$2_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinDisplayVariant/2', 1028, Ljava_lang_Object_2_classLit);
function $clinit_DlgJoinGame(){
  $clinit_DlgJoinGame = emptyMethod;
  $clinit_DialogBox();
}

function DlgJoinGame(){
  DialogBox.call(this, false, true);
  this.$init_102();
  this.setText(($clinit_MAppBoard() , s_messages_0).joinTitle());
  this.m_btnCancel.addClickHandler(this);
  this.m_btnOk.addClickHandler(this);
  this.setWidget(this.m_panel);
}

function instance_5(){
  $clinit_DlgJoinGame();
  if (isNull(s_dlg_2)) {
    s_dlg_2 = new DlgJoinGame;
  }
  return s_dlg_2;
}

defineClass(848, 141, {72:1, 13:1, 18:1, 45:1, 130:1, 14:1, 11:1, 1:1}, DlgJoinGame);
_.$init_102 = function $init_102(){
  this.m_btnCancel = new Button_0(($clinit_MAppBoard() , s_messages_0).cancel_0());
  this.m_btnOk = new Button_0(($clinit_MAppBoard() , s_messages_0).ok());
  this.m_panel = new VerticalPanel;
  this.m_txtPassword = new TextBox;
}
;
_.onClick = function onClick_15(p_event){
  if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnCancel)) {
    this.hide();
    return;
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnOk)) {
    if (model_0().getGame().isPasswordProtected() && !equals_Ljava_lang_Object__Z__devirtual$_2(this.m_txtPassword.getText(), model_0().getGame().getPassword())) {
      alert_0(($clinit_MAppBoard() , s_messages_0).pleaseCheckGamePasword());
      return;
    }
    this.hide();
    if (!equals_Ljava_lang_Object__Z__devirtual$(getDefaultInitialHolds(), model_0().getGame().getInitialHolds()) || !equals_Ljava_lang_Object__Z__devirtual$(getDefaultReserve(model_0().getGame().getMaxNumberOfPlayer()), model_0().getGame().getConstructReserve())) {
      instance_4().show();
      instance_4().center();
    }
     else {
      instance_3().show();
      instance_3().center();
    }
    return;
  }
}
;
_.show = function show_6(){
  var hPanel, hPanel0, wgtGameTime;
  this.m_panel.clear_0();
  this.m_panel.add_0(new HTML_0(formatUserMessage(model_0().getGame().getDescription())));
  this.m_panel.add_0(new HTML_0('<hr/>'));
  wgtGameTime = new WgtGameTime;
  wgtGameTime.setReadOnly(true);
  this.m_panel.add_0(wgtGameTime);
  this.m_panel.add_0(new HTML_0('<hr/>'));
  if (model_0().getGame().isPasswordProtected()) {
    hPanel0 = new HorizontalPanel;
    hPanel0.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).pasword()));
    hPanel0.add_0(this.m_txtPassword);
    this.m_panel.add_0(hPanel0);
  }
   else {
    this.m_panel.add_0(new HTML_0(($clinit_MAppBoard() , s_messages_0).joinWarning()));
  }
  hPanel = new HorizontalPanel;
  hPanel.add_0(this.m_btnCancel);
  hPanel.add_0(this.m_btnOk);
  this.m_panel.add_0(hPanel);
  getClassPrototype(141).show.call(this);
}
;
var s_dlg_2 = null;
var Lcom_fullmetalgalaxy_client_game_board_DlgJoinGame_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'DlgJoinGame', 848, Lcom_google_gwt_user_client_ui_DialogBox_2_classLit);
function $clinit_ImagePool(){
  $clinit_ImagePool = emptyMethod;
  $clinit_Object();
}

function ImagePool(p_panel){
  $clinit_ImagePool();
  Object_0.call(this);
  this.$init_103();
  this.m_panel = p_panel;
}

defineClass(896, 1, {1:1}, ImagePool);
_.$init_103 = function $init_103(){
  this.m_panel = null;
  this.m_nextImageIndex = 0;
  this.m_imagePool = new ArrayList;
}
;
_.getNextImage = function getNextImage(){
  var image;
  image = null;
  if (this.m_nextImageIndex < this.m_imagePool.size_1()) {
    image = castTo(this.m_imagePool.get_0(this.m_nextImageIndex), 22);
    image.setVisible(true);
  }
   else {
    image = new Image_0;
    this.m_imagePool.add_5(image);
    this.m_panel.add_0(image);
  }
  this.m_nextImageIndex++;
  return image;
}
;
_.hideOtherImage = function hideOtherImage(){
  var image, indexTmp;
  indexTmp = this.m_nextImageIndex;
  while (this.m_nextImageIndex < this.m_imagePool.size_1()) {
    image = castTo(this.m_imagePool.get_0(this.m_nextImageIndex), 22);
    image.setVisible(false);
    image.removeStyleName('transparent50');
    this.m_nextImageIndex++;
  }
  this.m_nextImageIndex = indexTmp;
}
;
_.resetImageIndex = function resetImageIndex(){
  this.m_nextImageIndex = 0;
}
;
_.m_nextImageIndex = 0;
var Lcom_fullmetalgalaxy_client_game_board_ImagePool_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'ImagePool', 896, Ljava_lang_Object_2_classLit);
function $clinit_ResizeHandler(){
  $clinit_ResizeHandler = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_ResizeHandler_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'ResizeHandler');
function $clinit_MAppBoard(){
  $clinit_MAppBoard = emptyMethod;
  $clinit_GuiEntryPoint();
  s_messages_0 = castTo(castTo(new MessagesAppBoard_, 1052), 1052);
}

function MAppBoard(){
  $clinit_MAppBoard();
  GuiEntryPoint.call(this);
  this.$init_104();
  s_instance_3 = this;
  this.initWgtBoard();
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
  addResizeHandler(this);
  this.initWidget(this.m_wgtScroll);
}

defineClass(515, 118, {115:1, 302:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppBoard);
_.$init_104 = function $init_104(){
  this.m_wgtScroll = new WgtScroll;
  this.m_wgtBoard = null;
  this.m_idGame = fromInt_0(-1);
  this.m_oldZoomValue = -1;
}
;
_.getHistoryId = function getHistoryId_4(){
  return 'board';
}
;
_.initWgtBoard = function initWgtBoard(){
  if (isNotNull(this.m_wgtBoard)) {
    this.m_wgtScroll.removeScrollListener(this.m_wgtBoard);
  }
  if (jsEquals(game_0().getMapShape(), ($clinit_MapShape() , Flat))) {
    this.m_wgtBoard = new WgtBoard;
  }
   else {
    this.m_wgtBoard = new WgtBoardTorus;
  }
  this.m_wgtScroll.addScrollListener(this.m_wgtBoard);
  this.m_wgtScroll.setWidget(this.m_wgtBoard);
}
;
_.onModelUpdate = function onModelUpdate_2(p_modelSender){
  var myFreighter, newBoardHeight, newBoardWidth, newScrollPositionX, newScrollPositionY, oldBoardHeight, oldBoardWidth, oldScrollPositionX, oldScrollPositionY, screenHeight, screenWidth;
  if (!this.isVisible()) {
    return;
  }
  if (this.m_oldZoomValue != model_0().getZoomDisplayed().getValue_1()) {
    this.m_oldZoomValue = model_0().getZoomDisplayed().getValue_1();
    oldBoardWidth = this.m_wgtBoard.getOffsetWidth();
    oldBoardHeight = this.m_wgtBoard.getOffsetHeight();
    oldScrollPositionX = this.m_wgtScroll.getHorizontalScrollPosition();
    oldScrollPositionY = this.m_wgtScroll.getVerticalScrollPosition();
    screenWidth = this.m_wgtScroll.getOffsetWidth();
    screenHeight = this.m_wgtScroll.getOffsetHeight();
    this.m_wgtBoard.notifyModelUpdate(p_modelSender);
    newBoardWidth = this.m_wgtBoard.getOffsetWidth();
    newBoardHeight = this.m_wgtBoard.getOffsetHeight();
    newScrollPositionX = round_int(newBoardWidth / oldBoardWidth * (oldScrollPositionX + narrow_int(screenWidth / 2)) - narrow_int(screenWidth / 2));
    newScrollPositionY = round_int(newBoardHeight / oldBoardHeight * (oldScrollPositionY + narrow_int(screenHeight / 2)) - narrow_int(screenHeight / 2));
    this.m_wgtScroll.setScrollPosition(newScrollPositionX, newScrollPositionY);
  }
   else {
    this.m_wgtBoard.notifyModelUpdate(p_modelSender);
  }
  if (neq(this.m_idGame, model_0().getGame().getId())) {
    this.m_idGame = model_0().getGame().getId();
    myFreighter = model_0().getGame().getFreighter(model_0().getMyRegistration());
    if (isNotNull(myFreighter) && jsEquals(myFreighter.getLocation(), ($clinit_Location() , Board))) {
      this.setScrollPosition(myFreighter.getPosition().getX(), myFreighter.getPosition().getY());
    }
     else {
      this.m_wgtScroll.centerContentWidget();
    }
  }
  this.m_wgtScroll.ensureWidgetIsVisible();
}
;
_.onModuleLoad = function onModuleLoad_4(){
  getClassPrototype(118).onModuleLoad.call(this);
  this.m_wgtBoard.show();
}
;
_.onResize = function onResize(event_0){
  if (!this.isVisible()) {
    return;
  }
  this.m_wgtScroll.fireScroll();
}
;
_.setScrollPosition = function setScrollPosition(p_hexX, p_hexY){
  var boardHeight, boardWidth, newScrollPositionX, newScrollPositionY, screenHeight, screenWidth;
  boardWidth = this.m_wgtBoard.getOffsetWidth();
  boardHeight = this.m_wgtBoard.getOffsetHeight();
  newScrollPositionX = round_int(boardWidth * p_hexX / model_0().getGame().getLandWidth());
  newScrollPositionY = round_int(boardHeight * p_hexY / model_0().getGame().getLandHeight());
  screenWidth = this.m_wgtScroll.getOffsetWidth();
  screenHeight = this.m_wgtScroll.getOffsetHeight();
  newScrollPositionX -= narrow_int(screenWidth / 2);
  newScrollPositionY -= narrow_int(screenHeight / 2);
  this.m_wgtScroll.setScrollPosition(newScrollPositionX, newScrollPositionY);
}
;
_.m_idGame = 0;
_.m_oldZoomValue = 0;
var s_instance_3 = null, s_messages_0;
var Lcom_fullmetalgalaxy_client_game_board_MAppBoard_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'MAppBoard', 515, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_MouseDownHandler(){
  $clinit_MouseDownHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_MouseDownHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'MouseDownHandler');
function $clinit_MouseUpHandler(){
  $clinit_MouseUpHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_MouseUpHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'MouseUpHandler');
function $clinit_MouseOverHandler(){
  $clinit_MouseOverHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_MouseOverHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'MouseOverHandler');
function $clinit_MouseMoveHandler(){
  $clinit_MouseMoveHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_MouseMoveHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'MouseMoveHandler');
function $clinit_MouseOutHandler(){
  $clinit_MouseOutHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_MouseOutHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'MouseOutHandler');
function $clinit_TouchStartHandler(){
  $clinit_TouchStartHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_TouchStartHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'TouchStartHandler');
function $clinit_TouchMoveHandler(){
  $clinit_TouchMoveHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_TouchMoveHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'TouchMoveHandler');
function $clinit_TouchEndHandler(){
  $clinit_TouchEndHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_TouchEndHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'TouchEndHandler');
function $clinit_WgtBoardBase(){
  $clinit_WgtBoardBase = emptyMethod;
  $clinit_FocusPanel();
}

function WgtBoardBase(){
  $clinit_WgtBoardBase();
  FocusPanel.call(this);
  this.$init_105();
  this.setWidget(this.m_panel);
  this.sinkEvents(262144);
  this.addMouseDownHandler(this);
  this.addMouseMoveHandler(this);
  this.addMouseOutHandler(this);
  this.addMouseOverHandler(this);
  this.addMouseUpHandler(this);
  this.addTouchStartHandler(this);
  this.addTouchMoveHandler(this);
  this.addTouchEndHandler(this);
  getEventBus().addHandler_1(($clinit_GameLoadEvent() , TYPE_0), this);
}

defineClass(273, 108, {486:1, 79:1, 77:1, 78:1, 76:1, 253:1, 254:1, 255:1, 308:1, 219:1, 306:1, 305:1, 304:1, 13:1, 18:1, 86:1, 85:1, 45:1, 307:1, 14:1, 11:1, 1:1});
_.$init_105 = function $init_105(){
  this.m_panel = new AbsolutePanel;
  this.m_hasTouchMoved = false;
  this.m_isVisible_0 = false;
}
;
_.getZoom = function getZoom_1(){
  return model_0().getZoomDisplayed();
}
;
_.onBrowserEvent = function onBrowserEvent_2(p_event){
  switch (eventGetType_0(p_event)) {
    case 262144:
      $stopPropagation(p_event);
      $preventDefault(p_event);
      break;
    default:getClassPrototype(11).onBrowserEvent.call(this, p_event);
      break;
  }
}
;
_.onMouseDown_0 = function onMouseDown_3(p_event){
  p_event.preventDefault_0();
}
;
_.onMouseUp_0 = function onMouseUp_3(p_event){
  var userAction;
  p_event.preventDefault_0();
  userAction = ($clinit_EventsPlayBuilder$UserAction() , Primary);
  if (p_event.isControlKeyDown() || p_event.getNativeButton() == 2) {
    userAction = ($clinit_EventsPlayBuilder$UserAction() , Secondary);
  }
  this.onUp(userAction, p_event.getX(), p_event.getY());
}
;
_.onTouchEnd = function onTouchEnd(p_event){
  var current, parent_0, touch, x_0, y_0;
  if (!this.m_hasTouchMoved) {
    p_event.preventDefault_0();
    touch = $get(p_event.getChangedTouches_0(), 0);
    current = this.getElement();
    parent_0 = $getParentElement(current);
    x_0 = $getPageX(touch) - $getOffsetLeft(current) - $getOffsetLeft(parent_0);
    y_0 = $getPageY(touch) - $getOffsetTop(current) - $getOffsetTop(parent_0);
    this.onUp(($clinit_EventsPlayBuilder$UserAction() , Touch_0), x_0, y_0);
  }
}
;
_.onTouchMove = function onTouchMove(p_event){
  this.m_hasTouchMoved = true;
}
;
_.onTouchStart = function onTouchStart(p_event){
  this.m_hasTouchMoved = false;
}
;
_.onUp = function onUp(userAction, p_x, p_y){
  var eventBuilderMsg, ex, iniore, position;
  position = this.convertPixPositionToHexPosition(new AnPair_0(p_x, p_y));
  try {
    eventBuilderMsg = ($clinit_EventBuilderMsg() , None_1);
    eventBuilderMsg = model_0().getActionBuilder().userBoardClick(position, userAction);
    switch (eventBuilderMsg.ordinal_0()) {
      case ($clinit_EventBuilderMsg() , Updated).ordinal_0():
        getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
        break;
      case ($clinit_EventBuilderMsg() , MustRun).ordinal_0():
        model_0().runCurrentAction();
        break;
      default:}
  }
   catch ($e1) {
    $e1 = toJava($e1);
    if (instanceOf($e1, 10)) {
      ex = $e1;
      if (jsNotEquals(ex.getLocalizedMessage(), null)) {
        ($clinit_MAppMessagesStack() , s_instance_1).showWarning(ex.getLocalizedMessage());
      }
      model_0().getActionBuilder().cancel();
      try {
        model_0().getActionBuilder().userBoardClick(position, ($clinit_EventsPlayBuilder$UserAction() , Primary));
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 24)) {
          iniore = $e0;
        }
         else 
          throw toJs($e0);
      }
      getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
    }
     else if (instanceOf($e1, 24)) {
      ex = $e1;
      alert_0('Une erreur est survenu, la page va \xEAtre recharg\xE9e \n' + ex.getMessage());
      sendPM('' + toString_45(instance_1().getMyAccount().getId()), '5001', 'js error', ex.getMessage());
      reload();
    }
     else 
      throw toJs($e1);
  }
}
;
_.show = function show_7(){
  if (!this.m_isVisible_0) {
    this.m_isVisible_0 = true;
    scrollToTop();
  }
}
;
_.m_hasTouchMoved = false;
_.m_isVisible_0 = false;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardBase_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardBase', 273, Lcom_google_gwt_user_client_ui_FocusPanel_2_classLit);
function $clinit_WgtBoard(){
  $clinit_WgtBoard = emptyMethod;
  $clinit_WgtBoardBase();
}

function WgtBoard(){
  $clinit_WgtBoard();
  WgtBoardBase.call(this);
  this.$init_106();
  this.m_layerCollection.addLayer(this.m_layerLand);
  this.m_layerCollection.addLayer(this.m_layerMap);
  this.m_layerCollection.addLayer(this.m_layerCover);
  this.m_layerCollection.addLayer(this.m_layerGrid);
  this.m_layerCollection.addLayer(this.m_layerSelect);
  this.m_layerCollection.addLayer(this.m_layerToken);
  this.m_layerCollection.addLayer(this.m_layerLock);
  this.m_layerCollection.addLayer(this.m_layerAction);
  if (getNavigator() == 0) {
    this.m_layerCollection.addLayer(this.m_layerAtmosphere);
  }
  this.m_panel.add_3(this.m_layerCollection, 0, 0);
  this.onGameLoad(model_0().getGame());
}

defineClass(739, 273, {486:1, 79:1, 77:1, 78:1, 76:1, 253:1, 254:1, 255:1, 308:1, 219:1, 306:1, 305:1, 304:1, 13:1, 18:1, 86:1, 85:1, 45:1, 307:1, 14:1, 11:1, 1:1}, WgtBoard);
_.$init_106 = function $init_106(){
  this.m_layerLand = new WgtBoardLayerLand;
  this.m_layerMap = new WgtBoardLayerMap;
  this.m_layerCover = new WgtBoardLayerFireCover;
  this.m_layerGrid = new WgtBoardLayerGrid;
  this.m_layerToken = new WgtBoardLayerToken;
  this.m_layerAction = new WgtBoardLayerAction;
  this.m_layerSelect = new WgtBoardLayerSelect;
  this.m_layerAtmosphere = new WgtBoardLayerAtmosphere;
  this.m_layerLock = new WgtBoardLayerLocked;
  this.m_layerCollection = new BoardLayerCollection;
  this.m_hexagonHightlightPosition = new AnBoardPosition_0(0, 0);
  this.m_game = null;
  this.m_oldZoom = -1;
}
;
_.convertPixPositionToHexPosition = function convertPixPositionToHexPosition_0(p_pixPosition){
  return convertPixPositionToHexPosition(p_pixPosition, this.getZoom(), new AnPair_0(0, 0));
}
;
_.getZoom = function getZoom_2(){
  return model_0().getZoomDisplayed();
}
;
_.notifyModelUpdate = function notifyModelUpdate_0(p_modelSender){
  if (!this.m_isVisible_0) {
    return;
  }
  if (this.m_oldZoom != this.getZoom().getValue_1()) {
    this.m_oldZoom = this.getZoom().getValue_1();
    this.m_layerCollection.setZoom(this.getZoom());
    if (this.m_layerLand.isVisible()) {
      this.m_panel.setPixelSize(this.m_layerLand.getOffsetWidth(), this.m_layerLand.getOffsetHeight());
    }
     else if (this.m_layerMap.isVisible()) {
      this.m_panel.setPixelSize(this.m_layerMap.getOffsetWidth(), this.m_layerMap.getOffsetHeight());
    }
  }
   else {
    this.m_layerCollection.onModelChange();
    if (jsNotEquals(this.m_game, p_modelSender.getGame())) {
      this.m_game = p_modelSender.getGame();
      if (this.m_layerLand.isVisible()) {
        this.m_panel.setPixelSize(this.m_layerLand.getOffsetWidth(), this.m_layerLand.getOffsetHeight());
      }
       else if (this.m_layerMap.isVisible()) {
        this.m_panel.setPixelSize(this.m_layerMap.getOffsetWidth(), this.m_layerMap.getOffsetHeight());
      }
    }
  }
}
;
_.onGameLoad = function onGameLoad(p_game){
  this.m_layerCollection.cropDisplay(0, 0, p_game.getLandWidth(), p_game.getLandHeight());
}
;
_.onMouseMove_0 = function onMouseMove_3(p_event){
  var position;
  position = this.convertPixPositionToHexPosition(new AnPair_0(p_event.getX(), p_event.getY()));
  if (position.getX() != this.m_hexagonHightlightPosition.getX() || position.getY() != this.m_hexagonHightlightPosition.getY()) {
    this.m_hexagonHightlightPosition = position;
    this.m_layerSelect.moveHightLightHexagon(this.m_hexagonHightlightPosition);
  }
}
;
_.onMouseOut = function onMouseOut(p_event){
  this.m_layerSelect.setHexagonHightVisible(false);
}
;
_.onMouseOver = function onMouseOver(event_0){
  this.m_layerSelect.setHexagonHightVisible(true);
}
;
_.onScroll = function onScroll_0(p_widget, p_scrollLeft, p_scrollTop){
  this.m_layerCollection.redraw_0(p_scrollLeft, p_scrollTop, p_scrollLeft + p_widget.getOffsetWidth(), p_scrollTop + p_widget.getOffsetHeight());
}
;
_.setZoom = function setZoom_2(p_enuZoom){
  if (p_enuZoom.getValue_1() != this.getZoom().getValue_1()) {
    model_0().setZoomDisplayed_0(p_enuZoom);
  }
}
;
_.show = function show_8(){
  var zoom;
  getClassPrototype(273).show.call(this);
  if (!this.m_isVisible_0) {
    this.m_layerCollection.show();
  }
  this.m_layerGrid.setVisible(model_0().isGridDisplayed());
  this.m_layerAtmosphere.setVisible(model_0().isAtmosphereDisplayed());
  zoom = model_0().getZoomDisplayed();
  this.setZoom(zoom);
  this.m_layerCover.displayFireCover(model_0().isFireCoverDisplayed());
}
;
_.m_oldZoom = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoard_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoard', 739, Lcom_fullmetalgalaxy_client_game_board_WgtBoardBase_2_classLit);
function $clinit_WgtBoardLayerAction(){
  $clinit_WgtBoardLayerAction = emptyMethod;
  $clinit_WgtBoardLayerBase();
}

function WgtBoardLayerAction(){
  $clinit_WgtBoardLayerAction();
  WgtBoardLayerBase.call(this);
  this.$init_107();
}

defineClass(400, 57, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerAction);
_.$init_107 = function $init_107(){
  this.m_images = new ImagePool(this);
  this.m_actionLastUpdate = 0;
}
;
_.cropDisplay = function cropDisplay_1(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  getClassPrototype(57).cropDisplay.call(this, p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  this.redraw();
}
;
_.drawControlAction = function drawControlAction(p_fireAction){
  var image;
  if (!isNotNull(p_fireAction)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (isNotNull(p_fireAction.getTokenDestroyer2(model_0().getGame()))) {
    image = this.m_images.getNextImage();
    select_hexagon(this.getZoom().getValue_1()).applyTo_0(image);
    setStyleAttribute(image.getElement(), 'zIndex', '1');
    this.setWidgetHexPosition(image, p_fireAction.getTokenDestroyer2(model_0().getGame()).getPosition());
  }
  if (isNotNull(p_fireAction.getTokenTarget(model_0().getGame()))) {
    image = this.m_images.getNextImage();
    target_control(this.getZoom().getValue_1()).applyTo_0(image);
    setStyleAttribute(image.getElement(), 'zIndex', '1000');
    this.setWidgetHexPosition(image, p_fireAction.getTokenTarget(model_0().getGame()).getPosition());
  }
}
;
_.drawFireAction = function drawFireAction(p_fireAction){
  var image;
  if (!isNotNull(p_fireAction)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (isNotNull(p_fireAction.getTokenDestroyer2(model_0().getGame()))) {
    image = this.m_images.getNextImage();
    select_hexagon(this.getZoom().getValue_1()).applyTo_0(image);
    setStyleAttribute(image.getElement(), 'zIndex', '1');
    if (isNotNull(p_fireAction.getDestroyer2Position())) {
      this.setWidgetHexPosition(image, p_fireAction.getDestroyer2Position());
    }
     else {
      this.setWidgetHexPosition(image, p_fireAction.getTokenDestroyer2(model_0().getGame()).getPosition());
    }
  }
  if (isNotNull(p_fireAction.getTokenTarget(model_0().getGame()))) {
    image = this.m_images.getNextImage();
    target_0(this.getZoom().getValue_1()).applyTo_0(image);
    setStyleAttribute(image.getElement(), 'zIndex', '1000');
    this.setWidgetHexPosition(image, p_fireAction.getTokenTarget(model_0().getGame()).getPosition());
  }
}
;
_.drawFoot = function drawFoot(p_position){
  this.drawImage_0(arrow(this.getZoom().getValue_1(), p_position.getSector()), p_position);
}
;
_.drawImage_0 = function drawImage(p_image, p_position){
  var image;
  image = this.m_images.getNextImage();
  p_image.applyTo_0(image);
  setStyleAttribute(image.getElement(), 'zIndex', '1000');
  image.removeStyleName('transparent50');
  this.setWidgetHexPosition(image, p_position);
}
;
_.drawTransparentImage = function drawTransparentImage(p_image, p_position){
  var image;
  image = this.m_images.getNextImage();
  p_image.applyTo_0(image);
  setStyleAttribute(image.getElement(), 'zIndex', '1000');
  image.addStyleName('transparent50');
  this.setWidgetHexPosition(image, p_position);
}
;
_.drawTransparentToken = function drawTransparentToken(p_type, p_color, p_position){
  var image;
  image = null;
  if (p_type.canBeColored()) {
    image = create_7(getTokenImage_0(p_color, this.getZoom().getValue_1(), p_type, p_position.getSector()));
  }
   else {
    image = create_7(getTokenImage_0(new EnuColor_0(0), this.getZoom().getValue_1(), p_type, p_position.getSector()));
  }
  this.drawTransparentImage(image, p_position);
}
;
_.drawTransparentToken_0 = function drawTransparentToken_0(p_token, p_position){
  this.drawTransparentToken(p_token.getType(), p_token.getEnuColor(), p_position);
}
;
_.onModelChange_0 = function onModelChange_4(p_forceRedraw){
  var action;
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  action = model_0().getActionBuilder();
  if (neq(action.getLastUpdate().getTime_1(), this.m_actionLastUpdate) || p_forceRedraw) {
    this.redrawAction();
  }
}
;
_.redrawAction = function redrawAction(){
  var action, actionCount, actionList, firstAction, index_0, nextAction, nextNextAction, position, previousAction, tokenType;
  this.m_actionLastUpdate = model_0().getActionBuilder().getLastUpdate().getTime_1();
  actionList = model_0().getActionList();
  this.m_images.resetImageIndex();
  actionCount = actionList.size_1();
  index_0 = 0;
  firstAction = null;
  if (actionCount > 0) {
    firstAction = castTo(actionList.get_0(0), 20);
  }
  while (index_0 < actionCount) {
    action = castTo(actionList.get_0(index_0), 20);
    nextAction = model_0().getActionBuilder().getAction(index_0 + 1);
    previousAction = model_0().getActionBuilder().getAction(index_0 - 1);
    if (jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtMove))) {
      if (isNull(nextAction) || jsEquals(nextAction.getType_0(), ($clinit_GameLogType() , EvtLoad)) && castTo(nextAction, 180).getToken_3(model_0().getGame()).getType().isOre() && isNotNull(firstAction) && jsNotEquals(firstAction.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
        if (isNotNull(firstAction) && jsEquals(firstAction.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
          this.drawTransparentToken(castTo(firstAction, 83).getConstructType(), castTo(firstAction, 83).getTokenCarrier(model_0().getGame()).getEnuColor(), castTo(action, 84).getNewPosition());
        }
         else {
          this.drawTransparentToken_0(castTo(action, 84).getToken_3(model_0().getGame()), castTo(action, 84).getNewPosition());
        }
      }
       else {
        if (model_0().getActionBuilder().getSelectedToken().getHexagonSize() == 2) {
          if (model_0().getActionBuilder().getSelectedToken().getPosition().equals_3(model_0().getActionBuilder().getSelectedPosition_0())) {
            nextNextAction = model_0().getActionBuilder().getAction(index_0 + 2);
            if (isNotNull(nextNextAction) && !jsEquals(nextNextAction.getType_0(), ($clinit_GameLogType() , EvtLoad))) {
              this.drawFoot(castTo(action, 84).getNewPosition());
            }
          }
           else {
            if (isNotNull(previousAction) && !jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad))) {
              this.drawFoot(castTo(action, 84).getNewPosition());
            }
          }
        }
         else {
          this.drawFoot(castTo(action, 84).getNewPosition());
        }
      }
    }
     else if (jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtLoad))) {
      if (isNotNull(nextAction) && jsEquals(nextAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad))) {
        position = castTo(action, 17).getTokenCarrier(model_0().getGame()).getPosition().newInstance();
        position.setSector(coordinateSystem_0().getSector_0(castTo(action, 17).getToken_3(model_0().getGame()).getPosition(), position));
        this.drawFoot(position);
      }
       else if (isNotNull(previousAction) && (jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtMove)) || jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad))) && castTo(action, 17).getToken_3(model_0().getGame()).getType().isOre() && isNotNull(firstAction) && jsNotEquals(firstAction.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
        this.drawTransparentToken_0(castTo(action, 17).getToken_3(model_0().getGame()), castTo(previousAction, 17).getNewPosition());
      }
       else if (isNull(model_0().getActionBuilder().getSelectedAction())) {
        this.drawTransparentToken_0(castTo(action, 17).getToken_3(model_0().getGame()), castTo(action, 17).getTokenCarrier(model_0().getGame()).getPosition());
      }
    }
     else if (jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtTransfer))) {
      if (isNotNull(nextAction) && jsEquals(nextAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad))) {
        position = castTo(action, 17).getNewTokenCarrier(model_0().getGame()).getPosition().newInstance();
        position.setSector(coordinateSystem_0().getSector_0(castTo(action, 17).getTokenCarrier(model_0().getGame()).getPosition(), position));
        this.drawFoot(position);
      }
       else if (isNotNull(previousAction) && (jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtMove)) || jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad))) && castTo(action, 17).getToken_3(model_0().getGame()).getType().isOre() && isNotNull(firstAction) && jsNotEquals(firstAction.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
        this.drawTransparentToken_0(castTo(action, 17).getToken_3(model_0().getGame()), castTo(previousAction, 17).getNewPosition());
      }
       else if (isNull(model_0().getActionBuilder().getSelectedAction())) {
        this.drawTransparentToken_0(castTo(action, 17).getToken_3(model_0().getGame()), castTo(action, 17).getTokenCarrier(model_0().getGame()).getPosition());
      }
    }
     else if (jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtUnLoad))) {
      if (isNotNull(nextAction) && (jsEquals(nextAction.getType_0(), ($clinit_GameLogType() , EvtMove)) || jsEquals(nextAction.getType_0(), ($clinit_GameLogType() , EvtLoad)))) {
        this.drawFoot(castTo(action, 37).getNewPosition());
      }
       else {
        if (isNotNull(firstAction) && jsEquals(firstAction.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
          this.drawTransparentToken(castTo(firstAction, 83).getConstructType(), castTo(firstAction, 83).getTokenCarrier(model_0().getGame()).getEnuColor(), castTo(action, 37).getNewPosition());
        }
         else {
          this.drawTransparentToken_0(castTo(action, 37).getToken_3(model_0().getGame()), castTo(action, 37).getNewPosition());
        }
      }
    }
     else if (jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtFire))) {
      this.drawFireAction(castTo(action, 60));
    }
     else if (jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtControl))) {
      this.drawControlAction(castTo(action, 97));
    }
    index_0++;
  }
  if (isNotNull(model_0().getActionBuilder().getSelectedAction())) {
    action = model_0().getActionBuilder().getSelectedAction();
    if (instanceOf(action, 83)) {
      if (!isNotNull(castTo(action, 83).getTokenCarrier(model_0().getGame()))) {
        debugger;
        throw toJs(makeAssertionError());
      }
      this.drawTransparentToken(castTo(action, 83).getConstructType(), castTo(action, 83).getTokenCarrier(model_0().getGame()).getEnuColor(), castTo(action, 83).getTokenCarrier(model_0().getGame()).getPosition());
    }
     else if (instanceOf(action, 37)) {
      if (isNotNull(castTo(action, 37).getToken_3(model_0().getGame()))) {
        position = model_0().getActionBuilder().getSelectedPosition_0();
        if (isNotNull(castTo(action, 37).getNewPosition())) {
          position.setSector(coordinateSystem_0().getSector_0(position, castTo(action, 37).getNewPosition()));
        }
        tokenType = action.getToken_3(model_0().getGame()).getType();
        if (isNotNull(firstAction) && jsEquals(firstAction.getType_0(), ($clinit_GameLogType() , EvtConstruct))) {
          tokenType = castTo(firstAction, 83).getConstructType();
        }
        this.drawTransparentToken(tokenType, castTo(action, 37).getTokenCarrier(model_0().getGame()).getEnuColor(), position);
      }
    }
     else if (instanceOf(action, 60)) {
      this.drawFireAction(castTo(action, 60));
    }
     else if (instanceOf(action, 97)) {
      this.drawControlAction(castTo(action, 97));
    }
     else if (instanceOf(action, 214) || instanceOf(action, 246)) {
      if (isNotNull(castTo(action, 17).getPosition()) && castTo(action, 17).getPosition().getX() >= 0) {
        this.drawTransparentToken_0(castTo(action, 17).getToken_3(model_0().getGame()), castTo(action, 17).getPosition());
        if (instanceOf(action, 214)) {
          this.drawTransparentImage(deployment3(this.getZoom().getValue_1()), castTo(action, 17).getPosition());
        }
      }
    }
  }
  this.m_images.hideOtherImage();
}
;
_.setZoom = function setZoom_3(p_zoom){
  getClassPrototype(57).setZoom.call(this, p_zoom);
  this.redrawAction();
}
;
_.m_actionLastUpdate = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerAction_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerAction', 400, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_WgtBoardLayerAtmosphere(){
  $clinit_WgtBoardLayerAtmosphere = emptyMethod;
  $clinit_WgtBoardLayerBase();
  s_firstGridRuleIndex = createGridRules();
}

function WgtBoardLayerAtmosphere(){
  $clinit_WgtBoardLayerAtmosphere();
  WgtBoardLayerBase.call(this);
  this.$init_108();
  this.setStyleName('fmp-atmosphere');
}

function createGridRules(){
  var oldLength;
  oldLength = setCssRule_0('.fmp-atmosphere', '{background: url(' + 'images/board/' + 'atmosphere/clear.png);}') - 1;
  return oldLength;
}

defineClass(401, 57, {102:1, 13:1, 148:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerAtmosphere);
_.$init_108 = function $init_108(){
}
;
_.onModelChange_0 = function onModelChange_5(p_forceRedraw){
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  if (this.isVisible() != model_0().isAtmosphereDisplayed()) {
    this.setVisible(model_0().isAtmosphereDisplayed());
  }
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_2(p_event){
}
;
var s_firstGridRuleIndex = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerAtmosphere_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerAtmosphere', 401, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_WgtBoardLayerFireCover(){
  $clinit_WgtBoardLayerFireCover = emptyMethod;
  var iColor;
  $clinit_WgtBoardLayerBase();
  {
    for (iColor = 0; iColor < getTotalNumberOfColor(); iColor++) {
      createFireCoverRules(getColorFromIndex(iColor).toString_0());
    }
  }
}

function WgtBoardLayerFireCover(){
  $clinit_WgtBoardLayerFireCover();
  WgtBoardLayerBase.call(this);
  this.$init_109();
}

function createFireCoverRules(p_color){
  setCssRule_0('.cover-tactic-' + p_color, ' {position: absolute; width: 77px; background: url(' + 'images/board/' + p_color + '/tactic/cover.png);}');
  setCssRule_0('.cover-strategy-' + p_color, ' {position: absolute; width: 34px; background: url(' + 'images/board/' + p_color + '/strategy/cover.png);}');
  setCssRule_0('.hcover-tactic-' + p_color, ' {position: absolute; width: 77px; background: url(' + 'images/board/' + p_color + '/tactic/hcover.png);}');
  setCssRule_0('.hcover-strategy-' + p_color, ' {position: absolute; width: 34px; background: url(' + 'images/board/' + p_color + '/strategy/hcover.png);}');
}

defineClass(396, 57, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerFireCover);
_.$init_109 = function $init_109(){
  this.m_fireCoverLayers = new HashMap;
  this.m_validLayersSet = new HashSet;
  this.m_tokenLastUpdate = 0;
  this.m_gameLastVersion = 0;
  this.m_lastGameId = 0;
}
;
_.cropDisplay = function cropDisplay_2(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  getClassPrototype(57).cropDisplay.call(this, p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  this.redraw();
}
;
_.displayFireCover = function displayFireCover(p_isVisible){
  var game, team, team$iterator;
  game = model_0().getGame();
  for (team$iterator = game.getTeams().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    this.displayFireCover_0(p_isVisible, team);
  }
}
;
_.displayFireCover_0 = function displayFireCover_0(p_isVisible, p_team){
  var html;
  html = castTo(castTo(this.m_fireCoverLayers.get_1(p_team), 31), 31);
  if (p_isVisible) {
    if (isNull(html)) {
      html = new HTML;
      this.add_4(html, 0, 0);
      this.m_fireCoverLayers.put(p_team, html);
      this.m_validLayersSet.add_5(p_team);
      html.setHTML_0(this.getFireCoverHtml(p_team));
    }
    if (!this.m_validLayersSet.contains_0(p_team)) {
      this.m_validLayersSet.add_5(p_team);
      html.setHTML_0(this.getFireCoverHtml(p_team));
    }
  }
  if (isNotNull(html)) {
    html.setVisible(p_isVisible);
  }
}
;
_.getFireCoverHtml = function getFireCoverHtml(p_team){
  var cssClass, game, hCssClass, hexHeight, html, ix, iy, pxHexHeight, pxHexWidth, pxX, pxY, yOffset;
  html = new StringBuffer;
  game = model_0().getGame();
  this.resetPixelSize();
  pxHexWidth = getHexWidth_0(this.getZoom());
  pxHexHeight = getHexHeight_0(this.getZoom());
  cssClass = 'cover-';
  if (this.getZoom().getValue_1() == 0) {
    cssClass += 'strategy-';
  }
   else {
    cssClass += 'tactic-';
  }
  if (!isSingleColor_0(p_team.getFireColor())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  cssClass += '' + singleColorToString(p_team.getFireColor());
  hCssClass = 'h' + cssClass;
  html.append_3('<div style="overflow: hidden; width: 100%; height: 100%;">');
  for (ix = this.m_cropLeftHex; ix < this.m_cropRightHex; ix++) {
    pxX = (ix - this.m_cropLeftHex) * narrow_int(pxHexWidth * 3 / 4);
    yOffset = 0;
    if (ix % 2 != 0) {
      yOffset = narrow_int(pxHexHeight / 2);
    }
    iy = this.m_cropTopHex;
    while (iy < this.m_cropBotomHex) {
      pxY = (iy - this.m_cropTopHex) * pxHexHeight + yOffset;
      if (game.getFireCover_1(ix, iy, p_team) >= 2) {
        hexHeight = 1;
        while (iy + 1 < this.m_cropBotomHex && game.getFireCover_1(ix, iy + 1, p_team) >= 2) {
          hexHeight++;
          iy++;
        }
        html.append_3('<div style="left: ' + pxX + 'px; top: ' + pxY + 'px; height: ' + hexHeight * pxHexHeight + 'px;" class="' + cssClass + '"><\/div>');
      }
       else if (game.getFireCover_1(ix, iy, p_team) + game.getBoardFireCover().getDisabledFireCover_0(ix, iy, p_team) >= 2) {
        html.append_3('<div style="left: ' + pxX + 'px; top: ' + pxY + 'px; height: ' + pxHexHeight + 'px;" class="' + hCssClass + '"><\/div>');
      }
      iy++;
    }
  }
  html.append_3('<\/div>');
  return html.toString_0();
}
;
_.isAnyCoverVisible = function isAnyCoverVisible(){
  var html, html$iterator;
  for (html$iterator = this.m_fireCoverLayers.values_0().iterator_0(); html$iterator.hasNext_0();) {
    html = castTo(html$iterator.next_1(), 31);
    if (html.isVisible()) {
      return true;
    }
  }
  return false;
}
;
_.onModelChange_0 = function onModelChange_6(p_forceRedraw){
  var game, html, html$iterator;
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  game = model_0().getGame();
  if (neq(game.getId(), this.m_lastGameId) || p_forceRedraw) {
    this.m_lastGameId = game.getId();
    this.m_tokenLastUpdate = game.getLastTokenUpdate().getTime_1();
    this.m_gameLastVersion = game.getVersion();
    for (html$iterator = this.m_fireCoverLayers.values_0().iterator_0(); html$iterator.hasNext_0();) {
      html = castTo(html$iterator.next_1(), 31);
      this.remove_0(html);
    }
    this.m_fireCoverLayers.clear_0();
    this.m_validLayersSet.clear_0();
    this.redraw();
  }
   else if (gt(game.getVersion(), this.m_gameLastVersion) || neq(this.m_tokenLastUpdate, model_0().getGame().getLastTokenUpdate().getTime_1())) {
    this.redraw();
  }
   else if (this.isAnyCoverVisible() != model_0().isFireCoverDisplayed()) {
    this.displayFireCover(model_0().isFireCoverDisplayed());
  }
}
;
_.redraw = function redraw_5(){
  var entry, entry$iterator, layer;
  this.m_tokenLastUpdate = game_0().getLastTokenUpdate().getTime_1();
  this.m_gameLastVersion = game_0().getVersion();
  this.m_validLayersSet.clear_0();
  for (entry$iterator = this.m_fireCoverLayers.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    layer = castTo(entry.getValue_0(), 31);
    if (layer.isVisible()) {
      layer.setHTML_0(this.getFireCoverHtml(castTo(castTo(entry.getKey(), 43), 43)));
      this.m_validLayersSet.add_5(castTo(castTo(entry.getKey(), 43), 43));
    }
  }
}
;
_.setZoom = function setZoom_4(p_zoom){
  var entry, entry$iterator, layer;
  getClassPrototype(57).setZoom.call(this, p_zoom);
  this.m_validLayersSet.clear_0();
  for (entry$iterator = this.m_fireCoverLayers.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    layer = castTo(castTo(entry.getValue_0(), 31), 31);
    if (layer.isVisible()) {
      layer.setHTML_0(this.getFireCoverHtml(castTo(castTo(entry.getKey(), 43), 43)));
      this.m_validLayersSet.add_5(castTo(castTo(entry.getKey(), 43), 43));
    }
  }
}
;
_.m_gameLastVersion = 0;
_.m_lastGameId = 0;
_.m_tokenLastUpdate = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerFireCover_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerFireCover', 396, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_WgtBoardLayerGrid(){
  $clinit_WgtBoardLayerGrid = emptyMethod;
  $clinit_WgtBoardLayerBase();
  s_firstGridRuleIndex_0 = createGridRules_0();
}

function WgtBoardLayerGrid(){
  $clinit_WgtBoardLayerGrid();
  WgtBoardLayerBase.call(this);
  this.$init_110();
  this.setStyleName('fmp-grid-tactic');
}

function createGridRules_0(){
  var oldLength;
  oldLength = setCssRule_0('.fmp-grid-tactic', '{background: url(' + 'images/board/' + model_0().getGame().getPlanetType().getFolderName() + '/tactic/grid.gif);}') - 1;
  setCssRule_0('.fmp-grid-tactic-odd', '{background: url(' + 'images/board/' + model_0().getGame().getPlanetType().getFolderName() + '/tactic/grid.gif) ' + narrow_int(getHexWidth(1) * 3 / 4) + 'px 0px;}');
  setCssRule_0('.fmp-grid-strategy', '{background: url(' + 'images/board/' + model_0().getGame().getPlanetType().getFolderName() + '/strategy/grid.gif);}');
  setCssRule_0('.fmp-grid-strategy-odd', '{background: url(' + 'images/board/' + model_0().getGame().getPlanetType().getFolderName() + '/strategy/grid.gif) ' + narrow_int(getHexWidth(0) * 3 / 4) + 'px 0px;}');
  return oldLength;
}

defineClass(397, 57, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerGrid);
_.$init_110 = function $init_110(){
}
;
_.cropDisplay = function cropDisplay_3(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  getClassPrototype(57).cropDisplay.call(this, p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  this.setZoom(model_0().getZoomDisplayed());
}
;
_.onModelChange_0 = function onModelChange_7(p_forceRedraw){
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  if (this.isVisible() != model_0().isGridDisplayed()) {
    this.setVisible(model_0().isGridDisplayed());
  }
}
;
_.setZoom = function setZoom_5(p_zoom){
  var odd;
  getClassPrototype(57).setZoom.call(this, p_zoom);
  odd = '';
  if (this.m_cropLeftHex % 2 != 0)
    odd = '-odd';
  switch (p_zoom.getValue_1()) {
    default:case 1:
      this.setStyleName('fmp-grid-tactic' + odd);
      break;
    case 0:
      this.setStyleName('fmp-grid-strategy' + odd);
      break;
  }
}
;
var s_firstGridRuleIndex_0 = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerGrid_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerGrid', 397, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_WgtBoardLayerLocked(){
  $clinit_WgtBoardLayerLocked = emptyMethod;
  $clinit_WgtBoardLayerBase();
}

function WgtBoardLayerLocked(){
  $clinit_WgtBoardLayerLocked();
  WgtBoardLayerBase.call(this);
  this.$init_111();
}

defineClass(399, 57, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerLocked);
_.$init_111 = function $init_111(){
  this.m_usedImages = new LinkedList;
  this.m_unusedImages = new LinkedList;
  this.m_clockTimer = new WgtBoardLayerLocked$1(this);
}
;
_.addImage = function addImage(){
  var image, imageprototype;
  imageprototype = create_7(($clinit_Icons() , s_instance_5).strategy_padlock());
  if (model_0().getZoomDisplayed().getValue_1() == 1) {
    imageprototype = create_7(($clinit_Icons() , s_instance_5).tactic_padlock());
  }
  image = null;
  if (!this.m_unusedImages.isEmpty()) {
    image = castTo(this.m_unusedImages.iterator_0().next_1(), 22);
    imageprototype.applyTo_0(image);
    image.setVisible(true);
    this.m_unusedImages.remove_1(image);
  }
   else {
    image = imageprototype.createImage();
    this.add_0(image);
    setStyleAttribute(image.getElement(), 'zIndex', '1000');
    image.addStyleName('transparent50');
  }
  this.m_usedImages.add_5(image);
  return image;
}
;
_.cropDisplay = function cropDisplay_4(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  getClassPrototype(57).cropDisplay.call(this, p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  this.redraw();
}
;
_.onModelChange_0 = function onModelChange_8(p_forceRedraw){
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  this.redrawLock();
}
;
_.redrawLock = function redrawLock(){
  $clinit_WgtBoardLayerLocked();
  var game, myRegistration, position, position$iterator, registration, registration$iterator;
  game = model_0().getGame();
  if (!game.isParallel() || game.getCurrentTimeStep() <= game.getEbConfigGameTime().getDeploymentTimeStep() || model_0().isTimeLineMode()) {
    return;
  }
  this.removeAllImages();
  myRegistration = model_0().getMyRegistration();
  for (registration$iterator = game.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    if (jsNotEquals(registration, myRegistration) && isNotNull(registration.getTeam_1(game).getEndTurnDate()) && isNotNull(registration.getTeam_1(game).getLockedPosition())) {
      if (lt(registration.getTeam_1(game).getEndTurnDate().getTime_1(), currentTimeMillis_0())) {
        registration.getTeam_1(game).setEndTurnDate(null);
        registration.getTeam_1(game).setLockedPosition(null);
      }
       else {
        for (position$iterator = coordinateSystem_0().drawHexagon(registration.getTeam_1(game).getLockedPosition(), 6).iterator_0(); position$iterator.hasNext_0();) {
          position = castTo(position$iterator.next_1(), 23);
          if (jsNotEquals(game.getLand_0(position), ($clinit_LandType() , None))) {
            this.setWidgetHexPosition(this.addImage(), position);
          }
        }
        this.m_clockTimer.schedule(toInt_0(sub_1(registration.getTeam_1(game).getEndTurnDate().getTime_1(), currentTimeMillis_0())));
      }
    }
  }
}
;
_.removeAllImages = function removeAllImages(){
  var image, image$iterator;
  for (image$iterator = this.m_usedImages.iterator_0(); image$iterator.hasNext_0();) {
    image = castTo(image$iterator.next_1(), 22);
    image.setVisible(false);
  }
  this.m_unusedImages.addAll(this.m_usedImages);
  this.m_usedImages.clear_0();
}
;
_.setZoom = function setZoom_6(p_zoom){
  getClassPrototype(57).setZoom.call(this, p_zoom);
  this.redrawLock();
}
;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerLocked_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerLocked', 399, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_WgtBoardLayerLocked$1(){
  $clinit_WgtBoardLayerLocked$1 = emptyMethod;
  $clinit_Timer();
}

function WgtBoardLayerLocked$1(this$0){
  $clinit_WgtBoardLayerLocked$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_112();
}

defineClass(780, 93, {1:1}, WgtBoardLayerLocked$1);
_.$init_112 = function $init_112(){
  this.delayMillis = 2147483647;
}
;
_.run = function run_5(){
  this.delayMillis = 2147483647;
  this.this$01.redrawLock();
}
;
_.schedule = function schedule_0(p_delayMillis){
  if (p_delayMillis > this.delayMillis)
    return;
  this.delayMillis = p_delayMillis;
  getClassPrototype(93).schedule.call(this, this.delayMillis);
}
;
_.delayMillis = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerLocked$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerLocked/1', 780, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_WgtBoardLayerMap(){
  $clinit_WgtBoardLayerMap = emptyMethod;
  $clinit_WgtBoardLayerBase();
}

function WgtBoardLayerMap(){
  $clinit_WgtBoardLayerMap();
  WgtBoardLayerBase.call(this);
  this.$init_113();
  this.add_4(this.m_image, 0, 0);
}

defineClass(395, 57, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerMap);
_.$init_113 = function $init_113(){
  this.m_image = new Image_0;
  this.m_lastTideValue = ($clinit_Tide() , Unknown_1);
  this.m_lastGameId = 0;
}
;
_.cropDisplay = function cropDisplay_5(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  var pxX, pxY;
  getClassPrototype(57).cropDisplay.call(this, p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  pxX = -1 * this.m_cropLeftHex * narrow_int(getHexWidth_0(this.getZoom()) * 3 / 4);
  pxY = -1 * this.m_cropTopHex * getHexHeight_0(this.getZoom());
  this.add_4(this.m_image, pxX, pxY);
}
;
_.onModelChange_0 = function onModelChange_9(p_forceRedraw){
  var game;
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  if (this.isVisible() != model_0().isCustomMapDisplayed()) {
    this.setVisible(model_0().isCustomMapDisplayed());
  }
  if (!this.isVisible()) {
    return;
  }
  if (neq(this.m_lastGameId, model_0().getGame().getId()) || p_forceRedraw) {
    game = model_0().getGame();
    this.m_lastGameId = game.getId();
    this.m_lastTideValue = game.getCurrentTide();
    this.m_image.setUrl(game.getMapUri());
    this.setZoom(this.getZoom());
  }
  if (jsNotEquals(this.m_lastTideValue, model_0().getGame().getCurrentTide())) {
    this.m_lastTideValue = model_0().getGame().getCurrentTide();
    this.onTideChange();
  }
}
;
_.onTideChange = function onTideChange_0(){
}
;
_.setZoom = function setZoom_7(p_zoom){
  var pxH, pxW;
  getClassPrototype(57).setZoom.call(this, p_zoom);
  pxW = landWidthHex2Pix(game_0().getLandWidth(), this.getZoom());
  pxH = landHeightHex2Pix(game_0().getLandHeight(), this.getZoom());
  this.m_image.setPixelSize(pxW, pxH);
  this.cropDisplay(this.m_cropLeftHex, this.m_cropTopHex, this.m_cropRightHex, this.m_cropBotomHex);
  this.onTideChange();
  this.show();
}
;
_.m_lastGameId = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerMap_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerMap', 395, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_WgtBoardLayerSelect(){
  $clinit_WgtBoardLayerSelect = emptyMethod;
  $clinit_WgtBoardLayerBase();
}

function WgtBoardLayerSelect(){
  $clinit_WgtBoardLayerSelect();
  WgtBoardLayerBase.call(this);
  this.$init_114();
  select_hexagon(this.getZoom().getValue_1()).applyTo_0(this.m_hexagonSelect);
  this.add_4(this.m_hexagonSelect, 0, 0);
  this.m_hexagonSelect.setVisible(false);
  this.getHighLightImage().applyTo_0(this.m_hexagonHightlight);
  this.add_4(this.m_hexagonHightlight, 0, 0);
}

defineClass(398, 57, {102:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerSelect);
_.$init_114 = function $init_114(){
  this.m_hexagonHightlight = new Image_0;
  this.m_hexagonSelect = new Image_0;
  this.m_actionLastUpdate = 0;
}
;
_.cropDisplay = function cropDisplay_6(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  getClassPrototype(57).cropDisplay.call(this, p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  this.redraw();
}
;
_.getHighLightImage = function getHighLightImage(){
  var action, actionBuilder;
  actionBuilder = model_0().getActionBuilder();
  if (isNotNull(actionBuilder.getSelectedAction()) && (jsEquals(actionBuilder.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtLand)) || jsEquals(actionBuilder.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtDeployment)))) {
    action = castTo(actionBuilder.getSelectedAction(), 17);
    return create_7(getTokenImage_1(action.getToken_3(model_0().getGame()), this.getZoom().getValue_1()));
  }
  return hightlight_hexagon(this.getZoom().getValue_1());
}
;
_.moveHightLightHexagon = function moveHightLightHexagon(p_anBoardPosition){
  var distance, evDeploy;
  evDeploy = model_0().getActionBuilder().getSelectedAction();
  if (isNotNull(evDeploy) && jsEquals(evDeploy.getType_0(), ($clinit_GameLogType() , EvtDeployment))) {
    distance = coordinateSystem_0().getDiscreteDistance(evDeploy.getToken_3(model_0().getGame()).getCarrierToken().getPosition(), p_anBoardPosition);
    if (distance > 3) {
      hightlight_hexagon(this.getZoom().getValue_1()).applyTo_0(this.m_hexagonHightlight);
    }
     else {
      this.getHighLightImage().applyTo_0(this.m_hexagonHightlight);
    }
  }
  this.setWidgetHexPosition(this.m_hexagonHightlight, p_anBoardPosition);
}
;
_.onModelChange_0 = function onModelChange_10(p_forceRedraw){
  var action;
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  action = model_0().getActionBuilder();
  if (neq(action.getLastUpdate().getTime_1(), this.m_actionLastUpdate) || p_forceRedraw) {
    this.redrawAction();
  }
}
;
_.redrawAction = function redrawAction_0(){
  var actionBuilder;
  actionBuilder = model_0().getActionBuilder();
  this.m_actionLastUpdate = actionBuilder.getLastUpdate().getTime_1();
  if (actionBuilder.isBoardTokenSelected() || actionBuilder.isEmptyLandSelected()) {
    this.m_hexagonSelect.setVisible(true);
    this.setWidgetHexPosition(this.m_hexagonSelect, actionBuilder.getSelectedPosition_0());
  }
   else {
    this.getHighLightImage().applyTo_0(this.m_hexagonHightlight);
    this.m_hexagonSelect.setVisible(false);
  }
}
;
_.setHexagonHightVisible = function setHexagonHightVisible(p_visible){
  this.m_hexagonHightlight.setVisible(p_visible);
}
;
_.setZoom = function setZoom_8(p_zoom){
  getClassPrototype(57).setZoom.call(this, p_zoom);
  this.getHighLightImage().applyTo_0(this.m_hexagonHightlight);
  select_hexagon(this.getZoom().getValue_1()).applyTo_0(this.m_hexagonSelect);
  this.redrawAction();
}
;
_.m_actionLastUpdate = 0;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerSelect_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardLayerSelect', 398, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_WgtBoardTorus(){
  $clinit_WgtBoardTorus = emptyMethod;
  $clinit_WgtBoardBase();
  CADRAN = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 2), {4:1, 1:1, 5:1}, 49, 0, [stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [2, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [0, 1, 2]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [1, 2, 0])]);
}

function WgtBoardTorus(){
  $clinit_WgtBoardTorus();
  var cadranLayers, ix, iy;
  WgtBoardBase.call(this);
  this.$init_115();
  for (ix = 0; ix < 3; ix++)
    for (iy = 0; iy < 3; iy++) {
      cadranLayers = new BoardLayerCollection;
      cadranLayers.addLayer(new WgtBoardLayerLand);
      cadranLayers.addLayer(new WgtBoardLayerMap);
      setCheck(this.m_cadranLayers[ix], iy, cadranLayers);
    }
  this.m_globalLayers.addLayer(new WgtBoardLayerFireCover);
  this.m_globalLayers.addLayer(new WgtBoardLayerGrid);
  this.m_globalLayers.addLayer(this.m_layerSelect);
  this.m_globalLayers.addLayer(new WgtBoardLayerToken);
  this.m_globalLayers.addLayer(new WgtBoardLayerAction);
  this.m_globalLayers.addLayer(new WgtBoardLayerLocked);
  if (getNavigator() == 0) {
    this.m_globalLayers.addLayer(new WgtBoardLayerAtmosphere);
  }
  this.onGameLoad(model_0().getGame());
}

defineClass(740, 273, {486:1, 79:1, 77:1, 78:1, 76:1, 253:1, 254:1, 255:1, 308:1, 219:1, 306:1, 305:1, 304:1, 13:1, 18:1, 86:1, 85:1, 45:1, 307:1, 14:1, 11:1, 1:1}, WgtBoardTorus);
_.$init_115 = function $init_115(){
  this.m_globalLayers = new BoardLayerCollection;
  this.m_layerSelect = new WgtBoardLayerSelect;
  this.m_cadranLayers = initMultidimensionalArray(Lcom_fullmetalgalaxy_client_game_board_BoardLayerCollection_2_classLit, [{4:1, 1:1, 5:1}, {4430:1, 4:1, 1:1, 5:1}], [4430, 212], 0, [3, 3], 2);
  this.m_middleLocalLayerIX = 1;
  this.m_middleLocalLayerIY = 1;
  this.m_isVisible = false;
  this.m_hexagonHightlightPosition = new AnBoardPosition_0(0, 0);
  this.m_oldZoom = -1;
  this.m_localLayerHexWidth = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, 3, 15, 1);
  this.m_localLayerHexHeight = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, 3, 15, 1);
}
;
_.convertPixPositionToHexPosition = function convertPixPositionToHexPosition_1(p_pixPosition){
  var position;
  position = convertPixPositionToHexPosition(p_pixPosition, this.getZoom(), this.m_globalLayers.getCropTopLeft());
  if (position.getX() >= game_0().getLandWidth()) {
    position.setX(position.getX() - game_0().getLandWidth());
  }
  if (position.getY() >= game_0().getLandHeight()) {
    position.setY(position.getY() - game_0().getLandHeight());
  }
  return position;
}
;
_.notifyModelUpdate = function notifyModelUpdate_1(p_modelSender){
  var ix, iy;
  if (!this.m_isVisible) {
    return;
  }
  if (this.m_oldZoom != this.getZoom().getValue_1()) {
    this.m_oldZoom = this.getZoom().getValue_1();
    for (ix = 0; ix < 3; ix++)
      for (iy = 0; iy < 3; iy++) {
        this.m_cadranLayers[ix][iy].setZoom(this.getZoom());
      }
    this.m_globalLayers.setZoom(this.getZoom());
    this.m_panel.setPixelSize(this.m_globalLayers.asWidget().getOffsetWidth(), this.m_globalLayers.asWidget().getOffsetHeight());
    this.setLayersPositions(p_modelSender.getGame());
  }
   else {
    for (ix = 0; ix < 3; ix++)
      for (iy = 0; iy < 3; iy++) {
        this.m_cadranLayers[ix][iy].onModelChange();
      }
    this.m_globalLayers.onModelChange();
  }
}
;
_.onGameLoad = function onGameLoad_0(p_game){
  var cropBottom, cropLeft, cropRight, cropTop, ix, iy;
  this.m_localLayerHexWidth[0] = narrow_int(p_game.getLandWidth() / 3);
  this.m_localLayerHexWidth[1] = narrow_int((p_game.getLandWidth() - this.m_localLayerHexWidth[0]) / 2);
  this.m_localLayerHexWidth[2] = p_game.getLandWidth() - this.m_localLayerHexWidth[0] - this.m_localLayerHexWidth[1];
  this.m_localLayerHexHeight[0] = narrow_int(p_game.getLandHeight() / 3);
  this.m_localLayerHexHeight[1] = narrow_int((p_game.getLandHeight() - this.m_localLayerHexHeight[0]) / 2);
  this.m_localLayerHexHeight[2] = p_game.getLandHeight() - this.m_localLayerHexHeight[0] - this.m_localLayerHexHeight[1];
  cropLeft = 0;
  cropRight = 0;
  for (ix = 0; ix < 3; ix++) {
    cropLeft = cropRight;
    cropRight += this.m_localLayerHexWidth[ix];
    cropTop = 0;
    cropBottom = 0;
    for (iy = 0; iy < 3; iy++) {
      cropTop = cropBottom;
      cropBottom += this.m_localLayerHexHeight[iy];
      this.m_cadranLayers[ix][iy].cropDisplay(cropLeft, cropTop, cropRight, cropBottom);
    }
  }
  this.setLayersPositions(p_game);
}
;
_.onMouseMove_0 = function onMouseMove_4(p_event){
  var position;
  position = this.convertPixPositionToHexPosition(new AnPair_0(p_event.getX(), p_event.getY()));
  if (position.getX() != this.m_hexagonHightlightPosition.getX() || position.getY() != this.m_hexagonHightlightPosition.getY()) {
    this.m_hexagonHightlightPosition = position;
    this.m_layerSelect.moveHightLightHexagon(this.m_hexagonHightlightPosition);
  }
}
;
_.onMouseOut = function onMouseOut_0(p_event){
  this.m_layerSelect.setHexagonHightVisible(false);
}
;
_.onMouseOver = function onMouseOver_0(event_0){
  this.m_layerSelect.setHexagonHightVisible(true);
}
;
_.onScroll = function onScroll_1(p_widget, p_scrollLeft, p_scrollTop){
  var hexCenter, ix, iy, middleLocalLayerIX, middleLocalLayerIY, pixCenter, pxOffsetX, pxOffsetY, visibleLeftPix, visibleTopPix;
  pixCenter = new AnPair_0(p_scrollLeft + narrow_int(p_widget.getOffsetWidth() / 2), p_scrollTop + narrow_int(p_widget.getOffsetHeight() / 2));
  hexCenter = convertPixPositionToHexPosition(pixCenter, this.getZoom(), new AnPair_0(0, 0));
  middleLocalLayerIX = 1;
  middleLocalLayerIY = 1;
  if (game_0().getMapShape().isEWLinked()) {
    if (hexCenter.getX() < narrow_int(model_0().getGame().getLandWidth() / 3))
      middleLocalLayerIX = 0;
    if (hexCenter.getX() >= narrow_int(model_0().getGame().getLandWidth() * 2 / 3))
      middleLocalLayerIX = 2;
    middleLocalLayerIX += this.m_middleLocalLayerIX - 1;
    if (middleLocalLayerIX > 2)
      middleLocalLayerIX -= 3;
    if (middleLocalLayerIX < 0)
      middleLocalLayerIX += 3;
  }
  if (game_0().getMapShape().isNSLinked()) {
    if (hexCenter.getY() < narrow_int(model_0().getGame().getLandHeight() / 3))
      middleLocalLayerIY = 0;
    if (hexCenter.getY() >= narrow_int(model_0().getGame().getLandHeight() * 2 / 3))
      middleLocalLayerIY = 2;
    middleLocalLayerIY += this.m_middleLocalLayerIY - 1;
    if (middleLocalLayerIY > 2)
      middleLocalLayerIY -= 3;
    if (middleLocalLayerIY < 0)
      middleLocalLayerIY += 3;
  }
  if (middleLocalLayerIX != this.m_middleLocalLayerIX || middleLocalLayerIY != this.m_middleLocalLayerIY) {
    if (instanceOf(p_widget, 177)) {
      pxOffsetX = 0;
      pxOffsetY = 0;
      if (this.m_middleLocalLayerIX == 0 && middleLocalLayerIX == 2)
        pxOffsetX -= this.m_localLayerHexWidth[1];
      if (this.m_middleLocalLayerIX == 0 && middleLocalLayerIX == 1)
        pxOffsetX += this.m_localLayerHexWidth[2];
      if (this.m_middleLocalLayerIX == 1 && middleLocalLayerIX == 2)
        pxOffsetX += this.m_localLayerHexWidth[0];
      if (this.m_middleLocalLayerIX == 1 && middleLocalLayerIX == 0)
        pxOffsetX -= this.m_localLayerHexWidth[2];
      if (this.m_middleLocalLayerIX == 2 && middleLocalLayerIX == 0)
        pxOffsetX += this.m_localLayerHexWidth[1];
      if (this.m_middleLocalLayerIX == 2 && middleLocalLayerIX == 1)
        pxOffsetX -= this.m_localLayerHexWidth[0];
      if (this.m_middleLocalLayerIY == 0 && middleLocalLayerIY == 2)
        pxOffsetY -= this.m_localLayerHexHeight[1];
      if (this.m_middleLocalLayerIY == 0 && middleLocalLayerIY == 1)
        pxOffsetY += this.m_localLayerHexHeight[2];
      if (this.m_middleLocalLayerIY == 1 && middleLocalLayerIY == 2)
        pxOffsetY += this.m_localLayerHexHeight[0];
      if (this.m_middleLocalLayerIY == 1 && middleLocalLayerIY == 0)
        pxOffsetY -= this.m_localLayerHexHeight[2];
      if (this.m_middleLocalLayerIY == 2 && middleLocalLayerIY == 0)
        pxOffsetY += this.m_localLayerHexHeight[1];
      if (this.m_middleLocalLayerIY == 2 && middleLocalLayerIY == 1)
        pxOffsetY -= this.m_localLayerHexHeight[0];
      pxOffsetX *= narrow_int(getHexWidth_0(this.getZoom()) * 3 / 4);
      pxOffsetY *= getHexHeight_0(this.getZoom());
      pxOffsetX = castTo(p_widget, 177).getHorizontalScrollPosition() - pxOffsetX;
      pxOffsetY = castTo(p_widget, 177).getVerticalScrollPosition() - pxOffsetY;
      castTo(p_widget, 177).setScrollPositionSilent(pxOffsetX, pxOffsetY);
    }
    this.m_middleLocalLayerIY = middleLocalLayerIY;
    this.m_middleLocalLayerIX = middleLocalLayerIX;
    this.setLayersPositions(model_0().getGame());
  }
  for (ix = 0; ix < 3; ix++)
    for (iy = 0; iy < 3; iy++) {
      visibleLeftPix = p_scrollLeft - this.m_panel.getWidgetLeft(this.m_cadranLayers[ix][iy].asWidget());
      visibleTopPix = p_scrollTop - this.m_panel.getWidgetTop(this.m_cadranLayers[ix][iy].asWidget());
      this.m_cadranLayers[ix][iy].redraw_0(visibleLeftPix, visibleTopPix, visibleLeftPix + p_widget.getOffsetWidth(), visibleTopPix + p_widget.getOffsetHeight());
    }
  this.m_globalLayers.redraw_0(p_scrollLeft, p_scrollTop, p_scrollLeft + p_widget.getOffsetWidth(), p_scrollTop + p_widget.getOffsetHeight());
}
;
_.setLayerPosition = function setLayerPosition(p_game, p_layer, p_ix, p_iy){
  var pxOffsetX, pxOffsetY;
  pxOffsetX = 0;
  pxOffsetY = 0;
  if (p_ix > 0)
    pxOffsetX += this.m_localLayerHexWidth[CADRAN[this.m_middleLocalLayerIX][0]];
  if (p_iy > 0)
    pxOffsetY += this.m_localLayerHexHeight[CADRAN[this.m_middleLocalLayerIY][0]];
  if (p_ix > 1)
    pxOffsetX += this.m_localLayerHexWidth[CADRAN[this.m_middleLocalLayerIX][1]];
  if (p_iy > 1)
    pxOffsetY += this.m_localLayerHexHeight[CADRAN[this.m_middleLocalLayerIY][1]];
  pxOffsetX *= narrow_int(getHexWidth_0(this.getZoom()) * 3 / 4);
  pxOffsetY *= getHexHeight_0(this.getZoom());
  this.m_panel.add_3(p_layer, pxOffsetX, pxOffsetY);
}
;
_.setLayersPositions = function setLayersPositions(p_game){
  var cropLeft, cropTop, ix, iy;
  for (ix = 0; ix < 3; ix++)
    for (iy = 0; iy < 3; iy++)
      this.setLayerPosition(p_game, this.m_cadranLayers[CADRAN[this.m_middleLocalLayerIX][ix]][CADRAN[this.m_middleLocalLayerIY][iy]], ix, iy);
  cropLeft = 0;
  cropTop = 0;
  if (this.m_middleLocalLayerIX == 2) {
    cropLeft += this.m_localLayerHexWidth[0];
  }
  if (this.m_middleLocalLayerIX == 0) {
    cropLeft += this.m_localLayerHexWidth[0] + this.m_localLayerHexWidth[1];
  }
  if (this.m_middleLocalLayerIY == 2) {
    cropTop += this.m_localLayerHexHeight[0];
  }
  if (this.m_middleLocalLayerIY == 0) {
    cropTop += this.m_localLayerHexHeight[0] + this.m_localLayerHexHeight[1];
  }
  this.m_globalLayers.cropDisplay(cropLeft, cropTop, cropLeft + p_game.getLandWidth(), cropTop + p_game.getLandHeight());
  this.m_panel.add_3(this.m_globalLayers, 0, 0);
}
;
_.show = function show_9(){
  var ix, iy;
  if (!this.m_isVisible) {
    for (ix = 0; ix < 3; ix++)
      for (iy = 0; iy < 3; iy++) {
        this.m_cadranLayers[ix][iy].show();
      }
    this.m_globalLayers.show();
    this.m_isVisible = true;
    scrollToTop();
  }
  this.m_panel.setPixelSize(this.m_globalLayers.asWidget().getOffsetWidth(), this.m_globalLayers.asWidget().getOffsetHeight());
}
;
_.m_isVisible = false;
_.m_middleLocalLayerIX = 0;
_.m_middleLocalLayerIY = 0;
_.m_oldZoom = 0;
var CADRAN;
var Lcom_fullmetalgalaxy_client_game_board_WgtBoardTorus_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board', 'WgtBoardTorus', 740, Lcom_fullmetalgalaxy_client_game_board_WgtBoardBase_2_classLit);
function $clinit_Animation(){
  $clinit_Animation = emptyMethod;
  $clinit_Object();
}

function Animation_0(){
  $clinit_Animation();
  Animation_1.call(this, get_2652());
}

function Animation_1(scheduler){
  Object_0.call(this);
  this.$init_116();
  this.scheduler = scheduler;
}

defineClass(160, 1, {1:1});
_.$init_116 = function $init_116(){
  this.callback = new Animation$1(this);
  this.duration = -1;
  this.isRunning = false;
  this.isStarted = false;
  this.runId = -1;
  this.startTime = -1;
  this.wasStarted = false;
}
;
_.cancel = function cancel_1(){
  if (!this.isRunning) {
    return;
  }
  this.wasStarted = this.isStarted;
  this.element = null;
  this.isRunning = false;
  this.isStarted = false;
  if (isNotNull(this.requestHandle)) {
    this.requestHandle.cancel();
    this.requestHandle = null;
  }
  this.onCancel();
}
;
_.interpolate = function interpolate(progress){
  return (1 + $wnd.Math.cos(3.141592653589793 + progress * 3.141592653589793)) / 2;
}
;
_.isRunning_1 = function isRunning_0(curRunId){
  return this.isRunning && this.runId == curRunId;
}
;
_.onCancel = function onCancel(){
  if (this.wasStarted) {
    this.onComplete();
  }
}
;
_.onComplete = function onComplete(){
  this.onUpdate(this.interpolate(1));
}
;
_.onStart = function onStart(){
  this.onUpdate(this.interpolate(0));
}
;
_.run_0 = function run_6(duration){
  this.run_2(duration, null);
}
;
_.run_1 = function run_7(duration, startTime, element){
  this.cancel();
  this.isRunning = true;
  this.isStarted = false;
  this.duration = duration;
  this.startTime = startTime;
  this.element = element;
  ++this.runId;
  this.callback.execute_0(currentTimeMillis_1());
}
;
_.run_2 = function run_8(duration, element){
  this.run_1(duration, currentTimeMillis_1(), element);
}
;
_.update = function update(curTime){
  $clinit_Animation();
  var curRunId, finished, progress;
  curRunId = this.runId;
  finished = curTime >= this.startTime + this.duration;
  if (this.isStarted && !finished) {
    progress = (curTime - this.startTime) / this.duration;
    this.onUpdate(this.interpolate(progress));
    return this.isRunning_1(curRunId);
  }
  if (!this.isStarted && curTime >= this.startTime) {
    this.isStarted = true;
    this.onStart();
    if (!this.isRunning_1(curRunId)) {
      return false;
    }
  }
  if (finished) {
    this.isRunning = false;
    this.isStarted = false;
    this.onComplete();
    return false;
  }
  return true;
}
;
_.duration = 0;
_.isRunning = false;
_.isStarted = false;
_.runId = 0;
_.startTime = 0;
_.wasStarted = false;
var Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client', 'Animation', 160, Ljava_lang_Object_2_classLit);
function $clinit_AnimEvent(){
  $clinit_AnimEvent = emptyMethod;
  $clinit_Animation();
}

function AnimEvent(p_layerToken){
  $clinit_AnimEvent();
  Animation_0.call(this);
  this.$init_117();
  this.m_layerToken = p_layerToken;
}

defineClass(104, 160, {104:1, 1:1});
_.$init_117 = function $init_117(){
  this.m_layerToken = null;
}
;
_.interpolate = function interpolate_0(p_progress){
  return p_progress;
}
;
_.onCancel = function onCancel_0(){
  this.m_layerToken.nextAnimation();
}
;
_.onComplete = function onComplete_0(){
  this.m_layerToken.nextAnimation();
}
;
_.run = function run_9(){
  this.run_0(this.getDurration());
}
;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimEvent_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimEvent', 104, Lcom_google_gwt_animation_client_Animation_2_classLit);
function $clinit_AnimControl(){
  $clinit_AnimControl = emptyMethod;
  $clinit_AnimEvent();
}

function AnimControl(p_layerToken, p_event){
  $clinit_AnimControl();
  AnimEvent.call(this, p_layerToken);
  this.$init_118();
  this.m_event = p_event;
  this.m_target = this.m_event.getTokenTarget(model_0().getGame());
}

defineClass(990, 104, {104:1, 1:1}, AnimControl);
_.$init_118 = function $init_118(){
  this.m_event = null;
  this.m_target = null;
  this.m_tokenWidget = null;
}
;
_.getDurration = function getDurration(){
  return 2000;
}
;
_.onComplete = function onComplete_1(){
  getClassPrototype(104).onComplete.call(this);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenTarget(model_0().getGame()), true);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenDestroyer1(model_0().getGame()), false);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenDestroyer2(model_0().getGame()), false);
}
;
_.onStart = function onStart_0(){
  if (!this.m_layerToken.isVisible_0(this.m_target)) {
    this.cancel();
    return;
  }
}
;
_.onUpdate = function onUpdate(p_progress){
  var color_0;
  if (isNull(this.m_tokenWidget)) {
    this.m_tokenWidget = this.m_layerToken.getTokenWidget(this.m_target);
  }
  if (isNull(this.m_tokenWidget)) {
    return;
  }
  color_0 = null;
  if (round_int(p_progress * 10) % 2 == 0) {
    color_0 = this.m_event.getTokenDestroyer1(model_0().getGame()).getEnuColor();
  }
   else {
    color_0 = new EnuColor_0(this.m_event.getOldColor());
  }
  this.m_tokenWidget.setTokenImage(getTokenImage_0(color_0, this.m_layerToken.getZoom().getValue_1(), this.m_target.getType(), this.m_target.getPosition().getSector()));
}
;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimControl_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimControl', 990, Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimEvent_2_classLit);
function $clinit_AnimFactory(){
  $clinit_AnimFactory = emptyMethod;
  $clinit_Object();
}

function createAnimEvent(p_layerToken, p_event){
  $clinit_AnimFactory();
  if (instanceOf(p_event, 84)) {
    return new AnimMove(p_layerToken, castTo(p_event, 84));
  }
   else if (instanceOf(p_event, 37)) {
    return new AnimUnload(p_layerToken, castTo(p_event, 37));
  }
   else if (instanceOf(p_event, 180)) {
    return new AnimLoad(p_layerToken, castTo(p_event, 180));
  }
   else if (instanceOf(p_event, 114)) {
    return new AnimTransfer(p_layerToken, castTo(p_event, 114));
  }
   else if (instanceOf(p_event, 60)) {
    return new AnimFire(p_layerToken, castTo(p_event, 60));
  }
   else if (instanceOf(p_event, 97)) {
    return new AnimControl(p_layerToken, castTo(p_event, 97));
  }
  return null;
}

function $clinit_AnimFire(){
  $clinit_AnimFire = emptyMethod;
  $clinit_AnimEvent();
}

function AnimFire(p_layerToken, p_event){
  $clinit_AnimFire();
  AnimEvent.call(this, p_layerToken);
  this.$init_119();
  this.m_event = p_event;
  this.m_target = this.m_event.getTokenTarget(model_0().getGame());
}

defineClass(989, 104, {104:1, 1:1}, AnimFire);
_.$init_119 = function $init_119(){
  this.m_event = null;
  this.m_target = null;
  this.m_tokenWidget = null;
  this.m_lastFrame = null;
  this.m_landPixOffset = 0;
}
;
_.getDurration = function getDurration_0(){
  return 2000;
}
;
_.getStrategyFrame = function getStrategyFrame(p_progress){
  switch (round_int(p_progress * 14)) {
    case 0:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast01();
    case 1:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast02();
    case 2:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast03();
    case 3:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast04();
    case 4:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast05();
    case 5:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast06();
    case 6:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast07();
    case 7:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast08();
    case 8:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast09();
    case 9:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast10();
    case 10:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast11();
    case 11:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast12();
    case 12:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast13();
    default:case 13:
      return ($clinit_AnimationFrames() , s_instance_4).strategy_blast14();
  }
}
;
_.getTacticFrame = function getTacticFrame(p_progress){
  switch (round_int(p_progress * 16)) {
    case 0:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast01();
    case 1:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast02();
    case 2:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast03();
    case 3:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast04();
    case 4:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast05();
    case 5:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast06();
    case 6:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast07();
    case 7:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast08();
    case 8:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast09();
    case 9:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast10();
    case 10:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast11();
    case 11:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast12();
    case 12:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast13();
    case 13:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast14();
    case 14:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast15();
    default:case 15:
      return ($clinit_AnimationFrames() , s_instance_4).tactic_blast16();
  }
}
;
_.onComplete = function onComplete_2(){
  getClassPrototype(104).onComplete.call(this);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenTarget(model_0().getGame()), false);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenDestroyer1(model_0().getGame()), false);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenDestroyer2(model_0().getGame()), false);
}
;
_.onStart = function onStart_1(){
}
;
_.onUpdate = function onUpdate_0(p_progress){
  var newFrame;
  if (isNull(this.m_tokenWidget)) {
    return;
  }
  newFrame = null;
  if (this.m_layerToken.getZoom().getValue_1() == 1) {
    newFrame = this.getTacticFrame(p_progress);
  }
   else {
    newFrame = this.getStrategyFrame(p_progress);
  }
  if (jsNotEquals(newFrame, this.m_lastFrame)) {
    this.m_lastFrame = newFrame;
    this.m_layerToken.addWarningImage(this.m_tokenWidget.getTokenImage(), this.m_lastFrame, this.m_target, this.m_landPixOffset);
  }
}
;
_.run = function run_10(){
  if (isNull(this.m_tokenWidget)) {
    this.m_tokenWidget = this.m_layerToken.getTokenWidget(this.m_target);
  }
  if (isNull(this.m_tokenWidget)) {
    this.cancel();
  }
   else {
    this.m_landPixOffset = this.m_target.getLandPixOffset_0(model_0().getGame());
    this.run_2(this.getDurration(), this.m_tokenWidget.getTokenImage().getElement());
  }
}
;
_.m_landPixOffset = 0;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimFire_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimFire', 989, Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimEvent_2_classLit);
function $clinit_AnimMoveBase(){
  $clinit_AnimMoveBase = emptyMethod;
  $clinit_AnimEvent();
}

function AnimMoveBase(p_layerToken, p_event){
  $clinit_AnimMoveBase();
  AnimEvent.call(this, p_layerToken);
  this.$init_120();
  this.m_event = p_event;
  this.m_token = this.m_event.getToken_3(model_0().getGame());
}

defineClass(172, 104, {104:1, 1:1});
_.$init_120 = function $init_120(){
  this.m_event = null;
  this.m_token = null;
  this.m_tokenWidget = null;
  this.wgtPxOldPosition = null;
  this.wgtPxNewPosition = null;
}
;
_.getLandPixOffset = function getLandPixOffset(p_progress){
  return 0;
}
;
_.onComplete = function onComplete_3(){
  getClassPrototype(104).onComplete.call(this);
  if (isNotNull(this.m_tokenWidget) && isNotNull(this.m_tokenWidget.getTokenImage()) && isNotNull(this.m_token)) {
    setStyleAttribute(this.m_tokenWidget.getTokenImage().getElement(), 'zIndex', toString_64(this.m_token.getZIndex_0()));
  }
}
;
_.onStart = function onStart_2(){
  if (!this.m_layerToken.isHexVisible(this.getOldPosition())) {
    this.cancel();
    return;
  }
}
;
_.onUpdate = function onUpdate_1(p_progress){
  var wgtPxPosition;
  if (isNull(this.m_tokenWidget)) {
    this.m_tokenWidget = this.m_layerToken.getTokenWidget_0(this.m_token, true);
    if (isNotNull(this.m_tokenWidget)) {
      this.m_layerToken.add_0(this.m_tokenWidget.getTokenImage());
      this.m_tokenWidget.setTokenImage(getTokenImage_0(this.m_token.getEnuColor(), this.m_layerToken.getZoom().getValue_1(), this.m_token.getType(), this.getNewPosition().getSector()));
      this.m_tokenWidget.getTokenImage().setVisible(true);
      setStyleAttribute(this.m_tokenWidget.getTokenImage().getElement(), 'zIndex', '999');
      this.wgtPxOldPosition = this.m_layerToken.convertHexPositionToPixPosition(this.getOldPosition());
      this.wgtPxNewPosition = this.m_layerToken.convertHexPositionToPixPosition(this.getNewPosition());
    }
  }
  if (isNull(this.m_tokenWidget)) {
    return;
  }
  wgtPxPosition = new AnPair_0(round_int((this.wgtPxNewPosition.getX() - this.wgtPxOldPosition.getX()) * p_progress), round_int((this.wgtPxNewPosition.getY() - this.wgtPxOldPosition.getY()) * p_progress));
  wgtPxPosition.setX(wgtPxPosition.getX() + this.wgtPxOldPosition.getX());
  wgtPxPosition.setY(wgtPxPosition.getY() + this.wgtPxOldPosition.getY() + this.getLandPixOffset(p_progress));
  this.m_layerToken.setWidgetPixPosition(this.m_tokenWidget.getTokenImage(), wgtPxPosition);
}
;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimMoveBase_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimMoveBase', 172, Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimEvent_2_classLit);
function $clinit_AnimLoad(){
  $clinit_AnimLoad = emptyMethod;
  $clinit_AnimMoveBase();
}

function AnimLoad(p_layerToken, p_event){
  $clinit_AnimLoad();
  AnimMoveBase.call(this, p_layerToken, p_event);
  this.$init_121();
}

defineClass(987, 172, {104:1, 1:1}, AnimLoad);
_.$init_121 = function $init_121(){
}
;
_.getDurration = function getDurration_1(){
  return 1000;
}
;
_.getNewPosition = function getNewPosition(){
  return castTo(this.m_event, 180).getTokenCarrier(model_0().getGame()).getPosition();
}
;
_.getOldPosition = function getOldPosition(){
  return this.m_event.getOldPosition();
}
;
_.onComplete = function onComplete_4(){
  getClassPrototype(172).onComplete.call(this);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenCarrier(model_0().getGame()), false);
}
;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimLoad_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimLoad', 987, Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimMoveBase_2_classLit);
function $clinit_AnimMove(){
  $clinit_AnimMove = emptyMethod;
  $clinit_AnimMoveBase();
}

function AnimMove(p_layerToken, p_event){
  $clinit_AnimMove();
  AnimMoveBase.call(this, p_layerToken, p_event);
  this.$init_122();
}

defineClass(985, 172, {104:1, 1:1}, AnimMove);
_.$init_122 = function $init_122(){
  this.landPixOffset = 0;
}
;
_.getDurration = function getDurration_2(){
  return 700;
}
;
_.getLandPixOffset = function getLandPixOffset_0(p_progress){
  if (this.m_layerToken.getZoom().getValue_1() == 1 && jsNotEquals(model_0().getGame().getLand_0(this.getOldPosition()).getLandValue(model_0().getGame().getCurrentTide()), ($clinit_LandType() , Sea))) {
    return this.landPixOffset + round_int(p_progress * 10) % 2;
  }
  return this.landPixOffset;
}
;
_.getNewPosition = function getNewPosition_0(){
  return this.m_event.getNewPosition();
}
;
_.getOldPosition = function getOldPosition_0(){
  return this.m_event.getOldPosition();
}
;
_.onStart = function onStart_3(){
  var newExtraPosition, tokenExtraPosition;
  getClassPrototype(172).onStart.call(this);
  if (this.getOldPosition().equals_3(this.getNewPosition())) {
    this.cancel();
    return;
  }
  if (this.m_token.getHexagonSize() > 1) {
    tokenExtraPosition = model_0().getGame().getCoordinateSystem().getNeighbor(this.getOldPosition(), this.getOldPosition().getSector());
    newExtraPosition = model_0().getGame().getCoordinateSystem().getNeighbor(this.getNewPosition(), this.getNewPosition().getSector());
    if (tokenExtraPosition.equals_3(newExtraPosition)) {
      this.cancel();
      return;
    }
  }
  this.landPixOffset = model_0().getGame().getLandPixOffset_1(this.getNewPosition());
}
;
_.landPixOffset = 0;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimMove_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimMove', 985, Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimMoveBase_2_classLit);
function $clinit_AnimTransfer(){
  $clinit_AnimTransfer = emptyMethod;
  $clinit_AnimMoveBase();
}

function AnimTransfer(p_layerToken, p_event){
  $clinit_AnimTransfer();
  AnimMoveBase.call(this, p_layerToken, p_event);
  this.$init_123();
}

defineClass(988, 172, {104:1, 1:1}, AnimTransfer);
_.$init_123 = function $init_123(){
}
;
_.getDurration = function getDurration_3(){
  return 1000;
}
;
_.getNewPosition = function getNewPosition_1(){
  return castTo(this.m_event, 114).getNewTokenCarrier(model_0().getGame()).getPosition();
}
;
_.getOldPosition = function getOldPosition_1(){
  return castTo(this.m_event, 114).getTokenCarrier(model_0().getGame()).getPosition();
}
;
_.onComplete = function onComplete_5(){
  getClassPrototype(172).onComplete.call(this);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenCarrier(model_0().getGame()), false);
  this.m_layerToken.updateTokenWidget(this.m_event.getNewTokenCarrier(model_0().getGame()), false);
}
;
_.onStart = function onStart_4(){
  getClassPrototype(172).onStart.call(this);
  if (jsNotEquals(this.m_event.getTokenCarrier(model_0().getGame()).getLocation(), ($clinit_Location() , Board)) || jsNotEquals(this.m_event.getNewTokenCarrier(model_0().getGame()).getLocation(), ($clinit_Location() , Board))) {
    this.cancel();
    return;
  }
}
;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimTransfer_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimTransfer', 988, Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimMoveBase_2_classLit);
function $clinit_AnimUnload(){
  $clinit_AnimUnload = emptyMethod;
  $clinit_AnimMoveBase();
}

function AnimUnload(p_layerToken, p_event){
  $clinit_AnimUnload();
  AnimMoveBase.call(this, p_layerToken, p_event);
  this.$init_124();
}

defineClass(986, 172, {104:1, 1:1}, AnimUnload);
_.$init_124 = function $init_124(){
}
;
_.getDurration = function getDurration_4(){
  return 1000;
}
;
_.getNewPosition = function getNewPosition_2(){
  return this.m_event.getNewPosition();
}
;
_.getOldPosition = function getOldPosition_2(){
  return castTo(this.m_event, 37).getTokenCarrier(model_0().getGame()).getPosition();
}
;
_.onComplete = function onComplete_6(){
  getClassPrototype(172).onComplete.call(this);
  this.m_layerToken.updateTokenWidget(this.m_event.getTokenCarrier(model_0().getGame()), false);
}
;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimUnload_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'AnimUnload', 986, Lcom_fullmetalgalaxy_client_game_board_layertoken_AnimMoveBase_2_classLit);
function $clinit_TokenWidget(){
  $clinit_TokenWidget = emptyMethod;
  $clinit_Object();
}

function TokenWidget(){
  $clinit_TokenWidget();
  Object_0.call(this);
  this.$init_125();
}

defineClass(170, 1, {170:1, 1:1}, TokenWidget);
_.$init_125 = function $init_125(){
  this.m_lastHash = 0;
  this.m_tokenImage = new Image_0;
  this.m_iconWarningImage = new Image_0;
}
;
_.getDisplayStatusHash = function getDisplayStatusHash(p_token){
  var game, hash;
  hash = add_19(p_token.getVersion(), 1);
  hash = add_19(hash, fromInt_0(p_token.getColor_0()));
  hash = xor_0(hash, p_token.isFireDisabled()?16777216:0);
  hash = xor_0(hash, p_token.isFireDisabling()?33554432:0);
  game = model_0().getGame();
  if (isNull(game)) {
    return hash;
  }
  hash = add_19(hash, fromInt_0(65535 * game.getLand_0(p_token.getPosition()).getLandValue(game.getCurrentTide()).hashCode_1()));
  hash = xor_0(hash, game.isTankCheating(p_token)?67108864:0);
  if (jsEquals(p_token.getType(), ($clinit_TokenType() , Freighter)) && game.getCurrentTimeStep() <= game.getEbConfigGameTime().getDeploymentTimeStep() + 1) {
    hash = add_19(hash, fromInt_0(16777215 * game.getCurrentTimeStep()));
  }
  return hash;
}
;
_.getIconWarningImage = function getIconWarningImage(){
  return this.m_iconWarningImage;
}
;
_.getTokenImage = function getTokenImage(){
  return this.m_tokenImage;
}
;
_.invalidate = function invalidate(){
  this.m_lastHash = 0;
}
;
_.isUpdateRequired = function isUpdateRequired(p_token){
  var game;
  game = model_0().getGame();
  if (isNull(game)) {
    return true;
  }
  return neq(this.m_lastHash, this.getDisplayStatusHash(p_token));
}
;
_.setLastTokenDrawn = function setLastTokenDrawn(p_token){
  var game;
  if (isBundleLoaded()) {
    game = model_0().getGame();
    if (!isNotNull(game)) {
      debugger;
      throw toJs(makeAssertionError());
    }
    this.m_lastHash = this.getDisplayStatusHash(p_token);
  }
}
;
_.setTokenImage = function setTokenImage(p_image){
  create_7(p_image).applyTo_0(this.m_tokenImage);
}
;
_.setVisible = function setVisible_2(p_isVisible){
  if (isNotNull(this.m_tokenImage)) {
    this.m_tokenImage.setVisible(p_isVisible);
  }
  if (isNotNull(this.m_iconWarningImage)) {
    this.m_iconWarningImage.setVisible(p_isVisible);
  }
}
;
_.m_lastHash = 0;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_TokenWidget_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'TokenWidget', 170, Ljava_lang_Object_2_classLit);
function $clinit_LoadHandler(){
  $clinit_LoadHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_LoadHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'LoadHandler');
function $clinit_WgtBoardLayerToken(){
  $clinit_WgtBoardLayerToken = emptyMethod;
  $clinit_WgtBoardLayerBase();
  {
    loadAllBundle();
  }
}

function WgtBoardLayerToken(){
  $clinit_WgtBoardLayerToken();
  WgtBoardLayerBase.call(this);
  this.$init_126();
  getEventBus().addHandler_1(($clinit_GameActionEvent() , TYPE), this);
}

defineClass(340, 57, {1057:1, 102:1, 488:1, 13:1, 18:1, 45:1, 14:1, 11:1, 1:1}, WgtBoardLayerToken);
_.$init_126 = function $init_126(){
  this.m_tokenMap = new HashMap;
  this.m_tokenLastUpdate = 0;
  this.m_lastTideValue = ($clinit_Tide() , Unknown_1);
  this.m_lastGameId = 0;
  this.m_animations = new LinkedList;
  this.isAnimationRunning = false;
  this.processEvents = new LinkedList;
}
;
_.addAnimation = function addAnimation(p_animation, p_processModelUpdate){
  this.processEvents.add_5(p_processModelUpdate);
  this.m_animations.add_5(p_animation);
  if (!this.isAnimationRunning) {
    this.isAnimationRunning = true;
    castTo(this.m_animations.get_0(0), 104).run();
  }
}
;
_.addWarningImage = function addWarningImage(p_image, p_absImage, p_token, p_landPixOffset){
  if (isNull(p_absImage)) {
    p_image.setVisible(false);
    return;
  }
  if (!p_image.isAttached() || !p_image.isVisible()) {
    this.add_0(p_image);
    p_image.setVisible(true);
  }
  p_absImage.applyTo_0(p_image);
  if (p_token.getPosition().getY() < this.m_cropTopHex) {
    setStyleAttribute(p_image.getElement(), 'zIndex', toString_64(p_token.getZIndex_1(game_0().getLandHeight() + 1, true)));
  }
   else {
    setStyleAttribute(p_image.getElement(), 'zIndex', toString_64(p_token.getZIndex_1(1, true)));
  }
  this.setWidgetHexPosition_0(p_image, p_token.getPosition(), p_landPixOffset);
}
;
_.clearTokenMap = function clearTokenMap(){
  var timedHtml, timedHtml$iterator;
  for (timedHtml$iterator = this.m_tokenMap.values_0().iterator_0(); timedHtml$iterator.hasNext_0();) {
    timedHtml = castTo(timedHtml$iterator.next_1(), 170);
    this.remove_0(timedHtml.getIconWarningImage());
    this.remove_0(timedHtml.getTokenImage());
  }
  this.m_tokenMap.clear_0();
}
;
_.cropDisplay = function cropDisplay_7(p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex){
  getClassPrototype(57).cropDisplay.call(this, p_cropLeftHex, p_cropTopHex, p_cropRightHex, p_cropBotomHex);
  this.invalidateTokenMap();
  this.redraw();
}
;
_.getTokenWidget = function getTokenWidget(p_token){
  return castTo(this.m_tokenMap.get_1(p_token), 170);
}
;
_.getTokenWidget_0 = function getTokenWidget_0(p_token, p_newIfNeeded){
  var tokenWidget;
  tokenWidget = castTo(this.m_tokenMap.get_1(p_token), 170);
  if (isNull(tokenWidget) && p_newIfNeeded) {
    tokenWidget = new TokenWidget;
    this.m_tokenMap.put(p_token, tokenWidget);
  }
  return tokenWidget;
}
;
_.invalidateTokenMap = function invalidateTokenMap(){
  var timedHtml, timedHtml$iterator;
  for (timedHtml$iterator = this.m_tokenMap.values_0().iterator_0(); timedHtml$iterator.hasNext_0();) {
    timedHtml = castTo(timedHtml$iterator.next_1(), 170);
    timedHtml.invalidate();
    this.remove_0(timedHtml.getIconWarningImage());
    this.remove_0(timedHtml.getTokenImage());
  }
}
;
_.isVisible_0 = function isVisible_2(p_token){
  if (jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    return false;
  }
  return this.isHexVisible(p_token.getPosition());
}
;
_.nextAnimation = function nextAnimation(){
  var processEvent;
  if (this.m_animations.isEmpty()) {
    if (!this.processEvents.isEmpty()) {
      processEvent = castTo(this.processEvents.get_0(0), 207);
      this.processEvents.remove_2(0);
      processEvent.nextEvent();
    }
    return;
  }
  this.m_animations.remove_2(0);
  if (!this.m_animations.isEmpty()) {
    this.processEvents.remove_2(0);
    castTo(this.m_animations.get_0(0), 104).run();
  }
   else {
    this.isAnimationRunning = false;
    this.redraw();
    if (!this.processEvents.isEmpty()) {
      processEvent = castTo(this.processEvents.get_0(0), 207);
      this.processEvents.remove_2(0);
      processEvent.nextEvent();
    }
  }
}
;
_.onGameEvent = function onGameEvent(p_event, p_processModelUpdate){
  var animation, game;
  getClassPrototype(57).onModelChange_0.call(this, false);
  game = model_0().getGame();
  animation = createAnimEvent(this, p_event);
  if (isNotNull(animation)) {
    this.m_tokenLastUpdate = game.getLastTokenUpdate().getTime_1();
    this.addAnimation(animation, p_processModelUpdate);
  }
   else {
    if (neq(this.m_tokenLastUpdate, game.getLastTokenUpdate().getTime_1())) {
      this.m_tokenLastUpdate = game.getLastTokenUpdate().getTime_1();
      this.m_lastTideValue = game.getCurrentTide();
      this.redraw();
    }
    if (jsNotEquals(this.m_lastTideValue, game.getCurrentTide())) {
      this.m_lastTideValue = game.getCurrentTide();
      this.invalidateTokenMap();
      this.redraw();
    }
    if (isNotNull(p_processModelUpdate)) {
      p_processModelUpdate.nextEvent();
    }
  }
}
;
_.onLoad_0 = function onLoad_3(p_event){
  instance_1().stopLoading();
}
;
_.onModelChange_0 = function onModelChange_11(p_forceRedraw){
  var game;
  getClassPrototype(57).onModelChange_0.call(this, p_forceRedraw);
  game = model_0().getGame();
  if (neq(this.m_lastGameId, game.getId()) || p_forceRedraw) {
    this.m_tokenLastUpdate = game.getLastTokenUpdate().getTime_1();
    this.m_lastTideValue = game.getCurrentTide();
    this.m_lastGameId = game.getId();
    this.resetPixelSize();
    this.clearTokenMap();
    this.redraw();
  }
  if (neq(this.m_tokenLastUpdate, game.getLastTokenUpdate().getTime_1())) {
    this.m_tokenLastUpdate = game.getLastTokenUpdate().getTime_1();
    this.m_lastTideValue = game.getCurrentTide();
    this.redraw();
  }
}
;
_.redraw = function redraw_6(){
  var game, token, token$iterator, tokenList;
  getClassPrototype(57).redraw.call(this);
  game = model_0().getGame();
  tokenList = game.getSetToken();
  for (token$iterator = tokenList.iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsNotEquals(token.getLocation(), ($clinit_Location() , Board))) {
      this.updateTokenWidget(token, false);
    }
     else if (this.isHexVisible(token.getPosition())) {
      this.updateTokenWidget(token, false);
    }
  }
}
;
_.setZoom = function setZoom_9(p_zoom){
  getClassPrototype(57).setZoom.call(this, p_zoom);
  this.invalidateTokenMap();
  this.redraw();
}
;
_.updateTokenWidget = function updateTokenWidget(p_token, p_force){
  var game, landPixOffset, tokenWidget;
  if (!isNotNull(p_token)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  game = model_0().getGame();
  tokenWidget = castTo(castTo(this.m_tokenMap.get_1(p_token), 170), 170);
  if (jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board)) && jsNotEquals(p_token.getLocation(), ($clinit_Location() , Graveyard)) || jsEquals(p_token.getLocation(), ($clinit_Location() , Graveyard)) && (p_token.getColor_0() == 0 || jsEquals(game.getLand_0(p_token.getPosition()), ($clinit_LandType() , Sea)))) {
    if (isNotNull(tokenWidget)) {
      tokenWidget.setVisible(false);
      tokenWidget.setLastTokenDrawn(p_token);
    }
    return;
  }
  if (isNull(tokenWidget)) {
    tokenWidget = this.getTokenWidget_0(p_token, true);
  }
  if (tokenWidget.isUpdateRequired(p_token) || p_force == true) {
    this.add_0(tokenWidget.getTokenImage());
    tokenWidget.getTokenImage().setVisible(true);
    landPixOffset = 0;
    if (this.getZoom().getValue_1() == 1) {
      landPixOffset = p_token.getLandPixOffset_0(game);
    }
    tokenWidget.setTokenImage(getTokenImage_1(p_token, this.getZoom().getValue_1()));
    this.setWidgetHexPosition_0(tokenWidget.getTokenImage(), p_token.getPosition(), landPixOffset);
    if (p_token.getPosition().getY() < this.m_cropTopHex) {
      setStyleAttribute(tokenWidget.getTokenImage().getElement(), 'zIndex', toString_64(p_token.getZIndex_1(game_0().getLandHeight(), false)));
    }
     else {
      setStyleAttribute(tokenWidget.getTokenImage().getElement(), 'zIndex', toString_64(p_token.getZIndex_0()));
    }
    if (jsEquals(p_token.getLocation(), ($clinit_Location() , Graveyard))) {
      this.remove_0(tokenWidget.getIconWarningImage());
    }
     else if (p_token.isFireDisabled()) {
      this.addWarningImage(tokenWidget.getIconWarningImage(), disable_fire(this.getZoom().getValue_1()), p_token, landPixOffset);
    }
     else if (p_token.isFireDisabling()) {
      this.addWarningImage(tokenWidget.getIconWarningImage(), disabling_fire(this.getZoom().getValue_1()), p_token, landPixOffset);
    }
     else if (!game.isTokenTideActive(p_token)) {
      this.addWarningImage(tokenWidget.getIconWarningImage(), disable_water(this.getZoom().getValue_1()), p_token, landPixOffset);
    }
     else if (game.isTankCheating(p_token)) {
      this.addWarningImage(tokenWidget.getIconWarningImage(), warning(this.getZoom().getValue_1()), p_token, landPixOffset);
    }
     else if (!p_token.getType().isOre() && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Freighter)) && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Turret)) && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Pontoon)) && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Warp)) && p_token.containToken()) {
      this.addWarningImage(tokenWidget.getIconWarningImage(), iconLoad(this.getZoom().getValue_1(), p_token.getContainSize()), p_token, landPixOffset);
    }
     else if (p_token.getType().getMaxBulletCount() > 0 && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Turret)) && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Freighter)) && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Ore2Generator)) && jsNotEquals(p_token.getType(), ($clinit_TokenType() , Ore3Generator)) && p_token.getBulletCount() != p_token.getType().getMaxBulletCount()) {
      this.addWarningImage(tokenWidget.getIconWarningImage(), iconBullet(this.getZoom().getValue_1(), round_int($wnd.Math.ceil(p_token.getType().getMaxBulletCount() - p_token.getBulletCount()))), p_token, landPixOffset);
    }
     else if (jsEquals(p_token.getType(), ($clinit_TokenType() , Freighter)) && game.getCurrentTimeStep() <= game.getEbConfigGameTime().getDeploymentTimeStep()) {
      this.addWarningImage(tokenWidget.getIconWarningImage(), deployment3(this.getZoom().getValue_1()), p_token, 0);
    }
     else {
      this.remove_0(tokenWidget.getIconWarningImage());
    }
    tokenWidget.setLastTokenDrawn(p_token);
  }
}
;
_.isAnimationRunning = false;
_.m_lastGameId = 0;
_.m_tokenLastUpdate = 0;
var Lcom_fullmetalgalaxy_client_game_board_layertoken_WgtBoardLayerToken_2_classLit = createForClass('com.fullmetalgalaxy.client.game.board.layertoken', 'WgtBoardLayerToken', 340, Lcom_fullmetalgalaxy_client_game_board_WgtBoardLayerBase_2_classLit);
function $clinit_MAppContext(){
  $clinit_MAppContext = emptyMethod;
  $clinit_GuiEntryPoint();
}

function MAppContext(){
  $clinit_MAppContext();
  var hpanel, vpanel;
  GuiEntryPoint.call(this);
  this.$init_127();
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
  vpanel = new VerticalPanel;
  vpanel.add_0(this.m_panelAction);
  vpanel.setCellHorizontalAlignment_1(this.m_panelAction, ($clinit_HasHorizontalAlignment() , ALIGN_RIGHT));
  hpanel = new HorizontalPanel;
  hpanel.add_0(this.m_panelExtra);
  hpanel.setCellHeight(this.m_panelExtra, '100%');
  this.m_panelExtra.setHeight('100%');
  hpanel.add_0(this.m_panelMiniMap);
  vpanel.add_0(hpanel);
  this.m_panelAction.add_0(new WgtContextAction);
  this.m_panelAction.setStylePrimaryName('fmp-context-action');
  this.m_panelMiniMap.setStylePrimaryName('fmp-context-minimap');
  this.m_panelMiniMap.setVerticalAlignment(($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));
  this.m_panelMiniMap.setHorizontalAlignment(($clinit_HasHorizontalAlignment() , ALIGN_CENTER));
  this.m_panelExtra.add_0(new WgtContextExtra);
  this.m_panelExtra.setStylePrimaryName('fmp-context-extra');
  this.initWidget(vpanel);
  hpanel.setVerticalAlignment(($clinit_HasVerticalAlignment() , ALIGN_BOTTOM));
}

defineClass(512, 118, {115:1, 13:1, 148:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppContext);
_.$init_127 = function $init_127(){
  this.m_panelMiniMap = new VerticalPanel;
  this.m_panelAction = new HorizontalPanel;
  this.m_panelExtra = new HorizontalPanel;
  this.m_wgtMinimap = new WgtContextMinimap;
  this.m_wgtToken = new WgtContextToken;
  this.m_wgtLand = new WgtContextLand;
}
;
_.getHistoryId = function getHistoryId_5(){
  return 'context';
}
;
_.onModelUpdate = function onModelUpdate_3(p_modelSender){
  var actionBuilder;
  actionBuilder = p_modelSender.getActionBuilder();
  this.m_panelMiniMap.remove_0(this.m_wgtMinimap);
  this.m_panelMiniMap.remove_0(this.m_wgtToken);
  this.m_panelMiniMap.remove_0(this.m_wgtLand);
  if (actionBuilder.isTokenSelected()) {
    this.m_panelMiniMap.add_0(this.m_wgtToken);
    this.m_wgtToken.redraw();
  }
   else if (actionBuilder.isEmptyLandSelected()) {
    this.m_panelMiniMap.add_0(this.m_wgtLand);
    this.m_wgtLand.redraw();
  }
   else {
    this.m_panelMiniMap.add_0(this.m_wgtMinimap);
    this.m_wgtMinimap.redraw();
  }
}
;
_.onModuleLoad = function onModuleLoad_5(){
  getClassPrototype(118).onModuleLoad.call(this);
  instance_1().addPreviewListener(this);
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_3(p_event){
  var e;
  if (p_event.getTypeInt() == 256) {
    if (isChatMode()) {
      return;
    }
    if ($getKeyCode(p_event.getNativeEvent()) == 13) {
      if (jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Initiation))) {
        showDialog();
      }
      return;
    }
     else if ($getKeyCode(p_event.getNativeEvent()) == 102 || $getKeyCode(p_event.getNativeEvent()) == 70) {
      if (model_0().isFireCoverDisplayed()) {
        model_0().setFireCoverDisplayed(false);
      }
       else {
        model_0().setFireCoverDisplayed(true);
      }
      return;
    }
     else if ($getKeyCode(p_event.getNativeEvent()) == 43) {
      model_0().setZoomDisplayed(1);
      return;
    }
     else if ($getKeyCode(p_event.getNativeEvent()) == 45) {
      model_0().setZoomDisplayed(0);
      return;
    }
     else if ($getKeyCode(p_event.getNativeEvent()) == 103 || $getKeyCode(p_event.getNativeEvent()) == 71) {
      model_0().setGridDisplayed(!model_0().isGridDisplayed());
      p_event.cancel();
      return;
    }
     else if ($getKeyCode(p_event.getNativeEvent()) == 27) {
      try {
        model_0().getActionBuilder().userCancel();
        getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 10)) {
          e = $e0;
          ($clinit_MAppMessagesStack() , s_instance_1).showWarning(e.getLocalizedMessage());
        }
         else 
          throw toJs($e0);
      }
      return;
    }
  }
}
;
var Lcom_fullmetalgalaxy_client_game_context_MAppContext_2_classLit = createForClass('com.fullmetalgalaxy.client.game.context', 'MAppContext', 512, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_WgtContextAction(){
  $clinit_WgtContextAction = emptyMethod;
  $clinit_WgtView();
}

function WgtContextAction(){
  $clinit_WgtContextAction();
  var hPanel;
  WgtView.call(this);
  this.$init_128();
  this.m_btnOk.addClickHandler(this);
  this.m_btnOk.setTitle(($clinit_MAppBoard() , s_messages_0).validAction());
  this.m_btnOk.setStyleName('fmp-PushButton32');
  this.m_btnCancel.addClickHandler(this);
  this.m_btnCancel.setTitle(($clinit_MAppBoard() , s_messages_0).cancelAction());
  this.m_btnCancel.setStyleName('fmp-PushButton32');
  this.m_btnRepairTurret.addClickHandler(this);
  this.m_btnRepairTurret.setTitle(($clinit_MAppBoard() , s_messages_0).repairTurret());
  this.m_btnRepairTurret.setStyleName('fmp-PushButton32');
  this.m_btnTakeOff.addClickHandler(this);
  this.m_btnTakeOff.setTitle(($clinit_MAppBoard() , s_messages_0).takeOff());
  this.m_btnTakeOff.setStyleName('fmp-PushButton32');
  this.m_btnFire.addClickHandler(this);
  this.m_btnFire.setTitle(($clinit_MAppBoard() , s_messages_0).fire_0());
  this.m_btnFire.setStyleName('fmp-PushButton32');
  this.m_btnControl.addClickHandler(this);
  this.m_btnControl.setTitle(($clinit_MAppBoard() , s_messages_0).control());
  this.m_btnControl.setStyleName('fmp-PushButton32');
  this.m_btnFireCoverOn.addClickHandler(this);
  this.m_btnFireCoverOn.setTitle(($clinit_MAppBoard() , s_messages_0).displayFireCover_1());
  this.m_btnFireCoverOn.setStyleName('fmp-PushButton32');
  this.m_btnFireCoverOff.addClickHandler(this);
  this.m_btnFireCoverOff.setTitle(($clinit_MAppBoard() , s_messages_0).hideFireCover());
  this.m_btnFireCoverOff.setStyleName('fmp-PushButton32');
  this.m_btnEndTurn.addClickHandler(this);
  this.m_btnEndTurn.setTitle(($clinit_MAppBoard() , s_messages_0).endTurn());
  this.m_btnEndTurn.setStyleName('fmp-PushButton32');
  this.m_btnZoomIn.addClickHandler(this);
  this.m_btnZoomIn.setTitle(($clinit_MAppBoard() , s_messages_0).tacticalZoom());
  this.m_btnZoomIn.setStyleName('fmp-PushButton32');
  this.m_btnZoomOut.addClickHandler(this);
  this.m_btnZoomOut.setTitle(($clinit_MAppBoard() , s_messages_0).strategyZoom());
  this.m_btnZoomOut.setStyleName('fmp-PushButton32');
  this.m_btnGridOn.addClickHandler(this);
  this.m_btnGridOn.setTitle(($clinit_MAppBoard() , s_messages_0).displayGrid());
  this.m_btnGridOn.setStyleName('fmp-PushButton32');
  this.m_btnGridOff.addClickHandler(this);
  this.m_btnGridOff.setTitle(($clinit_MAppBoard() , s_messages_0).hideGrid());
  this.m_btnGridOff.setStyleName('fmp-PushButton32');
  this.m_btnRegister.addClickHandler(this);
  this.m_btnRegister.setTitle(($clinit_MAppBoard() , s_messages_0).joinGame());
  this.m_btnRegister.setStyleName('fmp-PushButton32');
  this.m_btnPractice.addClickHandler(this);
  this.m_btnPractice.setTitle(($clinit_MAppBoard() , s_messages_0).trainningMode());
  this.m_btnPractice.setStyleName('fmp-PushButton32');
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).register32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).joinThisGame()));
  this.m_pnlRegister = new FocusPanel_0(hPanel);
  this.m_pnlRegister.addClickHandler(this);
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).pause32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).waitGameStarting()));
  this.m_pnlWait = new FocusPanel_0(hPanel);
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).takeOff32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).mustLandFreighter()));
  this.m_pnlLand = new FocusPanel_0(hPanel);
  this.m_pnlLand.addClickHandler(this);
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).takeOff32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).mustDeployUnits()));
  this.m_pnlDeploy = new FocusPanel_0(hPanel);
  this.m_pnlDeploy.addClickHandler(this);
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).pause32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).pauseGameAllowNewPlayer()));
  this.m_pnlPause = new FocusPanel_0(hPanel);
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).endTurn32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).mustEndYourTurn()));
  this.m_pnlEndTurn = new FocusPanel_0(hPanel);
  this.m_pnlEndTurn.addClickHandler(this);
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).takeOff32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).SelectFreighterToTakeOff()));
  this.m_pnlTakeOff = new FocusPanel_0(hPanel);
  this.m_pnlTakeOff.addClickHandler(this);
  hPanel = new HorizontalPanel;
  hPanel.add_0(new Image_1(($clinit_Icons() , s_instance_5).practice32()));
  hPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).trainningMode()));
  hPanel.add_0(this.m_btnPracticeCancel);
  this.m_btnPracticeCancel.addClickHandler(this);
  hPanel.add_0(this.m_btnPracticeOk);
  this.m_btnPracticeOk.addClickHandler(this);
  this.m_pnlPractice = new FocusPanel_0(hPanel);
  this.m_iconAction.setTitle(($clinit_MAppBoard() , s_messages_0).costInPA());
  this.m_lblAction.setStyleName('fmp-status-text');
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
  this.m_panel.setSize('100%', '100%');
  this.m_panel.setHorizontalAlignment(($clinit_HasHorizontalAlignment() , ALIGN_CENTER));
  this.m_panel.setVerticalAlignment(($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));
  this.initWidget(this.m_panel);
}

defineClass(671, 237, {115:1, 72:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtContextAction);
_.$init_128 = function $init_128(){
  this.m_panel = new HorizontalPanel;
  this.m_btnOk = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).ok32()));
  this.m_btnCancel = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).cancel32()));
  this.m_btnRepairTurret = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).repair32()));
  this.m_btnFire = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).shoot32()));
  this.m_btnControl = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).control32()));
  this.m_btnFireCoverOn = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).fireCoverOn32()));
  this.m_btnFireCoverOff = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).fireCoverOff32()));
  this.m_btnEndTurn = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).endTurn32()));
  this.m_btnZoomIn = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).zoomIn32()));
  this.m_btnZoomOut = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).zoomOut32()));
  this.m_btnGridOn = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).gridOn32()));
  this.m_btnGridOff = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).gridOff32()));
  this.m_btnRegister = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).register32()));
  this.m_btnPractice = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).practice32()));
  this.m_btnPracticeOk = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).ok32()));
  this.m_btnPracticeCancel = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).cancel32()));
  this.m_actionIndexBeforePracticeMode = 0;
  this.m_pnlRegister = null;
  this.m_pnlWait = null;
  this.m_pnlLand = null;
  this.m_pnlDeploy = null;
  this.m_pnlPause = null;
  this.m_pnlEndTurn = null;
  this.m_pnlTakeOff = null;
  this.m_pnlPractice = null;
  this.m_btnTakeOff = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).takeOff32()));
  this.m_iconAction = new Image_1(($clinit_Icons() , s_instance_5).action16());
  this.m_lblAction = new Label_1('');
}
;
_.onClick = function onClick_16(p_event){
  var action, actionBuilder, e, event_0, eventBuilderMsg, eventsBackup, evtCancel, firstToken, iAction, msg, myFreighter, newPt, oldPt, sender, token, token$iterator;
  sender = p_event.getSource();
  try {
    actionBuilder = model_0().getActionBuilder();
    if (maskUndefined(sender) === maskUndefined(this.m_btnOk)) {
      actionBuilder.userOk();
      model_0().runCurrentAction();
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnCancel)) {
      actionBuilder.userCancel();
      getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnRepairTurret)) {
      eventBuilderMsg = actionBuilder.userAction(($clinit_GameLogType() , EvtRepair));
      if (jsEquals(eventBuilderMsg, ($clinit_EventBuilderMsg() , MustRun))) {
        model_0().runSingleAction(actionBuilder.getSelectedAction());
      }
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnFire)) {
      actionBuilder.userAction(($clinit_GameLogType() , EvtFire));
      if (isNull(castTo(actionBuilder.getSelectedAction(), 60).getTokenTarget(model_0().getGame()))) {
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage_0(($clinit_MAppBoard() , s_messages_0).selectDestroyerTarget());
      }
       else {
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage_0(($clinit_MAppBoard() , s_messages_0).selectTwoDestroyers());
      }
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnControl)) {
      actionBuilder.userAction(($clinit_GameLogType() , EvtControl));
      if (isNull(castTo(actionBuilder.getSelectedAction(), 60).getTokenTarget(model_0().getGame()))) {
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage_0(($clinit_MAppBoard() , s_messages_0).selectDestroyerTarget());
      }
       else {
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage_0(($clinit_MAppBoard() , s_messages_0).selectTwoDestroyers());
      }
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnFireCoverOn)) {
      model_0().setFireCoverDisplayed(true);
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnFireCoverOff)) {
      model_0().setFireCoverDisplayed(false);
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnGridOn)) {
      model_0().setGridDisplayed(true);
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnGridOff)) {
      model_0().setGridDisplayed(false);
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnZoomIn)) {
      model_0().setZoomDisplayed(1);
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnZoomOut)) {
      model_0().setZoomDisplayed(0);
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnRegister) || maskUndefined(sender) === maskUndefined(this.m_pnlRegister)) {
      instance_5().show();
      instance_5().center();
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnPractice) || maskUndefined(sender) === maskUndefined(this.m_btnPracticeCancel)) {
      if (jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Initiation))) {
        alert_0(($clinit_MAppBoard() , s_messages_0).activateTrainningMode());
        this.m_actionIndexBeforePracticeMode = model_0().getGame().getLogs().size_1();
        model_0().getGame().setGameType(($clinit_GameType() , Practice_0));
        getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
      }
       else {
        evtCancel = new EbEvtCancel;
        evtCancel.setGame(model_0().getGame());
        evtCancel.setFromActionIndex(model_0().getGame().getLogs().size_1() + model_0().getGame().getAdditionalEventCount() + model_0().getMyRegistration().getTeam_1(model_0().getGame()).getMyEvents().size_1() - 1);
        evtCancel.setToActionIndex(model_0().getGame().getAdditionalEventCount() + this.m_actionIndexBeforePracticeMode);
        evtCancel.setAccountId(instance_1().getMyAccount().getId());
        model_0().runSingleAction(evtCancel);
        model_0().getGame().setGameType(($clinit_GameType() , MultiPlayer));
        ($clinit_MAppMessagesStack() , s_instance_1).removeMessage(this.m_pnlPractice);
        getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
      }
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnPracticeOk)) {
      model_0().getActionBuilder().clear_0();
      iAction = this.m_actionIndexBeforePracticeMode;
      eventsBackup = new ArrayList;
      while (model_0().getGame().getLogs().size_1() > iAction) {
        event_0 = castTo(model_0().getGame().getLogs().get_0(iAction), 20);
        if (instanceOf(event_0, 17)) {
          eventsBackup.add_5(castTo(event_0, 17));
        }
        iAction++;
      }
      evtCancel = new EbEvtCancel;
      evtCancel.setGame(model_0().getGame());
      evtCancel.setFromActionIndex(model_0().getGame().getLogs().size_1() + model_0().getGame().getAdditionalEventCount() + model_0().getMyRegistration().getTeam_1(model_0().getGame()).getMyEvents().size_1() - 1);
      evtCancel.setToActionIndex(this.m_actionIndexBeforePracticeMode);
      evtCancel.setAccountId(instance_1().getMyAccount().getId());
      model_0().runSingleAction(evtCancel);
      model_0().getGame().setGameType(($clinit_GameType() , MultiPlayer));
      model_0().getActionBuilder().getActionList().addAll(eventsBackup);
      model_0().runCurrentAction();
      ($clinit_MAppMessagesStack() , s_instance_1).removeMessage(this.m_pnlPractice);
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnEndTurn) || maskUndefined(sender) === maskUndefined(this.m_pnlEndTurn)) {
      msg = null;
      oldPt = model_0().getMyRegistration().getPtAction();
      newPt = model_0().getMyRegistration().getRoundedActionPt(model_0().getGame());
      if (oldPt == newPt) {
        msg = ($clinit_MAppBoard() , s_messages_0).confirmEndTurn(oldPt);
      }
       else {
        msg = ($clinit_MAppBoard() , s_messages_0).confirmEndTurnRoundedPA(oldPt, newPt);
      }
      if (confirm_0(msg)) {
        action = new EbEvtPlayerTurn;
        action.setGame(model_0().getGame());
        action.setAccountId(instance_1().getMyAccount().getId());
        model_0().runSingleAction(action);
      }
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_btnTakeOff)) {
      if (confirm_0(($clinit_MAppBoard() , s_messages_0).confirmTakeOff(getTokenString_0(0, actionBuilder.getSelectedToken())))) {
        action = new EbEvtTakeOff;
        action.setGame(model_0().getGame());
        action.setRegistration(model_0().getMyRegistration());
        action.setToken(actionBuilder.getSelectedToken());
        model_0().runSingleAction(action);
      }
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_pnlLand)) {
      model_0().getActionBuilder().userTokenClick(model_0().getGame().getFreighter(model_0().getMyRegistration()));
      getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_pnlDeploy)) {
      myFreighter = model_0().getGame().getFreighter(model_0().getMyRegistration());
      if (myFreighter.containToken()) {
        firstToken = castTo(myFreighter.getContains().iterator_0().next_1(), 19);
        model_0().getActionBuilder().userTokenClick(firstToken);
        getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
      }
    }
     else if (maskUndefined(sender) === maskUndefined(this.m_pnlTakeOff)) {
      model_0().getActionBuilder().clear_0();
      for (token$iterator = model_0().getGame().getAllFreighter(model_0().getMyRegistration().getColor_0()).iterator_0(); token$iterator.hasNext_0();) {
        token = castTo(token$iterator.next_1(), 19);
        if (jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
          model_0().getActionBuilder().userTokenClick(token);
          break;
        }
      }
      getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
      ($clinit_MAppMessagesStack() , s_instance_1).showWarning(e.getLocalizedMessage());
    }
     else 
      throw toJs($e0);
  }
}
;
_.onModelUpdate = function onModelUpdate_4(p_ModelSender){
  this.redraw();
}
;
_.redraw = function redraw_7(){
  var action, e, mainSelectedToken, model, myFreighter, myRegistration;
  this.m_panel.clear_0();
  model = model_0();
  if (isNull(model)) {
    return;
  }
  action = model_0().getActionBuilder();
  mainSelectedToken = action.getSelectedToken();
  myRegistration = model.getMyRegistration();
  if (!action.isTokenSelected() || model_0().getGame().isFinished()) {
    if (model_0().isFireCoverDisplayed()) {
      this.m_panel.add_0(this.m_btnFireCoverOff);
    }
     else {
      this.m_panel.add_0(this.m_btnFireCoverOn);
    }
    if (model_0().isGridDisplayed()) {
      this.m_panel.add_0(this.m_btnGridOff);
    }
     else {
      this.m_panel.add_0(this.m_btnGridOn);
    }
    if (model_0().getZoomDisplayed().getValue_1() == 0) {
      this.m_panel.add_0(this.m_btnZoomIn);
    }
     else {
      this.m_panel.add_0(this.m_btnZoomOut);
    }
    if (!model_0().isTimeLineMode()) {
      if (isNotNull(myRegistration) && model.getGame().getCurrentTimeStep() <= 0 && (jsEquals(model.getGame().getStatus(), ($clinit_GameStatus() , Open)) || jsEquals(model.getGame().getStatus(), ($clinit_GameStatus() , Pause)))) {
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlWait);
      }
      if (!model_0().getGame().isParallel() && isNotNull(myRegistration) && model_0().getGame().getCurrentPlayerIds().contains_0(valueOf_40(myRegistration.getId())) && jsEquals(model.getGame().getStatus(), ($clinit_GameStatus() , Running)) && jsNotEquals(model.getGame().getGameType(), ($clinit_GameType() , Practice_0))) {
        this.m_panel.add_0(this.m_btnEndTurn);
        if (myRegistration.getPtAction() <= 0) {
          if (model_0().getGame().getCurrentTimeStep() > model_0().getGame().getEbConfigGameTime().getDeploymentTimeStep()) {
            ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlEndTurn);
          }
           else {
            myFreighter = model_0().getGame().getFreighter(myRegistration);
            if (model_0().getGame().getCurrentTimeStep() < model_0().getGame().getEbConfigGameTime().getDeploymentTimeStep() && jsEquals(myFreighter.getLocation(), ($clinit_Location() , Board))) {
              ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlEndTurn);
            }
             else if (model_0().getGame().getCurrentTimeStep() == model_0().getGame().getEbConfigGameTime().getDeploymentTimeStep()) {
              if (!myFreighter.containToken()) {
                ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlEndTurn);
              }
               else {
                ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlDeploy);
              }
            }
          }
        }
      }
      if (model_0().isLogged() && isNull(myRegistration) && (jsEquals(model.getGame().getStatus(), ($clinit_GameStatus() , Open)) || jsEquals(model.getGame().getStatus(), ($clinit_GameStatus() , Pause))) && model_0().getGame().getMaxNumberOfPlayer() > model_0().getGame().getCurrentNumberOfRegiteredPlayer()) {
        this.m_panel.add_0(this.m_btnRegister);
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlRegister);
      }
      if (model_0().getGame().getCurrentNumberOfRegiteredPlayer() < model_0().getGame().getMaxNumberOfPlayer() && jsEquals(model_0().getGame().getStatus(), ($clinit_GameStatus() , Running))) {
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlPause);
      }
      if (model_0().getGame().getCurrentTimeStep() < model_0().getGame().getEbConfigGameTime().getDeploymentTimeStep()) {
        myFreighter = model_0().getGame().getFreighter(myRegistration);
        if (isNotNull(myFreighter) && jsEquals(model.getGame().getStatus(), ($clinit_GameStatus() , Running)) && jsEquals(myFreighter.getLocation(), ($clinit_Location() , Orbit)) && isNotNull(myRegistration) && model_0().getGame().getCurrentPlayerIds().contains_0(valueOf_40(myRegistration.getId()))) {
          ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlLand);
        }
      }
      if (model.getGame().getAllowedTakeOffTurns().contains_0(valueOf_37(model.getGame().getCurrentTimeStep())) && isNotNull(myRegistration) && model.getGame().getCurrentPlayerIds().contains_0(valueOf_40(myRegistration.getId()))) {
        ($clinit_MAppMessagesStack() , s_instance_1).showMessage(this.m_pnlTakeOff);
      }
      if (jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Practice_0))) {
        ($clinit_MAppMessagesStack() , s_instance_1).showPersitentMessage(this.m_pnlPractice);
      }
       else if (jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Initiation))) {
        this.m_panel.add_0(this.m_btnPractice);
      }
    }
  }
   else if (isNull(myRegistration)) {
    this.m_panel.add_0(this.m_btnCancel);
  }
   else if (action.isRunnable()) {
    this.m_panel.add_0(this.m_btnOk);
    this.m_panel.add_0(this.m_iconAction);
    this.m_lblAction.setText(valueOf_45(model_0().getActionBuilder().getCost()));
    this.m_panel.add_0(this.m_lblAction);
    this.m_panel.add_0(this.m_btnCancel);
  }
   else {
    try {
      action.check_1();
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 10)) {
        e = $e0;
        if (jsNotEquals(e.getMessage(), null) && !(length__I__devirtual$(trim__Ljava_lang_String___devirtual$(e.getMessage())) == 0)) {
          ($clinit_MAppMessagesStack() , s_instance_1).showWarning(e.getMessage());
        }
      }
       else 
        throw toJs($e0);
    }
    if (action.isTokenSelected() || action.isActionsPending() || action.getActionList().size_1() != 0) {
      this.m_panel.add_0(this.m_btnCancel);
    }
    if (!mainSelectedToken.getEnuColor().contain_1(myRegistration.getColor_0())) {
      if (mainSelectedToken.canBeATarget(model_0().getGame())) {
        this.m_panel.add_0(this.m_btnFire);
      }
    }
     else if (model_0().getGame().getTokenFireLength(mainSelectedToken) > 0 || jsEquals(mainSelectedToken.getType(), ($clinit_TokenType() , Freighter)) && isNotNull(model_0().getGame().getToken_2(action.getSelectedPosition_0(), ($clinit_TokenType() , Turret)))) {
      try {
        action.exec_1();
        if (mainSelectedToken.getBulletCount() > 0 || jsEquals(mainSelectedToken.getType(), ($clinit_TokenType() , Freighter))) {
          this.m_panel.add_0(this.m_btnFire);
        }
      }
       catch ($e2) {
        $e2 = toJava($e2);
        if (instanceOf($e2, 10)) {
          e = $e2;
        }
         else 
          throw toJs($e2);
      }
       finally {
        try {
          action.unexec_0();
        }
         catch ($e1) {
          $e1 = toJava($e1);
          if (instanceOf($e1, 10)) {
            e = $e1;
          }
           else 
            throw toJs($e1);
        }
      }
    }
    if (action.getSelectedToken().canControlNeighbor(model_0().getGame(), action.getSelectedPosition_0())) {
      this.m_panel.add_0(this.m_btnControl);
    }
    if (action.isBoardTokenSelected() && !action.isActionsPending() && jsEquals(mainSelectedToken.getType(), ($clinit_TokenType() , Freighter)) && isNotNull(myRegistration) && mainSelectedToken.getBulletCount() > 0 && myRegistration.getPtAction() >= 2 && myRegistration.getEnuColor().isColored(mainSelectedToken.getColor_0()) && isNull(model.getGame().getToken_2(action.getSelectedPosition_0(), ($clinit_TokenType() , Turret))) && !mainSelectedToken.getPosition().equals_3(action.getSelectedPosition_0())) {
      this.m_panel.add_0(this.m_btnRepairTurret);
    }
    if (model.getGame().getAllowedTakeOffTurns().contains_0(valueOf_37(model.getGame().getCurrentTimeStep()))) {
      if (action.isBoardTokenSelected() && !action.isActionsPending() && jsEquals(mainSelectedToken.getType(), ($clinit_TokenType() , Freighter)) && mainSelectedToken.getEnuColor().contain_1(myRegistration.getColor_0())) {
        this.m_panel.add_0(this.m_btnTakeOff);
      }
    }
  }
}
;
_.m_actionIndexBeforePracticeMode = 0;
var Lcom_fullmetalgalaxy_client_game_context_WgtContextAction_2_classLit = createForClass('com.fullmetalgalaxy.client.game.context', 'WgtContextAction', 671, Lcom_fullmetalgalaxy_client_widget_WgtView_2_classLit);
function $clinit_WgtContextExtra(){
  $clinit_WgtContextExtra = emptyMethod;
  $clinit_WgtView();
}

function WgtContextExtra(){
  $clinit_WgtContextExtra();
  WgtView.call(this);
  this.$init_129();
  this.m_lblTitle.setStyleName('fmp-context-extra-title');
  this.m_vPanel.add_0(this.m_lblTitle);
  this.m_vPanel.add_0(this.m_hPanel);
  this.initWidget(this.m_focusPanel);
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
  this.setStyleName('WgtActionInfo');
}

defineClass(672, 237, {115:1, 72:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtContextExtra);
_.$init_129 = function $init_129(){
  this.m_focusPanel = new FocusPanel;
  this.m_vPanel = new VerticalPanel;
  this.m_hPanel = new HorizontalPanel;
  this.m_lblTitle = new HTML;
  this.m_wgtTokenLink = new HashMap;
}
;
_.addToken = function addToken(p_token){
  this.addToken_0(p_token, ($clinit_Sector() , North));
}
;
_.addToken_0 = function addToken_0(p_token, p_sectorValue){
  var charCount, fireCount, label_0, lblStr, panelToken, registration, team, wgtToken;
  panelToken = new FlowPanel;
  label_0 = new HTML_0('');
  if (jsEquals(p_token.getType(), ($clinit_TokenType() , Freighter))) {
    lblStr = '???';
    registration = model_0().getGame().getRegistrationByColor(p_token.getColor_0());
    if (isNotNull(registration)) {
      if (registration.haveAccount()) {
        lblStr = registration.getAccount_0().getPseudo();
      }
      team = registration.getTeam_1(model_0().getGame());
      if (isNotNull(team) && jsNotEquals(team.getCompany(), ($clinit_Company() , Freelancer))) {
        lblStr += '<br/>' + team.getCompany().getFullName();
      }
    }
    label_0.setHTML_0(lblStr);
  }
   else {
    lblStr = getTokenString(0, p_token.getType());
    if (p_token.getType().getMaxBulletCount() > 0 && p_token.getBulletCount() != p_token.getType().getMaxBulletCount()) {
      fireCount = p_token.getType().getMaxBulletCount() - p_token.getBulletCount();
      lblStr += '<br/>x';
      fireCount--;
      while (fireCount >= 1) {
        lblStr += 'x';
        fireCount--;
      }
    }
    if (p_token.getContainSize() > 0) {
      lblStr += '<br/>#';
      charCount = 1;
      while (p_token.getContainSize() > charCount) {
        lblStr += '#';
        charCount++;
      }
    }
    label_0.setHTML_0(lblStr);
  }
  wgtToken = new Image_1(getTokenImage_0(p_token.getEnuColor(), 0, p_token.getType(), p_sectorValue));
  wgtToken.addClickHandler(this);
  wgtToken.setTitle(getTokenString_0(0, p_token));
  this.m_wgtTokenLink.put(wgtToken, p_token);
  panelToken.add_0(wgtToken);
  panelToken.add_0(label_0);
  this.m_hPanel.add_0(panelToken);
}
;
_.onClick = function onClick_17(p_event){
  var actionBuilder, e, token;
  try {
    actionBuilder = model_0().getActionBuilder();
    token = castTo(this.m_wgtTokenLink.get_1(p_event.getSource()), 19);
    if (!isNotNull(token)) {
      debugger;
      throw toJs(makeAssertionError());
    }
    actionBuilder.userTokenClick(token);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
      ($clinit_MAppMessagesStack() , s_instance_1).showWarning(e.getLocalizedMessage());
    }
     else 
      throw toJs($e0);
  }
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.onModelUpdate = function onModelUpdate_5(p_ModelSender){
  this.redraw();
}
;
_.redraw = function redraw_8(){
  var action, entry, entry$iterator, fakeToken, freighters, game, isTeleporter, isTitleDisplayed, it, lastTokenType, list, mainToken, model, ore, token, token$iterator;
  isTeleporter = false;
  this.m_hPanel.clear_0();
  this.m_focusPanel.clear_0();
  this.m_wgtTokenLink.clear_0();
  model = model_0();
  if (isNull(model)) {
    return;
  }
  if (model_0().getGame().isFinished()) {
    return;
  }
  action = model.getActionBuilder();
  mainToken = action.getSelectedToken();
  if (isNotNull(mainToken) && jsEquals(mainToken.getType(), ($clinit_TokenType() , Teleporter))) {
    freighters = model.getGame().getAllFreighter(mainToken.getColor_0());
    if (freighters.size_1() > 0) {
      mainToken = castTo(freighters.get_0(0), 19);
      isTeleporter = true;
    }
  }
  if (isNotNull(mainToken) && jsEquals(mainToken.getType(), ($clinit_TokenType() , Warp))) {
    mainToken = model.getGame().getMainWarp();
    isTeleporter = true;
  }
  if (!action.isBoardTokenSelected() && !action.isActionsPending() && isNull(action.getSelectedAction())) {
    game = model.getGame();
    list = model_0().getGame().getSetToken();
    isTitleDisplayed = false;
    for (it = list.iterator_0(); it.hasNext_0();) {
      token = castTo(castTo(it.next_1(), 19), 19);
      if (jsEquals(token.getLocation(), ($clinit_Location() , Orbit)) && model_0().getGame().getRegistrationByColor(token.getColor_0()).haveAccount() && (game.getCurrentTimeStep() <= game.getEbConfigGameTime().getDeploymentTimeStep() || game.getCurrentPlayerIds().contains_0(valueOf_40(model_0().getGame().getRegistrationByColor(token.getColor_0()).getId())))) {
        if (!isTitleDisplayed) {
          isTitleDisplayed = true;
          this.m_lblTitle.setText(($clinit_MAppBoard() , s_messages_0).inOrbit());
        }
        this.addToken(token);
      }
    }
  }
   else if (isNotNull(action.getSelectedAction()) && (jsEquals(action.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtLand)) || jsEquals(action.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtDeployment)))) {
    if (!isNotNull(action.getSelectedToken())) {
      debugger;
      throw toJs(makeAssertionError());
    }
    token = castTo(action.getSelectedToken(), 19);
    if (jsEquals(action.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtLand))) {
      this.m_lblTitle.setHTML_0(($clinit_MAppBoard() , s_messages_0).landing());
    }
     else {
      this.m_lblTitle.setHTML_0(($clinit_MAppBoard() , s_messages_0).deployment(getTokenString(0, token.getType())));
    }
    this.addToken_0(token, token.getPosition().getSector());
  }
   else if (action.isBoardTokenSelected() && mainToken.containToken()) {
    if (isTeleporter) {
      this.m_lblTitle.setText(($clinit_MAppBoard() , s_messages_0).teleport());
    }
     else {
      this.m_lblTitle.setText(($clinit_MAppBoard() , s_messages_0).contain_0());
    }
    lastTokenType = ($clinit_TokenType() , None_0);
    for (token$iterator = mainToken.getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (!action.containUnload(token) && (!token.getType().isOre() || jsNotEquals(mainToken.getType(), ($clinit_TokenType() , Freighter)))) {
        this.addToken(token);
        lastTokenType = token.getType();
      }
    }
    if (jsEquals(mainToken.getType(), ($clinit_TokenType() , WeatherHen)) && !instanceOf(action.getSelectedAction(), 83)) {
      ore = castTo(mainToken.getCopyContains().iterator_0().next_1(), 19);
      this.m_lblTitle.setText(($clinit_MAppBoard() , s_messages_0).construct());
      for (entry$iterator = model.getGame().getConstructReserve().entrySet().iterator_0(); entry$iterator.hasNext_0();) {
        entry = castTo(entry$iterator.next_1(), 39);
        if (model.getGame().canConstruct(lastTokenType, castTo(entry.getKey(), 55))) {
          fakeToken = new EbToken_0(castTo(entry.getKey(), 55));
          fakeToken.setId(ore.getId());
          if (castTo(entry.getKey(), 55).canBeColored()) {
            fakeToken.setColor(mainToken.getColor_0());
          }
          fakeToken.setVersion(ore.getVersion());
          fakeToken.setLocation(($clinit_Location() , ToBeConstructed));
          fakeToken.setCarrierToken(mainToken);
          this.addToken(fakeToken);
        }
      }
    }
  }
  if (this.m_hPanel.getWidgetCount() > 0) {
    this.m_focusPanel.add_0(this.m_vPanel);
  }
}
;
var Lcom_fullmetalgalaxy_client_game_context_WgtContextExtra_2_classLit = createForClass('com.fullmetalgalaxy.client.game.context', 'WgtContextExtra', 672, Lcom_fullmetalgalaxy_client_widget_WgtView_2_classLit);
function $clinit_WgtContextLand(){
  $clinit_WgtContextLand = emptyMethod;
  $clinit_Composite();
}

function WgtContextLand(){
  $clinit_WgtContextLand();
  Composite.call(this);
  this.$init_130();
  this.m_panel.setSize('100%', '100%');
  this.initWidget(this.m_panel);
}

defineClass(733, 59, {18:1, 44:1, 14:1, 11:1, 1:1}, WgtContextLand);
_.$init_130 = function $init_130(){
  this.m_panel = new VerticalPanel;
  this.m_actionLastUpdate = 0;
}
;
_.redraw = function redraw_9(){
  var actionBuilder, color_0, disableFireCount, fireCount, firecover, iColor, land2Display, landStr, pxHexHeight;
  if (!isNotNull(model_0())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  actionBuilder = model_0().getActionBuilder();
  if (neq(actionBuilder.getLastUpdate().getTime_1(), this.m_actionLastUpdate)) {
    if (!isNotNull(model_0())) {
      debugger;
      throw toJs(makeAssertionError());
    }
    this.m_panel.clear_0();
    land2Display = model_0().getGame().getLand_0(actionBuilder.getSelectedPosition_0());
    pxHexHeight = getHexHeight_0(model_0().getZoomDisplayed());
    landStr = getLandString(0, land2Display);
    this.m_panel.add_0(new HTML_0(landStr));
    this.m_panel.add_0(new HTML_0('<div style="height: ' + pxHexHeight + 'px;" class="fmp-' + land2Display + '"><\/div>'));
    firecover = model_0().getGame().getBoardFireCover();
    for (iColor = 0; iColor < getTotalNumberOfColor(); iColor++) {
      color_0 = getColorFromIndex(iColor);
      fireCount = firecover.getFireCover_0(actionBuilder.getSelectedPosition_0(), color_0);
      disableFireCount = firecover.getDisabledFireCover_1(actionBuilder.getSelectedPosition_0(), color_0);
      if (fireCount != 0 || disableFireCount != 0) {
        this.m_panel.add_0(new HTML_0('couverture de feu ' + getColorString(0, color_0.getValue_1()) + ': ' + fireCount + ' (+' + disableFireCount + ')'));
      }
    }
  }
}
;
_.m_actionLastUpdate = 0;
var Lcom_fullmetalgalaxy_client_game_context_WgtContextLand_2_classLit = createForClass('com.fullmetalgalaxy.client.game.context', 'WgtContextLand', 733, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtContextMinimap(){
  $clinit_WgtContextMinimap = emptyMethod;
  var iColor, iColor$array, iColor$index, iColor$max, img;
  $clinit_Composite();
  tokenImages = initUnidimensionalArray(Lcom_google_gwt_core_client_JavaScriptObject_2_classLit, {4:1, 1:1, 5:1}, 0, getAllSingleColor().length + 1, 2, 1);
  {
    for (iColor$array = getAllSingleColor() , iColor$index = 0 , iColor$max = iColor$array.length; iColor$index < iColor$max; ++iColor$index) {
      iColor = iColor$array[iColor$index];
      img = new Image_4('images/board/' + singleColorToString(iColor) + '/minimap/token.png');
      setCheck(tokenImages, iColor, as_0(img.getElement()));
      prefetch(img.getUrl());
    }
  }
}

function WgtContextMinimap(){
  $clinit_WgtContextMinimap();
  Composite.call(this);
  this.$init_131();
  this.initWidget(this.m_panel);
  this.m_panel.add_0(this.canvas);
  this.canvas.setWidth(240 + 'px');
  this.canvas.setHeight(160 + 'px');
  this.canvas.addMouseUpHandler(this);
}

defineClass(730, 59, {219:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtContextMinimap);
_.$init_131 = function $init_131(){
  this.m_panel = new AbsolutePanel;
  this.canvas = createIfSupported();
  this.m_lastResfreshTurn = -1;
  this.m_lastResfreshGameId = fromInt_0(-1);
}
;
_.onMouseUp_0 = function onMouseUp_4(p_event){
  var hexPositionX, hexPositionY;
  if (maskUndefined(p_event.getSource()) === maskUndefined(this.canvas)) {
    hexPositionX = round_int(p_event.getX() * model_0().getGame().getLandWidth() / 240);
    hexPositionY = round_int(p_event.getY() * model_0().getGame().getLandHeight() / 160);
    ($clinit_MAppBoard() , s_instance_3).setScrollPosition(hexPositionX, hexPositionY);
  }
}
;
_.redraw = function redraw_10(){
  var game, gc, iLand, images, img, ix, iy, land, position, position$iterator, registration, registration$iterator, strWinner, token, token$iterator, winnerTeam;
  if (!isNotNull(model_0())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  game = model_0().getGame();
  {
    this.m_lastResfreshTurn = game.getCurrentTimeStep();
    this.m_lastResfreshGameId = game.getId();
    this.canvas.setCoordinateSpaceWidth(game.getLandWidth() * 8);
    this.canvas.setCoordinateSpaceHeight(game.getLandHeight() * 8 + 4);
    gc = this.canvas.getContext2d();
    $clearRect(gc, 0, 0, game.getLandWidth(), game.getLandHeight());
    images = initUnidimensionalArray(Lcom_google_gwt_core_client_JavaScriptObject_2_classLit, {4:1, 1:1, 5:1}, 0, values_5().length, 2, 1);
    for (iLand = 0; iLand < values_5().length; iLand++) {
      land = values_5()[iLand];
      img = new Image_4('images/board/' + game.getPlanetType().getFolderName() + '/minimap/' + land.getImageName_0(game.getCurrentTide()));
      img.addLoadHandler(new WgtContextMinimap$1(this));
      setCheck(images, iLand, as_0(img.getElement()));
      prefetch(img.getUrl());
    }
    for (ix = 0; ix < game.getLandWidth(); ix++) {
      for (iy = 0; iy < game.getLandHeight(); iy++) {
        if (jsEquals(game.getLand(ix, iy), ($clinit_LandType() , Montain))) {
          $drawImage(gc, images[game.getLand(ix, iy).ordinal_0()], ix * 8, iy * 8 + ix % 2 * 4, 8, 8);
        }
         else {
          $drawImage(gc, images[game.getLand(ix, iy).ordinal_0()], ix * 8, iy * 8 + ix % 2 * 4, 8, 8);
        }
      }
    }
    for (token$iterator = game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getLocation(), ($clinit_Location() , Board)) && token.getColor_0() != 0) {
        $drawImage(gc, tokenImages[token.getColor_0()], token.getPosition().getX() * 8, token.getPosition().getY() * 8 + token.getPosition().getX() % 2 * 4, 8, 8);
        for (position$iterator = token.getExtraPositions(game.getCoordinateSystem()).iterator_0(); position$iterator.hasNext_0();) {
          position = castTo(position$iterator.next_1(), 23);
          $drawImage(gc, tokenImages[token.getColor_0()], position.getX() * 8, position.getY() * 8 + position.getX() % 2 * 4, 8, 8);
        }
      }
    }
  }
  if (jsEquals(game.getStatus(), ($clinit_GameStatus() , Open)) || jsEquals(game.getStatus(), ($clinit_GameStatus() , Pause))) {
    this.m_panel.add_4(new Image_1(($clinit_Icons() , s_instance_5).pause32()), narrow_int(240 / 2) - 16, narrow_int(160 / 2) - 16);
    this.m_panel.add_4(new Label_1('En Pause'), 0, narrow_int(160 / 2) + 30);
  }
   else if (game.isFinished()) {
    this.m_panel.add_4(new Label_1('Partie termin\xE9e'), 0, narrow_int(160 / 2) - 40);
    this.m_panel.add_4(new Image_1(($clinit_Icons() , s_instance_5).winner32()), narrow_int(240 / 2) - 16, narrow_int(160 / 2) - 16);
    strWinner = '';
    winnerTeam = game.getWinnerTeam();
    if (isNotNull(winnerTeam)) {
      strWinner += winnerTeam.getCompany().getFullName() + ':\n';
      for (registration$iterator = winnerTeam.getPlayers(game.getPreview()).iterator_0(); registration$iterator.hasNext_0();) {
        registration = castTo(registration$iterator.next_1(), 51);
        if (registration.haveAccount()) {
          strWinner += registration.getAccount_0().getPseudo() + '\n';
        }
      }
    }
    this.m_panel.add_4(new Label_1(strWinner), 0, narrow_int(160 / 2) + 30);
  }
}
;
_.m_lastResfreshGameId = 0;
_.m_lastResfreshTurn = 0;
var tokenImages;
var Lcom_fullmetalgalaxy_client_game_context_WgtContextMinimap_2_classLit = createForClass('com.fullmetalgalaxy.client.game.context', 'WgtContextMinimap', 730, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtContextMinimap$1(){
  $clinit_WgtContextMinimap$1 = emptyMethod;
  $clinit_Object();
}

function WgtContextMinimap$1(this$0){
  $clinit_WgtContextMinimap$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_132();
}

defineClass(731, 1, {488:1, 13:1, 1:1}, WgtContextMinimap$1);
_.$init_132 = function $init_132(){
}
;
_.onLoad_0 = function onLoad_4(event_0){
  this.this$01.m_lastResfreshTurn = -1;
  this.this$01.m_lastResfreshGameId = fromInt_0(-1);
  this.this$01.redraw();
}
;
var Lcom_fullmetalgalaxy_client_game_context_WgtContextMinimap$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.context', 'WgtContextMinimap/1', 731, Ljava_lang_Object_2_classLit);
function $clinit_WgtContextToken(){
  $clinit_WgtContextToken = emptyMethod;
  $clinit_Composite();
}

function WgtContextToken(){
  $clinit_WgtContextToken();
  Composite.call(this);
  this.$init_133();
  this.m_panel.setSize('100%', '100%');
  this.initWidget(this.m_panel);
}

defineClass(732, 59, {18:1, 44:1, 14:1, 11:1, 1:1}, WgtContextToken);
_.$init_133 = function $init_133(){
  this.m_panel = new VerticalPanel;
  this.m_actionLastUpdate = 0;
}
;
_.redraw = function redraw_11(){
  var absPanel, actionBuilder, landStr, percentage, player, position, token, wgtToken;
  if (!isNotNull(model_0())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  actionBuilder = model_0().getActionBuilder();
  if (neq(actionBuilder.getLastUpdate().getTime_1(), this.m_actionLastUpdate)) {
    if (!isNotNull(model_0())) {
      debugger;
      throw toJs(makeAssertionError());
    }
    this.m_panel.clear_0();
    this.m_actionLastUpdate = actionBuilder.getLastUpdate().getTime_1();
    wgtToken = new Image_1(getTokenImage_1(actionBuilder.getSelectedToken(), 1));
    wgtToken.setTitle(getTokenString_0(0, actionBuilder.getSelectedToken()));
    absPanel = new AbsolutePanel;
    this.m_panel.add_0(absPanel);
    absPanel.setSize('100%', '100%');
    absPanel.add_4(wgtToken, narrow_int(absPanel.getOffsetWidth() / 2) - narrow_int(wgtToken.getWidth() / 2), narrow_int(absPanel.getOffsetHeight() / 2) - narrow_int(wgtToken.getHeight() / 2) + 30);
    absPanel.add_4(new HTML_0('<b>' + getTokenString_0(0, actionBuilder.getSelectedToken()) + '<\/b>'), 0, 0);
    if (actionBuilder.getSelectedToken().getColor_0() != 0) {
      player = model_0().getGame().getRegistrationByColor(actionBuilder.getSelectedToken().getColor_0());
      if (isNotNull(player) && player.haveAccount()) {
        absPanel.add_4(new HTML_0(player.getAccount_0().getPseudo()), 0, 20);
      }
    }
    position = model_0().getActionBuilder().getSelectedPosition_0();
    if (isNotNull(position)) {
      landStr = getLandString(0, model_0().getGame().getLand_0(position));
      if (isNotNull(model_0().getGame().getToken_2(position, ($clinit_TokenType() , Pontoon)))) {
        landStr += ' & ' + getTokenString(0, ($clinit_TokenType() , Pontoon));
      }
      if (isNotNull(model_0().getGame().getToken_2(position, ($clinit_TokenType() , Sluice)))) {
        landStr += ' & ' + getTokenString(0, ($clinit_TokenType() , Sluice));
      }
      absPanel.add_4(new HTML_0(landStr), 0, 40);
    }
    token = model_0().getActionBuilder().getSelectedToken();
    if (isNotNull(token) && jsEquals(token.getType(), ($clinit_TokenType() , Freighter))) {
      absPanel.add_4(new HTML_0(getTokenString(0, ($clinit_TokenType() , Ore)) + ' : ' + token.getContainOre()), 150, 0);
      if (token.getBulletCount() > 0) {
        absPanel.add_4(new HTML_0(($clinit_MAppBoard() , s_messages_0).repairTurret() + ' : ' + token.getBulletCount()), 150, 30);
      }
    }
     else if (isNotNull(token) && token.getType().isDestroyer()) {
      absPanel.add_4(new HTML_0(($clinit_MAppBoard() , s_messages_0).bullet() + ' : ' + token.getBulletCount()), 150, 0);
    }
     else if (isNotNull(token) && jsEquals(token.getType(), ($clinit_TokenType() , WeatherHen))) {
      absPanel.add_4(new HTML_0(($clinit_MAppBoard() , s_messages_0).construct() + ' : ' + token.getBulletCount()), 150, 0);
    }
     else if (isNotNull(token) && (jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator)))) {
      percentage = 0;
      if (model_0().getGame().getEbConfigGameTime().isParallel()) {
        percentage = token.getBulletCount() / (2 * 2 + 1);
      }
       else {
        percentage = token.getBulletCount() / (model_0().getGame().countTeamOnBoard() * 2 + 1);
      }
      absPanel.add_4(new HTML_0(round_int(percentage * 100) + '%'), 200, 0);
    }
  }
}
;
_.m_actionLastUpdate = 0;
var Lcom_fullmetalgalaxy_client_game_context_WgtContextToken_2_classLit = createForClass('com.fullmetalgalaxy.client.game.context', 'WgtContextToken', 732, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_MAppStatusBar(){
  $clinit_MAppStatusBar = emptyMethod;
  $clinit_GuiEntryPoint();
}

function MAppStatusBar(){
  $clinit_MAppStatusBar();
  GuiEntryPoint.call(this);
  this.$init_134();
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
  this.redraw_1();
  this.m_panel.setStyleName('fmp-status');
  this.initWidget(this.m_panel);
}

defineClass(514, 118, {115:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppStatusBar);
_.$init_134 = function $init_134(){
  this.m_panel = new HorizontalPanel;
  this.m_gameInfo = new WgtGameStatus;
}
;
_.getHistoryId = function getHistoryId_6(){
  return 'status';
}
;
_.onModelUpdate = function onModelUpdate_6(p_modelSender){
  this.redraw_1();
}
;
_.redraw_1 = function redraw_12(){
  var registration, registration$iterator, team, team$iterator;
  this.m_panel.clear_0();
  this.m_panel.add_0(this.m_gameInfo);
  for (team$iterator = model_0().getGame().getTeamByPlayOrder().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    for (registration$iterator = team.getPlayers(model_0().getGame().getPreview()).iterator_0(); registration$iterator.hasNext_0();) {
      registration = castTo(registration$iterator.next_1(), 51);
      if (isNotNull(registration) && registration.getColor_0() != 0) {
        this.m_panel.add_0(new WgtPlayerInfo(registration));
      }
    }
  }
}
;
var Lcom_fullmetalgalaxy_client_game_status_MAppStatusBar_2_classLit = createForClass('com.fullmetalgalaxy.client.game.status', 'MAppStatusBar', 514, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_WgtGameStatus(){
  $clinit_WgtGameStatus = emptyMethod;
  $clinit_WgtView();
}

function WgtGameStatus(){
  $clinit_WgtGameStatus();
  var hPanel;
  WgtView.call(this);
  this.$init_135();
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
  this.m_panel.setHorizontalAlignment(($clinit_HasHorizontalAlignment() , ALIGN_CENTER));
  this.m_lblGameName.setStyleName('fmp-status-title');
  this.m_panel.add_0(this.m_lblGameName);
  hPanel = new HorizontalPanel;
  this.m_iconTime.setUrl('images/clear.cache.gif');
  hPanel.add_0(this.m_iconTime);
  this.m_lblTurn.setStyleName('fmp-status-text');
  this.m_lblTurn.setTitle('Tour actuel / Nombre total de tours');
  hPanel.add_0(this.m_lblTurn);
  this.m_lblDate.setText('');
  this.m_lblDate.setStyleName('fmp-status-text');
  this.m_lblDate.setTitle('Date de fin de tour');
  hPanel.add_0(this.m_lblDate);
  hPanel.add_0(this.m_iconMoon);
  this.m_iconMoon.setTitle(($clinit_MAppBoard() , s_messages_0).tide());
  hPanel.add_0(this.m_lblMoon);
  this.m_lblMoon.setTitle(($clinit_MAppBoard() , s_messages_0).tide());
  this.m_lblMoon.setStyleName('fmp-status-text');
  hPanel.add_0(this.m_panelTide);
  this.m_panel.setStyleName('fmp-status-game');
  this.m_panel.add_0(hPanel);
  this.initWidget(this.m_panel);
}

defineClass(734, 237, {115:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtGameStatus);
_.$init_135 = function $init_135(){
  this.m_panel = new VerticalPanel;
  this.m_iconTime = new Image_0;
  this.m_lblGameName = new Label;
  this.m_lblDate = new HTML_0('');
  this.m_endTurn = null;
  this.m_panelTide = new HorizontalPanel;
  this.m_iconMoon = new Image_1(($clinit_Icons() , s_instance_5).moon16());
  this.m_lblMoon = new HTML_0('&nbsp;:&nbsp;');
  this.m_lblTurn = new HTML;
  this.m_oldGameEvent = new AnEvent;
  this.m_gameLastVersion = fromInt_0(-1);
  this.m_dummyCallback = new WgtGameStatus$1(this);
  this.m_clockTimer = new WgtGameStatus$2(this);
}
;
_.computeGameHash = function computeGameHash(game){
  return fromInt_0(game.getCurrentTimeStep() + game.getCurrentTide().ordinal_0() * 10 + game.getNextTide().ordinal_0() * 100 + game.getNextTide2().ordinal_0() * 200 + hashCode__I__devirtual$(game.getCurrentPlayerIds()));
}
;
_.displayEndTurn = function displayEndTurn(p_endTurn){
  var sec;
  this.m_clockTimer.cancel();
  if (isNull(p_endTurn)) {
    this.m_lblDate.setHTML_0('');
    return;
  }
  this.m_endTurn = p_endTurn;
  sec = div_1(sub_1(this.m_endTurn.getTime_1(), serverTimeMillis()), 1000);
  if (gte_0(sec, fromInt_0(60 * 60))) {
    this.m_lblDate.setHTML_0('&nbsp;(' + formatDateTime(this.m_endTurn) + ')&nbsp;&nbsp;');
  }
   else {
    this.m_lblDate.setHTML_0('&nbsp;(-' + this.secToStr(sec) + ')&nbsp;&nbsp;');
    this.m_clockTimer.schedule(1000);
  }
}
;
_.onModelUpdate = function onModelUpdate_7(p_ModelSender){
  this.redraw();
}
;
_.redraw = function redraw_13(){
  var allowedTakeOff, currentTurn, game, image, index_0, lastEvent;
  game = model_0().getGame();
  if (isNull(game)) {
    return;
  }
  if (eq(this.m_gameLastVersion, this.computeGameHash(game))) {
    return;
  }
  this.m_gameLastVersion = this.computeGameHash(game);
  this.m_lblGameName.setText(game.getName());
  if (game.getEbConfigGameTime().isParallel()) {
    this.m_iconTime.setUrl('/images/icons/parallele16.png');
  }
   else {
    this.m_iconTime.setUrl('/images/icons/turnbyturn16.png');
  }
  this.m_lblTurn.setHTML_0('&nbsp;: ' + game.getCurrentTimeStep() + '/' + game.getEbConfigGameTime().getTotalTimeStep() + '&nbsp;&nbsp;');
  if (jsEquals(model_0().getGame().getStatus(), ($clinit_GameStatus() , Running)) && !model_0().isTimeLineMode() && model_0().getGame().getEbConfigGameTime().getTimeStepDurationInSec() != 0 && game.getCurrentTimeStep() > 1) {
    if (game.isParallel()) {
      this.displayEndTurn(game.estimateNextTimeStep());
    }
     else {
      this.displayEndTurn(game.getRegistration_0(castTo(game.getCurrentPlayerIds().get_0(0), 66).longValue()).getTeam_1(game).getEndTurnDate());
    }
  }
  lastEvent = model_0().getCurrentAction();
  if (jsNotEquals(lastEvent, this.m_oldGameEvent)) {
    this.m_oldGameEvent = lastEvent;
    this.m_panelTide.clear_0();
    image = iconTide(game.getCurrentTide()).createImage();
    image.setTitle(($clinit_MAppBoard() , s_messages_0).currentTide() + ('' + getTideString(0, game.getCurrentTide())));
    this.m_panelTide.add_0(image);
    this.m_panelTide.setCellWidth(image, '20px');
    if (isNotNull(model_0().getMyRegistration())) {
      if (game.getAllowedTakeOffTurns().contains_0(valueOf_37(game.getCurrentTimeStep()))) {
        image = new Image_1(($clinit_Icons() , s_instance_5).takeOff16());
        image.setTitle('Decollage autoris\xE9 !');
        this.m_panelTide.add_0(image);
        this.m_panelTide.setCellWidth(image, '20px');
      }
      if (model_0().getMyRegistration().getTeam_1(game).getTideForeCast(game.getPreview()) <= 0) {
        image = iconTide(($clinit_Tide() , Unknown_1)).createImage();
        image.setTitle(($clinit_MAppBoard() , s_messages_0).noForecast());
      }
       else {
        image = iconTide(game.getNextTide()).createImage();
        image.setTitle(($clinit_MAppBoard() , s_messages_0).nextTide() + ('' + getTideString(0, game.getNextTide())));
      }
      if (game.getEbConfigGameTime().isParallel()) {
        image.setTitle(image.getTitle() + ' - ' + formatDateTime(game.estimateNextTideChange()));
      }
      if (game.getNextTideChangeTimeStep() <= game.getEbConfigGameTime().getTotalTimeStep()) {
        this.m_panelTide.add_0(image);
        this.m_panelTide.setCellWidth(image, '20px');
      }
      if (model_0().getMyRegistration().getTeam_1(game).getTideForeCast(game.getPreview()) >= 2 && game.getNextTideChangeTimeStep() + game.getEbConfigGameTime().getTideChangeFrequency() <= game.getEbConfigGameTime().getTotalTimeStep()) {
        image = iconTide(game.getNextTide2()).createImage();
        image.setTitle(($clinit_MAppBoard() , s_messages_0).nextTide() + ('' + getTideString(0, game.getNextTide2())));
        this.m_panelTide.add_0(image);
        this.m_panelTide.setCellWidth(image, '20px');
      }
    }
    allowedTakeOff = game.getAllowedTakeOffTurns();
    if (isNotNull(allowedTakeOff)) {
      index_0 = 0;
      currentTurn = game.getCurrentTimeStep();
      while (index_0 < allowedTakeOff.size_1() && currentTurn >= castTo(allowedTakeOff.get_0(index_0), 28).intValue()) {
        index_0++;
      }
      if (index_0 < allowedTakeOff.size_1()) {
        if (castTo(allowedTakeOff.get_0(index_0), 28).intValue() == currentTurn + 1) {
          image = new Image_1(($clinit_Icons() , s_instance_5).takeOff16());
        }
         else {
          image = new Image_1(($clinit_Icons() , s_instance_5).takeOffBW16());
        }
        image.setTitle('prochain decolage : tour ' + allowedTakeOff.get_0(index_0));
        this.m_panelTide.add_0(image);
        this.m_panelTide.setCellWidth(image, '20px');
      }
    }
  }
}
;
_.secToStr = function secToStr(p_sec){
  $clinit_WgtGameStatus();
  var sec, strBuf;
  if (lte(p_sec, 0)) {
    if (eq(mod_0(p_sec, 2), 0)) {
      return '0:00';
    }
     else {
      return '&nbsp;&nbsp;&nbsp;&nbsp;';
    }
  }
  strBuf = new StringBuffer_0(10);
  strBuf.append_2(toInt_0(div_1(p_sec, 60)));
  strBuf.append_3(':');
  sec = toInt_0(mod_0(p_sec, 60));
  if (sec < 10) {
    strBuf.append_3('0');
  }
  strBuf.append_2(sec);
  return strBuf.toString_0();
}
;
_.m_gameLastVersion = 0;
var Lcom_fullmetalgalaxy_client_game_status_WgtGameStatus_2_classLit = createForClass('com.fullmetalgalaxy.client.game.status', 'WgtGameStatus', 734, Lcom_fullmetalgalaxy_client_widget_WgtView_2_classLit);
function $clinit_WgtGameStatus$1(){
  $clinit_WgtGameStatus$1 = emptyMethod;
  $clinit_Object();
}

function WgtGameStatus$1(this$0){
  $clinit_WgtGameStatus$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_136();
}

defineClass(735, 1, {1:1}, WgtGameStatus$1);
_.$init_136 = function $init_136(){
}
;
_.onSuccess = function onSuccess_21(p_result){
  this.onSuccess_0(castTo(p_result, 205));
}
;
_.onFailure = function onFailure_8(p_caught){
}
;
_.onSuccess_0 = function onSuccess_22(p_result){
}
;
var Lcom_fullmetalgalaxy_client_game_status_WgtGameStatus$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.status', 'WgtGameStatus/1', 735, Ljava_lang_Object_2_classLit);
function $clinit_WgtGameStatus$2(){
  $clinit_WgtGameStatus$2 = emptyMethod;
  $clinit_Timer();
}

function WgtGameStatus$2(this$0){
  $clinit_WgtGameStatus$2();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_137();
}

defineClass(736, 93, {1:1}, WgtGameStatus$2);
_.$init_137 = function $init_137(){
}
;
_.run = function run_11(){
  var sec;
  sec = div_1(sub_1(this.this$01.m_endTurn.getTime_1(), serverTimeMillis()), 1000);
  this.this$01.m_lblDate.setHTML_0('&nbsp;(-' + this.this$01.secToStr(sec) + ')&nbsp;&nbsp;');
  if (eq(sec, 0)) {
    getRpcService().checkUpdate(model_0().getGame().getId(), this.this$01.m_dummyCallback);
  }
  this.this$01.m_clockTimer.schedule(1000);
  if (jsNotEquals(model_0().getGame().getStatus(), ($clinit_GameStatus() , Running))) {
    this.this$01.m_lblDate.setHTML_0('');
    this.this$01.m_clockTimer.cancel();
  }
}
;
var Lcom_fullmetalgalaxy_client_game_status_WgtGameStatus$2_2_classLit = createForClass('com.fullmetalgalaxy.client.game.status', 'WgtGameStatus/2', 736, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_WgtPlayerInfo(){
  $clinit_WgtPlayerInfo = emptyMethod;
  $clinit_Composite();
}

function WgtPlayerInfo(p_registration){
  $clinit_WgtPlayerInfo();
  var color_0, colorIndex, game, hPanel, image, lbl, nextActionIncrement;
  Composite.call(this);
  this.$init_138();
  this.m_registration = p_registration;
  game = model_0().getGame();
  this.m_panel.setHorizontalAlignment(($clinit_HasHorizontalAlignment() , ALIGN_CENTER));
  hPanel = new HorizontalPanel;
  color_0 = this.m_registration.getEnuColor();
  colorIndex = 0;
  for (colorIndex = 0; colorIndex < getTotalNumberOfColor(); colorIndex++) {
    if (color_0.isColored_0(getColorFromIndex(colorIndex))) {
      image = icon16(getColorFromIndex(colorIndex).getValue_1()).createImage();
      image.setTitle(getSingleColorString(instance_1().getMyAccount().getId(), color_0.getValue_1()));
      hPanel.add_0(image);
    }
  }
  lbl = null;
  if (this.m_registration.haveAccount()) {
    lbl = new Label_1(this.m_registration.getAccount_0().getPseudo());
  }
   else {
    lbl = new Label_1('???');
  }
  lbl.setStyleName('fmp-status-text');
  hPanel.add_0(lbl);
  this.m_panel.add_0(hPanel);
  hPanel = new HorizontalPanel;
  hPanel.add_0(this.m_iconAction);
  this.m_iconAction.setTitle(($clinit_MAppBoard() , s_messages_0).remainingActionPoint());
  hPanel.add_0(this.m_lblAction);
  this.m_lblAction.setTitle(($clinit_MAppBoard() , s_messages_0).remainingActionPoint());
  this.m_lblAction.setHTML_0('&nbsp;: ' + this.m_registration.getPtAction() + '/' + (game.getEbConfigGameTime().getActionPtMaxReserve() + this.m_registration.getActionPointBonus() + (this.m_registration.getEnuColor().getNbColor() - 1) * game.getEbConfigGameTime().getActionPtMaxPerExtraShip()));
  if (game.isParallel()) {
    nextActionIncrement = game.estimateTimeStepDate(game.getCurrentTimeStep() + 1);
    this.m_lblAction.setTitle(($clinit_MAppBoard() , s_messages_0).nextPA(this.m_registration.getActionInc(game), formatTimeElapsed(sub_1(nextActionIncrement.getTime_1(), currentTimeMillis_0()))));
  }
  this.m_panel.add_0(hPanel);
  this.resfreshStyle();
  this.initWidget(this.m_panel);
}

defineClass(737, 59, {18:1, 44:1, 14:1, 11:1, 1:1}, WgtPlayerInfo);
_.$init_138 = function $init_138(){
  this.m_panel = new VerticalPanel;
  this.m_iconAction = new Image_1(($clinit_Icons() , s_instance_5).action16());
  this.m_lblAction = new HTML_0('&nbsp;: 0  ');
  this.m_registration = null;
  this.m_clockTimer = new WgtPlayerInfo$1(this);
}
;
_.resfreshStyle = function resfreshStyle(){
  $clinit_WgtPlayerInfo();
  var game;
  game = model_0().getGame();
  if (game.isParallel() && game.getCurrentTimeStep() > 1) {
    if (isNotNull(this.m_registration.getTeam_1(game).getEndTurnDate()) && gt(this.m_registration.getTeam_1(game).getEndTurnDate().getTime_1(), currentTimeMillis_0())) {
      this.m_panel.setStylePrimaryName('fmp-status-currentplayer');
      this.m_clockTimer.schedule(toInt_0(sub_1(this.m_registration.getTeam_1(game).getEndTurnDate().getTime_1(), currentTimeMillis_0())));
    }
     else {
      this.m_panel.setStylePrimaryName('fmp-status-player');
    }
  }
   else if (game.getCurrentPlayerIds().contains_0(valueOf_40(this.m_registration.getId()))) {
    this.m_panel.setStylePrimaryName('fmp-status-currentplayer');
  }
   else {
    this.m_panel.setStylePrimaryName('fmp-status-player');
  }
}
;
var Lcom_fullmetalgalaxy_client_game_status_WgtPlayerInfo_2_classLit = createForClass('com.fullmetalgalaxy.client.game.status', 'WgtPlayerInfo', 737, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtPlayerInfo$1(){
  $clinit_WgtPlayerInfo$1 = emptyMethod;
  $clinit_Timer();
}

function WgtPlayerInfo$1(this$0){
  $clinit_WgtPlayerInfo$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_139();
}

defineClass(738, 93, {1:1}, WgtPlayerInfo$1);
_.$init_139 = function $init_139(){
}
;
_.run = function run_12(){
  this.this$01.resfreshStyle();
}
;
var Lcom_fullmetalgalaxy_client_game_status_WgtPlayerInfo$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.status', 'WgtPlayerInfo/1', 738, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_MAppTabMenu(){
  $clinit_MAppTabMenu = emptyMethod;
  $clinit_GuiEntryPoint();
}

function MAppTabMenu(){
  $clinit_MAppTabMenu();
  GuiEntryPoint.call(this);
  this.$init_140();
  this.m_btnSwitchOff.setStyleName('fmp-tab-switchoff');
  this.m_btnSwitchOff.addClickHandler(new MAppTabMenu$2(this));
  this.m_hPanel.add_0(this.m_vTabPanel);
  this.addTabButton(this.m_btnWebLinks, 'Menu du site web');
  this.addTabButton(this.m_btnInfo, 'Autre info');
  this.addTabButton(this.m_btnMessage, 'Messages');
  this.addTabButton(this.m_btnPlayer, 'Afficher les joueurs');
  this.addTabButton(this.m_btnReserve, 'R\xE9serve');
  this.addTabButton(this.m_btnTime, "Voir l'historique");
  this.m_vTabPanel.setSize('100%', '100%');
  this.m_vTabPanel.setHorizontalAlignment(($clinit_HasHorizontalAlignment() , ALIGN_CENTER));
  this.m_vTabPanel.setVerticalAlignment(($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));
  this.m_hPanel.setHeight('100%');
  this.initWidget(this.m_hPanel);
  getEventBus().addHandler_1(($clinit_GameActionEvent() , TYPE), this);
  if (jsNotEquals(model_0().getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) && jsNotEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Initiation)) && jsNotEquals(model_0().getGame().getMessage(), null) && !isEmpty__Z__devirtual$(model_0().getGame().getMessage())) {
    this.openTab(this.m_btnMessage);
  }
   else if ((jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Initiation))) && isNotNull(model_0().getMyRegistration()) && model_0().getGame().haveNewMessage(model_0().getMyRegistration().getLastConnexion())) {
    this.openTab(this.m_btnMessage);
  }
   else {
    this.openTab(this.m_btnWebLinks);
    this.m_hideTimer.schedule(4000);
  }
}

defineClass(516, 118, {1057:1, 115:1, 75:1, 13:1, 148:1, 18:1, 44:1, 14:1, 11:1, 1:1}, MAppTabMenu);
_.$init_140 = function $init_140(){
  this.m_hPanel = new HorizontalPanel;
  this.m_vTabPanel = new VerticalPanel;
  this.m_btnWebLinks = new ToggleButton(new Image_1(($clinit_Icons() , s_instance_5).webLinks32()));
  this.m_btnInfo = new ToggleButton(new Image_1(($clinit_Icons() , s_instance_5).info32()));
  this.m_btnMessage = new ToggleButton(new Image_1(($clinit_Icons() , s_instance_5).message32()));
  this.m_btnPlayer = new ToggleButton(new Image_1(($clinit_Icons() , s_instance_5).player32()));
  this.m_btnReserve = new ToggleButton(new Image_1(($clinit_Icons() , s_instance_5).reserve32()));
  this.m_btnTime = new ToggleButton(new Image_1(($clinit_Icons() , s_instance_5).time32()));
  this.m_btnSwitchOff = new PushButton;
  this.m_wgtCurrentTab = null;
  this.m_hideTimer = new MAppTabMenu$1(this);
}
;
_.addTabButton = function addTabButton(p_button, p_title){
  p_button.addValueChangeHandler(this);
  p_button.setTitle(p_title);
  p_button.setStyleName('fmp-PushButton32');
  this.m_vTabPanel.add_0(p_button);
}
;
_.closeAllTab = function closeAllTab(){
  $clinit_MAppTabMenu();
  this.m_hideTimer.cancel();
  this.m_btnWebLinks.setDown(false);
  this.m_btnInfo.setDown(false);
  this.m_btnMessage.setDown(false);
  this.m_btnPlayer.setDown(false);
  this.m_btnReserve.setDown(false);
  this.m_btnTime.setDown(false);
  if (isNotNull(this.m_btnSwitchOff)) {
    this.m_hPanel.remove_0(this.m_btnSwitchOff);
  }
  if (isNotNull(this.m_wgtCurrentTab)) {
    this.m_hPanel.remove_0(this.m_wgtCurrentTab);
  }
  this.m_wgtCurrentTab = null;
}
;
_.getHistoryId = function getHistoryId_7(){
  return 'tabmenu';
}
;
_.onGameEvent = function onGameEvent_0(p_event, p_processModelUpdate){
  if (instanceOf(p_event, 137)) {
    if (eq(instance_1().getMyAccount().getId(), 0) || neq(castTo(p_event, 137).getAccountId(), instance_1().getMyAccount().getId())) {
      this.closeAllTab();
      this.openTab(this.m_btnMessage);
    }
  }
   else if (instanceOf(p_event, 157)) {
    this.closeAllTab();
  }
}
;
_.onModelUpdate = function onModelUpdate_8(p_modelSender){
  if (!p_modelSender.isTimeLineMode() && this.m_btnTime.isDown()) {
    this.closeAllTab();
  }
}
;
_.onModuleLoad = function onModuleLoad_6(){
  getClassPrototype(118).onModuleLoad.call(this);
  instance_1().addPreviewListener(this);
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_4(p_event){
  if (p_event.getTypeInt() == 256 && $getCtrlKey(p_event.getNativeEvent())) {
    if ($getKeyCode(p_event.getNativeEvent()) == 109 || $getKeyCode(p_event.getNativeEvent()) == 77) {
      return;
    }
  }
}
;
_.onValueChange = function onValueChange_3(p_event){
  this.closeAllTab();
  if (booleanValue__Z__devirtual$(castToBoolean(p_event.getValue_0())) == false) {
    return;
  }
  this.openTab(p_event.getSource());
}
;
_.openTab = function openTab(p_button){
  if (maskUndefined(p_button) === maskUndefined(this.m_btnWebLinks)) {
    this.m_btnWebLinks.setDown(true);
    this.m_wgtCurrentTab = new WgtWebLinks;
  }
  if (maskUndefined(p_button) === maskUndefined(this.m_btnInfo)) {
    this.m_btnInfo.setDown(true);
    this.m_wgtCurrentTab = new WgtGameInfo;
  }
  if (maskUndefined(p_button) === maskUndefined(this.m_btnMessage)) {
    this.m_btnMessage.setDown(true);
    this.m_wgtCurrentTab = new WgtMessages;
  }
  if (maskUndefined(p_button) === maskUndefined(this.m_btnPlayer)) {
    this.m_btnPlayer.setDown(true);
    this.m_wgtCurrentTab = new WgtPlayers;
  }
  if (maskUndefined(p_button) === maskUndefined(this.m_btnReserve)) {
    this.m_btnReserve.setDown(true);
    this.m_wgtCurrentTab = new WgtConstructReserve;
  }
  if (maskUndefined(p_button) === maskUndefined(this.m_btnTime)) {
    this.m_btnTime.setDown(true);
    this.m_wgtCurrentTab = new WgtGameTimeMode;
  }
  this.m_hPanel.add_0(this.m_wgtCurrentTab);
  this.m_hPanel.add_0(this.m_btnSwitchOff);
  if (instanceOf(this.m_wgtCurrentTab, 282)) {
    castTo(this.m_wgtCurrentTab, 282).scrollToBottom();
  }
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_MAppTabMenu_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'MAppTabMenu', 516, Lcom_fullmetalgalaxy_client_widget_GuiEntryPoint_2_classLit);
function $clinit_MAppTabMenu$1(){
  $clinit_MAppTabMenu$1 = emptyMethod;
  $clinit_Timer();
}

function MAppTabMenu$1(this$0){
  $clinit_MAppTabMenu$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_141();
}

defineClass(602, 93, {1:1}, MAppTabMenu$1);
_.$init_141 = function $init_141(){
}
;
_.run = function run_13(){
  this.this$01.closeAllTab();
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_MAppTabMenu$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'MAppTabMenu/1', 602, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_MAppTabMenu$2(){
  $clinit_MAppTabMenu$2 = emptyMethod;
  $clinit_Object();
}

function MAppTabMenu$2(this$0){
  $clinit_MAppTabMenu$2();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_142();
}

defineClass(603, 1, {72:1, 13:1, 1:1}, MAppTabMenu$2);
_.$init_142 = function $init_142(){
}
;
_.onClick = function onClick_18(p_event){
  this.this$01.closeAllTab();
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_MAppTabMenu$2_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'MAppTabMenu/2', 603, Ljava_lang_Object_2_classLit);
function $clinit_IsTreeItem(){
  $clinit_IsTreeItem = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_IsTreeItem_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'IsTreeItem');
function $clinit_HasTreeItems(){
  $clinit_HasTreeItems = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasTreeItems_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasTreeItems');
function $clinit_TreeItem(){
  $clinit_TreeItem = emptyMethod;
  $clinit_UIObject();
  itemAnimation = new TreeItem$TreeItemAnimation;
  impl_2 = castTo(new TreeItem$TreeItemImpl, 299);
}

function TreeItem(){
  $clinit_TreeItem();
  TreeItem_2.call(this, false);
}

function TreeItem_0(html){
  $clinit_TreeItem();
  TreeItem.call(this);
  this.setHTML(html);
}

function TreeItem_1(widget){
  TreeItem.call(this);
  this.setWidget(widget);
}

function TreeItem_2(isRoot){
  $clinit_TreeItem();
  var elem;
  UIObject.call(this);
  this.$init_143();
  this.isRoot = isRoot;
  elem = clone_0(BASE_BARE_ELEM, true);
  this.setElement(elem);
  this.contentElem = getFirstChild(elem);
  $setAttribute(this.contentElem, 'id', createUniqueId());
  if (isRoot) {
    this.initChildren();
  }
}

defineClass(99, 14, {99:1, 14:1, 1:1}, TreeItem_0, TreeItem_1, TreeItem_2);
_.$init_143 = function $init_143(){
}
;
_.addItem = function addItem(item_0){
  this.maybeRemoveItemFromParent(item_0);
  this.insertItem(this.getChildCount(), item_0);
}
;
_.addItem_0 = function addItem_0(widget){
  var ret;
  ret = new TreeItem_1(widget);
  this.addItem(ret);
  return ret;
}
;
_.convertToFullNode = function convertToFullNode(){
  impl_2.convertToFullNode_0(this);
}
;
_.getChild = function getChild(index_0){
  if (index_0 < 0 || index_0 >= this.getChildCount()) {
    return null;
  }
  return castTo(this.children.get_0(index_0), 99);
}
;
_.getChildCount = function getChildCount(){
  if (isNull(this.children)) {
    return 0;
  }
  return this.children.size_1();
}
;
_.getChildIndex = function getChildIndex(child){
  if (isNull(this.children)) {
    return -1;
  }
  return this.children.indexOf_0(child);
}
;
_.getContentElem = function getContentElem(){
  return this.contentElem;
}
;
_.getFocusable = function getFocusable(){
  var focus_0, w;
  focus_0 = this.getFocusableWidget();
  if (isNull(focus_0)) {
    w = this.getWidget();
    if (instanceOf(w, 86)) {
      focus_0 = castTo(w, 86);
    }
  }
  return focus_0;
}
;
_.getFocusableWidget = function getFocusableWidget(){
  var w;
  w = this.getWidget();
  if (instanceOf(w, 85)) {
    return castTo(w, 85);
  }
   else {
    return null;
  }
}
;
_.getImageElement = function getImageElement(){
  return getFirstChild(this.getImageHolderElement());
}
;
_.getImageHolderElement = function getImageHolderElement(){
  if (!this.isFullNode()) {
    this.convertToFullNode();
  }
  return this.imageHolder;
}
;
_.getParentItem = function getParentItem(){
  return this.parent_0;
}
;
_.getState = function getState(){
  return this.open_0;
}
;
_.getTitle = function getTitle_1(){
  return $getTitle(this.contentElem);
}
;
_.getTree = function getTree(){
  return this.tree;
}
;
_.getWidget = function getWidget_2(){
  return this.widget;
}
;
_.initChildren = function initChildren(){
  this.convertToFullNode();
  this.childSpanElem = createDiv();
  appendChild(this.getElement(), this.childSpanElem);
  $setProperty_0($getStyle(this.childSpanElem), 'whiteSpace', 'nowrap');
  this.children = new ArrayList;
}
;
_.insertItem = function insertItem(beforeIndex, item_0){
  var beforeElem, childContainer, childCount, margin;
  this.maybeRemoveItemFromParent(item_0);
  childCount = this.getChildCount();
  if (beforeIndex < 0 || beforeIndex > childCount) {
    throw toJs(new IndexOutOfBoundsException);
  }
  if (isNull(this.children)) {
    this.initChildren();
  }
  margin = this.isRoot?0:16;
  if (getCurrentLocale().isRTL_0()) {
    $setMarginRight($getStyle(item_0.getElement()), margin, ($clinit_Style$Unit() , PX));
  }
   else {
    $setMarginLeft($getStyle(item_0.getElement()), margin, ($clinit_Style$Unit() , PX));
  }
  childContainer = this.isRoot?this.tree.getElement():this.childSpanElem;
  if (beforeIndex == childCount) {
    $appendChild(childContainer, item_0.getElement());
  }
   else {
    beforeElem = this.getChild(beforeIndex).getElement();
    $insertBefore(childContainer, item_0.getElement(), beforeElem);
  }
  item_0.setParentItem(this.isRoot?null:this);
  this.children.add_6(beforeIndex, item_0);
  item_0.setTree(this.tree);
  if (!this.isRoot && this.children.size_1() == 1) {
    this.updateState(false, false);
  }
}
;
_.isFullNode = function isFullNode(){
  return isNotNull(this.imageHolder);
}
;
_.maybeRemoveItemFromParent = function maybeRemoveItemFromParent(item_0){
  if (isNotNull(item_0.getParentItem()) || isNotNull(item_0.getTree())) {
    item_0.remove_3();
  }
}
;
_.remove_3 = function remove_8(){
  if (isNotNull(this.parent_0)) {
    this.parent_0.removeItem(this);
  }
   else if (isNotNull(this.tree)) {
    this.tree.removeItem(this);
  }
}
;
_.removeItem = function removeItem(item_0){
  var oldTree;
  if (isNull(this.children) || !this.children.contains_0(item_0)) {
    return;
  }
  oldTree = this.tree;
  item_0.setTree(null);
  if (this.isRoot) {
    $removeChild(oldTree.getElement(), item_0.getElement());
  }
   else {
    $removeChild(this.childSpanElem, item_0.getElement());
  }
  item_0.setParentItem(null);
  this.children.remove_1(item_0);
  if (!this.isRoot && this.children.size_1() == 0) {
    this.updateState(false, false);
  }
}
;
_.removeItems = function removeItems(){
  while (this.getChildCount() > 0) {
    this.removeItem(this.getChild(0));
  }
}
;
_.setHTML = function setHTML(html){
  this.setHTML_0(html.asString());
}
;
_.setHTML_0 = function setHTML_0(html){
  this.setWidget(null);
  $setInnerHTML(this.contentElem, html);
}
;
_.setParentItem = function setParentItem(parent_0){
  this.parent_0 = parent_0;
}
;
_.setSelected = function setSelected(selected){
  if (this.selected_0 == selected) {
    return;
  }
  this.selected_0 = selected;
  setStyleName_0(this.getContentElem(), 'gwt-TreeItem-selected', selected);
}
;
_.setState = function setState(open_0){
  this.setState_0(open_0, true);
}
;
_.setState_0 = function setState_0(open_0, fireEvents){
  if (open_0 && this.getChildCount() == 0) {
    return;
  }
  if (this.open_0 != open_0) {
    this.open_0 = open_0;
    this.updateState(true, true);
    if (fireEvents && isNotNull(this.tree)) {
      this.tree.fireStateChanged(this, open_0);
    }
  }
}
;
_.setText = function setText_0(text_0){
  this.setWidget(null);
  $setInnerText(this.contentElem, text_0);
}
;
_.setTitle = function setTitle_1(title_0){
  $setTitle(this.contentElem, title_0);
}
;
_.setTree = function setTree(newTree){
  var i, n;
  if (jsEquals(this.tree, newTree)) {
    return;
  }
  if (isNotNull(this.tree)) {
    if (jsEquals(this.tree.getSelectedItem_0(), this)) {
      this.tree.setSelectedItem(null);
    }
    if (isNotNull(this.widget)) {
      this.tree.orphan_0(this.widget);
    }
  }
  this.tree = newTree;
  for (i = 0 , n = this.getChildCount(); i < n; ++i) {
    castTo(this.children.get_0(i), 99).setTree(newTree);
  }
  this.updateState(false, true);
  if (isNotNull(newTree)) {
    if (isNotNull(this.widget)) {
      newTree.adopt_0(this.widget, this);
    }
  }
}
;
_.setWidget = function setWidget_2(newWidget){
  if (isNotNull(newWidget)) {
    newWidget.removeFromParent();
  }
  if (isNotNull(this.widget)) {
    try {
      if (isNotNull(this.tree)) {
        this.tree.orphan_0(this.widget);
      }
    }
     finally {
      $removeChild(this.contentElem, this.widget.getElement());
      this.widget = null;
    }
  }
  $setInnerHTML(this.contentElem, '');
  this.widget = newWidget;
  if (isNotNull(newWidget)) {
    appendChild(this.contentElem, newWidget.getElement());
    if (isNotNull(this.tree)) {
      this.tree.adopt_0(this.widget, this);
    }
    if (shouldTreeDelegateFocusToElement(this.widget.getElement())) {
      $setAttribute(this.widget.getElement(), 'tabIndex', '-1');
    }
  }
}
;
_.updateState = function updateState(animate, updateTreeSelection){
  if (isNull(this.tree) || this.tree.isAttached() == false) {
    return;
  }
  if (this.getChildCount() == 0) {
    if (isNotNull(this.childSpanElem)) {
      setVisible(this.childSpanElem, false);
    }
    this.tree.showLeafImage(this);
    return;
  }
  if (animate && isNotNull(this.tree) && this.tree.isAttached()) {
    itemAnimation.setItemState(this, this.tree.isAnimationEnabled_0());
  }
   else {
    itemAnimation.setItemState(this, false);
  }
  if (this.open_0) {
    this.tree.showOpenImage(this);
  }
   else {
    this.tree.showClosedImage(this);
  }
  if (updateTreeSelection) {
    this.tree.maybeUpdateSelection(this, this.open_0);
  }
}
;
_.updateStateRecursive = function updateStateRecursive(){
  this.updateStateRecursiveHelper();
  this.tree.maybeUpdateSelection(this, this.open_0);
}
;
_.updateStateRecursiveHelper = function updateStateRecursiveHelper(){
  var i, n;
  this.updateState(false, false);
  for (i = 0 , n = this.getChildCount(); i < n; ++i) {
    castTo(this.children.get_0(i), 99).updateStateRecursiveHelper();
  }
}
;
_.isRoot = false;
_.open_0 = false;
_.selected_0 = false;
var BASE_BARE_ELEM, BASE_INTERNAL_ELEM, impl_2, itemAnimation;
var Lcom_google_gwt_user_client_ui_TreeItem_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TreeItem', 99, Lcom_google_gwt_user_client_ui_UIObject_2_classLit);
function $clinit_TreeItemAdditionalEvent(){
  $clinit_TreeItemAdditionalEvent = emptyMethod;
  $clinit_TreeItem();
}

function TreeItemAdditionalEvent(p_eventCount){
  $clinit_TreeItemAdditionalEvent();
  TreeItem_0.call(this, fromString_0('' + p_eventCount + ' events'));
  this.$init_144();
  this.m_additionalEventCount = p_eventCount;
}

defineClass(353, 99, {353:1, 99:1, 14:1, 1:1}, TreeItemAdditionalEvent);
_.$init_144 = function $init_144(){
  this.m_additionalEventCount = 0;
}
;
_.m_additionalEventCount = 0;
var Lcom_fullmetalgalaxy_client_game_tabmenu_TreeItemAdditionalEvent_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'TreeItemAdditionalEvent', 353, Lcom_google_gwt_user_client_ui_TreeItem_2_classLit);
function $clinit_TreeItemEvent(){
  $clinit_TreeItemEvent = emptyMethod;
  $clinit_TreeItem();
}

function TreeItemEvent(p_event){
  $clinit_TreeItemEvent();
  TreeItem.call(this);
  this.$init_145();
  this.setHTML_0(getIcon(p_event) + ' ' + p_event.toString_0());
  this.m_event = p_event;
}

defineClass(129, 99, {129:1, 99:1, 14:1, 1:1}, TreeItemEvent);
_.$init_145 = function $init_145(){
  this.m_event = null;
}
;
_.getEvent = function getEvent(){
  return this.m_event;
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_TreeItemEvent_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'TreeItemEvent', 129, Lcom_google_gwt_user_client_ui_TreeItem_2_classLit);
function $clinit_WgtConstructReserve(){
  $clinit_WgtConstructReserve = emptyMethod;
  $clinit_Composite();
}

function WgtConstructReserve(){
  $clinit_WgtConstructReserve();
  Composite.call(this);
  this.$init_146();
  this.initWidget(this.m_panel);
  this.redraw();
}

defineClass(746, 59, {18:1, 44:1, 14:1, 11:1, 1:1}, WgtConstructReserve);
_.$init_146 = function $init_146(){
  this.m_panel = new Grid_0(5, 3);
}
;
_.redraw = function redraw_14(){
  var entry, entry$iterator, iCol, iRow, myColor, wgt;
  iRow = 0;
  iCol = 0;
  this.m_panel.clear_0();
  myColor = new EnuColor_0(0);
  if (isNotNull(model_0().getMyRegistration())) {
    myColor.setValue_3(model_0().getMyRegistration().getTeam_1(model_0().getGame()).getFireColor());
  }
  for (entry$iterator = model_0().getGame().getConstructReserve().entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    wgt = new WgtTokenQty(castTo(entry.getKey(), 55), myColor, castTo(model_0().getGame().getConstructReserve().get_1(entry.getKey()), 28));
    this.m_panel.setWidget_0(iRow, iCol, wgt);
    iCol++;
    if (iCol >= this.m_panel.getColumnCount()) {
      iCol = 0;
      iRow++;
    }
  }
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtConstructReserve_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtConstructReserve', 746, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtGameInfo(){
  $clinit_WgtGameInfo = emptyMethod;
  $clinit_Composite();
}

function WgtGameInfo(){
  $clinit_WgtGameInfo();
  Composite.call(this);
  this.$init_147();
  this.m_btnPlay.addClickHandler(this);
  this.m_btnPause.addClickHandler(this);
  this.m_btnEdit.addClickHandler(this);
  this.m_btnAbort.addClickHandler(this);
  this.m_btnRecordEvent.addClickHandler(this);
  this.m_btnGrid.addClickHandler(this);
  this.m_btnAtmosphere.addClickHandler(this);
  this.m_btnCustomMap.addClickHandler(this);
  this.initGeneralPanel();
  this.m_generalPanel.setStyleName('fmp-general-panel');
  this.initWidget(this.m_generalPanel);
}

defineClass(743, 59, {72:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtGameInfo);
_.$init_147 = function $init_147(){
  this.m_btnPlay = new Button_0('Play');
  this.m_btnPause = new Button_0('Pause');
  this.m_btnEdit = new Button_0('Edite');
  this.m_btnAbort = new Button_0('Annuler la partie');
  this.m_btnRecordEvent = new ToggleButton_0('Enregistrer');
  this.m_btnGrid = new ToggleButton_0('Grille');
  this.m_btnAtmosphere = new ToggleButton_0('Atmosphere');
  this.m_btnCustomMap = new ToggleButton_0('Affichage carte custom');
  this.m_generalPanel = new FlowPanel;
}
;
_.initGeneralPanel = function initGeneralPanel(){
  var game, htmlTide, nextActionIncrement, registration, tidePanel, wgtGameTime;
  game = model_0().getGame();
  this.m_generalPanel.clear_0();
  this.m_generalPanel.add_0(new HTML_0(game.getGameType().getIconAsHtml() + ('' + game.getStatus().getIconAsHtml()) + ' ' + getGameStatusString(0, game.getStatus())));
  this.m_generalPanel.add_0(new Label_1(game.getDescription()));
  htmlTide = ($clinit_MAppBoard() , s_messages_0).tide() + ' ' + iconTide(game.getCurrentTide()).getHTML() + ' ';
  if (isNotNull(model_0().getMyRegistration()) && model_0().getMyRegistration().getTeam_1(game).getTideForeCast(game.getPreview()) > 0) {
    htmlTide += iconTide(game.getNextTide()).getHTML() + ' ';
  }
   else {
    htmlTide += '' + create_7(($clinit_Icons() , s_instance_5).tide_unknown()).getHTML();
  }
  if (game.isParallel()) {
    htmlTide += ' at ' + ($clinit_ClientUtil() , s_dateTimeFormat).format(game.estimateNextTideChange());
  }
  tidePanel = new HTMLPanel(htmlTide);
  tidePanel.setWidth('100%');
  this.m_generalPanel.add_0(tidePanel);
  if (jsEquals(game.getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(game.getGameType(), ($clinit_GameType() , Initiation))) {
    this.m_generalPanel.add_0(new HTML_0(($clinit_MAppBoard() , s_messages_0).gameCreation(($clinit_ClientUtil() , s_dateTimeFormat).format(game.getCreationDate())) + " par <a href='/profile.jsp?id=" + (isNull(game.getAccountCreator())?'0':valueOf_40(game.getAccountCreator().getId())) + "' target='_blank'>" + (isNull(game.getAccountCreator())?'???':game.getAccountCreator().getPseudo()) + '<\/a>'));
    this.m_generalPanel.add_0(new HTML_0(($clinit_MAppBoard() , s_messages_0).reportAnIssueToAdmin()));
  }
  if (model_0().isJoined()) {
    registration = model_0().getMyRegistration();
    if (game.isParallel()) {
      nextActionIncrement = game.estimateTimeStepDate(game.getCurrentTimeStep() + 1);
      this.m_generalPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).nextActionPt(registration.getActionInc(game), ($clinit_ClientUtil() , s_dateTimeFormat).format(nextActionIncrement))));
    }
     else if (isNotNull(registration.getTeam_1(game).getEndTurnDate())) {
      if (game.getCurrentPlayerIds().contains_0(valueOf_40(registration.getId()))) {
        this.m_generalPanel.add_0(new Label_1('Fin du tour: ' + ($clinit_ClientUtil() , s_dateTimeFormat).format(registration.getTeam_1(game).getEndTurnDate())));
      }
       else {
        this.m_generalPanel.add_0(new Label_1('Prochain tour avant: ' + ($clinit_ClientUtil() , s_dateTimeFormat).format(registration.getTeam_1(game).getEndTurnDate())));
      }
    }
  }
  this.m_generalPanel.add_0(this.m_btnGrid);
  this.m_btnGrid.setDown(model_0().isGridDisplayed());
  this.m_generalPanel.add_0(this.m_btnAtmosphere);
  this.m_btnAtmosphere.setDown(model_0().isAtmosphereDisplayed());
  if (jsNotEquals(game.getMapUri(), null)) {
    this.m_generalPanel.add_0(this.m_btnCustomMap);
    this.m_btnCustomMap.setDown(model_0().isCustomMapDisplayed());
  }
  if (!game.isParallel()) {
    this.m_generalPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).turn() + ' ' + game.getCurrentTimeStep() + '/' + game.getEbConfigGameTime().getTotalTimeStep()));
  }
  if (game.estimateEndingDate().after(new Date_0)) {
    this.m_generalPanel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).gameFinishAt(($clinit_ClientUtil() , s_dateTimeFormat).format(game.estimateEndingDate()))));
  }
  if (isNotNull(game.getAccountCreator()) && eq(instance_1().getMyAccount().getId(), game.getAccountCreator().getId()) && jsNotEquals(game.getStatus(), ($clinit_GameStatus() , History_0)) || instance_1().iAmAdmin()) {
    if (game.isPasswordProtected()) {
      this.m_generalPanel.add_0(new Label_1('Mot de passe: ' + game.getPassword()));
    }
    if (jsEquals(game.getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(game.getGameType(), ($clinit_GameType() , Initiation))) {
      if (jsEquals(game.getStatus(), ($clinit_GameStatus() , Running))) {
        this.m_generalPanel.add_0(this.m_btnPause);
      }
       else if (jsEquals(game.getStatus(), ($clinit_GameStatus() , Open)) || jsEquals(game.getStatus(), ($clinit_GameStatus() , Pause))) {
        this.m_generalPanel.add_0(this.m_btnPlay);
      }
    }
    this.m_generalPanel.add_0(this.m_btnEdit);
    this.m_generalPanel.add_0(this.m_btnAbort);
  }
  if (instance_1().iAmAdmin()) {
    this.m_generalPanel.add_0(new HTML_0("<a href='/admin/Servlet?downloadgame=" + toString_45(game.getId()) + "'>download<\/a>"));
    this.m_generalPanel.add_0(this.m_btnRecordEvent);
  }
  this.m_generalPanel.add_0(new HTML_0('<br/>'));
  wgtGameTime = new WgtGameTime;
  wgtGameTime.setReadOnly(true);
  this.m_generalPanel.add_0(wgtGameTime);
}
;
_.onClick = function onClick_19(p_event){
  var gameLog;
  if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnGrid)) {
    model_0().setGridDisplayed(this.m_btnGrid.isDown());
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnAtmosphere)) {
    model_0().setAtmosphereDisplayed(this.m_btnAtmosphere.isDown());
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnCustomMap)) {
    model_0().setCustomMapDisplayed(this.m_btnCustomMap.isDown());
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnPause)) {
    gameLog = newAdminTimePause(instance_1().getMyAccount().getId());
    gameLog.setGame(model_0().getGame());
    model_0().runSingleAction(gameLog);
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnPlay)) {
    gameLog = newAdminTimePlay(instance_1().getMyAccount().getId());
    gameLog.setGame(model_0().getGame());
    model_0().runSingleAction(gameLog);
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnEdit)) {
    gotoUrl('/editgame.jsp?id=' + toString_45(model_0().getGame().getId()));
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnAbort)) {
    if (confirm_0(($clinit_MAppBoard() , s_messages_0).confirmCancelGame())) {
      gameLog = newAdminAbort(instance_1().getMyAccount().getId());
      gameLog.setGame(model_0().getGame());
      model_0().runSingleAction(gameLog);
    }
  }
   else if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnRecordEvent)) {
    if (this.m_btnRecordEvent.isDown()) {
      model_0().getGame().setMessage('#recording' + '\n');
    }
    model_0().getActionBuilder().setRecordMode(this.m_btnRecordEvent.isDown());
  }
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtGameInfo_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtGameInfo', 743, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtGameLogs(){
  $clinit_WgtGameLogs = emptyMethod;
  $clinit_Composite();
}

function WgtGameLogs(){
  $clinit_WgtGameLogs();
  var panel;
  Composite.call(this);
  this.$init_148();
  panel = new ScrollPanel;
  panel.setStyleName('fmp-log-panel');
  panel.add_0(this.m_tree);
  this.m_tree.addSelectionHandler(this);
  this.initWidget(panel);
  this.redraw();
}

defineClass(786, 59, {303:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtGameLogs);
_.$init_148 = function $init_148(){
  this.m_tree = new Tree;
  this.m_additionalEventCount = 0;
}
;
_.addParallelHiddenEvent = function addParallelHiddenEvent(){
  var event_0, event$iterator, myRegistration, turnTreeItem;
  myRegistration = model_0().getMyRegistration();
  if (isNotNull(myRegistration) && !myRegistration.getTeam_1(model_0().getGame()).getMyEvents().isEmpty()) {
    turnTreeItem = new TreeItem_0(fromString_0(myRegistration.getAccount_0().getPseudo()));
    this.m_tree.addItem(turnTreeItem);
    for (event$iterator = myRegistration.getTeam_1(model_0().getGame()).getMyEvents().iterator_0(); event$iterator.hasNext_0();) {
      event_0 = castTo(event$iterator.next_1(), 20);
      turnTreeItem.addItem(new TreeItemEvent(event_0));
    }
  }
}
;
_.buildTree4Parallel = function buildTree4Parallel(){
  var dateTreeItem, event_0, iterator, turnTreeItem;
  iterator = model_0().getGame().getLogs().iterator_0();
  if (model_0().getGame().getAdditionalEventCount() == 0) {
    turnTreeItem = new TreeItem_0(fromString_0('inscriptions'));
    this.m_tree.addItem(turnTreeItem);
    while (iterator.hasNext_0()) {
      event_0 = castTo(iterator.next_1(), 20);
      turnTreeItem.addItem(new TreeItemEvent(event_0));
      if (instanceOf(event_0, 245)) {
        break;
      }
    }
  }
  dateTreeItem = null;
  while (iterator.hasNext_0()) {
    event_0 = castTo(iterator.next_1(), 20);
    if (isNull(dateTreeItem) || event_0.getLastUpdate().getDate_1() != dateTreeItem.getEvent().getLastUpdate().getDate_1()) {
      dateTreeItem = new TreeItemEvent(event_0);
      dateTreeItem.setHTML_0("<img src='/images/icons/calendar.png'/> " + getDate(event_0));
      this.m_tree.addItem(dateTreeItem);
    }
    dateTreeItem.addItem(new TreeItemEvent(event_0));
  }
}
;
_.buildTree4Tbt = function buildTree4Tbt(){
  var currentTurn, event_0, evtPlayerTurnCount, iterator, playerCount, playerPseudo, playerTreeItem, registration, turnTreeItem;
  currentTurn = 0;
  iterator = model_0().getGame().getLogs().iterator_0();
  turnTreeItem = null;
  if (model_0().getGame().getAdditionalEventCount() > 0) {
    turnTreeItem = new TreeItem_0(fromString_0('tour ?'));
  }
   else {
    turnTreeItem = new TreeItem_0(fromString_0('inscriptions'));
    this.m_tree.addItem(turnTreeItem);
    while (iterator.hasNext_0()) {
      event_0 = castTo(iterator.next_1(), 20);
      turnTreeItem.addItem(new TreeItemEvent(event_0));
      if (instanceOf(event_0, 295)) {
        currentTurn++;
        turnTreeItem = new TreeItem_0(fromString_0('tour ' + currentTurn));
        this.m_tree.addItem(turnTreeItem);
        break;
      }
    }
  }
  evtPlayerTurnCount = 0;
  playerCount = model_0().getGame().getCurrentNumberOfRegiteredPlayer();
  playerTreeItem = null;
  while (iterator.hasNext_0()) {
    event_0 = castTo(iterator.next_1(), 20);
    if (isNull(playerTreeItem)) {
      registration = null;
      playerPseudo = null;
      if (instanceOf(event_0, 17)) {
        registration = model_0().getGame().getRegistrationByIdAccount(castTo(event_0, 17).getAccountId());
      }
       else if (instanceOf(event_0, 144) && !event_0.isAuto()) {
        registration = model_0().getGame().getRegistrationByIdAccount(castTo(event_0, 144).getAccountId());
      }
      if (isNotNull(registration)) {
        playerPseudo = registration.getAccount_0().getPseudo();
      }
      if (jsNotEquals(playerPseudo, null)) {
        playerTreeItem = new TreeItemEvent(event_0);
        playerTreeItem.setText(playerPseudo);
        turnTreeItem.addItem(playerTreeItem);
      }
    }
    if (isNotNull(playerTreeItem)) {
      playerTreeItem.addItem(new TreeItemEvent(event_0));
    }
     else {
      turnTreeItem.addItem(new TreeItemEvent(event_0));
    }
    if (instanceOf(event_0, 144)) {
      playerTreeItem = null;
      evtPlayerTurnCount++;
      if (evtPlayerTurnCount >= playerCount) {
        evtPlayerTurnCount = 0;
        currentTurn++;
        turnTreeItem = new TreeItemEvent(event_0);
        turnTreeItem.setText('tour ' + currentTurn);
        this.m_tree.addItem(turnTreeItem);
      }
    }
    if (instanceOf(event_0, 167)) {
      if (isNotNull(castTo(event_0, 167).getOldRegistration(model_0().getGame())) && castTo(event_0, 167).getOldRegistration(model_0().getGame()).getColor_0() == 0) {
        playerCount--;
      }
    }
  }
}
;
_.getAdditionalEventCount = function getAdditionalEventCount(){
  return this.m_additionalEventCount;
}
;
_.onSelection = function onSelection_0(p_event){
  if (instanceOf(p_event.getSelectedItem(), 129)) {
    model_0().timePlay_0(castTo(castTo(p_event.getSelectedItem(), 129), 129).getEvent());
  }
  if (instanceOf(p_event.getSelectedItem(), 353)) {
    model_0().loadAdditionalEvents();
  }
}
;
_.redraw = function redraw_15(){
  this.m_tree.clear_0();
  if (model_0().getGame().getAdditionalEventCount() > 0) {
    this.m_tree.addItem(new TreeItemAdditionalEvent(model_0().getGame().getAdditionalEventCount()));
  }
  this.m_additionalEventCount = model_0().getGame().getAdditionalEventCount();
  if (model_0().getGame().getEbConfigGameTime().isParallel()) {
    this.buildTree4Parallel();
  }
   else {
    this.buildTree4Tbt();
  }
  if (model_0().getGame().isTimeStepParallelHidden(model_0().getGame().getCurrentTimeStep())) {
    this.addParallelHiddenEvent();
  }
}
;
_.m_additionalEventCount = 0;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtGameLogs_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtGameLogs', 786, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtGameTimeMode(){
  $clinit_WgtGameTimeMode = emptyMethod;
  $clinit_Composite();
}

function WgtGameTimeMode(){
  $clinit_WgtGameTimeMode();
  Composite.call(this);
  this.$init_149();
  this.m_btnFastBack.addClickHandler(this);
  this.m_btnFastBack.setTitle('');
  this.m_btnFastBack.setStyleName('fmp-PushButton32');
  this.m_btnFastPlay.addClickHandler(this);
  this.m_btnFastPlay.setTitle('');
  this.m_btnFastPlay.setStyleName('fmp-PushButton32');
  this.m_btnBack.addClickHandler(this);
  this.m_btnBack.setTitle('');
  this.m_btnBack.setStyleName('fmp-PushButton32');
  this.m_btnForward.addClickHandler(this);
  this.m_btnForward.setTitle('');
  this.m_btnForward.setStyleName('fmp-PushButton32');
  this.m_btnPlay.addClickHandler(this);
  this.m_btnPlay.setTitle('');
  this.m_btnPlay.setStyleName('fmp-PushButton32');
  this.m_btnPause.addClickHandler(this);
  this.m_btnPause.setTitle('');
  this.m_btnPause.setStyleName('fmp-PushButton32');
  this.m_btnOk.addClickHandler(this);
  this.m_btnOk.setTitle(($clinit_MAppBoard() , s_messages_0).ok());
  this.m_btnOk.setStyleName('fmp-PushButton32');
  this.m_panel.add_0(this.m_lblTimePosition);
  this.m_panel.add_0(this.m_lblCurrentEvent);
  this.m_btnPanel.add_0(this.m_btnPause);
  this.m_panel.add_0(this.m_btnPanel);
  this.m_panel.add_0(this.m_wgtGameLog);
  this.initWidget(this.m_panel);
}

defineClass(747, 59, {115:1, 72:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtGameTimeMode);
_.$init_149 = function $init_149(){
  this.m_panel = new VerticalPanel;
  this.m_lblTimePosition = new Label;
  this.m_lblCurrentEvent = new HTML;
  this.m_btnFastBack = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).fastBack32()));
  this.m_btnFastPlay = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).fastPlay32()));
  this.m_btnBack = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).back32()));
  this.m_btnForward = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).forward32()));
  this.m_btnPlay = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).play32()));
  this.m_btnPause = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).pause32()));
  this.m_btnOk = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).ok32()));
  this.m_btnPanel = new HorizontalPanel;
  this.m_wgtGameLog = new WgtGameLogs;
  this.m_hdlRegistration = null;
}
;
_.onClick = function onClick_20(p_event){
  var actionBuilder, evtCancel, fromIndex, sender;
  sender = p_event.getSource();
  if (maskUndefined(sender) === maskUndefined(this.m_btnOk)) {
    if (isNull(model_0().getCurrentAction())) {
      model_0().setTimeLineMode(false);
      return;
    }
    if (model_0().getLastTurnPlayed() != model_0().getGame().getCurrentTimeStep() || isNotNull(model_0().getMyRegistration()) && !model_0().getGame().getCurrentPlayerIds().contains_0(valueOf_40(model_0().getMyRegistration().getId()))) {
      if (!instance_1().iAmAdmin()) {
        alert_0('Only admin can cancel such action');
        return;
      }
      if (!confirm_0('Perform admin cancel ?')) {
        return;
      }
    }
    actionBuilder = model_0().getActionBuilder();
    actionBuilder.clear_0();
    evtCancel = new EbEvtCancel;
    evtCancel.setGame(model_0().getGame());
    fromIndex = model_0().getGame().getLogs().size_1() - 1;
    fromIndex += model_0().getGame().getAdditionalEventCount();
    if (isNotNull(model_0().getMyRegistration())) {
      fromIndex += model_0().getMyRegistration().getTeam_1(model_0().getGame()).getMyEvents().size_1();
    }
    evtCancel.setFromActionIndex(fromIndex);
    evtCancel.setToActionIndex(model_0().getGame().getAdditionalEventCount() + model_0().getCurrentActionIndex());
    evtCancel.setAccountId(instance_1().getMyAccount().getId());
    model_0().setTimeLineMode(false);
    model_0().runSingleAction(evtCancel);
  }
   else if (maskUndefined(sender) === maskUndefined(this.m_btnForward)) {
    model_0().timePlay(1);
  }
   else if (maskUndefined(sender) === maskUndefined(this.m_btnFastPlay)) {
    model_0().timePlay(10);
  }
   else if (maskUndefined(sender) === maskUndefined(this.m_btnBack)) {
    model_0().timeBack(1);
  }
   else if (maskUndefined(sender) === maskUndefined(this.m_btnFastBack)) {
    model_0().timeBack(10);
  }
   else if (maskUndefined(sender) === maskUndefined(this.m_btnPlay)) {
    model_0().startPlayAnimation();
  }
   else if (maskUndefined(sender) === maskUndefined(this.m_btnPause)) {
    model_0().stopPlayAnimation();
  }
}
;
_.onLoad = function onLoad_5(){
  getClassPrototype(11).onLoad.call(this);
  model_0().setTimeLineMode(true);
  this.m_hdlRegistration = getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
  this.redraw_2();
}
;
_.onModelUpdate = function onModelUpdate_9(p_modelSender){
  this.redraw_2();
}
;
_.onUnload = function onUnload_4(){
  getClassPrototype(11).onUnload.call(this);
  model_0().setTimeLineMode(false);
  if (isNotNull(this.m_hdlRegistration)) {
    this.m_hdlRegistration.removeHandler();
  }
}
;
_.redraw_2 = function redraw_16(){
  var currentEvent, game, totalEventCount;
  if (!isNotNull(model_0())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  game = model_0().getGame();
  totalEventCount = game.getLogs().size_1() + game.getAdditionalEventCount();
  if (isNotNull(model_0().getMyRegistration())) {
    totalEventCount += model_0().getMyRegistration().getTeam_1(game).getMyEvents().size_1();
  }
  this.m_lblTimePosition.setText(model_0().getCurrentActionIndex() + game.getAdditionalEventCount() + '/' + totalEventCount);
  currentEvent = model_0().getCurrentAction();
  if (isNull(currentEvent)) {
    this.m_lblCurrentEvent.setHTML_0('');
  }
   else {
    this.m_lblCurrentEvent.setHTML_0(getDetailAsHtml(currentEvent));
  }
  if (model_0().isAnimationPlaying()) {
    this.m_btnPanel.clear_0();
    this.m_btnPanel.add_0(this.m_btnPause);
  }
   else {
    if (jsEquals(this.m_btnPause.getParent(), this.m_btnPanel)) {
      this.m_btnPanel.remove_0(this.m_btnPause);
      this.m_btnPanel.add_0(this.m_btnFastBack);
      this.m_btnPanel.add_0(this.m_btnBack);
    }
    if (isNull(currentEvent)) {
      this.m_btnPanel.remove_0(this.m_btnPlay);
      this.m_btnPanel.remove_0(this.m_btnForward);
      this.m_btnPanel.remove_0(this.m_btnFastPlay);
    }
     else {
      if (jsNotEquals(this.m_btnPlay.getParent(), this.m_btnPanel)) {
        this.m_btnPanel.add_0(this.m_btnPlay);
        this.m_btnPanel.add_0(this.m_btnForward);
        this.m_btnPanel.add_0(this.m_btnFastPlay);
      }
      if (instance_1().iAmAdmin() || model_0().canCancelAction()) {
        this.m_btnPanel.add_0(this.m_btnOk);
      }
    }
  }
  if (this.m_wgtGameLog.getAdditionalEventCount() != game.getAdditionalEventCount()) {
    this.m_wgtGameLog.redraw();
  }
  this.m_panel.add_0(this.m_wgtGameLog);
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtGameTimeMode_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtGameTimeMode', 747, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_HasValueChangeHandlers(){
  $clinit_HasValueChangeHandlers = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_HasValueChangeHandlers_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'HasValueChangeHandlers');
function $clinit_TakesValue(){
  $clinit_TakesValue = emptyMethod;
}

var Lcom_google_gwt_user_client_TakesValue_2_classLit = createForInterface('com.google.gwt.user.client', 'TakesValue');
function $clinit_HasValue(){
  $clinit_HasValue = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasValue_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasValue');
function $clinit_WgtIntBox(){
  $clinit_WgtIntBox = emptyMethod;
  $clinit_Composite();
}

function WgtIntBox(){
  $clinit_WgtIntBox();
  Composite.call(this);
  this.$init_150();
  this.m_btnMinus.setWidth('30px');
  this.m_btnMinus.addClickHandler(new WgtIntBox$1(this));
  this.m_panel.add_0(this.m_btnMinus);
  this.m_intBox.setWidth('100%');
  this.m_intBox.addValueChangeHandler(new WgtIntBox$2(this));
  this.m_intBox.addMouseWheelHandler(new WgtIntBox$3(this));
  this.m_panel.add_0(this.m_intBox);
  this.m_btnPlus.setWidth('30px');
  this.m_btnPlus.addClickHandler(new WgtIntBox$4(this));
  this.m_panel.add_0(this.m_btnPlus);
  this.initWidget(this.m_panel);
}

defineClass(121, 59, {18:1, 44:1, 14:1, 11:1, 1:1}, WgtIntBox);
_.$init_150 = function $init_150(){
  this.m_panel = new HorizontalPanel;
  this.m_btnMinus = new Button_0('-');
  this.m_btnPlus = new Button_0('+');
  this.m_intBox = new IntegerBox;
  this.m_minValue = -2147483648;
  this.m_maxValue = 2147483647;
}
;
_.addKeyUpHandler = function addKeyUpHandler_0(p_handler){
  return this.m_intBox.addKeyUpHandler(p_handler);
}
;
_.getValue = function getValue(){
  var value_0;
  value_0 = castTo(this.m_intBox.getValue_0(), 28);
  if (isNull(value_0))
    return valueOf_37(0);
  return value_0;
}
;
_.setEnabled = function setEnabled(p_enabled){
  this.m_btnMinus.setVisible(p_enabled);
  this.m_btnPlus.setVisible(p_enabled);
  this.m_intBox.setEnabled(p_enabled);
}
;
_.setMinValue = function setMinValue(p_minValue){
  this.m_minValue = p_minValue;
}
;
_.setValue = function setValue(p_value){
  this.setValue_0(p_value, false);
}
;
_.setValue_0 = function setValue_0(p_value, p_fireEvents){
  if (p_value.intValue() < this.m_minValue)
    this.m_intBox.setValue_2(valueOf_37(this.m_minValue), p_fireEvents);
  else if (p_value.intValue() > this.m_maxValue)
    this.m_intBox.setValue_2(valueOf_37(this.m_maxValue), p_fireEvents);
  else 
    this.m_intBox.setValue_2(p_value, p_fireEvents);
}
;
_.m_maxValue = 0;
_.m_minValue = 0;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtIntBox_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtIntBox', 121, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtIntBox$1(){
  $clinit_WgtIntBox$1 = emptyMethod;
  $clinit_Object();
}

function WgtIntBox$1(this$0){
  $clinit_WgtIntBox$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_151();
}

defineClass(869, 1, {72:1, 13:1, 1:1}, WgtIntBox$1);
_.$init_151 = function $init_151(){
}
;
_.onClick = function onClick_21(p_event){
  this.this$01.setValue_0(valueOf_37(this.this$01.getValue().intValue() - 1), true);
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtIntBox$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtIntBox/1', 869, Ljava_lang_Object_2_classLit);
function $clinit_WgtIntBox$2(){
  $clinit_WgtIntBox$2 = emptyMethod;
  $clinit_Object();
}

function WgtIntBox$2(this$0){
  $clinit_WgtIntBox$2();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_152();
}

defineClass(870, 1, {75:1, 13:1, 1:1}, WgtIntBox$2);
_.$init_152 = function $init_152(){
}
;
_.onValueChange = function onValueChange_4(p_event){
  this.this$01.setValue(this.this$01.getValue());
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtIntBox$2_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtIntBox/2', 870, Ljava_lang_Object_2_classLit);
function $clinit_MouseWheelHandler(){
  $clinit_MouseWheelHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_MouseWheelHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'MouseWheelHandler');
function $clinit_WgtIntBox$3(){
  $clinit_WgtIntBox$3 = emptyMethod;
  $clinit_Object();
}

function WgtIntBox$3(this$0){
  $clinit_WgtIntBox$3();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_153();
}

defineClass(871, 1, {1117:1, 13:1, 1:1}, WgtIntBox$3);
_.$init_153 = function $init_153(){
}
;
_.onMouseWheel = function onMouseWheel(p_event){
  this.this$01.setValue_0(valueOf_37(this.this$01.getValue().intValue() + (p_event.getDeltaY() < 0?1:-1)), true);
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtIntBox$3_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtIntBox/3', 871, Ljava_lang_Object_2_classLit);
function $clinit_WgtIntBox$4(){
  $clinit_WgtIntBox$4 = emptyMethod;
  $clinit_Object();
}

function WgtIntBox$4(this$0){
  $clinit_WgtIntBox$4();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_154();
}

defineClass(872, 1, {72:1, 13:1, 1:1}, WgtIntBox$4);
_.$init_154 = function $init_154(){
}
;
_.onClick = function onClick_22(p_event){
  this.this$01.setValue_0(valueOf_37(this.this$01.getValue().intValue() + 1), true);
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtIntBox$4_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtIntBox/4', 872, Ljava_lang_Object_2_classLit);
function $clinit_BlurHandler(){
  $clinit_BlurHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_BlurHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'BlurHandler');
function $clinit_WgtMessages(){
  $clinit_WgtMessages = emptyMethod;
  $clinit_Composite();
}

function WgtMessages(){
  $clinit_WgtMessages();
  var frame_0, panel, verticalPanel;
  Composite.call(this);
  this.$init_155();
  if (model_0().getGame().isMessageWebUrl()) {
    frame_0 = new Frame_1(model_0().getGame().getMessage());
    frame_0.setPixelSize(700, 350);
    panel = new SimplePanel;
    panel.add_0(frame_0);
    this.initWidget(panel);
  }
   else if ((jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Practice_0)) || jsEquals(model_0().getGame().getGameType(), ($clinit_GameType() , Initiation))) && !model_0().getGame().isRecordingScript()) {
    verticalPanel = new VerticalPanel;
    this.m_scrollPanel = new ScrollPanel;
    this.m_scrollPanel.setStyleName('fmp-msg-panel');
    this.m_scrollPanel.add_0(verticalPanel);
    panel = new SimplePanel;
    panel.add_0(this.m_scrollPanel);
    this.initMsgList(verticalPanel);
    this.initWidget(panel);
  }
   else {
    panel = new VerticalPanel;
    this.initEditableMsg(castTo(panel, 54), model_0().getGame().getMessage());
    this.m_isEditableMode = true;
    this.initWidget(panel);
  }
}

defineClass(282, 59, {282:1, 1062:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtMessages);
_.$init_155 = function $init_155(){
  this.m_text = new TextArea_0;
  this.m_isEditableMode = false;
  this.m_scrollPanel = null;
}
;
_.initEditableMsg = function initEditableMsg(p_panel, p_text){
  p_panel.clear_0();
  p_panel.add_0(this.m_text);
  this.m_text.setPixelSize(400, 350);
  this.m_text.setText(p_text);
  this.m_text.addBlurHandler(this);
}
;
_.initMsgList = function initMsgList(p_panel){
  var event_0, event$iterator;
  for (event$iterator = model_0().getGame().getLogs().iterator_0(); event$iterator.hasNext_0();) {
    event_0 = castTo(event$iterator.next_1(), 20);
    if (instanceOf(event_0, 137)) {
      p_panel.add_0(new WgtPlayerMessage(model_0().getGame(), castTo(event_0, 137)));
    }
  }
  if (p_panel.getWidgetCount() == 0) {
    p_panel.add_0(new Label_1(($clinit_MAppBoard() , s_messages_0).noMessages()));
  }
  p_panel.add_0(this.m_text);
  this.m_text.setPixelSize(400, 60);
  this.m_text.addBlurHandler(this);
}
;
_.onBlur = function onBlur(p_event){
  var message;
  if (!this.m_isEditableMode && isEmpty__Z__devirtual$(this.m_text.getText())) {
    return;
  }
  if (this.m_isEditableMode && equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(this.m_text.getText(), model_0().getGame().getMessage())) {
    return;
  }
  if (model_0().getGame().isRecordingScript()) {
    model_0().getGame().setMessage(this.m_text.getText());
    return;
  }
  message = new EbEvtMessage;
  message.setGame(model_0().getGame());
  message.setMessage(trim__Ljava_lang_String___devirtual$(this.m_text.getText()));
  message.setAccountId(instance_1().getMyAccount().getId());
  model_0().runSingleAction(message);
}
;
_.scrollToBottom = function scrollToBottom(){
  if (isNotNull(this.m_scrollPanel)) {
    this.m_scrollPanel.scrollToBottom();
  }
}
;
_.m_isEditableMode = false;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtMessages_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtMessages', 282, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtPlayers(){
  $clinit_WgtPlayers = emptyMethod;
  $clinit_Composite();
}

function WgtPlayers(){
  $clinit_WgtPlayers();
  var m_scrollPanel;
  Composite.call(this);
  this.$init_156();
  this.m_btnChat.addClickHandler(this);
  this.initPlayerPanel();
  m_scrollPanel = new ScrollPanel;
  m_scrollPanel.setStyleName('fmp-players-panel');
  m_scrollPanel.add_0(this.m_playerPanel);
  this.initWidget(m_scrollPanel);
}

defineClass(744, 59, {72:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtPlayers);
_.$init_156 = function $init_156(){
  this.m_banButtons = new HashMap;
  this.m_skipTurnButtons = new HashMap;
  this.m_playerPanel = new FlowPanel;
  this.m_btnChat = new Button_0('chat');
}
;
_.contain = function contain(p_players, p_pseudo){
  var player, player$iterator;
  for (player$iterator = p_players.iterator_0(); player$iterator.hasNext_0();) {
    player = castTo(player$iterator.next_1(), 51);
    if (isNotNull(player) && player.haveAccount() && equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(player.getAccount_0().getPseudo(), p_pseudo)) {
      return true;
    }
  }
  return false;
}
;
_.initPlayerPanel = function initPlayerPanel(){
  var banImage, btnSkipTurn, color_0, colorIndex, finalScores, game, html, htmlColors, i, index_0, login, m_btnRegister, m_playerGrid, playerCount, pseudoList, registration, registration$iterator, registration$iterator0, resigned, scoreEstimation, sortedTeam, strLabel, strPlayerCount, strTeamCount, team, team$iterator, user, user$iterator, vpanel;
  finalScores = null;
  if (!model_0().getGame().isFinished()) {
    scoreEstimation = new ScoreEstimation(model_0().getGame());
    finalScores = scoreEstimation.estimateFinalScore();
  }
  this.m_banButtons.clear_0();
  this.m_skipTurnButtons.clear_0();
  this.m_playerPanel.clear_0();
  playerCount = model_0().getGame().getSetRegistration().size_1();
  strPlayerCount = '' + playerCount;
  if (playerCount != model_0().getGame().getMaxNumberOfPlayer()) {
    strPlayerCount += '/' + model_0().getGame().getMaxNumberOfPlayer();
  }
  strLabel = ($clinit_MAppBoard() , s_messages_0).xPlayers(strPlayerCount);
  if (model_0().getGame().getMaxTeamAllowed() > 0) {
    strTeamCount = '' + model_0().getGame().getTeams().size_1();
    if (model_0().getGame().getTeams().size_1() != model_0().getGame().getMaxTeamAllowed()) {
      strTeamCount += '/' + model_0().getGame().getMaxTeamAllowed();
    }
    strLabel += ' - ' + ($clinit_MAppBoard() , s_messages_0).xTeams(strTeamCount);
  }
  this.m_playerPanel.add_0(new Label_1(strLabel));
  pseudoList = initUnidimensionalArray(J_classLit, {4:1, 1:1}, 29, playerCount, 14, 1);
  i = 0;
  for (registration$iterator0 = model_0().getGame().getSetRegistration().iterator_0(); registration$iterator0.hasNext_0();) {
    registration = castTo(registration$iterator0.next_1(), 51);
    if (isNotNull(registration.getAccount_0())) {
      pseudoList[i] = registration.getAccount_0().getId();
    }
     else {
      pseudoList[i] = 0;
    }
    i++;
  }
  this.m_playerPanel.add_0(new HTML_0("<a href='" + getEMailUrl_0(model_0().getGame().getName(), pseudoList) + "' >Envoyer un message \xE0 tous<\/a>"));
  sortedTeam = model_0().getGame().getTeamByPlayOrder();
  m_playerGrid = new Grid_0(model_0().getGame().getSetRegistration().size_1() + 1, 9);
  m_playerGrid.setStyleName('fmp-array');
  m_playerGrid.setText_0(0, 0, '');
  m_playerGrid.setText_0(0, 1, '');
  m_playerGrid.setText_0(0, 2, 'login');
  m_playerGrid.setText_0(0, 3, 'couleur(s)');
  m_playerGrid.setText_0(0, 4, "pt d'action");
  m_playerGrid.setHTML_1(0, 5, 'pt de victoire<br/>(estimation)');
  if (model_0().getGame().isFinished()) {
    m_playerGrid.setHTML_1(0, 5, 'pt de victoire');
  }
  m_playerGrid.setText_0(0, 6, '');
  m_playerGrid.setText_0(0, 7, '');
  m_playerGrid.setText_0(0, 8, '');
  m_playerGrid.getRowFormatter().addStyleName_0(0, 'fmp-home-gameline-caption');
  index_0 = 0;
  for (team$iterator = sortedTeam.iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    for (registration$iterator = team.getPlayers(model_0().getGame().getPreview()).iterator_0(); registration$iterator.hasNext_0();) {
      registration = castTo(registration$iterator.next_1(), 51);
      index_0++;
      html = '';
      if (jsNotEquals(team.getCompany(), ($clinit_Company() , Freelancer))) {
        m_playerGrid.setHTML_1(index_0, 0, "<IMG SRC='" + '/images/avatar/' + team.getCompany() + ".jpg' WIDTH=60 HEIGHT=60 BORDER=0 title='" + team.getCompany().getFullName() + "'/>");
      }
      if (registration.haveAccount()) {
        m_playerGrid.setHTML_1(index_0, 1, "<IMG SRC='" + registration.getAccount_0().getAvatarUrl() + "' WIDTH=60 HEIGHT=60 BORDER=0 />");
        if (instance_1().isUserConnected(registration.getAccount_0().getPseudo())) {
          html += '<b>';
        }
        login = registration.getAccount_0().getPseudo();
        html += "<a href='" + registration.getAccount_0().getProfileUrl() + "' target='_blank'>" + login + '<\/a>';
        if (instance_1().isUserConnected(registration.getAccount_0().getPseudo())) {
          html += '<\/b>';
        }
      }
       else {
        m_playerGrid.setHTML_1(index_0, 1, "<IMG SRC='" + '/images/avatar/' + "avatar-default.jpg' WIDTH=60 HEIGHT=60 BORDER=0 />");
        html = '???';
      }
      if (isNotNull(registration.getAccount_0())) {
        html += " <a target='_blank' href='" + registration.getAccount_0().getEMailUrl(model_0().getGame().getName()) + "'><img src='/images/icons/icon_pm.gif' border=0 alt='PM' /><\/a> ";
      }
      if (model_0().getGame().getCurrentPlayerIds().contains_0(valueOf_40(registration.getId()))) {
        html += '' + create_7(($clinit_Icons() , s_instance_5).action16()).getHTML();
      }
      if (registration.haveAccount()) {
        html += "<br/><img src='" + registration.getAccount_0().getGradUrl() + "' border=0 alt='GRAD'/>";
      }
      if (registration.isReplacement()) {
        resigned = registration.getOriginalAccount(model_0().getGame());
        html += "<br/><small>remplace&nbsp;<a href='" + resigned.getProfileUrl() + "' target='_blank'>" + resigned.getPseudo() + '<\/a><\/small>';
      }
      m_playerGrid.setHTML_1(index_0, 2, html);
      color_0 = registration.getEnuColor();
      colorIndex = 0;
      htmlColors = '';
      for (colorIndex = 0; colorIndex < getTotalNumberOfColor(); colorIndex++) {
        if (color_0.isColored_0(getColorFromIndex(colorIndex))) {
          htmlColors += '' + icon16(getColorFromIndex(colorIndex).getValue_1()).getHTML();
        }
      }
      if (color_0.getValue_1() == 0) {
        htmlColors += ' <IMG SRC=' + 'images/board/' + "'icon.gif' WIDTH=16 HEIGHT=16 BORDER=0 TITLE='" + getColorString(0, color_0.getValue_1()) + "'> ";
      }
      m_playerGrid.setHTML_1(index_0, 3, htmlColors);
      m_playerGrid.setText_0(index_0, 4, '' + registration.getPtAction() + '/' + (model_0().getGame().getEbConfigGameTime().getActionPtMaxReserve() + registration.getActionPointBonus() + (registration.getEnuColor().getNbColor() - 1) * model_0().getGame().getEbConfigGameTime().getActionPtMaxPerExtraShip()));
      if (isNull(finalScores)) {
        m_playerGrid.setText_0(index_0, 5, '' + team.estimateWinningScore(model_0().getGame()));
      }
       else {
        m_playerGrid.setText_0(index_0, 5, '' + team.estimateWinningScore(model_0().getGame()) + '/' + finalScores.get_1(team));
      }
      if (isNotNull(model_0().getGame().getAccountCreator()) && eq(instance_1().getMyAccount().getId(), model_0().getGame().getAccountCreator().getId()) || instance_1().iAmAdmin()) {
        if (registration.haveAccount()) {
          banImage = new Image_0;
          banImage.setUrl('/images/icons/ban.gif');
          banImage.setAltText('BAN');
          banImage.setTitle('Banir un joueur de cette partie');
          banImage.addClickHandler(this);
          m_playerGrid.setWidget_0(index_0, 7, banImage);
          this.m_banButtons.put(banImage, registration);
        }
        if (model_0().getGame().getCurrentPlayerIds().contains_0(valueOf_40(registration.getId()))) {
          btnSkipTurn = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).endTurn32()));
          btnSkipTurn.setTitle(($clinit_MAppBoard() , s_messages_0).endTurn());
          btnSkipTurn.setStyleName('fmp-PushButton32');
          btnSkipTurn.addClickHandler(this);
          m_playerGrid.setWidget_0(index_0, 8, btnSkipTurn);
          this.m_skipTurnButtons.put(btnSkipTurn, registration);
        }
      }
    }
  }
  this.m_playerPanel.add_0(m_playerGrid);
  game = model_0().getGame();
  if (jsEquals(game.getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(game.getGameType(), ($clinit_GameType() , Initiation))) {
    vpanel = new VerticalPanel;
    if (isNotNull(model_0().getGame().getAccountCreator()) && eq(instance_1().getMyAccount().getId(), model_0().getGame().getAccountCreator().getId()) || instance_1().iAmAdmin()) {
      if ((jsEquals(model_0().getGame().getStatus(), ($clinit_GameStatus() , Open)) || jsEquals(model_0().getGame().getStatus(), ($clinit_GameStatus() , Pause))) && model_0().getGame().getMaxNumberOfPlayer() > model_0().getGame().getCurrentNumberOfRegiteredPlayer()) {
        m_btnRegister = new PushButton_0(new Image_1(($clinit_Icons() , s_instance_5).register32()));
        m_btnRegister.setTitle(($clinit_MAppBoard() , s_messages_0).joinGame());
        m_btnRegister.setStyleName('fmp-PushButton32');
        m_btnRegister.addClickHandler(new WgtPlayers$1(this));
        vpanel.add_0(m_btnRegister);
      }
    }
    vpanel.add_0(new Label_1('Visiteur(s) :'));
    for (user$iterator = instance_1().getPresenceRoom().iterator_0(); user$iterator.hasNext_0();) {
      user = castTo(user$iterator.next_1(), 109);
      if (!this.contain(model_0().getGame().getSetRegistration(), user.getPseudo())) {
        html = new HTML_0('<b>' + user.getPseudo() + '<\/b>');
        html.setWidth('100%');
        vpanel.add_0(html);
      }
    }
    if (jsEquals(game.getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(game.getGameType(), ($clinit_GameType() , Initiation))) {
      vpanel.add_0(this.m_btnChat);
      vpanel.add_0(new HTML_0("<a href='/chat.jsp?id=" + toString_45(game.getId()) + "' target='_blank'><img src='/images/icon_new_window.gif'/><\/a>"));
    }
    this.m_playerPanel.add_0(vpanel);
  }
}
;
_.onClick = function onClick_23(p_event){
  var action, gameLog, playerName, registration;
  if (maskUndefined(p_event.getSource()) === maskUndefined(this.m_btnChat)) {
    showDialog();
  }
   else if (jsNotEquals(this.m_skipTurnButtons.get_1(p_event.getSource()), null)) {
    registration = castTo(this.m_skipTurnButtons.get_1(p_event.getSource()), 51);
    playerName = getColorString(0, registration.getTeam_1(model_0().getGame()).getFireColor());
    if (isNotNull(registration.getAccount_0())) {
      playerName = registration.getAccount_0().getPseudo();
    }
    if (confirm_0('Voulez-vous r\xE9ellement sauter le tour de ' + playerName + ', il lui reste ' + registration.getPtAction() + " points d'action.")) {
      action = new EbEvtPlayerTurn;
      action.setGame(model_0().getGame());
      if (isNotNull(registration.getAccount_0())) {
        action.setAccountId(registration.getAccount_0().getId());
      }
      action.setOldPlayerId(registration.getId());
      action.setAuto(true);
      model_0().runSingleAction(action);
    }
  }
   else if (jsNotEquals(this.m_banButtons.get_1(p_event.getSource()), null)) {
    registration = castTo(this.m_banButtons.get_1(p_event.getSource()), 51);
    if (confirm_0('Voulez-vous r\xE9ellement banir ' + registration.getAccount_0().getPseudo() + ' de la partie ' + model_0().getGame().getName())) {
      gameLog = new EbAdminBan;
      gameLog.setAccountId(instance_1().getMyAccount().getId());
      gameLog.setRegistrationId(registration.getId());
      gameLog.setGame(model_0().getGame());
      model_0().runSingleAction(gameLog);
    }
  }
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtPlayers_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtPlayers', 744, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtPlayers$1(){
  $clinit_WgtPlayers$1 = emptyMethod;
  $clinit_Object();
}

function WgtPlayers$1(this$0){
  $clinit_WgtPlayers$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_157();
}

defineClass(745, 1, {72:1, 13:1, 1:1}, WgtPlayers$1);
_.$init_157 = function $init_157(){
}
;
_.onClick = function onClick_24(p_event){
  instance_2().show();
  instance_2().center();
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtPlayers$1_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtPlayers/1', 745, Ljava_lang_Object_2_classLit);
function $clinit_HasWordWrap(){
  $clinit_HasWordWrap = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasWordWrap_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasWordWrap');
function $clinit_HasDirectionEstimator(){
  $clinit_HasDirectionEstimator = emptyMethod;
}

var Lcom_google_gwt_i18n_shared_HasDirectionEstimator_2_classLit = createForInterface('com.google.gwt.i18n.shared', 'HasDirectionEstimator');
function $clinit_HasHorizontalAlignment(){
  $clinit_HasHorizontalAlignment = emptyMethod;
  ALIGN_CENTER = new HasHorizontalAlignment$HorizontalAlignmentConstant(($clinit_Style$TextAlign() , CENTER).getCssName());
  ALIGN_JUSTIFY = new HasHorizontalAlignment$HorizontalAlignmentConstant(($clinit_Style$TextAlign() , JUSTIFY).getCssName());
  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant(($clinit_Style$TextAlign() , LEFT).getCssName());
  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant(($clinit_Style$TextAlign() , RIGHT).getCssName());
  ALIGN_LOCALE_START = isClient() && getCurrentLocale().isRTL_0()?ALIGN_RIGHT:ALIGN_LEFT;
  ALIGN_LOCALE_END = isClient() && getCurrentLocale().isRTL_0()?ALIGN_LEFT:ALIGN_RIGHT;
  ALIGN_DEFAULT = ALIGN_LOCALE_START;
}

var ALIGN_CENTER, ALIGN_DEFAULT, ALIGN_JUSTIFY, ALIGN_LEFT, ALIGN_LOCALE_END, ALIGN_LOCALE_START, ALIGN_RIGHT;
var Lcom_google_gwt_user_client_ui_HasHorizontalAlignment_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasHorizontalAlignment');
function $clinit_HasAutoHorizontalAlignment(){
  $clinit_HasAutoHorizontalAlignment = emptyMethod;
  ALIGN_CONTENT_START = new HasHorizontalAlignment$AutoHorizontalAlignmentConstant;
  ALIGN_CONTENT_END = new HasHorizontalAlignment$AutoHorizontalAlignmentConstant;
}

var ALIGN_CONTENT_END, ALIGN_CONTENT_START;
var Lcom_google_gwt_user_client_ui_HasAutoHorizontalAlignment_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasAutoHorizontalAlignment');
function $clinit_LabelBase(){
  $clinit_LabelBase = emptyMethod;
  $clinit_Widget();
}

function LabelBase(element){
  $clinit_LabelBase();
  LabelBase_0.call(this, element, equalsIgnoreCase_Ljava_lang_String__Z__devirtual$('span', $getTagName(element)));
}

function LabelBase_0(element, isElementInline){
  Widget.call(this);
  this.$init_158();
  if (!equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(isElementInline?'span':'div', $getTagName(element))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.setElement(element);
  this.directionalTextHelper = new DirectionalTextHelper(this.getElement(), isElementInline);
}

function LabelBase_1(inline){
  $clinit_LabelBase();
  LabelBase_0.call(this, inline?$createSpanElement(get_2654()):$createDivElement(get_2654()), inline);
}

defineClass(267, 11, {18:1, 183:1, 14:1, 11:1, 1:1});
_.$init_158 = function $init_158(){
}
;
_.updateHorizontalAlignment = function updateHorizontalAlignment(){
  var align_0;
  if (isNull(this.autoHorizontalAlignment)) {
    align_0 = null;
  }
   else if (instanceOf(this.autoHorizontalAlignment, 189)) {
    align_0 = castTo(this.autoHorizontalAlignment, 189);
  }
   else {
    align_0 = jsEquals(this.autoHorizontalAlignment, ($clinit_HasAutoHorizontalAlignment() , ALIGN_CONTENT_START))?startOf(this.directionalTextHelper.getTextDirection()):endOf(this.directionalTextHelper.getTextDirection());
  }
  if (jsNotEquals(align_0, this.horzAlign)) {
    this.horzAlign = align_0;
    $setProperty_0($getStyle(this.getElement()), 'textAlign', isNull(this.horzAlign)?'':this.horzAlign.getTextAlignString());
  }
}
;
var Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui', 'LabelBase', 267, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $clinit_HasDirectionalText(){
  $clinit_HasDirectionalText = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasDirectionalText_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasDirectionalText');
function $clinit_HasDirection(){
  $clinit_HasDirection = emptyMethod;
}

var Lcom_google_gwt_i18n_client_HasDirection_2_classLit = createForInterface('com.google.gwt.i18n.client', 'HasDirection');
function $clinit_IsEditor(){
  $clinit_IsEditor = emptyMethod;
}

var Lcom_google_gwt_editor_client_IsEditor_2_classLit = createForInterface('com.google.gwt.editor.client', 'IsEditor');
function $clinit_Label(){
  $clinit_Label = emptyMethod;
  $clinit_LabelBase();
  DEFAULT_DIRECTION_ESTIMATOR = ($clinit_DirectionalTextHelper() , DEFAULT_DIRECTION_ESTIMATOR_1);
}

function Label(){
  $clinit_Label();
  LabelBase_1.call(this, false);
  this.$init_159();
  this.setStyleName('gwt-Label');
}

function Label_0(element){
  $clinit_Label();
  LabelBase.call(this, element);
  this.$init_159();
}

function Label_1(text_0){
  $clinit_Label();
  Label.call(this);
  this.setText(text_0);
}

defineClass(26, 267, {79:1, 77:1, 78:1, 76:1, 18:1, 183:1, 14:1, 11:1, 1:1}, Label, Label_1);
_.$init_159 = function $init_159(){
}
;
_.getDirection = function getDirection(){
  return getDirectionOnElement(this.getElement());
}
;
_.setDirection = function setDirection(direction){
  this.directionalTextHelper.setDirection(direction);
  this.updateHorizontalAlignment();
}
;
_.setText = function setText_1(text_0){
  this.directionalTextHelper.setText(text_0);
  this.updateHorizontalAlignment();
}
;
var DEFAULT_DIRECTION_ESTIMATOR;
var Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Label', 26, Lcom_google_gwt_user_client_ui_LabelBase_2_classLit);
function $clinit_HasDirectionalHtml(){
  $clinit_HasDirectionalHtml = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasDirectionalHtml_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasDirectionalHtml');
function $clinit_HasDirectionalSafeHtml(){
  $clinit_HasDirectionalSafeHtml = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasDirectionalSafeHtml_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasDirectionalSafeHtml');
function $clinit_HTML(){
  $clinit_HTML = emptyMethod;
  $clinit_Label();
}

function HTML(){
  $clinit_HTML();
  Label_0.call(this, $createDivElement(get_2654()));
  this.$init_160();
  this.setStyleName('gwt-HTML');
}

function HTML_0(html){
  $clinit_HTML();
  HTML.call(this);
  this.setHTML_0(html);
}

defineClass(31, 26, {79:1, 77:1, 78:1, 76:1, 18:1, 31:1, 183:1, 14:1, 11:1, 1:1}, HTML, HTML_0);
_.$init_160 = function $init_160(){
}
;
_.setHTML_0 = function setHTML_1(html){
  this.directionalTextHelper.setHtml(html);
  this.updateHorizontalAlignment();
}
;
var Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTML', 31, Lcom_google_gwt_user_client_ui_Label_2_classLit);
function $clinit_WgtWebLinks(){
  $clinit_WgtWebLinks = emptyMethod;
  $clinit_HTML();
}

function WgtWebLinks(){
  $clinit_WgtWebLinks();
  HTML.call(this);
  this.$init_161();
  this.setHTML_0("<P ALIGN=CENTER><A HREF='/'>Accueil<\/A><\/P><P ALIGN=CENTER><A HREF='/gamelist.jsp'>Parties en cours<\/A><\/P><P ALIGN=CENTER><A HREF='http://fullmetalplanete.forum2jeux.com/f33-full-metal-galaxy'>Forum<\/A><\/P><P ALIGN=CENTER><A HREF='/chat.jsp'>Chat<\/A><\/P><P ALIGN=CENTER><A HREF='/help/'>Aides de jeu<\/A><\/P><P ALIGN=CENTER><A HREF='/halloffames.jsp'>Joueurs<\/A><\/P><P ALIGN=CENTER><A HREF='/liens.jsp'>Liens<\/A><\/P><P ALIGN=CENTER><A HREF='/development/'>D\xE9veloppement<\/A><\/P>");
}

defineClass(742, 31, {79:1, 77:1, 78:1, 76:1, 18:1, 31:1, 183:1, 14:1, 11:1, 1:1}, WgtWebLinks);
_.$init_161 = function $init_161(){
}
;
var Lcom_fullmetalgalaxy_client_game_tabmenu_WgtWebLinks_2_classLit = createForClass('com.fullmetalgalaxy.client.game.tabmenu', 'WgtWebLinks', 742, Lcom_google_gwt_user_client_ui_HTML_2_classLit);
function $clinit_ImageBundle(){
  $clinit_ImageBundle = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_ImageBundle_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'ImageBundle');
function $clinit_AnimationFrames(){
  $clinit_AnimationFrames = emptyMethod;
  s_instance_4 = castTo(castTo(new AnimationFrames_generatedBundle, 1119), 1119);
}

var s_instance_4;
var Lcom_fullmetalgalaxy_client_ressources_AnimationFrames_2_classLit = createForInterface('com.fullmetalgalaxy.client.ressources', 'AnimationFrames');
function $clinit_AnimationFrames_generatedBundle(){
  $clinit_AnimationFrames_generatedBundle = emptyMethod;
  $clinit_Object();
  IMAGE_BUNDLE_URL = getModuleBaseURL() + 'EAC843A07865B6F548D49DC03FC7E691.cache.png';
  strategy_blast01_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 654, 89, 8, 8);
  strategy_blast02_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 705, 87, 12, 13);
  strategy_blast03_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 799, 82, 17, 16);
  strategy_blast04_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 864, 69, 20, 22);
  strategy_blast05_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 864, 25, 24, 22);
  strategy_blast06_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 864, 0, 27, 25);
  strategy_blast07_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 799, 55, 28, 27);
  strategy_blast08_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 799, 27, 30, 28);
  strategy_blast09_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 799, 0, 32, 27);
  strategy_blast10_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 831, 0, 33, 26);
  strategy_blast11_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 831, 26, 31, 25);
  strategy_blast12_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 831, 51, 30, 25);
  strategy_blast13_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 831, 76, 26, 23);
  strategy_blast14_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 864, 47, 21, 22);
  tactic_blast01_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 717, 87, 11, 12);
  tactic_blast02_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 756, 67, 37, 33);
  tactic_blast03_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 756, 0, 43, 67);
  tactic_blast04_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 600, 0, 54, 94);
  tactic_blast05_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 428, 0, 60, 96);
  tactic_blast06_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 543, 0, 57, 95);
  tactic_blast07_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 0, 0, 71, 100);
  tactic_blast08_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 200, 0, 69, 99);
  tactic_blast09_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 135, 0, 65, 99);
  tactic_blast10_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 71, 0, 64, 99);
  tactic_blast11_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 317, 0, 58, 98);
  tactic_blast12_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 705, 0, 51, 87);
  tactic_blast13_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 654, 0, 51, 89);
  tactic_blast14_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 375, 0, 53, 96);
  tactic_blast15_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 488, 0, 55, 95);
  tactic_blast16_SINGLETON = new ClippedImagePrototype_0(IMAGE_BUNDLE_URL, 269, 0, 48, 98);
}

function AnimationFrames_generatedBundle(){
  $clinit_AnimationFrames_generatedBundle();
  Object_0.call(this);
  this.$init_162();
}

defineClass(1035, 1, {1119:1, 1:1}, AnimationFrames_generatedBundle);
_.$init_162 = function $init_162(){
}
;
_.strategy_blast01 = function strategy_blast01(){
  return strategy_blast01_SINGLETON;
}
;
_.strategy_blast02 = function strategy_blast02(){
  return strategy_blast02_SINGLETON;
}
;
_.strategy_blast03 = function strategy_blast03(){
  return strategy_blast03_SINGLETON;
}
;
_.strategy_blast04 = function strategy_blast04(){
  return strategy_blast04_SINGLETON;
}
;
_.strategy_blast05 = function strategy_blast05(){
  return strategy_blast05_SINGLETON;
}
;
_.strategy_blast06 = function strategy_blast06(){
  return strategy_blast06_SINGLETON;
}
;
_.strategy_blast07 = function strategy_blast07(){
  return strategy_blast07_SINGLETON;
}
;
_.strategy_blast08 = function strategy_blast08(){
  return strategy_blast08_SINGLETON;
}
;
_.strategy_blast09 = function strategy_blast09(){
  return strategy_blast09_SINGLETON;
}
;
_.strategy_blast10 = function strategy_blast10(){
  return strategy_blast10_SINGLETON;
}
;
_.strategy_blast11 = function strategy_blast11(){
  return strategy_blast11_SINGLETON;
}
;
_.strategy_blast12 = function strategy_blast12(){
  return strategy_blast12_SINGLETON;
}
;
_.strategy_blast13 = function strategy_blast13(){
  return strategy_blast13_SINGLETON;
}
;
_.strategy_blast14 = function strategy_blast14(){
  return strategy_blast14_SINGLETON;
}
;
_.tactic_blast01 = function tactic_blast01(){
  return tactic_blast01_SINGLETON;
}
;
_.tactic_blast02 = function tactic_blast02(){
  return tactic_blast02_SINGLETON;
}
;
_.tactic_blast03 = function tactic_blast03(){
  return tactic_blast03_SINGLETON;
}
;
_.tactic_blast04 = function tactic_blast04(){
  return tactic_blast04_SINGLETON;
}
;
_.tactic_blast05 = function tactic_blast05(){
  return tactic_blast05_SINGLETON;
}
;
_.tactic_blast06 = function tactic_blast06(){
  return tactic_blast06_SINGLETON;
}
;
_.tactic_blast07 = function tactic_blast07(){
  return tactic_blast07_SINGLETON;
}
;
_.tactic_blast08 = function tactic_blast08(){
  return tactic_blast08_SINGLETON;
}
;
_.tactic_blast09 = function tactic_blast09(){
  return tactic_blast09_SINGLETON;
}
;
_.tactic_blast10 = function tactic_blast10(){
  return tactic_blast10_SINGLETON;
}
;
_.tactic_blast11 = function tactic_blast11(){
  return tactic_blast11_SINGLETON;
}
;
_.tactic_blast12 = function tactic_blast12(){
  return tactic_blast12_SINGLETON;
}
;
_.tactic_blast13 = function tactic_blast13(){
  return tactic_blast13_SINGLETON;
}
;
_.tactic_blast14 = function tactic_blast14(){
  return tactic_blast14_SINGLETON;
}
;
_.tactic_blast15 = function tactic_blast15(){
  return tactic_blast15_SINGLETON;
}
;
_.tactic_blast16 = function tactic_blast16(){
  return tactic_blast16_SINGLETON;
}
;
var IMAGE_BUNDLE_URL, strategy_blast01_SINGLETON, strategy_blast02_SINGLETON, strategy_blast03_SINGLETON, strategy_blast04_SINGLETON, strategy_blast05_SINGLETON, strategy_blast06_SINGLETON, strategy_blast07_SINGLETON, strategy_blast08_SINGLETON, strategy_blast09_SINGLETON, strategy_blast10_SINGLETON, strategy_blast11_SINGLETON, strategy_blast12_SINGLETON, strategy_blast13_SINGLETON, strategy_blast14_SINGLETON, tactic_blast01_SINGLETON, tactic_blast02_SINGLETON, tactic_blast03_SINGLETON, tactic_blast04_SINGLETON, tactic_blast05_SINGLETON, tactic_blast06_SINGLETON, tactic_blast07_SINGLETON, tactic_blast08_SINGLETON, tactic_blast09_SINGLETON, tactic_blast10_SINGLETON, tactic_blast11_SINGLETON, tactic_blast12_SINGLETON, tactic_blast13_SINGLETON, tactic_blast14_SINGLETON, tactic_blast15_SINGLETON, tactic_blast16_SINGLETON;
var Lcom_fullmetalgalaxy_client_ressources_AnimationFrames_1generatedBundle_2_classLit = createForClass('com.fullmetalgalaxy.client.ressources', 'AnimationFrames_generatedBundle', 1035, Ljava_lang_Object_2_classLit);
function $clinit_BoardIcons(){
  $clinit_BoardIcons = emptyMethod;
  $clinit_Object();
}

function arrow(p_zoom, p_sector){
  $clinit_BoardIcons();
  return create_7(arrow_0(p_zoom, p_sector));
}

function deployment3(p_zoom){
  $clinit_BoardIcons();
  return create_7(deployment3_0(p_zoom));
}

function disable_fire(p_zoom){
  $clinit_BoardIcons();
  return create_7(disable_fire_0(p_zoom));
}

function disable_water(p_zoom){
  $clinit_BoardIcons();
  return create_7(disable_water_0(p_zoom));
}

function disabling_fire(p_zoom){
  $clinit_BoardIcons();
  return create_7(disabling_fire_0(p_zoom));
}

function hightlight_hexagon(p_zoom){
  $clinit_BoardIcons();
  return create_7(hightlight_hexagon_0(p_zoom));
}

function icon16(p_colorValue){
  $clinit_BoardIcons();
  return create_7(icon16_0(p_colorValue));
}

function iconBullet(p_zoom, p_bulletCount){
  $clinit_BoardIcons();
  return create_7(iconBullet_0(p_zoom, p_bulletCount));
}

function iconLoad(p_zoom, p_loadSize){
  $clinit_BoardIcons();
  return create_7(iconLoad_0(p_zoom, p_loadSize));
}

function iconTide(p_tide){
  $clinit_BoardIcons();
  return create_7(iconTide_0(p_tide));
}

function select_hexagon(p_zoom){
  $clinit_BoardIcons();
  return create_7(select_hexagon_0(p_zoom));
}

function target_0(p_zoom){
  $clinit_BoardIcons();
  return create_7(target_1(p_zoom));
}

function target_control(p_zoom){
  $clinit_BoardIcons();
  return create_7(target_control_0(p_zoom));
}

function warning(p_zoom){
  $clinit_BoardIcons();
  return create_7(warning_0(p_zoom));
}

function $clinit_BoardIconsRessource(){
  $clinit_BoardIconsRessource = emptyMethod;
  $clinit_Object();
}

function arrow_0(p_zoom, p_sector){
  $clinit_BoardIconsRessource();
  if (p_zoom == 1) {
    switch (p_sector.ordinal_0()) {
      case ($clinit_Sector() , North).ordinal_0():
        return ($clinit_Icons() , s_instance_5).tactic_arrow_n();
      case ($clinit_Sector() , NorthEast).ordinal_0():
        return ($clinit_Icons() , s_instance_5).tactic_arrow_ne();
      case ($clinit_Sector() , SouthEast).ordinal_0():
        return ($clinit_Icons() , s_instance_5).tactic_arrow_se();
      case ($clinit_Sector() , South).ordinal_0():
        return ($clinit_Icons() , s_instance_5).tactic_arrow_s();
      case ($clinit_Sector() , SouthWest).ordinal_0():
        return ($clinit_Icons() , s_instance_5).tactic_arrow_sw();
      case ($clinit_Sector() , NorthWest).ordinal_0():
        return ($clinit_Icons() , s_instance_5).tactic_arrow_nw();
    }
  }
   else {
    switch (p_sector.ordinal_0()) {
      case ($clinit_Sector() , North).ordinal_0():
        return ($clinit_Icons() , s_instance_5).strategy_arrow_n();
      case ($clinit_Sector() , NorthEast).ordinal_0():
        return ($clinit_Icons() , s_instance_5).strategy_arrow_ne();
      case ($clinit_Sector() , SouthEast).ordinal_0():
        return ($clinit_Icons() , s_instance_5).strategy_arrow_se();
      case ($clinit_Sector() , South).ordinal_0():
        return ($clinit_Icons() , s_instance_5).strategy_arrow_s();
      case ($clinit_Sector() , SouthWest).ordinal_0():
        return ($clinit_Icons() , s_instance_5).strategy_arrow_sw();
      case ($clinit_Sector() , NorthWest).ordinal_0():
        return ($clinit_Icons() , s_instance_5).strategy_arrow_nw();
    }
  }
  return ($clinit_Icons() , s_instance_5).strategy_arrow_n();
}

function deployment3_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_deployment34();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_deployment34();
  }
}

function disable_fire_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_disable_fire();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_disable_fire();
  }
}

function disable_water_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_disable_water();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_disable_water();
  }
}

function disabling_fire_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_disabling_fire();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_disabling_fire();
  }
}

function hightlight_hexagon_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_hightlight_hexagon();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_hightlight_hexagon();
  }
}

function icon16_0(p_colorValue){
  $clinit_BoardIconsRessource();
  switch (p_colorValue) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).blue_icon16();
    case 2:
      return ($clinit_Icons() , s_instance_5).cyan_icon16();
    case 32:
      return ($clinit_Icons() , s_instance_5).green_icon16();
    case 256:
      return ($clinit_Icons() , s_instance_5).grey_icon16();
    case 4:
      return ($clinit_Icons() , s_instance_5).olive_icon16();
    case 8:
      return ($clinit_Icons() , s_instance_5).orange_icon16();
    case 64:
      return ($clinit_Icons() , s_instance_5).purple_icon16();
    case 16:
      return ($clinit_Icons() , s_instance_5).red_icon16();
    case 128:
      return ($clinit_Icons() , s_instance_5).yellow_icon16();
    case 512:
      return ($clinit_Icons() , s_instance_5).brown_icon16();
    case 4096:
      return ($clinit_Icons() , s_instance_5).camouflage_icon16();
    case 32768:
      return ($clinit_Icons() , s_instance_5).lightning_icon16();
    case 16384:
      return ($clinit_Icons() , s_instance_5).panter_icon16();
    case 2048:
      return ($clinit_Icons() , s_instance_5).pink_icon16();
    case 1024:
      return ($clinit_Icons() , s_instance_5).white_icon16();
    case 8192:
      return ($clinit_Icons() , s_instance_5).zebra_icon16();
  }
}

function iconBullet_0(p_zoom, p_bulletCount){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      switch (p_bulletCount) {
        case 0:
          return null;
        case 1:
          return ($clinit_Icons() , s_instance_5).tactic_icon_bullet1();
        default:case 2:
          return ($clinit_Icons() , s_instance_5).tactic_icon_bullet2();
      }

    case 0:
      switch (p_bulletCount) {
        case 0:
          return null;
        case 1:
          return ($clinit_Icons() , s_instance_5).strategy_icon_bullet1();
        default:case 2:
          return ($clinit_Icons() , s_instance_5).strategy_icon_bullet2();
      }

  }
}

function iconLoad_0(p_zoom, p_loadSize){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      switch (p_loadSize) {
        case 1:
          return ($clinit_Icons() , s_instance_5).tactic_icon_load1();
        case 2:
          return ($clinit_Icons() , s_instance_5).tactic_icon_load2();
        case 3:
          return ($clinit_Icons() , s_instance_5).tactic_icon_load3();
        case 4:
        default:return ($clinit_Icons() , s_instance_5).tactic_icon_load4();
      }

    case 0:
      switch (p_loadSize) {
        case 1:
          return ($clinit_Icons() , s_instance_5).strategy_icon_load1();
        case 2:
          return ($clinit_Icons() , s_instance_5).strategy_icon_load2();
        case 3:
          return ($clinit_Icons() , s_instance_5).strategy_icon_load3();
        case 4:
        default:return ($clinit_Icons() , s_instance_5).strategy_icon_load4();
      }

  }
}

function iconTide_0(p_tide){
  $clinit_BoardIconsRessource();
  switch (p_tide.ordinal_0()) {
    case ($clinit_Tide() , Low).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tide_low();
    case ($clinit_Tide() , Medium_0).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tide_medium();
    case ($clinit_Tide() , Hight).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tide_hight();
    default:case ($clinit_Tide() , Unknown_1).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tide_unknown();
  }
}

function select_hexagon_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_select_hexagon();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_select_hexagon();
  }
}

function target_1(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_target();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_target();
  }
}

function target_control_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_target_control();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_target_control();
  }
}

function warning_0(p_zoom){
  $clinit_BoardIconsRessource();
  switch (p_zoom) {
    default:case 1:
      return ($clinit_Icons() , s_instance_5).tactic_warning();
    case 0:
      return ($clinit_Icons() , s_instance_5).strategy_warning();
  }
}

function $clinit_ClientBundle(){
  $clinit_ClientBundle = emptyMethod;
}

var Lcom_google_gwt_resources_client_ClientBundle_2_classLit = createForInterface('com.google.gwt.resources.client', 'ClientBundle');
function $clinit_Icons(){
  $clinit_Icons = emptyMethod;
  s_instance_5 = castTo(castTo(new Icons_default_StaticClientBundleGenerator, 1051), 1051);
}

var s_instance_5;
var Lcom_fullmetalgalaxy_client_ressources_Icons_2_classLit = createForInterface('com.fullmetalgalaxy.client.ressources', 'Icons');
function $clinit_Icons_default_StaticClientBundleGenerator(){
  $clinit_Icons_default_StaticClientBundleGenerator = emptyMethod;
  $clinit_Object();
  _instance0 = new Icons_default_StaticClientBundleGenerator;
  bundledImage_None = getModuleBaseForStaticFiles() + '9884AB399D0B83A5CCD904E6F758BCC0.cache.png';
  externalImage = getModuleBaseForStaticFiles() + 'FF920983D0F4D4AC0B28789CEFF68C10.cache.png';
  externalImage0 = getModuleBaseForStaticFiles() + '07C5E5BED7B4257BDAE8C72EC13DF08E.cache.png';
  externalImage1 = getModuleBaseForStaticFiles() + 'BDCE1A8859E286F9052C3FB62457CF04.cache.png';
}

function Icons_default_StaticClientBundleGenerator(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  Object_0.call(this);
  this.$init_163();
}

defineClass(378, 1, {1051:1, 1:1}, Icons_default_StaticClientBundleGenerator);
_.$init_163 = function $init_163(){
}
;
_.action16 = function action16_0(){
  return get_1();
}
;
_.action16Initializer = function action16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  action16 = new ImageResourcePrototype$Bundle('action16', fromTrustedString_0(bundledImage_None), 1670, 61, 16, 16, false, false);
}
;
_.arrow_e = function arrow_e_0(){
  return get_2();
}
;
_.arrow_eInitializer = function arrow_eInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  arrow_e = new ImageResourcePrototype$Bundle('arrow_e', fromTrustedString_0(bundledImage_None), 532, 98, 57, 64, false, false);
}
;
_.arrow_n = function arrow_n_0(){
  return get_3();
}
;
_.arrow_nInitializer = function arrow_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  arrow_n = new ImageResourcePrototype$Bundle('arrow_n', fromTrustedString_0(bundledImage_None), 647, 124, 64, 57, false, false);
}
;
_.arrow_s = function arrow_s_0(){
  return get_4();
}
;
_.arrow_sInitializer = function arrow_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  arrow_s = new ImageResourcePrototype$Bundle('arrow_s', fromTrustedString_0(bundledImage_None), 265, 116, 64, 57, false, false);
}
;
_.arrow_w = function arrow_w_0(){
  return get_5();
}
;
_.arrow_wInitializer = function arrow_wInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  arrow_w = new ImageResourcePrototype$Bundle('arrow_w', fromTrustedString_0(bundledImage_None), 110, 116, 57, 64, false, false);
}
;
_.back32 = function back32_0(){
  return get_6();
}
;
_.back32Initializer = function back32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  back32 = new ImageResourcePrototype$Bundle('back32', fromTrustedString_0(bundledImage_None), 1510, 95, 32, 32, false, false);
}
;
_.blue_icon16 = function blue_icon16_0(){
  return get_7();
}
;
_.blue_icon16Initializer = function blue_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  blue_icon16 = new ImageResourcePrototype$Bundle('blue_icon16', fromTrustedString_0(bundledImage_None), 1215, 160, 18, 16, false, false);
}
;
_.brown_icon16 = function brown_icon16_0(){
  return get_8();
}
;
_.brown_icon16Initializer = function brown_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  brown_icon16 = new ImageResourcePrototype$Bundle('brown_icon16', fromTrustedString_0(bundledImage_None), 1197, 160, 18, 16, false, false);
}
;
_.camouflage_icon16 = function camouflage_icon16_0(){
  return get_9();
}
;
_.camouflage_icon16Initializer = function camouflage_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  camouflage_icon16 = new ImageResourcePrototype$Bundle('camouflage_icon16', fromTrustedString_0(bundledImage_None), 1670, 45, 16, 16, false, false);
}
;
_.cancel32 = function cancel32_0(){
  return get_10();
}
;
_.cancel32Initializer = function cancel32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  cancel32 = new ImageResourcePrototype$Bundle('cancel32', fromTrustedString_0(bundledImage_None), 1510, 63, 32, 32, false, false);
}
;
_.chat32 = function chat32_0(){
  return get_11();
}
;
_.chat32Initializer = function chat32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  chat32 = new ImageResourcePrototype$Bundle('chat32', fromTrustedString_0(bundledImage_None), 1510, 31, 32, 32, false, false);
}
;
_.control32 = function control32_0(){
  return get_12();
}
;
_.control32Initializer = function control32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  control32 = new ImageResourcePrototype$Bundle('control32', fromTrustedString_0(bundledImage_None), 1478, 128, 32, 32, false, false);
}
;
_.cyan_icon16 = function cyan_icon16_0(){
  return get_13();
}
;
_.cyan_icon16Initializer = function cyan_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  cyan_icon16 = new ImageResourcePrototype$Bundle('cyan_icon16', fromTrustedString_0(bundledImage_None), 1179, 160, 18, 16, false, false);
}
;
_.endTurn32 = function endTurn32_0(){
  return get_14();
}
;
_.endTurn32Initializer = function endTurn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  endTurn32 = new ImageResourcePrototype$Bundle('endTurn32', fromTrustedString_0(bundledImage_None), 1478, 96, 32, 32, false, false);
}
;
_.fastBack32 = function fastBack32_0(){
  return get_15();
}
;
_.fastBack32Initializer = function fastBack32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  fastBack32 = new ImageResourcePrototype$Bundle('fastBack32', fromTrustedString_0(bundledImage_None), 1478, 64, 32, 32, false, false);
}
;
_.fastPlay32 = function fastPlay32_0(){
  return get_16();
}
;
_.fastPlay32Initializer = function fastPlay32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  fastPlay32 = new ImageResourcePrototype$Bundle('fastPlay32', fromTrustedString_0(bundledImage_None), 1478, 32, 32, 32, false, false);
}
;
_.fireCoverOff32 = function fireCoverOff32_0(){
  return get_17();
}
;
_.fireCoverOff32Initializer = function fireCoverOff32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  fireCoverOff32 = new ImageResourcePrototype$Bundle('fireCoverOff32', fromTrustedString_0(bundledImage_None), 1478, 0, 32, 32, false, false);
}
;
_.fireCoverOn32 = function fireCoverOn32_0(){
  return get_18();
}
;
_.fireCoverOn32Initializer = function fireCoverOn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  fireCoverOn32 = new ImageResourcePrototype$Bundle('fireCoverOn32', fromTrustedString_0(bundledImage_None), 1446, 128, 32, 32, false, false);
}
;
_.forward32 = function forward32_0(){
  return get_19();
}
;
_.forward32Initializer = function forward32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  forward32 = new ImageResourcePrototype$Bundle('forward32', fromTrustedString_0(bundledImage_None), 1446, 96, 32, 32, false, false);
}
;
_.green_icon16 = function green_icon16_0(){
  return get_20();
}
;
_.green_icon16Initializer = function green_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  green_icon16 = new ImageResourcePrototype$Bundle('green_icon16', fromTrustedString_0(bundledImage_None), 1131, 160, 18, 16, false, false);
}
;
_.grey_icon16 = function grey_icon16_0(){
  return get_21();
}
;
_.grey_icon16Initializer = function grey_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  grey_icon16 = new ImageResourcePrototype$Bundle('grey_icon16', fromTrustedString_0(bundledImage_None), 1113, 160, 18, 16, false, false);
}
;
_.gridOff32 = function gridOff32_0(){
  return get_22();
}
;
_.gridOff32Initializer = function gridOff32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  gridOff32 = new ImageResourcePrototype$Bundle('gridOff32', fromTrustedString_0(bundledImage_None), 1446, 64, 32, 32, false, false);
}
;
_.gridOn32 = function gridOn32_0(){
  return get_23();
}
;
_.gridOn32Initializer = function gridOn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  gridOn32 = new ImageResourcePrototype$Bundle('gridOn32', fromTrustedString_0(bundledImage_None), 1446, 32, 32, 32, false, false);
}
;
_.info32 = function info32_0(){
  return get_24();
}
;
_.info32Initializer = function info32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  info32 = new ImageResourcePrototype$Bundle('info32', fromTrustedString_0(bundledImage_None), 1446, 0, 32, 32, false, false);
}
;
_.lightning_icon16 = function lightning_icon16_0(){
  return get_25();
}
;
_.lightning_icon16Initializer = function lightning_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  lightning_icon16 = new ImageResourcePrototype$Bundle('lightning_icon16', fromTrustedString_0(bundledImage_None), 1478, 160, 16, 16, false, false);
}
;
_.loading = function loading_0(){
  return get_26();
}
;
_.loadingInitializer = function loadingInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  loading = new ImageResourcePrototype$Bundle('loading', fromTrustedString_0(bundledImage_None), 0, 0, 110, 181, false, false);
}
;
_.message32 = function message32_0(){
  return get_27();
}
;
_.message32Initializer = function message32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  message32 = new ImageResourcePrototype$Bundle('message32', fromTrustedString_0(bundledImage_None), 1414, 128, 32, 32, false, false);
}
;
_.moon16 = function moon16_0(){
  return get_28();
}
;
_.moon16Initializer = function moon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  moon16 = new ImageResourcePrototype$Bundle('moon16', fromTrustedString_0(bundledImage_None), 1462, 160, 16, 16, false, false);
}
;
_.ok32 = function ok32_0(){
  return get_29();
}
;
_.ok32Initializer = function ok32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  ok32 = new ImageResourcePrototype$Bundle('ok32', fromTrustedString_0(bundledImage_None), 1414, 96, 32, 32, false, false);
}
;
_.olive_icon16 = function olive_icon16_0(){
  return get_30();
}
;
_.olive_icon16Initializer = function olive_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  olive_icon16 = new ImageResourcePrototype$Bundle('olive_icon16', fromTrustedString_0(bundledImage_None), 1064, 160, 18, 16, false, false);
}
;
_.orange_icon16 = function orange_icon16_0(){
  return get_31();
}
;
_.orange_icon16Initializer = function orange_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  orange_icon16 = new ImageResourcePrototype$Bundle('orange_icon16', fromTrustedString_0(bundledImage_None), 906, 144, 18, 16, false, false);
}
;
_.panter_icon16 = function panter_icon16_0(){
  return get_32();
}
;
_.panter_icon16Initializer = function panter_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  panter_icon16 = new ImageResourcePrototype$Bundle('panter_icon16', fromTrustedString_0(bundledImage_None), 1414, 160, 16, 16, false, false);
}
;
_.pause32 = function pause32_0(){
  return get_33();
}
;
_.pause32Initializer = function pause32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  pause32 = new ImageResourcePrototype$Bundle('pause32', fromTrustedString_0(bundledImage_None), 1414, 64, 32, 32, false, false);
}
;
_.pink_icon16 = function pink_icon16_0(){
  return get_34();
}
;
_.pink_icon16Initializer = function pink_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  pink_icon16 = new ImageResourcePrototype$Bundle('pink_icon16', fromTrustedString_0(bundledImage_None), 620, 162, 18, 16, false, false);
}
;
_.play32 = function play32_0(){
  return get_35();
}
;
_.play32Initializer = function play32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  play32 = new ImageResourcePrototype$Bundle('play32', fromTrustedString_0(bundledImage_None), 1414, 32, 32, 32, false, false);
}
;
_.player32 = function player32_0(){
  return get_36();
}
;
_.player32Initializer = function player32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  player32 = new ImageResourcePrototype$Bundle('player32', fromTrustedString_0(bundledImage_None), 1414, 0, 32, 32, false, false);
}
;
_.practice32 = function practice32_0(){
  return get_37();
}
;
_.practice32Initializer = function practice32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  practice32 = new ImageResourcePrototype$Bundle('practice32', fromTrustedString_0(bundledImage_None), 1382, 128, 32, 32, false, false);
}
;
_.purple_icon16 = function purple_icon16_0(){
  return get_38();
}
;
_.purple_icon16Initializer = function purple_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  purple_icon16 = new ImageResourcePrototype$Bundle('purple_icon16', fromTrustedString_0(bundledImage_None), 602, 162, 18, 16, false, false);
}
;
_.red_icon16 = function red_icon16_0(){
  return get_39();
}
;
_.red_icon16Initializer = function red_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  red_icon16 = new ImageResourcePrototype$Bundle('red_icon16', fromTrustedString_0(bundledImage_None), 584, 162, 18, 16, false, false);
}
;
_.register32 = function register32_0(){
  return get_40();
}
;
_.register32Initializer = function register32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  register32 = new ImageResourcePrototype$Bundle('register32', fromTrustedString_0(bundledImage_None), 1382, 96, 32, 32, false, false);
}
;
_.repair32 = function repair32_0(){
  return get_41();
}
;
_.repair32Initializer = function repair32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  repair32 = new ImageResourcePrototype$Bundle('repair32', fromTrustedString_0(bundledImage_None), 1382, 64, 32, 32, false, false);
}
;
_.reserve32 = function reserve32_0(){
  return get_42();
}
;
_.reserve32Initializer = function reserve32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  reserve32 = new ImageResourcePrototype$Bundle('reserve32', fromTrustedString_0(bundledImage_None), 1382, 32, 32, 32, false, false);
}
;
_.shoot32 = function shoot32_0(){
  return get_43();
}
;
_.shoot32Initializer = function shoot32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  shoot32 = new ImageResourcePrototype$Bundle('shoot32', fromTrustedString_0(bundledImage_None), 1382, 0, 32, 32, false, false);
}
;
_.strategy_arrow_n = function strategy_arrow_n_0(){
  return get_44();
}
;
_.strategy_arrow_nInitializer = function strategy_arrow_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_arrow_n = new ImageResourcePrototype$Bundle('strategy_arrow_n', fromTrustedString_0(bundledImage_None), 1086, 160, 27, 20, false, false);
}
;
_.strategy_arrow_ne = function strategy_arrow_ne_0(){
  return get_45();
}
;
_.strategy_arrow_neInitializer = function strategy_arrow_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_arrow_ne = new ImageResourcePrototype$Bundle('strategy_arrow_ne', fromTrustedString_0(bundledImage_None), 1037, 160, 27, 20, false, false);
}
;
_.strategy_arrow_nw = function strategy_arrow_nw_0(){
  return get_46();
}
;
_.strategy_arrow_nwInitializer = function strategy_arrow_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_arrow_nw = new ImageResourcePrototype$Bundle('strategy_arrow_nw', fromTrustedString_0(bundledImage_None), 1510, 158, 27, 23, false, false);
}
;
_.strategy_arrow_s = function strategy_arrow_s_0(){
  return get_47();
}
;
_.strategy_arrow_sInitializer = function strategy_arrow_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_arrow_s = new ImageResourcePrototype$Bundle('strategy_arrow_s', fromTrustedString_0(bundledImage_None), 1010, 160, 27, 20, false, false);
}
;
_.strategy_arrow_se = function strategy_arrow_se_0(){
  return get_48();
}
;
_.strategy_arrow_seInitializer = function strategy_arrow_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_arrow_se = new ImageResourcePrototype$Bundle('strategy_arrow_se', fromTrustedString_0(bundledImage_None), 717, 84, 27, 20, false, false);
}
;
_.strategy_arrow_sw = function strategy_arrow_sw_0(){
  return get_49();
}
;
_.strategy_arrow_swInitializer = function strategy_arrow_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_arrow_sw = new ImageResourcePrototype$Bundle('strategy_arrow_sw', fromTrustedString_0(bundledImage_None), 503, 103, 27, 20, false, false);
}
;
_.strategy_deployment34 = function strategy_deployment34_0(){
  return get_50();
}
;
_.strategy_deployment34Initializer = function strategy_deployment34Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_deployment34 = new ImageResourcePrototype('strategy_deployment34', fromTrustedString_0(externalImage), 0, 0, 228, 265, false, false);
}
;
_.strategy_disable_fire = function strategy_disable_fire_0(){
  return get_51();
}
;
_.strategy_disable_fireInitializer = function strategy_disable_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_disable_fire = new ImageResourcePrototype$Bundle('strategy_disable_fire', fromTrustedString_0(bundledImage_None), 1670, 0, 34, 29, false, false);
}
;
_.strategy_disable_water = function strategy_disable_water_0(){
  return get_52();
}
;
_.strategy_disable_waterInitializer = function strategy_disable_waterInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_disable_water = new ImageResourcePrototype$Bundle('strategy_disable_water', fromTrustedString_0(bundledImage_None), 1636, 145, 34, 29, false, false);
}
;
_.strategy_disabling_fire = function strategy_disabling_fire_0(){
  return get_53();
}
;
_.strategy_disabling_fireInitializer = function strategy_disabling_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_disabling_fire = new ImageResourcePrototype$Bundle('strategy_disabling_fire', fromTrustedString_0(bundledImage_None), 1636, 116, 34, 29, false, false);
}
;
_.strategy_hightlight_hexagon = function strategy_hightlight_hexagon_0(){
  return get_54();
}
;
_.strategy_hightlight_hexagonInitializer = function strategy_hightlight_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_hightlight_hexagon = new ImageResourcePrototype$Bundle('strategy_hightlight_hexagon', fromTrustedString_0(bundledImage_None), 1636, 87, 34, 29, false, false);
}
;
_.strategy_icon_bullet1 = function strategy_icon_bullet1_0(){
  return get_55();
}
;
_.strategy_icon_bullet1Initializer = function strategy_icon_bullet1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_icon_bullet1 = new ImageResourcePrototype$Bundle('strategy_icon_bullet1', fromTrustedString_0(bundledImage_None), 1550, 150, 40, 31, false, false);
}
;
_.strategy_icon_bullet2 = function strategy_icon_bullet2_0(){
  return get_56();
}
;
_.strategy_icon_bullet2Initializer = function strategy_icon_bullet2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_icon_bullet2 = new ImageResourcePrototype$Bundle('strategy_icon_bullet2', fromTrustedString_0(bundledImage_None), 1510, 0, 40, 31, false, false);
}
;
_.strategy_icon_load1 = function strategy_icon_load1_0(){
  return get_57();
}
;
_.strategy_icon_load1Initializer = function strategy_icon_load1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_icon_load1 = new ImageResourcePrototype$Bundle('strategy_icon_load1', fromTrustedString_0(bundledImage_None), 1591, 30, 45, 30, false, false);
}
;
_.strategy_icon_load2 = function strategy_icon_load2_0(){
  return get_58();
}
;
_.strategy_icon_load2Initializer = function strategy_icon_load2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_icon_load2 = new ImageResourcePrototype$Bundle('strategy_icon_load2', fromTrustedString_0(bundledImage_None), 1591, 0, 45, 30, false, false);
}
;
_.strategy_icon_load3 = function strategy_icon_load3_0(){
  return get_59();
}
;
_.strategy_icon_load3Initializer = function strategy_icon_load3Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_icon_load3 = new ImageResourcePrototype$Bundle('strategy_icon_load3', fromTrustedString_0(bundledImage_None), 785, 146, 45, 30, false, false);
}
;
_.strategy_icon_load4 = function strategy_icon_load4_0(){
  return get_60();
}
;
_.strategy_icon_load4Initializer = function strategy_icon_load4Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_icon_load4 = new ImageResourcePrototype$Bundle('strategy_icon_load4', fromTrustedString_0(bundledImage_None), 589, 98, 45, 30, false, false);
}
;
_.strategy_ore0_01 = function strategy_ore0_01_0(){
  return get_61();
}
;
_.strategy_ore0_01Initializer = function strategy_ore0_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore0_01 = new ImageResourcePrototype$Bundle('strategy_ore0_01', fromTrustedString_0(bundledImage_None), 1636, 58, 34, 29, false, false);
}
;
_.strategy_ore2generator = function strategy_ore2generator_0(){
  return get_62();
}
;
_.strategy_ore2generatorInitializer = function strategy_ore2generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore2generator = new ImageResourcePrototype$Bundle('strategy_ore2generator', fromTrustedString_0(bundledImage_None), 647, 0, 98, 84, false, false);
}
;
_.strategy_ore3_01 = function strategy_ore3_01_0(){
  return get_63();
}
;
_.strategy_ore3_01Initializer = function strategy_ore3_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore3_01 = new ImageResourcePrototype$Bundle('strategy_ore3_01', fromTrustedString_0(bundledImage_None), 1310, 102, 40, 34, false, false);
}
;
_.strategy_ore3_02 = function strategy_ore3_02_0(){
  return get_64();
}
;
_.strategy_ore3_02Initializer = function strategy_ore3_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore3_02 = new ImageResourcePrototype$Bundle('strategy_ore3_02', fromTrustedString_0(bundledImage_None), 1310, 68, 40, 34, false, false);
}
;
_.strategy_ore3generator = function strategy_ore3generator_0(){
  return get_65();
}
;
_.strategy_ore3generatorInitializer = function strategy_ore3generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore3generator = new ImageResourcePrototype$Bundle('strategy_ore3generator', fromTrustedString_0(bundledImage_None), 532, 0, 115, 98, false, false);
}
;
_.strategy_ore5_01 = function strategy_ore5_01_0(){
  return get_66();
}
;
_.strategy_ore5_01Initializer = function strategy_ore5_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore5_01 = new ImageResourcePrototype$Bundle('strategy_ore5_01', fromTrustedString_0(bundledImage_None), 1310, 34, 40, 34, false, false);
}
;
_.strategy_ore_01 = function strategy_ore_01_0(){
  return get_67();
}
;
_.strategy_ore_01Initializer = function strategy_ore_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore_01 = new ImageResourcePrototype$Bundle('strategy_ore_01', fromTrustedString_0(bundledImage_None), 1310, 0, 40, 34, false, false);
}
;
_.strategy_ore_02 = function strategy_ore_02_0(){
  return get_68();
}
;
_.strategy_ore_02Initializer = function strategy_ore_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore_02 = new ImageResourcePrototype$Bundle('strategy_ore_02', fromTrustedString_0(bundledImage_None), 1240, 118, 40, 34, false, false);
}
;
_.strategy_ore_03 = function strategy_ore_03_0(){
  return get_69();
}
;
_.strategy_ore_03Initializer = function strategy_ore_03Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_ore_03 = new ImageResourcePrototype$Bundle('strategy_ore_03', fromTrustedString_0(bundledImage_None), 1240, 118, 40, 34, false, false);
}
;
_.strategy_padlock = function strategy_padlock_0(){
  return get_70();
}
;
_.strategy_padlockInitializer = function strategy_padlockInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_padlock = new ImageResourcePrototype$Bundle('strategy_padlock', fromTrustedString_0(bundledImage_None), 634, 98, 13, 16, false, false);
}
;
_.strategy_pontoon_n = function strategy_pontoon_n_0(){
  return get_71();
}
;
_.strategy_pontoon_nInitializer = function strategy_pontoon_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_pontoon_n = new ImageResourcePrototype$Bundle('strategy_pontoon_n', fromTrustedString_0(bundledImage_None), 1636, 29, 34, 29, false, false);
}
;
_.strategy_pontoon_ne = function strategy_pontoon_ne_0(){
  return get_72();
}
;
_.strategy_pontoon_neInitializer = function strategy_pontoon_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_pontoon_ne = new ImageResourcePrototype$Bundle('strategy_pontoon_ne', fromTrustedString_0(bundledImage_None), 1636, 0, 34, 29, false, false);
}
;
_.strategy_pontoon_nw = function strategy_pontoon_nw_0(){
  return get_73();
}
;
_.strategy_pontoon_nwInitializer = function strategy_pontoon_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_pontoon_nw = new ImageResourcePrototype$Bundle('strategy_pontoon_nw', fromTrustedString_0(bundledImage_None), 1591, 148, 34, 29, false, false);
}
;
_.strategy_pontoon_s = function strategy_pontoon_s_0(){
  return get_74();
}
;
_.strategy_pontoon_sInitializer = function strategy_pontoon_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_pontoon_s = new ImageResourcePrototype$Bundle('strategy_pontoon_s', fromTrustedString_0(bundledImage_None), 1636, 29, 34, 29, false, false);
}
;
_.strategy_pontoon_se = function strategy_pontoon_se_0(){
  return get_75();
}
;
_.strategy_pontoon_seInitializer = function strategy_pontoon_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_pontoon_se = new ImageResourcePrototype$Bundle('strategy_pontoon_se', fromTrustedString_0(bundledImage_None), 1591, 148, 34, 29, false, false);
}
;
_.strategy_pontoon_sw = function strategy_pontoon_sw_0(){
  return get_76();
}
;
_.strategy_pontoon_swInitializer = function strategy_pontoon_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_pontoon_sw = new ImageResourcePrototype$Bundle('strategy_pontoon_sw', fromTrustedString_0(bundledImage_None), 1636, 0, 34, 29, false, false);
}
;
_.strategy_select_hexagon = function strategy_select_hexagon_0(){
  return get_77();
}
;
_.strategy_select_hexagonInitializer = function strategy_select_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_select_hexagon = new ImageResourcePrototype$Bundle('strategy_select_hexagon', fromTrustedString_0(bundledImage_None), 745, 146, 40, 35, false, false);
}
;
_.strategy_sluice_n = function strategy_sluice_n_0(){
  return get_78();
}
;
_.strategy_sluice_nInitializer = function strategy_sluice_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_sluice_n = new ImageResourcePrototype$Bundle('strategy_sluice_n', fromTrustedString_0(bundledImage_None), 1591, 119, 34, 29, false, false);
}
;
_.strategy_sluice_ne = function strategy_sluice_ne_0(){
  return get_79();
}
;
_.strategy_sluice_neInitializer = function strategy_sluice_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_sluice_ne = new ImageResourcePrototype$Bundle('strategy_sluice_ne', fromTrustedString_0(bundledImage_None), 1591, 90, 34, 29, false, false);
}
;
_.strategy_sluice_nw = function strategy_sluice_nw_0(){
  return get_80();
}
;
_.strategy_sluice_nwInitializer = function strategy_sluice_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_sluice_nw = new ImageResourcePrototype$Bundle('strategy_sluice_nw', fromTrustedString_0(bundledImage_None), 1274, 152, 34, 29, false, false);
}
;
_.strategy_sluice_s = function strategy_sluice_s_0(){
  return get_81();
}
;
_.strategy_sluice_sInitializer = function strategy_sluice_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_sluice_s = new ImageResourcePrototype$Bundle('strategy_sluice_s', fromTrustedString_0(bundledImage_None), 1591, 119, 34, 29, false, false);
}
;
_.strategy_sluice_se = function strategy_sluice_se_0(){
  return get_82();
}
;
_.strategy_sluice_seInitializer = function strategy_sluice_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_sluice_se = new ImageResourcePrototype$Bundle('strategy_sluice_se', fromTrustedString_0(bundledImage_None), 1274, 152, 34, 29, false, false);
}
;
_.strategy_sluice_sw = function strategy_sluice_sw_0(){
  return get_83();
}
;
_.strategy_sluice_swInitializer = function strategy_sluice_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_sluice_sw = new ImageResourcePrototype$Bundle('strategy_sluice_sw', fromTrustedString_0(bundledImage_None), 1591, 90, 34, 29, false, false);
}
;
_.strategy_target = function strategy_target_0(){
  return get_84();
}
;
_.strategy_targetInitializer = function strategy_targetInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_target = new ImageResourcePrototype$Bundle('strategy_target', fromTrustedString_0(bundledImage_None), 1240, 152, 34, 29, false, false);
}
;
_.strategy_target_control = function strategy_target_control_0(){
  return get_85();
}
;
_.strategy_target_controlInitializer = function strategy_target_controlInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_target_control = new ImageResourcePrototype$Bundle('strategy_target_control', fromTrustedString_0(bundledImage_None), 1280, 118, 30, 25, false, false);
}
;
_.strategy_warning = function strategy_warning_0(){
  return get_86();
}
;
_.strategy_warningInitializer = function strategy_warningInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_warning = new ImageResourcePrototype$Bundle('strategy_warning', fromTrustedString_0(bundledImage_None), 711, 124, 34, 29, false, false);
}
;
_.strategy_warp = function strategy_warp_0(){
  return get_87();
}
;
_.strategy_warpInitializer = function strategy_warpInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_warp = new ImageResourcePrototype$Bundle('strategy_warp', fromTrustedString_0(bundledImage_None), 330, 103, 82, 66, false, false);
}
;
_.strategy_wreck = function strategy_wreck_0(){
  return get_88();
}
;
_.strategy_wreckInitializer = function strategy_wreckInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  strategy_wreck = new ImageResourcePrototype$Bundle('strategy_wreck', fromTrustedString_0(bundledImage_None), 1510, 127, 31, 31, false, false);
}
;
_.tactic_arrow_n = function tactic_arrow_n_0(){
  return get_89();
}
;
_.tactic_arrow_nInitializer = function tactic_arrow_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_arrow_n = new ImageResourcePrototype$Bundle('tactic_arrow_n', fromTrustedString_0(bundledImage_None), 1591, 60, 41, 30, false, false);
}
;
_.tactic_arrow_ne = function tactic_arrow_ne_0(){
  return get_90();
}
;
_.tactic_arrow_neInitializer = function tactic_arrow_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_arrow_ne = new ImageResourcePrototype$Bundle('tactic_arrow_ne', fromTrustedString_0(bundledImage_None), 1550, 120, 41, 30, false, false);
}
;
_.tactic_arrow_nw = function tactic_arrow_nw_0(){
  return get_91();
}
;
_.tactic_arrow_nwInitializer = function tactic_arrow_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_arrow_nw = new ImageResourcePrototype$Bundle('tactic_arrow_nw', fromTrustedString_0(bundledImage_None), 1550, 90, 41, 30, false, false);
}
;
_.tactic_arrow_s = function tactic_arrow_s_0(){
  return get_92();
}
;
_.tactic_arrow_sInitializer = function tactic_arrow_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_arrow_s = new ImageResourcePrototype$Bundle('tactic_arrow_s', fromTrustedString_0(bundledImage_None), 1550, 60, 41, 30, false, false);
}
;
_.tactic_arrow_se = function tactic_arrow_se_0(){
  return get_93();
}
;
_.tactic_arrow_seInitializer = function tactic_arrow_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_arrow_se = new ImageResourcePrototype$Bundle('tactic_arrow_se', fromTrustedString_0(bundledImage_None), 1550, 30, 41, 30, false, false);
}
;
_.tactic_arrow_sw = function tactic_arrow_sw_0(){
  return get_94();
}
;
_.tactic_arrow_swInitializer = function tactic_arrow_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_arrow_sw = new ImageResourcePrototype$Bundle('tactic_arrow_sw', fromTrustedString_0(bundledImage_None), 1550, 0, 41, 30, false, false);
}
;
_.tactic_deployment34 = function tactic_deployment34_0(){
  return get_95();
}
;
_.tactic_deployment34Initializer = function tactic_deployment34Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_deployment34 = new ImageResourcePrototype('tactic_deployment34', fromTrustedString_0(externalImage0), 0, 0, 517, 365, false, false);
}
;
_.tactic_disable_fire = function tactic_disable_fire_0(){
  return get_96();
}
;
_.tactic_disable_fireInitializer = function tactic_disable_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_disable_fire = new ImageResourcePrototype$Bundle('tactic_disable_fire', fromTrustedString_0(bundledImage_None), 1240, 40, 70, 40, false, false);
}
;
_.tactic_disable_water = function tactic_disable_water_0(){
  return get_97();
}
;
_.tactic_disable_waterInitializer = function tactic_disable_waterInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_disable_water = new ImageResourcePrototype$Bundle('tactic_disable_water', fromTrustedString_0(bundledImage_None), 1240, 0, 70, 40, false, false);
}
;
_.tactic_disabling_fire = function tactic_disabling_fire_0(){
  return get_98();
}
;
_.tactic_disabling_fireInitializer = function tactic_disabling_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_disabling_fire = new ImageResourcePrototype$Bundle('tactic_disabling_fire', fromTrustedString_0(bundledImage_None), 1163, 120, 70, 40, false, false);
}
;
_.tactic_hightlight_hexagon = function tactic_hightlight_hexagon_0(){
  return get_99();
}
;
_.tactic_hightlight_hexagonInitializer = function tactic_hightlight_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_hightlight_hexagon = new ImageResourcePrototype$Bundle('tactic_hightlight_hexagon', fromTrustedString_0(bundledImage_None), 1163, 80, 77, 40, false, false);
}
;
_.tactic_icon_bullet1 = function tactic_icon_bullet1_0(){
  return get_100();
}
;
_.tactic_icon_bullet1Initializer = function tactic_icon_bullet1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_icon_bullet1 = new ImageResourcePrototype$Bundle('tactic_icon_bullet1', fromTrustedString_0(bundledImage_None), 1163, 40, 77, 40, false, false);
}
;
_.tactic_icon_bullet2 = function tactic_icon_bullet2_0(){
  return get_101();
}
;
_.tactic_icon_bullet2Initializer = function tactic_icon_bullet2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_icon_bullet2 = new ImageResourcePrototype$Bundle('tactic_icon_bullet2', fromTrustedString_0(bundledImage_None), 1163, 0, 77, 40, false, false);
}
;
_.tactic_icon_load1 = function tactic_icon_load1_0(){
  return get_102();
}
;
_.tactic_icon_load1Initializer = function tactic_icon_load1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_icon_load1 = new ImageResourcePrototype$Bundle('tactic_icon_load1', fromTrustedString_0(bundledImage_None), 1086, 120, 77, 40, false, false);
}
;
_.tactic_icon_load2 = function tactic_icon_load2_0(){
  return get_103();
}
;
_.tactic_icon_load2Initializer = function tactic_icon_load2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_icon_load2 = new ImageResourcePrototype$Bundle('tactic_icon_load2', fromTrustedString_0(bundledImage_None), 1086, 80, 77, 40, false, false);
}
;
_.tactic_icon_load3 = function tactic_icon_load3_0(){
  return get_104();
}
;
_.tactic_icon_load3Initializer = function tactic_icon_load3Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_icon_load3 = new ImageResourcePrototype$Bundle('tactic_icon_load3', fromTrustedString_0(bundledImage_None), 1086, 40, 77, 40, false, false);
}
;
_.tactic_icon_load4 = function tactic_icon_load4_0(){
  return get_105();
}
;
_.tactic_icon_load4Initializer = function tactic_icon_load4Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_icon_load4 = new ImageResourcePrototype$Bundle('tactic_icon_load4', fromTrustedString_0(bundledImage_None), 1086, 0, 77, 40, false, false);
}
;
_.tactic_ore0_01 = function tactic_ore0_01_0(){
  return get_106();
}
;
_.tactic_ore0_01Initializer = function tactic_ore0_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore0_01 = new ImageResourcePrototype$Bundle('tactic_ore0_01', fromTrustedString_0(bundledImage_None), 1010, 120, 76, 40, false, false);
}
;
_.tactic_ore2generator = function tactic_ore2generator_0(){
  return get_107();
}
;
_.tactic_ore2generatorInitializer = function tactic_ore2generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore2generator = new ImageResourcePrototype$Bundle('tactic_ore2generator', fromTrustedString_0(bundledImage_None), 110, 0, 220, 116, false, false);
}
;
_.tactic_ore3_01 = function tactic_ore3_01_0(){
  return get_108();
}
;
_.tactic_ore3_01Initializer = function tactic_ore3_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore3_01 = new ImageResourcePrototype$Bundle('tactic_ore3_01', fromTrustedString_0(bundledImage_None), 836, 96, 91, 48, false, false);
}
;
_.tactic_ore3_02 = function tactic_ore3_02_0(){
  return get_109();
}
;
_.tactic_ore3_02Initializer = function tactic_ore3_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore3_02 = new ImageResourcePrototype$Bundle('tactic_ore3_02', fromTrustedString_0(bundledImage_None), 836, 48, 91, 48, false, false);
}
;
_.tactic_ore3generator = function tactic_ore3generator_0(){
  return get_110();
}
;
_.tactic_ore3generatorInitializer = function tactic_ore3generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore3generator = new ImageResourcePrototype('tactic_ore3generator', fromTrustedString_0(externalImage1), 0, 0, 266, 140, false, false);
}
;
_.tactic_ore5_01 = function tactic_ore5_01_0(){
  return get_111();
}
;
_.tactic_ore5_01Initializer = function tactic_ore5_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore5_01 = new ImageResourcePrototype$Bundle('tactic_ore5_01', fromTrustedString_0(bundledImage_None), 167, 116, 98, 52, false, false);
}
;
_.tactic_ore_01 = function tactic_ore_01_0(){
  return get_112();
}
;
_.tactic_ore_01Initializer = function tactic_ore_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore_01 = new ImageResourcePrototype$Bundle('tactic_ore_01', fromTrustedString_0(bundledImage_None), 836, 0, 91, 48, false, false);
}
;
_.tactic_ore_02 = function tactic_ore_02_0(){
  return get_113();
}
;
_.tactic_ore_02Initializer = function tactic_ore_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore_02 = new ImageResourcePrototype$Bundle('tactic_ore_02', fromTrustedString_0(bundledImage_None), 745, 48, 91, 48, false, false);
}
;
_.tactic_ore_03 = function tactic_ore_03_0(){
  return get_114();
}
;
_.tactic_ore_03Initializer = function tactic_ore_03Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_ore_03 = new ImageResourcePrototype$Bundle('tactic_ore_03', fromTrustedString_0(bundledImage_None), 745, 0, 91, 48, false, false);
}
;
_.tactic_padlock = function tactic_padlock_0(){
  return get_115();
}
;
_.tactic_padlockInitializer = function tactic_padlockInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_padlock = new ImageResourcePrototype$Bundle('tactic_padlock', fromTrustedString_0(bundledImage_None), 1240, 80, 60, 38, false, false);
}
;
_.tactic_pontoon_n = function tactic_pontoon_n_0(){
  return get_116();
}
;
_.tactic_pontoon_nInitializer = function tactic_pontoon_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_pontoon_n = new ImageResourcePrototype$Bundle('tactic_pontoon_n', fromTrustedString_0(bundledImage_None), 1010, 80, 76, 40, false, false);
}
;
_.tactic_pontoon_ne = function tactic_pontoon_ne_0(){
  return get_117();
}
;
_.tactic_pontoon_neInitializer = function tactic_pontoon_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_pontoon_ne = new ImageResourcePrototype$Bundle('tactic_pontoon_ne', fromTrustedString_0(bundledImage_None), 1010, 40, 76, 40, false, false);
}
;
_.tactic_pontoon_nw = function tactic_pontoon_nw_0(){
  return get_118();
}
;
_.tactic_pontoon_nwInitializer = function tactic_pontoon_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_pontoon_nw = new ImageResourcePrototype$Bundle('tactic_pontoon_nw', fromTrustedString_0(bundledImage_None), 1010, 0, 76, 40, false, false);
}
;
_.tactic_pontoon_s = function tactic_pontoon_s_0(){
  return get_119();
}
;
_.tactic_pontoon_sInitializer = function tactic_pontoon_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_pontoon_s = new ImageResourcePrototype$Bundle('tactic_pontoon_s', fromTrustedString_0(bundledImage_None), 1010, 80, 76, 40, false, false);
}
;
_.tactic_pontoon_se = function tactic_pontoon_se_0(){
  return get_120();
}
;
_.tactic_pontoon_seInitializer = function tactic_pontoon_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_pontoon_se = new ImageResourcePrototype$Bundle('tactic_pontoon_se', fromTrustedString_0(bundledImage_None), 1010, 0, 76, 40, false, false);
}
;
_.tactic_pontoon_sw = function tactic_pontoon_sw_0(){
  return get_121();
}
;
_.tactic_pontoon_swInitializer = function tactic_pontoon_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_pontoon_sw = new ImageResourcePrototype$Bundle('tactic_pontoon_sw', fromTrustedString_0(bundledImage_None), 1010, 40, 76, 40, false, false);
}
;
_.tactic_select_hexagon = function tactic_select_hexagon_0(){
  return get_122();
}
;
_.tactic_select_hexagonInitializer = function tactic_select_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_select_hexagon = new ImageResourcePrototype$Bundle('tactic_select_hexagon', fromTrustedString_0(bundledImage_None), 745, 96, 87, 50, false, false);
}
;
_.tactic_sluice_n = function tactic_sluice_n_0(){
  return get_123();
}
;
_.tactic_sluice_nInitializer = function tactic_sluice_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_sluice_n = new ImageResourcePrototype$Bundle('tactic_sluice_n', fromTrustedString_0(bundledImage_None), 927, 88, 83, 44, false, false);
}
;
_.tactic_sluice_ne = function tactic_sluice_ne_0(){
  return get_124();
}
;
_.tactic_sluice_neInitializer = function tactic_sluice_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_sluice_ne = new ImageResourcePrototype$Bundle('tactic_sluice_ne', fromTrustedString_0(bundledImage_None), 927, 44, 83, 44, false, false);
}
;
_.tactic_sluice_nw = function tactic_sluice_nw_0(){
  return get_125();
}
;
_.tactic_sluice_nwInitializer = function tactic_sluice_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_sluice_nw = new ImageResourcePrototype$Bundle('tactic_sluice_nw', fromTrustedString_0(bundledImage_None), 927, 0, 83, 44, false, false);
}
;
_.tactic_sluice_s = function tactic_sluice_s_0(){
  return get_126();
}
;
_.tactic_sluice_sInitializer = function tactic_sluice_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_sluice_s = new ImageResourcePrototype$Bundle('tactic_sluice_s', fromTrustedString_0(bundledImage_None), 927, 88, 83, 44, false, false);
}
;
_.tactic_sluice_se = function tactic_sluice_se_0(){
  return get_127();
}
;
_.tactic_sluice_seInitializer = function tactic_sluice_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_sluice_se = new ImageResourcePrototype$Bundle('tactic_sluice_se', fromTrustedString_0(bundledImage_None), 927, 0, 83, 44, false, false);
}
;
_.tactic_sluice_sw = function tactic_sluice_sw_0(){
  return get_128();
}
;
_.tactic_sluice_swInitializer = function tactic_sluice_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_sluice_sw = new ImageResourcePrototype$Bundle('tactic_sluice_sw', fromTrustedString_0(bundledImage_None), 927, 44, 83, 44, false, false);
}
;
_.tactic_target = function tactic_target_0(){
  return get_129();
}
;
_.tactic_targetInitializer = function tactic_targetInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_target = new ImageResourcePrototype$Bundle('tactic_target', fromTrustedString_0(bundledImage_None), 927, 132, 77, 40, false, false);
}
;
_.tactic_target_control = function tactic_target_control_0(){
  return get_130();
}
;
_.tactic_target_controlInitializer = function tactic_target_controlInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_target_control = new ImageResourcePrototype$Bundle('tactic_target_control', fromTrustedString_0(bundledImage_None), 836, 144, 70, 36, false, false);
}
;
_.tactic_warning = function tactic_warning_0(){
  return get_131();
}
;
_.tactic_warningInitializer = function tactic_warningInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_warning = new ImageResourcePrototype$Bundle('tactic_warning', fromTrustedString_0(bundledImage_None), 647, 84, 70, 40, false, false);
}
;
_.tactic_warp = function tactic_warp_0(){
  return get_132();
}
;
_.tactic_warpInitializer = function tactic_warpInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_warp = new ImageResourcePrototype$Bundle('tactic_warp', fromTrustedString_0(bundledImage_None), 330, 0, 202, 103, false, false);
}
;
_.tactic_wreck = function tactic_wreck_0(){
  return get_133();
}
;
_.tactic_wreckInitializer = function tactic_wreckInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tactic_wreck = new ImageResourcePrototype$Bundle('tactic_wreck', fromTrustedString_0(bundledImage_None), 412, 103, 91, 48, false, false);
}
;
_.takeOff16 = function takeOff16_0(){
  return get_134();
}
;
_.takeOff16Initializer = function takeOff16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  takeOff16 = new ImageResourcePrototype$Bundle('takeOff16', fromTrustedString_0(bundledImage_None), 1430, 160, 16, 15, false, false);
}
;
_.takeOff32 = function takeOff32_0(){
  return get_135();
}
;
_.takeOff32Initializer = function takeOff32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  takeOff32 = new ImageResourcePrototype$Bundle('takeOff32', fromTrustedString_0(bundledImage_None), 1350, 128, 32, 32, false, false);
}
;
_.takeOffBW16 = function takeOffBW16_0(){
  return get_136();
}
;
_.takeOffBW16Initializer = function takeOffBW16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  takeOffBW16 = new ImageResourcePrototype$Bundle('takeOffBW16', fromTrustedString_0(bundledImage_None), 1398, 160, 16, 15, false, false);
}
;
_.tide_hight = function tide_hight_0(){
  return get_137();
}
;
_.tide_hightInitializer = function tide_hightInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tide_hight = new ImageResourcePrototype$Bundle('tide_hight', fromTrustedString_0(bundledImage_None), 1382, 160, 16, 16, false, false);
}
;
_.tide_low = function tide_low_0(){
  return get_138();
}
;
_.tide_lowInitializer = function tide_lowInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tide_low = new ImageResourcePrototype$Bundle('tide_low', fromTrustedString_0(bundledImage_None), 1366, 160, 16, 16, false, false);
}
;
_.tide_medium = function tide_medium_0(){
  return get_139();
}
;
_.tide_mediumInitializer = function tide_mediumInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tide_medium = new ImageResourcePrototype$Bundle('tide_medium', fromTrustedString_0(bundledImage_None), 1350, 160, 16, 16, false, false);
}
;
_.tide_unknown = function tide_unknown_0(){
  return get_140();
}
;
_.tide_unknownInitializer = function tide_unknownInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  tide_unknown = new ImageResourcePrototype$Bundle('tide_unknown', fromTrustedString_0(bundledImage_None), 1163, 160, 16, 16, false, false);
}
;
_.time32 = function time32_0(){
  return get_141();
}
;
_.time32Initializer = function time32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  time32 = new ImageResourcePrototype$Bundle('time32', fromTrustedString_0(bundledImage_None), 1350, 96, 32, 32, false, false);
}
;
_.webLinks32 = function webLinks32_0(){
  return get_142();
}
;
_.webLinks32Initializer = function webLinks32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  webLinks32 = new ImageResourcePrototype$Bundle('webLinks32', fromTrustedString_0(bundledImage_None), 1350, 64, 32, 32, false, false);
}
;
_.white_icon16 = function white_icon16_0(){
  return get_143();
}
;
_.white_icon16Initializer = function white_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  white_icon16 = new ImageResourcePrototype$Bundle('white_icon16', fromTrustedString_0(bundledImage_None), 566, 162, 18, 16, false, false);
}
;
_.winner32 = function winner32_0(){
  return get_144();
}
;
_.winner32Initializer = function winner32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  winner32 = new ImageResourcePrototype$Bundle('winner32', fromTrustedString_0(bundledImage_None), 1350, 32, 32, 32, false, false);
}
;
_.yellow_icon16 = function yellow_icon16_0(){
  return get_145();
}
;
_.yellow_icon16Initializer = function yellow_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  yellow_icon16 = new ImageResourcePrototype$Bundle('yellow_icon16', fromTrustedString_0(bundledImage_None), 548, 162, 18, 16, false, false);
}
;
_.zebra_icon16 = function zebra_icon16_0(){
  return get_146();
}
;
_.zebra_icon16Initializer = function zebra_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  zebra_icon16 = new ImageResourcePrototype$Bundle('zebra_icon16', fromTrustedString_0(bundledImage_None), 532, 162, 16, 16, false, false);
}
;
_.zoomIn32 = function zoomIn32_0(){
  return get_147();
}
;
_.zoomIn32Initializer = function zoomIn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  zoomIn32 = new ImageResourcePrototype$Bundle('zoomIn32', fromTrustedString_0(bundledImage_None), 1350, 0, 32, 32, false, false);
}
;
_.zoomOut32 = function zoomOut32_0(){
  return get_148();
}
;
_.zoomOut32Initializer = function zoomOut32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator();
  zoomOut32 = new ImageResourcePrototype$Bundle('zoomOut32', fromTrustedString_0(bundledImage_None), 1310, 136, 32, 32, false, false);
}
;
var _instance0, action16, arrow_e, arrow_n, arrow_s, arrow_w, back32, blue_icon16, brown_icon16, bundledImage_None, camouflage_icon16, cancel32, chat32, control32, cyan_icon16, endTurn32, externalImage, externalImage0, externalImage1, fastBack32, fastPlay32, fireCoverOff32, fireCoverOn32, forward32, green_icon16, grey_icon16, gridOff32, gridOn32, info32, lightning_icon16, loading, message32, moon16, ok32, olive_icon16, orange_icon16, panter_icon16, pause32, pink_icon16, play32, player32, practice32, purple_icon16, red_icon16, register32, repair32, reserve32, shoot32, strategy_arrow_n, strategy_arrow_ne, strategy_arrow_nw, strategy_arrow_s, strategy_arrow_se, strategy_arrow_sw, strategy_deployment34, strategy_disable_fire, strategy_disable_water, strategy_disabling_fire, strategy_hightlight_hexagon, strategy_icon_bullet1, strategy_icon_bullet2, strategy_icon_load1, strategy_icon_load2, strategy_icon_load3, strategy_icon_load4, strategy_ore0_01, strategy_ore2generator, strategy_ore3_01, strategy_ore3_02, strategy_ore3generator, strategy_ore5_01, strategy_ore_01, strategy_ore_02, strategy_ore_03, strategy_padlock, strategy_pontoon_n, strategy_pontoon_ne, strategy_pontoon_nw, strategy_pontoon_s, strategy_pontoon_se, strategy_pontoon_sw, strategy_select_hexagon, strategy_sluice_n, strategy_sluice_ne, strategy_sluice_nw, strategy_sluice_s, strategy_sluice_se, strategy_sluice_sw, strategy_target, strategy_target_control, strategy_warning, strategy_warp, strategy_wreck, tactic_arrow_n, tactic_arrow_ne, tactic_arrow_nw, tactic_arrow_s, tactic_arrow_se, tactic_arrow_sw, tactic_deployment34, tactic_disable_fire, tactic_disable_water, tactic_disabling_fire, tactic_hightlight_hexagon, tactic_icon_bullet1, tactic_icon_bullet2, tactic_icon_load1, tactic_icon_load2, tactic_icon_load3, tactic_icon_load4, tactic_ore0_01, tactic_ore2generator, tactic_ore3_01, tactic_ore3_02, tactic_ore3generator, tactic_ore5_01, tactic_ore_01, tactic_ore_02, tactic_ore_03, tactic_padlock, tactic_pontoon_n, tactic_pontoon_ne, tactic_pontoon_nw, tactic_pontoon_s, tactic_pontoon_se, tactic_pontoon_sw, tactic_select_hexagon, tactic_sluice_n, tactic_sluice_ne, tactic_sluice_nw, tactic_sluice_s, tactic_sluice_se, tactic_sluice_sw, tactic_target, tactic_target_control, tactic_warning, tactic_warp, tactic_wreck, takeOff16, takeOff32, takeOffBW16, tide_hight, tide_low, tide_medium, tide_unknown, time32, webLinks32, white_icon16, winner32, yellow_icon16, zebra_icon16, zoomIn32, zoomOut32;
var Lcom_fullmetalgalaxy_client_ressources_Icons_1default_1StaticClientBundleGenerator_2_classLit = createForClass('com.fullmetalgalaxy.client.ressources', 'Icons_default_StaticClientBundleGenerator', 378, Ljava_lang_Object_2_classLit);
function $clinit_Icons_default_StaticClientBundleGenerator$action16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$action16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).action16Initializer();
  }
}

function get_1(){
  $clinit_Icons_default_StaticClientBundleGenerator$action16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , action16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$arrow_eInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_eInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).arrow_eInitializer();
  }
}

function get_2(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_eInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , arrow_e;
}

function $clinit_Icons_default_StaticClientBundleGenerator$arrow_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_nInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).arrow_nInitializer();
  }
}

function get_3(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_nInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , arrow_n;
}

function $clinit_Icons_default_StaticClientBundleGenerator$arrow_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_sInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).arrow_sInitializer();
  }
}

function get_4(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_sInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , arrow_s;
}

function $clinit_Icons_default_StaticClientBundleGenerator$arrow_wInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_wInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).arrow_wInitializer();
  }
}

function get_5(){
  $clinit_Icons_default_StaticClientBundleGenerator$arrow_wInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , arrow_w;
}

function $clinit_Icons_default_StaticClientBundleGenerator$back32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$back32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).back32Initializer();
  }
}

function get_6(){
  $clinit_Icons_default_StaticClientBundleGenerator$back32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , back32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$blue_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$blue_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).blue_icon16Initializer();
  }
}

function get_7(){
  $clinit_Icons_default_StaticClientBundleGenerator$blue_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , blue_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$brown_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$brown_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).brown_icon16Initializer();
  }
}

function get_8(){
  $clinit_Icons_default_StaticClientBundleGenerator$brown_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , brown_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$camouflage_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$camouflage_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).camouflage_icon16Initializer();
  }
}

function get_9(){
  $clinit_Icons_default_StaticClientBundleGenerator$camouflage_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , camouflage_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$cancel32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$cancel32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).cancel32Initializer();
  }
}

function get_10(){
  $clinit_Icons_default_StaticClientBundleGenerator$cancel32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , cancel32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$chat32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$chat32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).chat32Initializer();
  }
}

function get_11(){
  $clinit_Icons_default_StaticClientBundleGenerator$chat32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , chat32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$control32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$control32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).control32Initializer();
  }
}

function get_12(){
  $clinit_Icons_default_StaticClientBundleGenerator$control32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , control32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$cyan_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$cyan_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).cyan_icon16Initializer();
  }
}

function get_13(){
  $clinit_Icons_default_StaticClientBundleGenerator$cyan_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , cyan_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$endTurn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$endTurn32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).endTurn32Initializer();
  }
}

function get_14(){
  $clinit_Icons_default_StaticClientBundleGenerator$endTurn32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , endTurn32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$fastBack32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$fastBack32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).fastBack32Initializer();
  }
}

function get_15(){
  $clinit_Icons_default_StaticClientBundleGenerator$fastBack32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , fastBack32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$fastPlay32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$fastPlay32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).fastPlay32Initializer();
  }
}

function get_16(){
  $clinit_Icons_default_StaticClientBundleGenerator$fastPlay32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , fastPlay32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$fireCoverOff32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$fireCoverOff32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).fireCoverOff32Initializer();
  }
}

function get_17(){
  $clinit_Icons_default_StaticClientBundleGenerator$fireCoverOff32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , fireCoverOff32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$fireCoverOn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$fireCoverOn32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).fireCoverOn32Initializer();
  }
}

function get_18(){
  $clinit_Icons_default_StaticClientBundleGenerator$fireCoverOn32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , fireCoverOn32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$forward32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$forward32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).forward32Initializer();
  }
}

function get_19(){
  $clinit_Icons_default_StaticClientBundleGenerator$forward32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , forward32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$green_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$green_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).green_icon16Initializer();
  }
}

function get_20(){
  $clinit_Icons_default_StaticClientBundleGenerator$green_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , green_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$grey_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$grey_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).grey_icon16Initializer();
  }
}

function get_21(){
  $clinit_Icons_default_StaticClientBundleGenerator$grey_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , grey_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$gridOff32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$gridOff32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).gridOff32Initializer();
  }
}

function get_22(){
  $clinit_Icons_default_StaticClientBundleGenerator$gridOff32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , gridOff32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$gridOn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$gridOn32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).gridOn32Initializer();
  }
}

function get_23(){
  $clinit_Icons_default_StaticClientBundleGenerator$gridOn32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , gridOn32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$info32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$info32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).info32Initializer();
  }
}

function get_24(){
  $clinit_Icons_default_StaticClientBundleGenerator$info32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , info32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$lightning_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$lightning_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).lightning_icon16Initializer();
  }
}

function get_25(){
  $clinit_Icons_default_StaticClientBundleGenerator$lightning_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , lightning_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$loadingInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$loadingInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).loadingInitializer();
  }
}

function get_26(){
  $clinit_Icons_default_StaticClientBundleGenerator$loadingInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , loading;
}

function $clinit_Icons_default_StaticClientBundleGenerator$message32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$message32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).message32Initializer();
  }
}

function get_27(){
  $clinit_Icons_default_StaticClientBundleGenerator$message32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , message32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$moon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$moon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).moon16Initializer();
  }
}

function get_28(){
  $clinit_Icons_default_StaticClientBundleGenerator$moon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , moon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$ok32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$ok32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).ok32Initializer();
  }
}

function get_29(){
  $clinit_Icons_default_StaticClientBundleGenerator$ok32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , ok32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$olive_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$olive_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).olive_icon16Initializer();
  }
}

function get_30(){
  $clinit_Icons_default_StaticClientBundleGenerator$olive_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , olive_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$orange_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$orange_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).orange_icon16Initializer();
  }
}

function get_31(){
  $clinit_Icons_default_StaticClientBundleGenerator$orange_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , orange_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$panter_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$panter_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).panter_icon16Initializer();
  }
}

function get_32(){
  $clinit_Icons_default_StaticClientBundleGenerator$panter_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , panter_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$pause32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$pause32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).pause32Initializer();
  }
}

function get_33(){
  $clinit_Icons_default_StaticClientBundleGenerator$pause32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , pause32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$pink_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$pink_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).pink_icon16Initializer();
  }
}

function get_34(){
  $clinit_Icons_default_StaticClientBundleGenerator$pink_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , pink_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$play32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$play32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).play32Initializer();
  }
}

function get_35(){
  $clinit_Icons_default_StaticClientBundleGenerator$play32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , play32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$player32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$player32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).player32Initializer();
  }
}

function get_36(){
  $clinit_Icons_default_StaticClientBundleGenerator$player32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , player32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$practice32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$practice32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).practice32Initializer();
  }
}

function get_37(){
  $clinit_Icons_default_StaticClientBundleGenerator$practice32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , practice32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$purple_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$purple_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).purple_icon16Initializer();
  }
}

function get_38(){
  $clinit_Icons_default_StaticClientBundleGenerator$purple_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , purple_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$red_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$red_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).red_icon16Initializer();
  }
}

function get_39(){
  $clinit_Icons_default_StaticClientBundleGenerator$red_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , red_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$register32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$register32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).register32Initializer();
  }
}

function get_40(){
  $clinit_Icons_default_StaticClientBundleGenerator$register32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , register32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$repair32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$repair32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).repair32Initializer();
  }
}

function get_41(){
  $clinit_Icons_default_StaticClientBundleGenerator$repair32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , repair32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$reserve32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$reserve32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).reserve32Initializer();
  }
}

function get_42(){
  $clinit_Icons_default_StaticClientBundleGenerator$reserve32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , reserve32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$shoot32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$shoot32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).shoot32Initializer();
  }
}

function get_43(){
  $clinit_Icons_default_StaticClientBundleGenerator$shoot32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , shoot32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_nInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_arrow_nInitializer();
  }
}

function get_44(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_nInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_arrow_n;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_neInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_arrow_neInitializer();
  }
}

function get_45(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_neInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_arrow_ne;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_nwInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_arrow_nwInitializer();
  }
}

function get_46(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_nwInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_arrow_nw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_sInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_arrow_sInitializer();
  }
}

function get_47(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_sInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_arrow_s;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_seInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_arrow_seInitializer();
  }
}

function get_48(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_seInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_arrow_se;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_swInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_arrow_swInitializer();
  }
}

function get_49(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_arrow_swInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_arrow_sw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_deployment34Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_deployment34Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_deployment34Initializer();
  }
}

function get_50(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_deployment34Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_deployment34;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_disable_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_disable_fireInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_disable_fireInitializer();
  }
}

function get_51(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_disable_fireInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_disable_fire;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_disable_waterInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_disable_waterInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_disable_waterInitializer();
  }
}

function get_52(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_disable_waterInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_disable_water;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_disabling_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_disabling_fireInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_disabling_fireInitializer();
  }
}

function get_53(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_disabling_fireInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_disabling_fire;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_hightlight_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_hightlight_hexagonInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_hightlight_hexagonInitializer();
  }
}

function get_54(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_hightlight_hexagonInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_hightlight_hexagon;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_bullet1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_bullet1Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_icon_bullet1Initializer();
  }
}

function get_55(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_bullet1Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_icon_bullet1;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_bullet2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_bullet2Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_icon_bullet2Initializer();
  }
}

function get_56(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_bullet2Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_icon_bullet2;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load1Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_icon_load1Initializer();
  }
}

function get_57(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load1Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_icon_load1;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load2Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_icon_load2Initializer();
  }
}

function get_58(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load2Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_icon_load2;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load3Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load3Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_icon_load3Initializer();
  }
}

function get_59(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load3Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_icon_load3;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load4Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load4Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_icon_load4Initializer();
  }
}

function get_60(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_icon_load4Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_icon_load4;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore0_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore0_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore0_01Initializer();
  }
}

function get_61(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore0_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore0_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore2generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore2generatorInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore2generatorInitializer();
  }
}

function get_62(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore2generatorInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore2generator;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore3_01Initializer();
  }
}

function get_63(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore3_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3_02Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore3_02Initializer();
  }
}

function get_64(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3_02Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore3_02;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3generatorInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore3generatorInitializer();
  }
}

function get_65(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore3generatorInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore3generator;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore5_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore5_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore5_01Initializer();
  }
}

function get_66(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore5_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore5_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore_01Initializer();
  }
}

function get_67(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_02Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore_02Initializer();
  }
}

function get_68(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_02Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore_02;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_03Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_03Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_ore_03Initializer();
  }
}

function get_69(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_ore_03Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_ore_03;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_padlockInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_padlockInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_padlockInitializer();
  }
}

function get_70(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_padlockInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_padlock;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_nInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_pontoon_nInitializer();
  }
}

function get_71(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_nInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_pontoon_n;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_neInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_pontoon_neInitializer();
  }
}

function get_72(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_neInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_pontoon_ne;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_nwInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_pontoon_nwInitializer();
  }
}

function get_73(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_nwInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_pontoon_nw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_sInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_pontoon_sInitializer();
  }
}

function get_74(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_sInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_pontoon_s;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_seInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_pontoon_seInitializer();
  }
}

function get_75(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_seInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_pontoon_se;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_swInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_pontoon_swInitializer();
  }
}

function get_76(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_pontoon_swInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_pontoon_sw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_select_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_select_hexagonInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_select_hexagonInitializer();
  }
}

function get_77(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_select_hexagonInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_select_hexagon;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_nInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_sluice_nInitializer();
  }
}

function get_78(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_nInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_sluice_n;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_neInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_sluice_neInitializer();
  }
}

function get_79(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_neInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_sluice_ne;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_nwInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_sluice_nwInitializer();
  }
}

function get_80(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_nwInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_sluice_nw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_sInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_sluice_sInitializer();
  }
}

function get_81(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_sInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_sluice_s;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_seInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_sluice_seInitializer();
  }
}

function get_82(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_seInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_sluice_se;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_swInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_sluice_swInitializer();
  }
}

function get_83(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_sluice_swInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_sluice_sw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_targetInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_targetInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_targetInitializer();
  }
}

function get_84(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_targetInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_target;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_target_controlInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_target_controlInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_target_controlInitializer();
  }
}

function get_85(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_target_controlInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_target_control;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_warningInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_warningInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_warningInitializer();
  }
}

function get_86(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_warningInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_warning;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_warpInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_warpInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_warpInitializer();
  }
}

function get_87(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_warpInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_warp;
}

function $clinit_Icons_default_StaticClientBundleGenerator$strategy_wreckInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_wreckInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).strategy_wreckInitializer();
  }
}

function get_88(){
  $clinit_Icons_default_StaticClientBundleGenerator$strategy_wreckInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , strategy_wreck;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_nInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_arrow_nInitializer();
  }
}

function get_89(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_nInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_arrow_n;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_neInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_arrow_neInitializer();
  }
}

function get_90(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_neInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_arrow_ne;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_nwInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_arrow_nwInitializer();
  }
}

function get_91(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_nwInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_arrow_nw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_sInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_arrow_sInitializer();
  }
}

function get_92(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_sInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_arrow_s;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_seInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_arrow_seInitializer();
  }
}

function get_93(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_seInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_arrow_se;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_swInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_arrow_swInitializer();
  }
}

function get_94(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_arrow_swInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_arrow_sw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_deployment34Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_deployment34Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_deployment34Initializer();
  }
}

function get_95(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_deployment34Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_deployment34;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_disable_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_disable_fireInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_disable_fireInitializer();
  }
}

function get_96(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_disable_fireInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_disable_fire;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_disable_waterInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_disable_waterInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_disable_waterInitializer();
  }
}

function get_97(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_disable_waterInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_disable_water;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_disabling_fireInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_disabling_fireInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_disabling_fireInitializer();
  }
}

function get_98(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_disabling_fireInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_disabling_fire;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_hightlight_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_hightlight_hexagonInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_hightlight_hexagonInitializer();
  }
}

function get_99(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_hightlight_hexagonInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_hightlight_hexagon;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_bullet1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_bullet1Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_icon_bullet1Initializer();
  }
}

function get_100(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_bullet1Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_icon_bullet1;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_bullet2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_bullet2Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_icon_bullet2Initializer();
  }
}

function get_101(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_bullet2Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_icon_bullet2;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load1Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load1Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_icon_load1Initializer();
  }
}

function get_102(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load1Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_icon_load1;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load2Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load2Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_icon_load2Initializer();
  }
}

function get_103(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load2Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_icon_load2;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load3Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load3Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_icon_load3Initializer();
  }
}

function get_104(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load3Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_icon_load3;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load4Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load4Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_icon_load4Initializer();
  }
}

function get_105(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_icon_load4Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_icon_load4;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore0_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore0_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore0_01Initializer();
  }
}

function get_106(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore0_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore0_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore2generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore2generatorInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore2generatorInitializer();
  }
}

function get_107(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore2generatorInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore2generator;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore3_01Initializer();
  }
}

function get_108(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore3_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3_02Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore3_02Initializer();
  }
}

function get_109(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3_02Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore3_02;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3generatorInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3generatorInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore3generatorInitializer();
  }
}

function get_110(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore3generatorInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore3generator;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore5_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore5_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore5_01Initializer();
  }
}

function get_111(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore5_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore5_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_01Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_01Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore_01Initializer();
  }
}

function get_112(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_01Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore_01;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_02Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_02Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore_02Initializer();
  }
}

function get_113(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_02Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore_02;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_03Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_03Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_ore_03Initializer();
  }
}

function get_114(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_ore_03Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_ore_03;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_padlockInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_padlockInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_padlockInitializer();
  }
}

function get_115(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_padlockInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_padlock;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_nInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_pontoon_nInitializer();
  }
}

function get_116(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_nInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_pontoon_n;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_neInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_pontoon_neInitializer();
  }
}

function get_117(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_neInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_pontoon_ne;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_nwInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_pontoon_nwInitializer();
  }
}

function get_118(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_nwInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_pontoon_nw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_sInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_pontoon_sInitializer();
  }
}

function get_119(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_sInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_pontoon_s;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_seInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_pontoon_seInitializer();
  }
}

function get_120(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_seInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_pontoon_se;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_swInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_pontoon_swInitializer();
  }
}

function get_121(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_pontoon_swInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_pontoon_sw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_select_hexagonInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_select_hexagonInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_select_hexagonInitializer();
  }
}

function get_122(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_select_hexagonInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_select_hexagon;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_nInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_nInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_sluice_nInitializer();
  }
}

function get_123(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_nInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_sluice_n;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_neInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_neInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_sluice_neInitializer();
  }
}

function get_124(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_neInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_sluice_ne;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_nwInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_nwInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_sluice_nwInitializer();
  }
}

function get_125(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_nwInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_sluice_nw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_sInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_sInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_sluice_sInitializer();
  }
}

function get_126(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_sInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_sluice_s;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_seInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_seInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_sluice_seInitializer();
  }
}

function get_127(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_seInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_sluice_se;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_swInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_swInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_sluice_swInitializer();
  }
}

function get_128(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_sluice_swInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_sluice_sw;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_targetInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_targetInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_targetInitializer();
  }
}

function get_129(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_targetInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_target;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_target_controlInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_target_controlInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_target_controlInitializer();
  }
}

function get_130(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_target_controlInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_target_control;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_warningInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_warningInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_warningInitializer();
  }
}

function get_131(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_warningInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_warning;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_warpInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_warpInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_warpInitializer();
  }
}

function get_132(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_warpInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_warp;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tactic_wreckInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_wreckInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tactic_wreckInitializer();
  }
}

function get_133(){
  $clinit_Icons_default_StaticClientBundleGenerator$tactic_wreckInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tactic_wreck;
}

function $clinit_Icons_default_StaticClientBundleGenerator$takeOff16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$takeOff16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).takeOff16Initializer();
  }
}

function get_134(){
  $clinit_Icons_default_StaticClientBundleGenerator$takeOff16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , takeOff16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$takeOff32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$takeOff32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).takeOff32Initializer();
  }
}

function get_135(){
  $clinit_Icons_default_StaticClientBundleGenerator$takeOff32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , takeOff32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$takeOffBW16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$takeOffBW16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).takeOffBW16Initializer();
  }
}

function get_136(){
  $clinit_Icons_default_StaticClientBundleGenerator$takeOffBW16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , takeOffBW16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tide_hightInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_hightInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tide_hightInitializer();
  }
}

function get_137(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_hightInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tide_hight;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tide_lowInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_lowInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tide_lowInitializer();
  }
}

function get_138(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_lowInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tide_low;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tide_mediumInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_mediumInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tide_mediumInitializer();
  }
}

function get_139(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_mediumInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tide_medium;
}

function $clinit_Icons_default_StaticClientBundleGenerator$tide_unknownInitializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_unknownInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).tide_unknownInitializer();
  }
}

function get_140(){
  $clinit_Icons_default_StaticClientBundleGenerator$tide_unknownInitializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , tide_unknown;
}

function $clinit_Icons_default_StaticClientBundleGenerator$time32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$time32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).time32Initializer();
  }
}

function get_141(){
  $clinit_Icons_default_StaticClientBundleGenerator$time32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , time32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$webLinks32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$webLinks32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).webLinks32Initializer();
  }
}

function get_142(){
  $clinit_Icons_default_StaticClientBundleGenerator$webLinks32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , webLinks32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$white_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$white_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).white_icon16Initializer();
  }
}

function get_143(){
  $clinit_Icons_default_StaticClientBundleGenerator$white_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , white_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$winner32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$winner32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).winner32Initializer();
  }
}

function get_144(){
  $clinit_Icons_default_StaticClientBundleGenerator$winner32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , winner32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$yellow_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$yellow_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).yellow_icon16Initializer();
  }
}

function get_145(){
  $clinit_Icons_default_StaticClientBundleGenerator$yellow_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , yellow_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$zebra_icon16Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$zebra_icon16Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).zebra_icon16Initializer();
  }
}

function get_146(){
  $clinit_Icons_default_StaticClientBundleGenerator$zebra_icon16Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , zebra_icon16;
}

function $clinit_Icons_default_StaticClientBundleGenerator$zoomIn32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$zoomIn32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).zoomIn32Initializer();
  }
}

function get_147(){
  $clinit_Icons_default_StaticClientBundleGenerator$zoomIn32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , zoomIn32;
}

function $clinit_Icons_default_StaticClientBundleGenerator$zoomOut32Initializer(){
  $clinit_Icons_default_StaticClientBundleGenerator$zoomOut32Initializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Icons_default_StaticClientBundleGenerator() , _instance0).zoomOut32Initializer();
  }
}

function get_148(){
  $clinit_Icons_default_StaticClientBundleGenerator$zoomOut32Initializer();
  return $clinit_Icons_default_StaticClientBundleGenerator() , zoomOut32;
}

function $clinit_MessagesAppBoard(){
  $clinit_MessagesAppBoard = emptyMethod;
}

var Lcom_fullmetalgalaxy_client_ressources_MessagesAppBoard_2_classLit = createForInterface('com.fullmetalgalaxy.client.ressources', 'MessagesAppBoard');
function $clinit_MessagesAppBoard_(){
  $clinit_MessagesAppBoard_ = emptyMethod;
  $clinit_Object();
}

function MessagesAppBoard_(){
  $clinit_MessagesAppBoard_();
  Object_0.call(this);
  this.$init_164();
}

defineClass(581, 1, {1052:1, 1:1}, MessagesAppBoard_);
_.$init_164 = function $init_164(){
}
;
_.SelectFreighterToTakeOff = function SelectFreighterToTakeOff(){
  return 'Select the freighter you want take-off';
}
;
_.activateTrainningMode = function activateTrainningMode(){
  return "Practice mode enabled\nNone of your action will be taken in account by server\nWarning: if you reload web page, you'll leave this mode";
}
;
_.bullet = function bullet(){
  return 'Bullet';
}
;
_.cancel_0 = function cancel_2(){
  return 'Cancel';
}
;
_.cancelAction = function cancelAction(){
  return 'Cancel action [ESC]';
}
;
_.chooseColor = function chooseColor(){
  return 'Choose your color';
}
;
_.chooseCompany = function chooseCompany(){
  return 'Choose your company';
}
;
_.commonConstructReserve = function commonConstructReserve(){
  return 'Common construction reserve';
}
;
_.confirmCancelGame = function confirmCancelGame(){
  return 'Are you sure to cancel this game ?';
}
;
_.confirmEndTurn = function confirmEndTurn(arg0){
  return 'You still have ' + arg0 + ' actions points. Confirm end turn ?';
}
;
_.confirmEndTurnRoundedPA = function confirmEndTurnRoundedPA(arg0, arg1){
  return 'Your ' + arg0 + ' actions points will be rounded to ' + arg1 + ' AP. Confirm end turn ?';
}
;
_.confirmTakeOff = function confirmTakeOff(arg0){
  return 'Confirm ' + arg0 + ' take-off ?              ';
}
;
_.construct = function construct(){
  return 'Can construct';
}
;
_.contain_0 = function contain_0(){
  return 'Contain';
}
;
_.control = function control(){
  return 'Control';
}
;
_.costInPA = function costInPA(){
  return 'Cost in action point';
}
;
_.currentTide = function currentTide(){
  return 'Current tide: ';
}
;
_.deployment = function deployment(arg0){
  return arg0 + ' deployment <br/>Click on it to turn it';
}
;
_.displayFireCover_1 = function displayFireCover_1(){
  return 'Display fire covers [F]';
}
;
_.displayGrid = function displayGrid(){
  return 'Display grid [G]';
}
;
_.endTurn = function endTurn(){
  return 'End turn';
}
;
_.fire_0 = function fire_0(){
  return 'Fire';
}
;
_.gameCreation = function gameCreation(arg0){
  return 'Game created at ' + arg0;
}
;
_.gameFinishAt = function gameFinishAt(arg0){
  return 'Game finish at ' + arg0;
}
;
_.hideFireCover = function hideFireCover(){
  return 'Hide fire covers [F]';
}
;
_.hideGrid = function hideGrid(){
  return 'Hide grid [G]';
}
;
_.inOrbit = function inOrbit(){
  return 'Ships in orbit';
}
;
_.initialHold = function initialHold_0(){
  return 'Initial hold';
}
;
_.joinGame = function joinGame(){
  return 'Subscribe to this game';
}
;
_.joinThisGame = function joinThisGame(){
  return 'This game seek players. Subscribe to it !';
}
;
_.joinTitle = function joinTitle(){
  return 'Subscription...';
}
;
_.joinWarning = function joinWarning(){
  return "Don't forget you are playing with real player.<br/>If you join this game you shall do you posible to end it.<br/>Thank you.<br/>";
}
;
_.landing = function landing(){
  return 'Landing freighter <br/>Click on it to turn it ';
}
;
_.mustDeployUnits = function mustDeployUnits(){
  return 'You can deploy your units.';
}
;
_.mustEndYourTurn = function mustEndYourTurn(){
  return 'You must end your turn now !';
}
;
_.mustLandFreighter = function mustLandFreighter(){
  return 'You must land your freighter on board.';
}
;
_.nextActionPt = function nextActionPt(arg0, arg1){
  return 'Next ' + arg0 + ' pts at ' + arg1;
}
;
_.nextPA = function nextPA(arg0, arg1){
  return '+' + arg0 + 'AP in ' + arg1;
}
;
_.nextTide = function nextTide_0(){
  return 'Next tide:';
}
;
_.noForecast = function noForecast(){
  return 'No forecast';
}
;
_.noMessages = function noMessages(){
  return 'No players messages';
}
;
_.ok = function ok(){
  return 'Ok';
}
;
_.pasword = function pasword(){
  return 'Password:';
}
;
_.pauseGameAllowNewPlayer = function pauseGameAllowNewPlayer(){
  return 'To allow new subscription you must pause this game.';
}
;
_.pleaseCheckGamePasword = function pleaseCheckGamePasword(){
  return 'Please check game password';
}
;
_.remainingActionPoint = function remainingActionPoint_0(){
  return 'Remaining action point';
}
;
_.repairTurret = function repairTurret(){
  return 'Repair turret';
}
;
_.reportAnIssueToAdmin = function reportAnIssueToAdmin(){
  return "Report an issue to <a href='mailto:admin@fullmetalgalaxy.com'>admin@fullmetalgalaxy.com<\/a>";
}
;
_.selectDestroyerTarget = function selectDestroyerTarget(){
  return 'Select a second destroyer, then your target';
}
;
_.selectTwoDestroyers = function selectTwoDestroyers(){
  return 'Select two destroyer than can shoot target';
}
;
_.strategyZoom = function strategyZoom(){
  return 'Strategy zoom [-]';
}
;
_.tacticalZoom = function tacticalZoom(){
  return 'Tactic zoom [+]';
}
;
_.takeOff = function takeOff(){
  return 'Take off';
}
;
_.teleport = function teleport(){
  return 'Teleport';
}
;
_.tide = function tide(){
  return 'Tide';
}
;
_.trainningMode = function trainningMode(){
  return 'Practice mode';
}
;
_.turn = function turn(){
  return 'turn :';
}
;
_.unconnected = function unconnected(){
  return 'degraded connexion';
}
;
_.unitsTitle = function unitsTitle(){
  return 'All units';
}
;
_.unknownError = function unknownError(){
  return 'Unknown error or server is unreachable.';
}
;
_.unknownGame = function unknownGame(){
  return 'Unknown game...\nPlease check URL, game may have been deleted.';
}
;
_.validAction = function validAction(){
  return 'Confirm action';
}
;
_.variantTitle = function variantTitle(){
  return 'Variants';
}
;
_.waitGameStarting = function waitGameStarting(){
  return 'You have to wait game starting.';
}
;
_.warningTeamAllowed = function warningTeamAllowed(){
  return 'Warning: team are allowed.';
}
;
_.wrongGameVersion = function wrongGameVersion(){
  return 'A server update occurred:\n Web page will be reloaded.';
}
;
_.xPlayers = function xPlayers(arg0){
  return arg0 + ' Player(s)';
}
;
_.xTeams = function xTeams(arg0){
  return arg0 + ' teams';
}
;
_.yourTurnToPlay = function yourTurnToPlay(){
  return 'Your turn to play';
}
;
var Lcom_fullmetalgalaxy_client_ressources_MessagesAppBoard_1_2_classLit = createForClass('com.fullmetalgalaxy.client.ressources', 'MessagesAppBoard_', 581, Ljava_lang_Object_2_classLit);
function $clinit_Smiley(){
  $clinit_Smiley = emptyMethod;
  INSTANCE = castTo(new Smiley_default_StaticClientBundleGenerator, 4437);
}

var INSTANCE;
var Lcom_fullmetalgalaxy_client_ressources_smiley_Smiley_2_classLit = createForInterface('com.fullmetalgalaxy.client.ressources.smiley', 'Smiley');
function $clinit_Map(){
  $clinit_Map = emptyMethod;
}

var Ljava_util_Map_2_classLit = createForInterface('java.util', 'Map');
function $clinit_AbstractMap(){
  $clinit_AbstractMap = emptyMethod;
  $clinit_Object();
  $clinit_Map();
}

function AbstractMap(){
  $clinit_AbstractMap();
  Object_0.call(this);
  this.$init_165();
}

function getEntryValueOrNull(entry){
  $clinit_AbstractMap();
  return isNull(entry)?null:entry.getValue_0();
}

defineClass(231, 1, {1:1, 82:1});
_.$init_165 = function $init_165(){
}
;
_.clear_0 = function clear_6(){
  this.entrySet().clear_0();
}
;
_.containsEntry = function containsEntry(entry){
  var key, ourValue, value_0;
  key = entry.getKey();
  value_0 = entry.getValue_0();
  ourValue = this.get_1(key);
  if (!equals_40(value_0, ourValue)) {
    return false;
  }
  if (jsEquals(ourValue, null) && !this.containsKey(key)) {
    return false;
  }
  return true;
}
;
_.containsKey = function containsKey(key){
  return isNotNull(this.implFindEntry(key, false));
}
;
_.containsValue = function containsValue(value_0){
  var entry, entry$iterator, v;
  for (entry$iterator = this.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    v = entry.getValue_0();
    if (equals_40(value_0, v)) {
      return true;
    }
  }
  return false;
}
;
_.equals_0 = function equals_1(obj){
  var entry, entry$iterator, otherMap;
  if (maskUndefined(obj) === maskUndefined(this)) {
    return true;
  }
  if (!instanceOf(obj, 82)) {
    return false;
  }
  otherMap = castTo(obj, 82);
  if (this.size_1() != otherMap.size_1()) {
    return false;
  }
  for (entry$iterator = otherMap.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    if (!this.containsEntry(entry)) {
      return false;
    }
  }
  return true;
}
;
_.get_1 = function get_149(key){
  return getEntryValueOrNull(this.implFindEntry(key, false));
}
;
_.hashCode_1 = function hashCode_2(){
  return hashCode_41(this.entrySet());
}
;
_.implFindEntry = function implFindEntry(key, remove){
  var entry, iter, k;
  for (iter = this.entrySet().iterator_0(); iter.hasNext_0();) {
    entry = castTo(iter.next_1(), 39);
    k = entry.getKey();
    if (equals_40(key, k)) {
      if (remove) {
        entry = new AbstractMap$SimpleEntry(entry.getKey(), entry.getValue_0());
        iter.remove_3();
      }
      return entry;
    }
  }
  return null;
}
;
_.isEmpty = function isEmpty_2(){
  return this.size_1() == 0;
}
;
_.keySet_0 = function keySet(){
  return new AbstractMap$1(this);
}
;
_.put = function put(key, value_0){
  throw toJs(new UnsupportedOperationException_0('Put not supported on this map'));
}
;
_.remove_4 = function remove_9(key){
  return getEntryValueOrNull(this.implFindEntry(key, true));
}
;
_.size_1 = function size_2(){
  return this.entrySet().size_1();
}
;
_.toString_0 = function toString_7(){
  var entry, entry$iterator, joiner;
  joiner = new StringJoiner(', ', '{', '}');
  for (entry$iterator = this.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    joiner.add_14(this.toString_2(entry));
  }
  return joiner.toString_0();
}
;
_.toString_1 = function toString_8(o){
  return maskUndefined(o) === maskUndefined(this)?'(this Map)':valueOf_47(o);
}
;
_.toString_2 = function toString_9(entry){
  return this.toString_1(entry.getKey()) + '=' + this.toString_1(entry.getValue_0());
}
;
_.values_0 = function values_0(){
  return new AbstractMap$2(this);
}
;
var Ljava_util_AbstractMap_2_classLit = createForClass('java.util', 'AbstractMap', 231, Ljava_lang_Object_2_classLit);
function $clinit_AbstractHashMap(){
  $clinit_AbstractHashMap = emptyMethod;
  $clinit_AbstractMap();
}

function AbstractHashMap(){
  $clinit_AbstractHashMap();
  AbstractMap.call(this);
  this.$init_166();
  this.reset_0();
}

function AbstractHashMap_0(ignored){
  $clinit_AbstractHashMap();
  AbstractHashMap_1.call(this, ignored, 0);
}

function AbstractHashMap_1(ignored, alsoIgnored){
  $clinit_AbstractHashMap();
  AbstractMap.call(this);
  this.$init_166();
  checkArgument(ignored >= 0, 'Negative initial capacity');
  checkArgument(alsoIgnored >= 0, 'Non-positive load factor');
  this.reset_0();
}

defineClass(232, 231, {1:1, 82:1});
_.$init_166 = function $init_166(){
}
;
_.clear_0 = function clear_7(){
  this.reset_0();
}
;
_.containsKey = function containsKey_0(key){
  return instanceOfString(key)?this.hasStringValue(uncheckedCast(key)):this.hasHashValue(key);
}
;
_.containsValue = function containsValue_0(value_0){
  return this.containsValue_0(value_0, this.stringMap) || this.containsValue_0(value_0, this.hashCodeMap);
}
;
_.containsValue_0 = function containsValue_1(value_0, entries){
  var entry, entry$iterator;
  for (entry$iterator = entries.iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    if (this.equals_1(value_0, entry.getValue_0())) {
      return true;
    }
  }
  return false;
}
;
_.entrySet = function entrySet_0(){
  return new AbstractHashMap$EntrySet(this);
}
;
_.get_1 = function get_150(key){
  return instanceOfString(key)?this.getStringValue(uncheckedCast(key)):this.getHashValue(key);
}
;
_.getHashValue = function getHashValue(key){
  return getEntryValueOrNull(this.hashCodeMap.getEntry_0(key));
}
;
_.getStringValue = function getStringValue(key){
  return jsEquals(key, null)?this.getHashValue(null):this.stringMap.get_5(key);
}
;
_.hasHashValue = function hasHashValue(key){
  return isNotNull(this.hashCodeMap.getEntry_0(key));
}
;
_.hasStringValue = function hasStringValue(key){
  return jsEquals(key, null)?this.hasHashValue(null):this.stringMap.contains_1(key);
}
;
_.put = function put_0(key, value_0){
  return instanceOfString(key)?this.putStringValue(uncheckedCast(key), value_0):this.putHashValue(key, value_0);
}
;
_.putHashValue = function putHashValue(key, value_0){
  return this.hashCodeMap.put(key, value_0);
}
;
_.putStringValue = function putStringValue(key, value_0){
  return jsEquals(key, null)?this.putHashValue(null, value_0):this.stringMap.put_2(key, value_0);
}
;
_.remove_4 = function remove_10(key){
  return instanceOfString(key)?this.removeStringValue(uncheckedCast(key)):this.removeHashValue(key);
}
;
_.removeHashValue = function removeHashValue(key){
  return this.hashCodeMap.remove_4(key);
}
;
_.removeStringValue = function removeStringValue(key){
  return jsEquals(key, null)?this.removeHashValue(null):this.stringMap.remove_10(key);
}
;
_.reset_0 = function reset_0(){
  this.hashCodeMap = new InternalHashCodeMap(this);
  this.stringMap = new InternalStringMap(this);
  structureChanged(this);
}
;
_.size_1 = function size_3(){
  return this.hashCodeMap.size_1() + this.stringMap.size_1();
}
;
var Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util', 'AbstractHashMap', 232, Ljava_util_AbstractMap_2_classLit);
function $clinit_HashMap(){
  $clinit_HashMap = emptyMethod;
  $clinit_AbstractHashMap();
}

function HashMap(){
  $clinit_HashMap();
  AbstractHashMap.call(this);
  this.$init_167();
}

function HashMap_0(ignored){
  $clinit_HashMap();
  AbstractHashMap_0.call(this, ignored);
  this.$init_167();
}

function HashMap_1(ignored, alsoIgnored){
  $clinit_HashMap();
  AbstractHashMap_1.call(this, ignored, alsoIgnored);
  this.$init_167();
}

defineClass(35, 232, {4:1, 1:1, 82:1}, HashMap, HashMap_0);
_.$init_167 = function $init_167(){
}
;
_.equals_1 = function equals_2(value1, value2){
  return equals_40(value1, value2);
}
;
_.getHashCode = function getHashCode(key){
  var hashCode;
  hashCode = hashCode__I__devirtual$(key);
  return ensureInt(hashCode);
}
;
var Ljava_util_HashMap_2_classLit = createForClass('java.util', 'HashMap', 35, Ljava_util_AbstractHashMap_2_classLit);
function $clinit_SmileyCollection(){
  $clinit_SmileyCollection = emptyMethod;
  $clinit_HashMap();
  INSTANCE_0 = new SmileyCollection;
}

function SmileyCollection(){
  HashMap.call(this);
  this.$init_168();
  this.put(' :/', create_7(($clinit_Smiley() , INSTANCE).skeptical()));
  this.put(':-/', create_7(($clinit_Smiley() , INSTANCE).skeptical()));
  this.put("/'\\", create_7(($clinit_Smiley() , INSTANCE).bell()));
  this.put('/&#39;\\', create_7(($clinit_Smiley() , INSTANCE).bell()));
  this.put('B-)', create_7(($clinit_Smiley() , INSTANCE).cool()));
  this.put('B)', create_7(($clinit_Smiley() , INSTANCE).cool()));
  this.put(":'(", create_7(($clinit_Smiley() , INSTANCE).cry()));
  this.put('}:-)', create_7(($clinit_Smiley() , INSTANCE).devil()));
  this.put('}:)', create_7(($clinit_Smiley() , INSTANCE).devil()));
  this.put('x-(', create_7(($clinit_Smiley() , INSTANCE).grimace()));
  this.put('<3', create_7(($clinit_Smiley() , INSTANCE).heart()));
  this.put('&lt;3', create_7(($clinit_Smiley() , INSTANCE).heart()));
  this.put(':-|', create_7(($clinit_Smiley() , INSTANCE).indifferent()));
  this.put(':|', create_7(($clinit_Smiley() , INSTANCE).indifferent()));
  this.put(':-D', create_7(($clinit_Smiley() , INSTANCE).lol()));
  this.put(':D', create_7(($clinit_Smiley() , INSTANCE).lol()));
  this.put(':-o', create_7(($clinit_Smiley() , INSTANCE).no()));
  this.put('~@~', create_7(($clinit_Smiley() , INSTANCE).poo()));
  this.put('[:-|]', create_7(($clinit_Smiley() , INSTANCE).robot()));
  this.put('[:|]', create_7(($clinit_Smiley() , INSTANCE).robot()));
  this.put('\\m/', create_7(($clinit_Smiley() , INSTANCE).rock()));
  this.put(':-(', create_7(($clinit_Smiley() , INSTANCE).sad()));
  this.put(':(', create_7(($clinit_Smiley() , INSTANCE).sad()));
  this.put(':-)', create_7(($clinit_Smiley() , INSTANCE).smile()));
  this.put(':)', create_7(($clinit_Smiley() , INSTANCE).smile()));
  this.put(':-p', create_7(($clinit_Smiley() , INSTANCE).tongue()));
  this.put(':p', create_7(($clinit_Smiley() , INSTANCE).tongue()));
  this.put(':P', create_7(($clinit_Smiley() , INSTANCE).tongue()));
  this.put(';-)', create_7(($clinit_Smiley() , INSTANCE).wink()));
  this.put(';)', create_7(($clinit_Smiley() , INSTANCE).wink()));
}

defineClass(847, 35, {4:1, 1:1, 82:1}, SmileyCollection);
_.$init_168 = function $init_168(){
}
;
_.replace_0 = function replace_0(in_0){
  var entry, entry$iterator, out;
  out = replace_Ljava_lang_CharSequence_Ljava_lang_CharSequence__Ljava_lang_String___devirtual$(in_0, ' :/', '  :/');
  for (entry$iterator = this.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    out = replace_Ljava_lang_CharSequence_Ljava_lang_CharSequence__Ljava_lang_String___devirtual$(out, castTo(entry.getKey(), 221), castTo(entry.getValue_0(), 283).getHTML());
  }
  return out;
}
;
var INSTANCE_0;
var Lcom_fullmetalgalaxy_client_ressources_smiley_SmileyCollection_2_classLit = createForClass('com.fullmetalgalaxy.client.ressources.smiley', 'SmileyCollection', 847, Ljava_util_HashMap_2_classLit);
function $clinit_Smiley_default_StaticClientBundleGenerator(){
  $clinit_Smiley_default_StaticClientBundleGenerator = emptyMethod;
  $clinit_Object();
  _instance0_0 = new Smiley_default_StaticClientBundleGenerator;
  bundledImage_None_0 = getModuleBaseForStaticFiles() + 'EC7C6EEC8A3DE52461F2A0C9CAAEB30C.cache.png';
}

function Smiley_default_StaticClientBundleGenerator(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  Object_0.call(this);
  this.$init_169();
}

defineClass(425, 1, {4437:1, 1:1}, Smiley_default_StaticClientBundleGenerator);
_.$init_169 = function $init_169(){
}
;
_.bell = function bell_0(){
  return get_151();
}
;
_.bellInitializer = function bellInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  bell = new ImageResourcePrototype$Bundle('bell', fromTrustedString_0(bundledImage_None_0), 224, 0, 16, 16, false, false);
}
;
_.cool = function cool_0(){
  return get_152();
}
;
_.coolInitializer = function coolInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  cool = new ImageResourcePrototype$Bundle('cool', fromTrustedString_0(bundledImage_None_0), 208, 0, 16, 16, false, false);
}
;
_.cry = function cry_0(){
  return get_153();
}
;
_.cryInitializer = function cryInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  cry = new ImageResourcePrototype$Bundle('cry', fromTrustedString_0(bundledImage_None_0), 192, 0, 16, 16, false, false);
}
;
_.devil = function devil_0(){
  return get_154();
}
;
_.devilInitializer = function devilInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  devil = new ImageResourcePrototype$Bundle('devil', fromTrustedString_0(bundledImage_None_0), 176, 0, 16, 16, false, false);
}
;
_.grimace = function grimace_0(){
  return get_155();
}
;
_.grimaceInitializer = function grimaceInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  grimace = new ImageResourcePrototype$Bundle('grimace', fromTrustedString_0(bundledImage_None_0), 160, 0, 16, 16, false, false);
}
;
_.heart = function heart_0(){
  return get_156();
}
;
_.heartInitializer = function heartInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  heart = new ImageResourcePrototype$Bundle('heart', fromTrustedString_0(bundledImage_None_0), 144, 0, 16, 16, false, false);
}
;
_.indifferent = function indifferent_0(){
  return get_157();
}
;
_.indifferentInitializer = function indifferentInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  indifferent = new ImageResourcePrototype$Bundle('indifferent', fromTrustedString_0(bundledImage_None_0), 128, 0, 16, 16, false, false);
}
;
_.lol = function lol_0(){
  return get_158();
}
;
_.lolInitializer = function lolInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  lol = new ImageResourcePrototype$Bundle('lol', fromTrustedString_0(bundledImage_None_0), 112, 0, 16, 16, false, false);
}
;
_.no = function no_0(){
  return get_159();
}
;
_.noInitializer = function noInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  no = new ImageResourcePrototype$Bundle('no', fromTrustedString_0(bundledImage_None_0), 96, 0, 16, 16, false, false);
}
;
_.poo = function poo_0(){
  return get_160();
}
;
_.pooInitializer = function pooInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  poo = new ImageResourcePrototype$Bundle('poo', fromTrustedString_0(bundledImage_None_0), 80, 0, 16, 16, false, false);
}
;
_.robot = function robot_0(){
  return get_161();
}
;
_.robotInitializer = function robotInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  robot = new ImageResourcePrototype$Bundle('robot', fromTrustedString_0(bundledImage_None_0), 128, 0, 16, 16, false, false);
}
;
_.rock = function rock_0(){
  return get_162();
}
;
_.rockInitializer = function rockInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  rock = new ImageResourcePrototype$Bundle('rock', fromTrustedString_0(bundledImage_None_0), 64, 0, 16, 16, false, false);
}
;
_.sad = function sad_0(){
  return get_163();
}
;
_.sadInitializer = function sadInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  sad = new ImageResourcePrototype$Bundle('sad', fromTrustedString_0(bundledImage_None_0), 192, 0, 16, 16, false, false);
}
;
_.skeptical = function skeptical_0(){
  return get_164();
}
;
_.skepticalInitializer = function skepticalInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  skeptical = new ImageResourcePrototype$Bundle('skeptical', fromTrustedString_0(bundledImage_None_0), 48, 0, 16, 16, false, false);
}
;
_.smile = function smile_0(){
  return get_165();
}
;
_.smileInitializer = function smileInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  smile = new ImageResourcePrototype$Bundle('smile', fromTrustedString_0(bundledImage_None_0), 32, 0, 16, 16, false, false);
}
;
_.tongue = function tongue_0(){
  return get_166();
}
;
_.tongueInitializer = function tongueInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  tongue = new ImageResourcePrototype$Bundle('tongue', fromTrustedString_0(bundledImage_None_0), 16, 0, 16, 16, false, false);
}
;
_.wink = function wink_0(){
  return get_167();
}
;
_.winkInitializer = function winkInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator();
  wink = new ImageResourcePrototype$Bundle('wink', fromTrustedString_0(bundledImage_None_0), 0, 0, 16, 16, false, false);
}
;
var _instance0_0, bell, bundledImage_None_0, cool, cry, devil, grimace, heart, indifferent, lol, no, poo, robot, rock, sad, skeptical, smile, tongue, wink;
var Lcom_fullmetalgalaxy_client_ressources_smiley_Smiley_1default_1StaticClientBundleGenerator_2_classLit = createForClass('com.fullmetalgalaxy.client.ressources.smiley', 'Smiley_default_StaticClientBundleGenerator', 425, Ljava_lang_Object_2_classLit);
function $clinit_Smiley_default_StaticClientBundleGenerator$bellInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$bellInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).bellInitializer();
  }
}

function get_151(){
  $clinit_Smiley_default_StaticClientBundleGenerator$bellInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , bell;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$coolInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$coolInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).coolInitializer();
  }
}

function get_152(){
  $clinit_Smiley_default_StaticClientBundleGenerator$coolInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , cool;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$cryInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$cryInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).cryInitializer();
  }
}

function get_153(){
  $clinit_Smiley_default_StaticClientBundleGenerator$cryInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , cry;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$devilInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$devilInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).devilInitializer();
  }
}

function get_154(){
  $clinit_Smiley_default_StaticClientBundleGenerator$devilInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , devil;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$grimaceInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$grimaceInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).grimaceInitializer();
  }
}

function get_155(){
  $clinit_Smiley_default_StaticClientBundleGenerator$grimaceInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , grimace;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$heartInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$heartInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).heartInitializer();
  }
}

function get_156(){
  $clinit_Smiley_default_StaticClientBundleGenerator$heartInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , heart;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$indifferentInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$indifferentInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).indifferentInitializer();
  }
}

function get_157(){
  $clinit_Smiley_default_StaticClientBundleGenerator$indifferentInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , indifferent;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$lolInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$lolInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).lolInitializer();
  }
}

function get_158(){
  $clinit_Smiley_default_StaticClientBundleGenerator$lolInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , lol;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$noInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$noInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).noInitializer();
  }
}

function get_159(){
  $clinit_Smiley_default_StaticClientBundleGenerator$noInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , no;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$pooInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$pooInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).pooInitializer();
  }
}

function get_160(){
  $clinit_Smiley_default_StaticClientBundleGenerator$pooInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , poo;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$robotInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$robotInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).robotInitializer();
  }
}

function get_161(){
  $clinit_Smiley_default_StaticClientBundleGenerator$robotInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , robot;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$rockInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$rockInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).rockInitializer();
  }
}

function get_162(){
  $clinit_Smiley_default_StaticClientBundleGenerator$rockInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , rock;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$sadInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$sadInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).sadInitializer();
  }
}

function get_163(){
  $clinit_Smiley_default_StaticClientBundleGenerator$sadInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , sad;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$skepticalInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$skepticalInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).skepticalInitializer();
  }
}

function get_164(){
  $clinit_Smiley_default_StaticClientBundleGenerator$skepticalInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , skeptical;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$smileInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$smileInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).smileInitializer();
  }
}

function get_165(){
  $clinit_Smiley_default_StaticClientBundleGenerator$smileInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , smile;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$tongueInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$tongueInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).tongueInitializer();
  }
}

function get_166(){
  $clinit_Smiley_default_StaticClientBundleGenerator$tongueInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , tongue;
}

function $clinit_Smiley_default_StaticClientBundleGenerator$winkInitializer(){
  $clinit_Smiley_default_StaticClientBundleGenerator$winkInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Smiley_default_StaticClientBundleGenerator() , _instance0_0).winkInitializer();
  }
}

function get_167(){
  $clinit_Smiley_default_StaticClientBundleGenerator$winkInitializer();
  return $clinit_Smiley_default_StaticClientBundleGenerator() , wink;
}

function $clinit_TokenImages(){
  $clinit_TokenImages = emptyMethod;
  $clinit_Object();
  s_bundle = new HashMap;
  s_bundleFreighter = new HashMap;
  s_bundleExtra = new HashMap;
}

function getColorlessTokenImageStrategy(p_token, p_sector){
  switch (p_token.ordinal_0()) {
    case ($clinit_TokenType() , Pontoon).ordinal_0():
      switch (p_sector.ordinal_0()) {
        default:case ($clinit_Sector() , North).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_pontoon_n();
        case ($clinit_Sector() , NorthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_pontoon_ne();
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_pontoon_nw();
        case ($clinit_Sector() , South).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_pontoon_s();
        case ($clinit_Sector() , SouthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_pontoon_se();
        case ($clinit_Sector() , SouthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_pontoon_sw();
      }

    case ($clinit_TokenType() , Sluice).ordinal_0():
      switch (p_sector.ordinal_0()) {
        default:case ($clinit_Sector() , North).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_sluice_n();
        case ($clinit_Sector() , NorthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_sluice_ne();
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_sluice_nw();
        case ($clinit_Sector() , South).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_sluice_s();
        case ($clinit_Sector() , SouthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_sluice_se();
        case ($clinit_Sector() , SouthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_sluice_sw();
      }

    case ($clinit_TokenType() , Ore0).ordinal_0():
      return ($clinit_Icons() , s_instance_5).strategy_ore0_01();
    case ($clinit_TokenType() , Ore).ordinal_0():
      switch (p_sector.ordinal_0()) {
        default:case ($clinit_Sector() , South).ordinal_0():
        case ($clinit_Sector() , North).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_ore_01();
        case ($clinit_Sector() , SouthEast).ordinal_0():
        case ($clinit_Sector() , NorthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_ore_02();
        case ($clinit_Sector() , SouthWest).ordinal_0():
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_ore_03();
      }

    case ($clinit_TokenType() , Ore3).ordinal_0():
      switch (p_sector.ordinal_0()) {
        default:case ($clinit_Sector() , South).ordinal_0():
        case ($clinit_Sector() , North).ordinal_0():
        case ($clinit_Sector() , SouthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_ore3_01();
        case ($clinit_Sector() , SouthEast).ordinal_0():
        case ($clinit_Sector() , NorthEast).ordinal_0():
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).strategy_ore3_02();
      }

    case ($clinit_TokenType() , Ore5).ordinal_0():
      return ($clinit_Icons() , s_instance_5).strategy_ore5_01();
    case ($clinit_TokenType() , Ore2Generator).ordinal_0():
      return ($clinit_Icons() , s_instance_5).strategy_ore2generator();
    case ($clinit_TokenType() , Ore3Generator).ordinal_0():
      return ($clinit_Icons() , s_instance_5).strategy_ore3generator();
    case ($clinit_TokenType() , Warp).ordinal_0():
      return ($clinit_Icons() , s_instance_5).strategy_warp();
    default:return getTokenImageStrategy(0, p_token, p_sector);
  }
}

function getColorlessTokenImageTactic(p_token, p_sector){
  switch (p_token.ordinal_0()) {
    case ($clinit_TokenType() , Pontoon).ordinal_0():
      switch (p_sector.ordinal_0()) {
        case ($clinit_Sector() , North).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_pontoon_n();
        case ($clinit_Sector() , NorthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_pontoon_ne();
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_pontoon_nw();
        case ($clinit_Sector() , South).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_pontoon_s();
        case ($clinit_Sector() , SouthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_pontoon_se();
        case ($clinit_Sector() , SouthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_pontoon_sw();
        default:}

    case ($clinit_TokenType() , Sluice).ordinal_0():
      switch (p_sector.ordinal_0()) {
        default:case ($clinit_Sector() , North).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_sluice_n();
        case ($clinit_Sector() , NorthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_sluice_ne();
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_sluice_nw();
        case ($clinit_Sector() , South).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_sluice_s();
        case ($clinit_Sector() , SouthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_sluice_se();
        case ($clinit_Sector() , SouthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_sluice_sw();
      }

    case ($clinit_TokenType() , Ore0).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tactic_ore0_01();
    case ($clinit_TokenType() , Ore).ordinal_0():
      switch (p_sector.ordinal_0()) {
        default:case ($clinit_Sector() , South).ordinal_0():
        case ($clinit_Sector() , North).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_ore_01();
        case ($clinit_Sector() , SouthEast).ordinal_0():
        case ($clinit_Sector() , NorthEast).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_ore_02();
        case ($clinit_Sector() , SouthWest).ordinal_0():
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_ore_03();
      }

    case ($clinit_TokenType() , Ore3).ordinal_0():
      switch (p_sector.ordinal_0()) {
        default:case ($clinit_Sector() , South).ordinal_0():
        case ($clinit_Sector() , North).ordinal_0():
        case ($clinit_Sector() , SouthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_ore3_01();
        case ($clinit_Sector() , SouthEast).ordinal_0():
        case ($clinit_Sector() , NorthEast).ordinal_0():
        case ($clinit_Sector() , NorthWest).ordinal_0():
          return ($clinit_Icons() , s_instance_5).tactic_ore3_02();
      }

    case ($clinit_TokenType() , Ore5).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tactic_ore5_01();
    case ($clinit_TokenType() , Ore2Generator).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tactic_ore2generator();
    case ($clinit_TokenType() , Ore3Generator).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tactic_ore3generator();
    case ($clinit_TokenType() , Warp).ordinal_0():
      return ($clinit_Icons() , s_instance_5).tactic_warp();
    default:return getTokenImageTactic(0, p_token, p_sector);
  }
}

function getTokenImage_0(p_color, p_zoom, p_token, p_sector){
  $clinit_TokenImages();
  if (p_token.canBeColored()) {
    if (!isBundleLoaded()) {
      return ($clinit_Icons() , s_instance_5).cancel32();
    }
    switch (p_zoom) {
      default:case 1:
        return getTokenImageTactic(p_color.getValue_1(), p_token, p_sector);
      case 0:
        return getTokenImageStrategy(p_color.getValue_1(), p_token, p_sector);
    }
  }
   else if (p_color.getValue_1() == 0) {
    switch (p_zoom) {
      default:case 1:
        return getColorlessTokenImageTactic(p_token, p_sector);
      case 0:
        return getColorlessTokenImageStrategy(p_token, p_sector);
    }
  }
  return ($clinit_Icons() , s_instance_5).cancel32();
}

function getTokenImage_1(p_token, p_zoom){
  $clinit_TokenImages();
  if (jsEquals(p_token.getLocation(), ($clinit_Location() , Graveyard))) {
    switch (p_zoom) {
      default:case 1:
        return ($clinit_Icons() , s_instance_5).tactic_wreck();
      case 0:
        return ($clinit_Icons() , s_instance_5).strategy_wreck();
    }
  }
  return getTokenImage_0(p_token.getEnuColor(), p_zoom, p_token.getType(), p_token.getPosition().getSector());
}

function getTokenImageStrategy(p_color, p_token, p_sector){
  switch (p_token.ordinal_0()) {
    case ($clinit_TokenType() , Barge).ordinal_0():
      return getTokenImageStrategyBarge(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Crab).ordinal_0():
      return getTokenImageStrategyCrab(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Freighter).ordinal_0():
      return getTokenImageStrategyFreighter(castTo(s_bundleFreighter.get_1(valueOf_37(p_color)), 103), p_sector);
    case ($clinit_TokenType() , Heap).ordinal_0():
      return getTokenImageStrategyHeap(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Speedboat).ordinal_0():
      return getTokenImageStrategySpeedBoat(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Tank).ordinal_0():
      return getTokenImageStrategyTank(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    default:case ($clinit_TokenType() , Turret).ordinal_0():
      return getTokenImageStrategyTurret(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , WeatherHen).ordinal_0():
      return getTokenImageStrategyWeatherHen(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Crayfish).ordinal_0():
      return getTokenImageStrategyCrayfish(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Hovertank).ordinal_0():
      return getTokenImageStrategyHovertank(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Tarask).ordinal_0():
      return getTokenImageStrategyTarask(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Destroyer).ordinal_0():
      return getTokenImageStrategyDestroyer(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Teleporter).ordinal_0():
      return castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80).strategy_teleporter();
  }
}

function getTokenImageStrategyBarge(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_barge_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_barge_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_barge_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_barge_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_barge_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_barge_sw();
  }
}

function getTokenImageStrategyCrab(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_crab_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_crab_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_crab_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_crab_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_crab_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_crab_sw();
  }
}

function getTokenImageStrategyCrayfish(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_crayfish_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_crayfish_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_crayfish_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_crayfish_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_crayfish_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_crayfish_sw();
  }
}

function getTokenImageStrategyDestroyer(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_destroyer_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_destroyer_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_destroyer_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_destroyer_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_destroyer_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_destroyer_sw();
  }
}

function getTokenImageStrategyFreighter(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_freighter_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_freighter_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_freighter_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_freighter_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_freighter_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_freighter_sw();
  }
}

function getTokenImageStrategyHeap(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_heap_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_heap_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_heap_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_heap_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_heap_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_heap_sw();
  }
}

function getTokenImageStrategyHovertank(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_hovertank_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_hovertank_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_hovertank_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_hovertank_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_hovertank_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_hovertank_sw();
  }
}

function getTokenImageStrategySpeedBoat(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_speedboat_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_speedboat_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_speedboat_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_speedboat_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_speedboat_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_speedboat_sw();
  }
}

function getTokenImageStrategyTank(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_tank_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_tank_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_tank_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_tank_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_tank_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_tank_sw();
  }
}

function getTokenImageStrategyTarask(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_tarask_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_tarask_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_tarask_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_tarask_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_tarask_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_tarask_sw();
  }
}

function getTokenImageStrategyTurret(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_turret_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_turret_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_turret_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_turret_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_turret_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_turret_sw();
  }
}

function getTokenImageStrategyWeatherHen(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.strategy_weatherhen_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.strategy_weatherhen_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.strategy_weatherhen_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.strategy_weatherhen_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.strategy_weatherhen_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.strategy_weatherhen_sw();
  }
}

function getTokenImageTactic(p_color, p_token, p_sector){
  switch (p_token.ordinal_0()) {
    case ($clinit_TokenType() , Barge).ordinal_0():
      return getTokenImageTacticBarge(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Crab).ordinal_0():
      return getTokenImageTacticCrab(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Freighter).ordinal_0():
      return getTokenImageTacticFreighter(castTo(s_bundleFreighter.get_1(valueOf_37(p_color)), 103), p_sector);
    case ($clinit_TokenType() , Heap).ordinal_0():
      return getTokenImageTacticHeap(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Speedboat).ordinal_0():
      return getTokenImageTacticSpeedBoat(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Tank).ordinal_0():
      return getTokenImageTacticTank(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    default:case ($clinit_TokenType() , Turret).ordinal_0():
      return getTokenImageTacticTurret(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , WeatherHen).ordinal_0():
      return getTokenImageTacticWeatherHen(castTo(s_bundle.get_1(valueOf_37(p_color)), 69), p_sector);
    case ($clinit_TokenType() , Crayfish).ordinal_0():
      return getTokenImageTacticCrayfish(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Hovertank).ordinal_0():
      return getTokenImageTacticHovertank(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Tarask).ordinal_0():
      return getTokenImageTacticTarask(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Destroyer).ordinal_0():
      return getTokenImageTacticDestroyer(castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80), p_sector);
    case ($clinit_TokenType() , Teleporter).ordinal_0():
      return castTo(s_bundleExtra.get_1(valueOf_37(p_color)), 80).tactic_teleporter();
  }
}

function getTokenImageTacticBarge(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_barge_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_barge_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_barge_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_barge_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_barge_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_barge_sw();
  }
}

function getTokenImageTacticCrab(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_crab_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_crab_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_crab_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_crab_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_crab_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_crab_sw();
  }
}

function getTokenImageTacticCrayfish(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_crayfish_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_crayfish_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_crayfish_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_crayfish_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_crayfish_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_crayfish_sw();
  }
}

function getTokenImageTacticDestroyer(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_destroyer_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_destroyer_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_destroyer_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_destroyer_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_destroyer_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_destroyer_sw();
  }
}

function getTokenImageTacticFreighter(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_freighter_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_freighter_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_freighter_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_freighter_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_freighter_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_freighter_sw();
  }
}

function getTokenImageTacticHeap(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_heap_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_heap_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_heap_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_heap_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_heap_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_heap_sw();
  }
}

function getTokenImageTacticHovertank(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_hovertank_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_hovertank_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_hovertank_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_hovertank_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_hovertank_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_hovertank_sw();
  }
}

function getTokenImageTacticSpeedBoat(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_speedboat_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_speedboat_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_speedboat_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_speedboat_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_speedboat_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_speedboat_sw();
  }
}

function getTokenImageTacticTank(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_tank_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_tank_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_tank_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_tank_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_tank_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_tank_sw();
  }
}

function getTokenImageTacticTarask(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_tarask_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_tarask_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_tarask_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_tarask_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_tarask_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_tarask_sw();
  }
}

function getTokenImageTacticTurret(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_turret_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_turret_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_turret_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_turret_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_turret_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_turret_sw();
  }
}

function getTokenImageTacticWeatherHen(p_bundle, p_sector){
  switch (p_sector.ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
      return p_bundle.tactic_weatherhen_n();
    case ($clinit_Sector() , NorthEast).ordinal_0():
      return p_bundle.tactic_weatherhen_ne();
    case ($clinit_Sector() , NorthWest).ordinal_0():
      return p_bundle.tactic_weatherhen_nw();
    case ($clinit_Sector() , South).ordinal_0():
      return p_bundle.tactic_weatherhen_s();
    case ($clinit_Sector() , SouthEast).ordinal_0():
      return p_bundle.tactic_weatherhen_se();
    case ($clinit_Sector() , SouthWest).ordinal_0():
      return p_bundle.tactic_weatherhen_sw();
  }
}

function isBundleLoaded(){
  $clinit_TokenImages();
  {
    s_bundle;
    return !s_bundle.isEmpty();
  }
}

function loadAllBundle(){
  $clinit_TokenImages();
  {
    s_bundle;
    runAsync(2, new TokenImages$1);
  }
}

var s_bundle, s_bundleExtra, s_bundleFreighter;
function $clinit_TokenImages$1(){
  $clinit_TokenImages$1 = emptyMethod;
  $clinit_Object();
}

function TokenImages$1(){
  $clinit_TokenImages$1();
  Object_0.call(this);
  this.$init_212();
}

defineClass(813, 1, {315:1, 1:1}, TokenImages$1);
_.$init_212 = function $init_212(){
}
;
_.onFailure = function onFailure_9(caught){
  alert_0('Error while downloading script: ' + caught.getLocalizedMessage());
}
;
var Lcom_fullmetalgalaxy_client_ressources_tokens_TokenImages$1_2_classLit = createForClass('com.fullmetalgalaxy.client.ressources.tokens', 'TokenImages/1', 813, Ljava_lang_Object_2_classLit);
function $clinit_EventPresenter(){
  $clinit_EventPresenter = emptyMethod;
  $clinit_Object();
}

function getDate(p_event){
  $clinit_EventPresenter();
  return formatDateTime(p_event.getLastUpdate());
}

function getDetailAsHtml(p_event){
  $clinit_EventPresenter();
  return getIcon(p_event) + ' ' + p_event.getType_0() + '<br/>' + "<span class='date'>" + getDate(p_event) + '<\/span> par ' + getPseudo(p_event);
}

function getIcon(p_event){
  $clinit_EventPresenter();
  if (instanceOf(p_event, 247)) {
    return create_7(($clinit_Icons() , s_instance_5).tide_unknown()).getHTML();
  }
  return '';
}

function getPseudo(p_event){
  var accountId, registration;
  if (p_event.isAuto()) {
    return 'AUTO';
  }
  accountId = 0;
  if (instanceOf(p_event, 33)) {
    accountId = castTo(p_event, 33).getAccountId();
  }
  if (instanceOf(p_event, 144)) {
    accountId = castTo(p_event, 144).getAccountId();
  }
  registration = model_0().getGame().getRegistrationByIdAccount(accountId);
  if (isNotNull(registration) && isNotNull(registration.getAccount_0())) {
    return registration.getAccount_0().getPseudo();
  }
  return '???';
}

function $clinit_WgtGameTime(){
  $clinit_WgtGameTime = emptyMethod;
  $clinit_Composite();
}

function WgtGameTime(){
  $clinit_WgtGameTime();
  Composite.call(this);
  this.$init_244();
  this.m_panel.add_0(new Label_1('Mode de jeu'));
  this.m_modeTbtButton.addValueChangeHandler(this);
  this.m_panel.add_0(this.m_modeTbtButton);
  this.m_modeParallelButton.addValueChangeHandler(this);
  this.m_panel.add_0(this.m_modeParallelButton);
  this.m_panel.add_0(new Label_1('Vitesse'));
  this.m_speedSlowButton.addValueChangeHandler(this);
  this.m_panel.add_0(this.m_speedSlowButton);
  this.m_speedQuickButton.addValueChangeHandler(this);
  this.m_panel.add_0(this.m_speedQuickButton);
  this.m_panel.add_0(this.m_lblCustomSpeed);
  this.m_panel.add_0(new HTML_0("<a href='http://guide.fullmetalgalaxy.com/guide/game-modes'>plus de d\xE9tail ici<\/a>"));
  this.onModelUpdate(model_0());
  this.initWidget(this.m_panel);
  getEventBus().addHandler_1(($clinit_ModelUpdateEvent() , TYPE_1), this);
}

defineClass(342, 59, {115:1, 75:1, 13:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtGameTime);
_.$init_244 = function $init_244(){
  this.m_panel = new VerticalPanel;
  this.m_modeTbtButton = new RadioButton_0('mode', new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(" <img src='/images/icons/turnbyturn16.png'/> : Partie en mode tour par tour"));
  this.m_modeParallelButton = new RadioButton_0('mode', new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(" <img src='/images/icons/parallele16.png'/> : Partie en mode parall\xE8le"));
  this.m_speedSlowButton = new RadioButton_0('speed', new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(" <img src='/images/icons/slow16.png'/> : Partie lente (25 jours ou illimit\xE9)"));
  this.m_speedQuickButton = new RadioButton_0('speed', new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(" <img src='/images/icons/fast16.png'/> : Partie rapide (1h30)"));
  this.m_lblCustomSpeed = new HTML_0("<img src='/images/icons/custom16.png'/> custom speed");
  this.m_readOnly = false;
}
;
_.onModelUpdate = function onModelUpdate_12(p_modelSender){
  var config;
  config = p_modelSender.getGame().getEbConfigGameTime();
  this.m_modeParallelButton.setValue_5(valueOf_32(config.isParallel()), false);
  this.m_modeTbtButton.setValue_5(valueOf_32(!config.isParallel()), false);
  this.m_speedQuickButton.setValue_5(valueOf_32(config.isQuick()), false);
  this.m_speedSlowButton.setValue_5(valueOf_32(!config.isQuick()), false);
  this.m_modeParallelButton.setVisible(true);
  this.m_modeTbtButton.setVisible(true);
  this.m_speedQuickButton.setVisible(true);
  this.m_speedSlowButton.setVisible(true);
  if (this.m_readOnly) {
    this.m_modeParallelButton.setVisible(config.isParallel());
    this.m_modeTbtButton.setVisible(!config.isParallel());
    this.m_speedQuickButton.setVisible(config.isQuick());
    this.m_speedSlowButton.setVisible(!config.isQuick());
  }
  this.m_lblCustomSpeed.setVisible(jsEquals(p_modelSender.getGame().getConfigGameTime(), ($clinit_ConfigGameTime() , Custom_0)));
}
;
_.onValueChange = function onValueChange_22(p_event){
  model_0().getGame().setConfigGameTime(getFromProperties(booleanValue__Z__devirtual$(this.m_speedQuickButton.getValue_3()), booleanValue__Z__devirtual$(this.m_modeParallelButton.getValue_3())));
  getEventBus().fireEvent(new ModelUpdateEvent(model_0()));
}
;
_.setReadOnly = function setReadOnly(p_readOnly){
  this.m_readOnly = p_readOnly;
  this.m_modeTbtButton.setEnabled(!p_readOnly);
  this.m_modeParallelButton.setEnabled(!p_readOnly);
  this.m_speedSlowButton.setEnabled(!p_readOnly);
  this.m_speedQuickButton.setEnabled(!p_readOnly);
  this.onModelUpdate(model_0());
}
;
_.m_readOnly = false;
var Lcom_fullmetalgalaxy_client_widget_WgtGameTime_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'WgtGameTime', 342, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtPlayerMessage(){
  $clinit_WgtPlayerMessage = emptyMethod;
  $clinit_Composite();
}

function WgtPlayerMessage(p_game, p_message){
  $clinit_WgtPlayerMessage();
  var account, avatarUrl, html, pseudo;
  Composite.call(this);
  this.$init_246();
  account = p_game.getAccount(p_message.getAccountId());
  avatarUrl = '/images/avatar/' + 'avatar-default.jpg';
  pseudo = '???';
  if (isNotNull(account)) {
    pseudo = account.getPseudo();
    avatarUrl = account.getAvatarUrl();
  }
  html = "<div class='article'><span class='date'>";
  html += '' + formatDateTime(p_message.getLastUpdate());
  html += "<\/span><div style='float:left;'><img src='";
  html += '' + avatarUrl;
  html += "' height='40px'/><\/div>";
  html += "<div class='h4'>";
  html += '' + pseudo;
  html += '<\/div>';
  html += '' + formatUserMessage(p_message.getMessage());
  html += '<\/div>';
  this.m_panel.add_0(new HTML_0(html));
  this.initWidget(this.m_panel);
}

defineClass(811, 59, {18:1, 44:1, 14:1, 11:1, 1:1}, WgtPlayerMessage);
_.$init_246 = function $init_246(){
  this.m_panel = new SimplePanel;
}
;
var Lcom_fullmetalgalaxy_client_widget_WgtPlayerMessage_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'WgtPlayerMessage', 811, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_SourcesScrollEvents(){
  $clinit_SourcesScrollEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesScrollEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesScrollEvents');
function $clinit_TouchCancelHandler(){
  $clinit_TouchCancelHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_TouchCancelHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'TouchCancelHandler');
function $clinit_WgtScroll(){
  $clinit_WgtScroll = emptyMethod;
  $clinit_Composite();
}

function WgtScroll(){
  $clinit_WgtScroll();
  Composite.call(this);
  this.$init_247();
  this.m_absPanel.add_4(this.m_contentWidget, 0, 0);
  this.m_absPanel.setSize('100%', '100%');
  this.m_absPanel.add_0(this.m_mouseScrollingImage);
  this.m_mouseScrollingImage.setVisible(false);
  this.m_mouseScrollingImage.addMouseDownHandler(this);
  this.m_mouseScrollingImage.addMouseMoveHandler(this);
  this.m_mouseScrollingImage.addMouseUpHandler(this);
  this.m_mouseScrollingImage.addMouseOutHandler(this);
  this.m_focusPanel.setSize('100%', '100%');
  this.m_focusPanel.setWidget(this.m_absPanel);
  this.m_focusPanel.addMouseDownHandler(this);
  this.m_focusPanel.addMouseMoveHandler(this);
  this.m_focusPanel.addMouseUpHandler(this);
  this.m_focusPanel.addMouseOutHandler(this);
  this.m_focusPanel.addTouchStartHandler(this);
  this.m_focusPanel.addTouchMoveHandler(this);
  this.m_focusPanel.addTouchEndHandler(this);
  this.m_focusPanel.addTouchCancelHandler(this);
  this.initWidget(this.m_focusPanel);
  this.m_maskPanel = this.m_contentWidget;
}

function isZoomed(){
  return Math.abs($wnd.innerWidth - $doc.documentElement.clientWidth) > 30;
}

defineClass(177, 59, {177:1, 253:1, 254:1, 255:1, 219:1, 1059:1, 306:1, 305:1, 304:1, 13:1, 148:1, 18:1, 44:1, 14:1, 11:1, 1:1}, WgtScroll);
_.$init_247 = function $init_247(){
  this.m_contentWidget = new AbsolutePanel;
  this.m_absPanel = new AbsolutePanel;
  this.m_focusPanel = new FocusPanel;
  this.m_maskPanel = new AbsolutePanel;
  this.m_isMouseDraging = false;
  this.m_isMouseDown = false;
  this.m_lastMouseX = 0;
  this.m_lastMouseY = 0;
  this.m_keyDragingX = 0;
  this.m_keyDragingY = 0;
  this.m_horizontalScrollPosition = 0;
  this.m_verticalScrollPosition = 0;
  this.m_mouseSensitivity = 10;
  this.m_keyDraggingStep = 18;
  this.m_keyDraggingFrequency = 25;
  this.m_scrollListenerCollection = new ScrollListenerCollection;
  this.m_mouseArrowSpaceNorth = 60;
  this.m_mouseArrowSpaceEast = 60;
  this.m_mouseArrowSpaceSouth = 60;
  this.m_mouseArrowSpaceWest = 60;
  this.m_mouseScrollingImage = new Image_0;
  this.m_mouseScrollingKey = 0;
  this.m_currentTouchEventId = -1;
  this.m_cancelMouseUpEvent = false;
  this.m_cancelTimer = new WgtScroll$1(this);
  this.m_keyDraggingTimer = new WgtScroll$2(this);
}
;
_.addScrollListener = function addScrollListener(p_listener){
  this.m_scrollListenerCollection.add_5(p_listener);
}
;
_.centerContentWidget = function centerContentWidget(){
  this.setScrollPosition(narrow_int((this.m_contentWidget.getOffsetWidth() - this.getOffsetWidth()) / 2), narrow_int((this.m_contentWidget.getOffsetHeight() - this.getOffsetHeight()) / 2));
}
;
_.ensureWidgetIsVisible = function ensureWidgetIsVisible(){
  if (this.m_verticalScrollPosition > this.m_contentWidget.getOffsetHeight() - this.getOffsetHeight() + narrow_int(this.getOffsetHeight() / 2)) {
    this.m_verticalScrollPosition = this.m_contentWidget.getOffsetHeight() - this.getOffsetHeight() + narrow_int(this.getOffsetHeight() / 2);
  }
  if (this.m_verticalScrollPosition < narrow_int(-1 * this.getOffsetHeight() / 2)) {
    this.m_verticalScrollPosition = narrow_int(-1 * this.getOffsetHeight() / 2);
  }
  if (this.m_horizontalScrollPosition > this.m_contentWidget.getOffsetWidth() - this.getOffsetWidth() + narrow_int(this.getOffsetWidth() / 2)) {
    this.m_horizontalScrollPosition = this.m_contentWidget.getOffsetWidth() - this.getOffsetWidth() + narrow_int(this.getOffsetWidth() / 2);
  }
  if (this.m_horizontalScrollPosition < narrow_int(-1 * this.getOffsetWidth() / 2)) {
    this.m_horizontalScrollPosition = narrow_int(-1 * this.getOffsetWidth() / 2);
  }
}
;
_.fireScroll = function fireScroll(){
  this.m_scrollListenerCollection.fireScroll_0(this, this.m_horizontalScrollPosition, this.m_verticalScrollPosition);
}
;
_.getHorizontalScrollPosition = function getHorizontalScrollPosition(){
  return this.m_horizontalScrollPosition;
}
;
_.getTouch = function getTouch(touches, identifier){
  var touch;
  if (isNotNull(touches) && !isZoomed()) {
    if (identifier == -1) {
      if ($length(touches) > 0) {
        return $get(touches, 0);
      }
    }
     else if ($length(touches) == 1) {
      touch = $get(touches, 0);
      if ($getIdentifier(touch) == identifier) {
        return touch;
      }
    }
  }
  return null;
}
;
_.getVerticalScrollPosition = function getVerticalScrollPosition(){
  return this.m_verticalScrollPosition;
}
;
_.onDown = function onDown(p_sender, p_x, p_y){
  if (jsEquals(p_sender, this.m_mouseScrollingImage.getElement())) {
    this.onKeyDown_0(this.m_mouseScrollingKey);
  }
   else {
    this.m_isMouseDown = true;
    this.m_lastMouseX = p_x;
    this.m_lastMouseY = p_y;
  }
}
;
_.onKeyDown_0 = function onKeyDown_1(p_keyCode){
  switch (p_keyCode) {
    case 40:
      if (this.m_keyDragingY != this.m_keyDraggingStep) {
        this.m_keyDragingY = this.m_keyDraggingStep;
        this.m_keyDraggingTimer.cancel();
        this.m_keyDraggingTimer.schedule(1);
      }

      return false;
    case 38:
      if (this.m_keyDragingY != -1 * this.m_keyDraggingStep) {
        this.m_keyDragingY = -1 * this.m_keyDraggingStep;
        this.m_keyDraggingTimer.cancel();
        this.m_keyDraggingTimer.schedule(1);
      }

      return false;
    case 37:
      if (this.m_keyDragingX != -1 * this.m_keyDraggingStep) {
        this.m_keyDragingX = -1 * this.m_keyDraggingStep;
        this.m_keyDraggingTimer.cancel();
        this.m_keyDraggingTimer.schedule(1);
      }

      return false;
    case 39:
      if (this.m_keyDragingX != this.m_keyDraggingStep) {
        this.m_keyDragingX = this.m_keyDraggingStep;
        this.m_keyDraggingTimer.cancel();
        this.m_keyDraggingTimer.schedule(1);
      }

      return false;
    default:return true;
  }
}
;
_.onKeyUp = function onKeyUp(p_keyCode){
  var stopScroll;
  stopScroll = false;
  switch (p_keyCode) {
    case 40:
    case 38:
      this.m_keyDragingY = 0;
      stopScroll = true;
      break;
    case 37:
    case 39:
      this.m_keyDragingX = 0;
      stopScroll = true;
      break;
    default:return true;
  }
  if (stopScroll == true && this.m_keyDragingX == 0 && this.m_keyDragingY == 0) {
    this.fireScroll();
  }
  return false;
}
;
_.onLoad = function onLoad_6(){
  getClassPrototype(11).onLoad.call(this);
  instance_1().addPreviewListener(this);
}
;
_.onMouseDown_0 = function onMouseDown_4(p_event){
  p_event.preventDefault_0();
  this.onDown(as($getEventTarget(p_event.getNativeEvent())), p_event.getClientX(), p_event.getClientY());
}
;
_.onMouseMove_0 = function onMouseMove_5(p_event){
  p_event.preventDefault_0();
  this.onMove(as($getEventTarget(p_event.getNativeEvent())), p_event.getClientX(), p_event.getClientY());
}
;
_.onMouseOut = function onMouseOut_1(p_event){
  this.onOut(as($getEventTarget(p_event.getNativeEvent())));
}
;
_.onMouseUp_0 = function onMouseUp_5(p_event){
  this.onUp_0(as($getEventTarget(p_event.getNativeEvent())));
}
;
_.onMove = function onMove(p_sender, p_x, p_y){
  var mouseScrollingKey, scrollX_0, scrollY_0;
  scrollX_0 = this.m_lastMouseX - p_x;
  scrollY_0 = this.m_lastMouseY - p_y;
  if (this.m_isMouseDown && !this.m_isMouseDraging) {
    if ($wnd.Math.abs(scrollX_0) > this.m_mouseSensitivity || $wnd.Math.abs(scrollY_0) > this.m_mouseSensitivity) {
      this.m_isMouseDraging = true;
      this.m_maskPanel.setPixelSize(this.m_contentWidget.getOffsetWidth(), this.m_contentWidget.getOffsetHeight());
      this.m_maskPanel.setVisible(true);
    }
  }
   else if (this.m_isMouseDraging) {
    this.setScrollPositionSilent(this.getHorizontalScrollPosition() + scrollX_0, this.getVerticalScrollPosition() + scrollY_0);
    this.m_lastMouseX = p_x;
    this.m_lastMouseY = p_y;
  }
   else {
    mouseScrollingKey = 0;
    if (p_x > this.getOffsetWidth() - this.m_mouseArrowSpaceEast) {
      create_7(($clinit_Icons() , s_instance_5).arrow_e()).applyTo_0(this.m_mouseScrollingImage);
      this.m_absPanel.setWidgetPosition(this.m_mouseScrollingImage, this.getOffsetWidth() - this.m_mouseScrollingImage.getWidth(), p_y - narrow_int(this.m_mouseScrollingImage.getHeight() / 2));
      this.m_mouseScrollingImage.setVisible(true);
      mouseScrollingKey = 39;
    }
     else if (p_x < this.m_mouseArrowSpaceWest) {
      create_7(($clinit_Icons() , s_instance_5).arrow_w()).applyTo_0(this.m_mouseScrollingImage);
      this.m_absPanel.setWidgetPosition(this.m_mouseScrollingImage, 0, p_y - narrow_int(this.m_mouseScrollingImage.getHeight() / 2));
      this.m_mouseScrollingImage.setVisible(true);
      mouseScrollingKey = 37;
    }
     else if (p_y > this.getOffsetHeight() - this.m_mouseArrowSpaceSouth) {
      create_7(($clinit_Icons() , s_instance_5).arrow_s()).applyTo_0(this.m_mouseScrollingImage);
      this.m_absPanel.setWidgetPosition(this.m_mouseScrollingImage, p_x - narrow_int(this.m_mouseScrollingImage.getWidth() / 2), this.getOffsetHeight() - this.m_mouseScrollingImage.getHeight());
      this.m_mouseScrollingImage.setVisible(true);
      mouseScrollingKey = 40;
    }
     else if (p_y < this.m_mouseArrowSpaceNorth) {
      create_7(($clinit_Icons() , s_instance_5).arrow_n()).applyTo_0(this.m_mouseScrollingImage);
      this.m_absPanel.setWidgetPosition(this.m_mouseScrollingImage, p_x - narrow_int(this.m_mouseScrollingImage.getWidth() / 2), 0);
      this.m_mouseScrollingImage.setVisible(true);
      mouseScrollingKey = 38;
    }
     else if (this.m_mouseScrollingKey != 0) {
      this.m_mouseScrollingImage.setVisible(false);
      this.m_mouseScrollingKey = 0;
    }
    setStyleAttribute(this.m_mouseScrollingImage.getElement(), 'zIndex', '9999');
    if (mouseScrollingKey != 0 && this.m_keyDragingX == 0 && this.m_keyDragingY == 0) {
      this.m_mouseScrollingKey = mouseScrollingKey;
    }
  }
}
;
_.onOut = function onOut(p_sender){
  if (jsEquals(p_sender, this.m_mouseScrollingImage.getElement())) {
    if (this.m_keyDragingX != 0 || this.m_keyDragingY != 0) {
      this.onKeyUp(this.m_mouseScrollingKey);
    }
    this.m_mouseScrollingImage.setVisible(false);
    this.m_mouseScrollingKey = 0;
  }
   else {
    if (this.m_isMouseDraging) {
      this.fireScroll();
    }
    this.m_isMouseDown = false;
    this.m_isMouseDraging = false;
    this.m_maskPanel.setVisible(false);
  }
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_5(p_event){
  if (p_event.getTypeInt() == 128) {
    this.onKeyDown_0($getKeyCode(p_event.getNativeEvent()));
    return;
  }
  if (p_event.getTypeInt() == 512) {
    this.onKeyUp($getKeyCode(p_event.getNativeEvent()));
    return;
  }
  if (p_event.getTypeInt() == 8 && this.m_cancelMouseUpEvent) {
    return;
  }
}
;
_.onTouchCancel = function onTouchCancel(p_event){
  var touch;
  touch = this.getTouch(p_event.getChangedTouches_0(), this.m_currentTouchEventId);
  if (isNotNull(touch)) {
    this.m_currentTouchEventId = -1;
    this.onOut(as($getTarget(touch)));
  }
}
;
_.onTouchEnd = function onTouchEnd_0(p_event){
  var touch;
  touch = this.getTouch(p_event.getChangedTouches_0(), this.m_currentTouchEventId);
  if (isNotNull(touch)) {
    this.m_currentTouchEventId = -1;
    this.onUp_0(as($getTarget(touch)));
  }
}
;
_.onTouchMove = function onTouchMove_0(p_event){
  var touch;
  touch = this.getTouch(p_event.getChangedTouches_0(), this.m_currentTouchEventId);
  if (isNotNull(touch)) {
    if ($length(p_event.getTouches_0()) < 2) {
      p_event.preventDefault_0();
    }
    this.onMove(as($getTarget(touch)), $getClientX_0(touch), $getClientY_0(touch));
  }
}
;
_.onTouchStart = function onTouchStart_0(p_event){
  var touch;
  touch = this.getTouch(p_event.getChangedTouches_0(), -1);
  if (isNotNull(touch)) {
    this.m_currentTouchEventId = $getIdentifier(touch);
    this.onDown(as($getTarget(touch)), $getClientX_0(touch), $getClientY_0(touch));
  }
}
;
_.onUnload = function onUnload_5(){
  getClassPrototype(11).onUnload.call(this);
  instance_1().removePreviewListener(this);
}
;
_.onUp_0 = function onUp_0(p_sender){
  if (jsEquals(p_sender, this.m_mouseScrollingImage.getElement())) {
    this.onKeyUp(this.m_mouseScrollingKey);
  }
   else {
    this.m_isMouseDown = false;
    if (this.m_isMouseDraging) {
      this.fireScroll();
      this.m_cancelMouseUpEvent = true;
      this.m_cancelTimer.schedule(500);
    }
    this.m_isMouseDraging = false;
    this.m_maskPanel.setVisible(false);
  }
}
;
_.removeScrollListener = function removeScrollListener(p_listener){
  this.m_scrollListenerCollection.remove_1(p_listener);
}
;
_.setScrollPosition = function setScrollPosition_0(p_horizontalScrollPosition, p_verticalScrollPosition){
  this.setScrollPositionSilent(p_horizontalScrollPosition, p_verticalScrollPosition);
  this.fireScroll();
}
;
_.setScrollPositionSilent = function setScrollPositionSilent(p_horizontalScrollPosition, p_verticalScrollPosition){
  this.m_verticalScrollPosition = p_verticalScrollPosition;
  this.m_horizontalScrollPosition = p_horizontalScrollPosition;
  this.ensureWidgetIsVisible();
  this.m_absPanel.setWidgetPosition(this.m_contentWidget, -1 * this.getHorizontalScrollPosition(), -1 * this.getVerticalScrollPosition());
}
;
_.setWidget = function setWidget_3(p_wgt){
  this.m_absPanel.remove_0(this.m_contentWidget);
  this.m_contentWidget = p_wgt;
  this.m_absPanel.add_4(this.m_contentWidget, 0, 0);
  this.m_absPanel.add_4(this.m_maskPanel, 0, 0);
  this.m_maskPanel.setVisible(false);
  this.ensureWidgetIsVisible();
  this.m_absPanel.add_0(this.m_mouseScrollingImage);
  setStyleAttribute(this.m_mouseScrollingImage.getElement(), 'zIndex', '9999');
  this.m_mouseScrollingImage.setVisible(false);
}
;
_.m_cancelMouseUpEvent = false;
_.m_currentTouchEventId = 0;
_.m_horizontalScrollPosition = 0;
_.m_isMouseDown = false;
_.m_isMouseDraging = false;
_.m_keyDraggingFrequency = 0;
_.m_keyDraggingStep = 0;
_.m_keyDragingX = 0;
_.m_keyDragingY = 0;
_.m_lastMouseX = 0;
_.m_lastMouseY = 0;
_.m_mouseArrowSpaceEast = 0;
_.m_mouseArrowSpaceNorth = 0;
_.m_mouseArrowSpaceSouth = 0;
_.m_mouseArrowSpaceWest = 0;
_.m_mouseScrollingKey = 0;
_.m_mouseSensitivity = 0;
_.m_verticalScrollPosition = 0;
var Lcom_fullmetalgalaxy_client_widget_WgtScroll_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'WgtScroll', 177, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_WgtScroll$1(){
  $clinit_WgtScroll$1 = emptyMethod;
  $clinit_Timer();
}

function WgtScroll$1(this$0){
  $clinit_WgtScroll$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_248();
}

defineClass(673, 93, {1:1}, WgtScroll$1);
_.$init_248 = function $init_248(){
}
;
_.run = function run_14(){
  this.this$01.m_cancelMouseUpEvent = false;
}
;
var Lcom_fullmetalgalaxy_client_widget_WgtScroll$1_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'WgtScroll/1', 673, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_WgtScroll$2(){
  $clinit_WgtScroll$2 = emptyMethod;
  $clinit_Timer();
}

function WgtScroll$2(this$0){
  $clinit_WgtScroll$2();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_249();
}

defineClass(674, 93, {1:1}, WgtScroll$2);
_.$init_249 = function $init_249(){
}
;
_.run = function run_15(){
  if (this.this$01.m_keyDragingX == 0 && this.this$01.m_keyDragingY == 0) {
    return;
  }
  this.this$01.setScrollPositionSilent(this.this$01.getHorizontalScrollPosition() + this.this$01.m_keyDragingX, this.this$01.getVerticalScrollPosition() + this.this$01.m_keyDragingY);
  this.this$01.m_keyDraggingTimer.schedule(this.this$01.m_keyDraggingFrequency);
}
;
var Lcom_fullmetalgalaxy_client_widget_WgtScroll$2_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'WgtScroll/2', 674, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_WgtTokenQty(){
  $clinit_WgtTokenQty = emptyMethod;
  $clinit_Composite();
}

function WgtTokenQty(p_tokenType, p_color, p_initialValue){
  $clinit_WgtTokenQty();
  var wgtToken;
  Composite.call(this);
  this.$init_250();
  this.m_panel.setHeight('100%');
  this.m_panel.add_0(new Label_1(getTokenString(0, p_tokenType)));
  wgtToken = null;
  if (p_tokenType.canBeColored()) {
    wgtToken = new Image_1(getTokenImage_0(p_color, 1, p_tokenType, ($clinit_Sector() , SouthEast)));
  }
   else {
    wgtToken = new Image_1(getTokenImage_0(new EnuColor_0(0), 1, p_tokenType, ($clinit_Sector() , SouthEast)));
  }
  this.m_panel.add_0(wgtToken);
  this.m_tokenReserveCount.setMinValue(0);
  if (isNotNull(p_initialValue)) {
    this.m_tokenReserveCount.setValue(p_initialValue);
  }
  this.m_panel.add_0(this.m_tokenReserveCount);
  this.setEnabled(false);
  this.initWidget(this.m_panel);
}

defineClass(289, 59, {18:1, 44:1, 14:1, 11:1, 1:1}, WgtTokenQty);
_.$init_250 = function $init_250(){
  this.m_panel = new VerticalPanel;
  this.m_tokenReserveCount = new WgtIntBox;
}
;
_.setEnabled = function setEnabled_0(p_enabled){
  this.m_tokenReserveCount.setEnabled(p_enabled);
}
;
var Lcom_fullmetalgalaxy_client_widget_WgtTokenQty_2_classLit = createForClass('com.fullmetalgalaxy.client.widget', 'WgtTokenQty', 289, Lcom_google_gwt_user_client_ui_Composite_2_classLit);
function $clinit_BoardFireCover(){
  $clinit_BoardFireCover = emptyMethod;
  $clinit_Object();
}

function BoardFireCover(p_game){
  $clinit_BoardFireCover();
  Object_0.call(this);
  this.$init_251();
  if (!isNotNull(p_game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.m_game = p_game;
}

defineClass(795, 1, {4:1, 1:1}, BoardFireCover);
_.$init_251 = function $init_251(){
  this.m_fireCover = null;
  this.m_disabledFireCover = null;
  this.m_game = null;
  this.m_lockedToken = new ArrayList;
}
;
_.addFireDisabling = function addFireDisabling(p_fireDisabling){
  if (!isNotNull(p_fireDisabling)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_fireDisabling.getTarget(this.m_game))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_fireDisabling.getDestroyer1(this.m_game))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_fireDisabling.getDestroyer2(this.m_game))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.decFireCover_1(p_fireDisabling.getTarget(this.m_game));
  p_fireDisabling.getTarget(this.m_game).addFireDisabling(p_fireDisabling);
  p_fireDisabling.getDestroyer1(this.m_game).addFireDisabling(p_fireDisabling);
  p_fireDisabling.getDestroyer2(this.m_game).addFireDisabling(p_fireDisabling);
  this.incFireCover_1(p_fireDisabling.getTarget(this.m_game));
}
;
_.addFireDisabling_0 = function addFireDisabling_0(p_fireDisabling){
  var fd, fd$iterator;
  if (isNull(p_fireDisabling)) {
    return;
  }
  for (fd$iterator = p_fireDisabling.iterator_0(); fd$iterator.hasNext_0();) {
    fd = castTo(fd$iterator.next_1(), 96);
    this.addFireDisabling(fd);
  }
}
;
_.checkFireDisableFlag = function checkFireDisableFlag(p_position, p_radius, p_fdChange, p_fdRemoved, p_fdAdded){
  var isFdChanged, ix, iy, teamColor, token;
  if (!isNotNull(this.m_game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  isFdChanged = false;
  token = this.m_game.getToken_1(p_position);
  teamColor = new EnuColor_0(0);
  if (isNotNull(token)) {
    teamColor = this.m_game.getTokenTeamColors(token);
  }
  for (ix = p_position.getX() - p_radius; ix <= p_position.getX() + p_radius; ix++) {
    for (iy = p_position.getY() - p_radius; iy <= p_position.getY() + p_radius; iy++) {
      if (ix != p_position.getX() || iy != p_position.getY()) {
        token = this.m_game.getToken_1(new AnBoardPosition_0(ix, iy));
        if (isNotNull(token) && !teamColor.contain_1(token.getColor_0())) {
          isFdChanged = isFdChanged | this.recursiveCheckFireDisableFlag(token, p_fdChange, p_fdRemoved, p_fdAdded);
        }
      }
    }
  }
  return isFdChanged;
}
;
_.checkFireDisableFlag_0 = function checkFireDisableFlag_0(p_token, p_fdChange, p_fdRemoved, p_fdAdded){
  var color_0, fd, fd$iterator, fd2Removed, isFdUpdated, ix, iy, otherToken, position, tokenTeamColor;
  if (!isNotNull(p_token)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  isFdUpdated = false;
  if (jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board)) || p_token.getColor_0() == 0 || jsEquals(p_token.getType(), ($clinit_TokenType() , Freighter)) || jsEquals(p_token.getType(), ($clinit_TokenType() , Turret))) {
    return isFdUpdated;
  }
  if (jsEquals(this.m_fireCover, null)) {
    this.reComputeFireCover();
  }
  color_0 = this.m_game.getOpponentFireCover_0(p_token);
  if (p_token.isFireDisabled() && jsNotEquals(p_fdChange, ($clinit_BoardFireCover$FdChange() , DISABLE))) {
    fd2Removed = new ArrayList;
    for (fd$iterator = p_token.getFireDisablingList().iterator_0(); fd$iterator.hasNext_0();) {
      fd = castTo(fd$iterator.next_1(), 96);
      if (!this.m_game.canTokenFireOn_2(fd.getDestroyer1(this.m_game), p_token) || !this.m_game.canTokenFireOn_2(fd.getDestroyer2(this.m_game), p_token) || this.m_game.isTokenFireCoverDisabled(fd.getDestroyer1(this.m_game)) || this.m_game.isTokenFireCoverDisabled(fd.getDestroyer2(this.m_game)) || !this.m_game.isTokenTideActive(fd.getDestroyer1(this.m_game)) || !this.m_game.isTokenTideActive(fd.getDestroyer2(this.m_game)) || this.m_game.getTokenTeamColors(fd.getDestroyer1(this.m_game)).equals_2(this.m_game.getTokenTeamColors(p_token)) || this.m_lockedToken.contains_0(valueOf_40(fd.getDestroyer1Id())) || this.m_lockedToken.contains_0(valueOf_40(fd.getDestroyer2Id()))) {
        fd2Removed.add_5(fd);
        isFdUpdated = true;
      }
    }
    p_fdRemoved.addAll(fd2Removed);
    this.removeFireDisabling_0(fd2Removed);
  }
  if (!p_token.isFireDisabled() && jsNotEquals(p_fdChange, ($clinit_BoardFireCover$FdChange() , ENABLE)) && color_0.getValue_1() != 0) {
    this.decFireCover_1(p_token);
    fd = new FireDisabling;
    fd.setTarget(p_token);
    position = p_token.getPosition();
    for (ix = position.getX() - 3; ix < position.getX() + 4; ix++) {
      for (iy = position.getY() - 3; iy < position.getY() + 4; iy++) {
        otherToken = this.m_game.getToken_1(new AnBoardPosition_0(ix, iy));
        if (isNotNull(otherToken)) {
          tokenTeamColor = this.m_game.getTokenTeamColors(otherToken);
          if (tokenTeamColor.isColored_0(color_0) && !this.m_game.isTokenFireCoverDisabled(otherToken) && this.m_game.canTokenFireOn_2(otherToken, p_token) && !this.m_lockedToken.contains_0(valueOf_40(otherToken.getId()))) {
            if (isNull(fd.getDestroyer1(this.m_game))) {
              fd.setDestroyer1(otherToken);
            }
             else if (isNull(fd.getDestroyer2(this.m_game))) {
              fd.setDestroyer2(otherToken);
              break;
            }
             else {
              break;
            }
          }
        }
      }
    }
    if (isNotNull(fd.getDestroyer1(this.m_game)) && isNotNull(fd.getDestroyer2(this.m_game))) {
      p_fdAdded.add_5(fd);
      p_token.addFireDisabling(fd);
      fd.getDestroyer1(this.m_game).addFireDisabling(fd);
      fd.getDestroyer2(this.m_game).addFireDisabling(fd);
    }
     else {
      logError("BUG: a token should be set as fire disabled, but we didn't found destroyer");
    }
    this.incFireCover_1(p_token);
    isFdUpdated = true;
  }
  return isFdUpdated;
}
;
_.cleanFireDisableCollection = function cleanFireDisableCollection(p_fdRemoved, p_fdAdded){
  var fd, fd$iterator, fd2Remove;
  fd2Remove = new ArrayList;
  for (fd$iterator = p_fdRemoved.iterator_0(); fd$iterator.hasNext_0();) {
    fd = castTo(fd$iterator.next_1(), 96);
    if (p_fdAdded.contains_0(fd)) {
      fd2Remove.add_5(fd);
    }
  }
  p_fdRemoved.removeAll(fd2Remove);
  p_fdAdded.removeAll(fd2Remove);
}
;
_.decFireCover = function decFireCover(p_position, p_radius, p_color, p_disabled){
  var fireCover, ix, iy, targetPosition;
  if (jsEquals(this.m_fireCover, null)) {
    this.reComputeFireCover();
    return;
  }
  fireCover = this.m_fireCover;
  if (p_disabled) {
    fireCover = this.m_disabledFireCover;
  }
  for (ix = p_position.getX() - p_radius; ix < p_position.getX() + p_radius + 1; ix++) {
    for (iy = p_position.getY() - p_radius; iy < p_position.getY() + p_radius + 1; iy++) {
      targetPosition = new AnBoardPosition_0(ix, iy);
      if (this.m_game.getCoordinateSystem().getDiscreteDistance(p_position, targetPosition) < p_radius) {
        this.decFireCover_0(targetPosition, p_color, fireCover);
      }
    }
  }
}
;
_.decFireCover_0 = function decFireCover_0(p_position, p_color, p_fireCover){
  p_position = this.m_game.getCoordinateSystem().normalizePosition(p_position);
  if (jsEquals(p_fireCover, null) || p_position.getX() < 0 || p_position.getY() < 0 || !p_color.isSingleColor() || p_position.getX() >= p_fireCover.length || p_position.getY() >= p_fireCover[0].length) {
    return;
  }
  p_fireCover[p_position.getX()][p_position.getY()][p_color.getColorIndex()]--;
}
;
_.decFireCover_1 = function decFireCover_1(p_token){
  var color_0, fireCover, fireRange, ix, ix0, iy, tokenPosition;
  if (this.m_lockedToken.contains_0(valueOf_40(p_token.getId()))) {
    logDebug('token ' + p_token + ' is already locked !!!');
    this.m_lockedToken.add_5(valueOf_40(p_token.getId()));
    return;
  }
  this.m_lockedToken.add_5(valueOf_40(p_token.getId()));
  if (!p_token.getType().isDestroyer() || jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    return;
  }
  if (jsEquals(this.m_fireCover, null)) {
    this.reComputeFireCover();
  }
  fireRange = this.m_game.getTokenFireLength(p_token);
  color_0 = this.getFireCoverColor(p_token);
  fireCover = this.m_fireCover;
  if (this.m_game.isTokenFireCoverDisabled(p_token)) {
    fireCover = this.m_disabledFireCover;
  }
  tokenPosition = p_token.getPosition();
  for (ix0 = tokenPosition.getX() - fireRange; ix0 < tokenPosition.getX() + fireRange + 1; ix0++) {
    for (iy = tokenPosition.getY() - fireRange; iy < tokenPosition.getY() + fireRange + 1; iy++) {
      if (this.m_game.canTokenFireOn_0(p_token, tokenPosition, new AnBoardPosition_0(ix0, iy))) {
        this.decFireCover_0(new AnBoardPosition_0(ix0, iy), color_0, fireCover);
      }
    }
  }
  if (p_token.getHexagonSize() > 1) {
    tokenPosition = castTo(p_token.getExtraPositions(this.m_game.getCoordinateSystem()).get_0(0), 23);
    for (ix = tokenPosition.getX() - fireRange; ix < tokenPosition.getX() + fireRange + 1; ix++) {
      for (iy = tokenPosition.getY() - fireRange; iy < tokenPosition.getY() + fireRange + 1; iy++) {
        if (this.m_game.canTokenFireOn_0(p_token, tokenPosition, new AnBoardPosition_0(ix, iy))) {
          this.decFireCover_0(new AnBoardPosition_0(ix, iy), color_0, fireCover);
        }
      }
    }
  }
}
;
_.getDisabledFireCover = function getDisabledFireCover(p_x, p_y, p_color){
  return this.getDisabledFireCover_1(new AnBoardPosition_0(p_x, p_y), p_color);
}
;
_.getDisabledFireCover_0 = function getDisabledFireCover_0(p_x, p_y, p_team){
  return this.getDisabledFireCover(p_x, p_y, new EnuColor_0(p_team.getFireColor()));
}
;
_.getDisabledFireCover_1 = function getDisabledFireCover_1(p_position, p_color){
  var position;
  if (jsEquals(this.m_disabledFireCover, null)) {
    this.reComputeFireCover();
  }
  position = this.m_game.getCoordinateSystem().normalizePosition(p_position);
  if (position.getX() < 0 || position.getY() < 0 || position.getX() >= this.m_fireCover.length || position.getY() >= this.m_fireCover[0].length || !p_color.isSingleColor()) {
    return 0;
  }
  return this.m_disabledFireCover[position.getX()][position.getY()][p_color.getColorIndex()];
}
;
_.getFireCover = function getFireCover(p_position){
  var cover, currentColor, iColor;
  cover = new EnuColor_0(0);
  for (iColor = 0; iColor < getTotalNumberOfColor(); iColor++) {
    currentColor = getColorFromIndex(iColor);
    if (this.getFireCover_0(p_position, currentColor) >= 2) {
      cover.addColor_0(currentColor);
    }
  }
  return cover;
}
;
_.getFireCover_0 = function getFireCover_0(p_position, p_color){
  if (jsEquals(this.m_fireCover, null)) {
    this.reComputeFireCover();
  }
  p_position = this.m_game.getCoordinateSystem().normalizePosition(p_position);
  if (p_position.getX() < 0 || p_position.getY() < 0 || p_position.getX() >= this.m_fireCover.length || p_position.getY() >= this.m_fireCover[0].length || !p_color.isSingleColor()) {
    return 0;
  }
  return this.m_fireCover[p_position.getX()][p_position.getY()][p_color.getColorIndex()];
}
;
_.getFireCoverColor = function getFireCoverColor(p_token){
  var color_0, tokenOwner;
  color_0 = new EnuColor_0(0);
  if (p_token.getColor_0() != 0) {
    tokenOwner = this.m_game.getRegistrationByColor(p_token.getColor_0());
    if (isNotNull(tokenOwner)) {
      color_0.setValue_3(tokenOwner.getTeam_1(this.m_game).getFireColor());
    }
     else {
      color_0.setValue_3(p_token.getColor_0());
    }
  }
  return color_0;
}
;
_.incFireCover = function incFireCover(p_position, p_radius, p_color, p_disabled){
  var fireCover, ix, iy, targetPosition;
  if (jsEquals(this.m_fireCover, null)) {
    this.reComputeFireCover();
    return;
  }
  fireCover = this.m_fireCover;
  if (p_disabled) {
    fireCover = this.m_disabledFireCover;
  }
  for (ix = p_position.getX() - p_radius; ix < p_position.getX() + p_radius + 1; ix++) {
    for (iy = p_position.getY() - p_radius; iy < p_position.getY() + p_radius + 1; iy++) {
      targetPosition = new AnBoardPosition_0(ix, iy);
      if (this.m_game.getCoordinateSystem().getDiscreteDistance(p_position, targetPosition) < p_radius) {
        this.incFireCover_0(targetPosition, p_color, fireCover);
      }
    }
  }
}
;
_.incFireCover_0 = function incFireCover_0(p_position, p_color, p_fireCover){
  p_position = this.m_game.getCoordinateSystem().normalizePosition(p_position);
  if (jsEquals(p_fireCover, null) || p_position.getX() < 0 || p_position.getY() < 0 || !p_color.isSingleColor() || p_position.getX() >= p_fireCover.length || p_position.getY() >= p_fireCover[0].length) {
    return;
  }
  p_fireCover[p_position.getX()][p_position.getY()][p_color.getColorIndex()]++;
}
;
_.incFireCover_1 = function incFireCover_1(p_token){
  var color_0, fireCover, fireRange, ix, ix0, iy, targetPosition, tokenPosition;
  if (!isNotNull(p_token)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.m_lockedToken.remove_1(valueOf_40(p_token.getId()));
  if (!p_token.getType().isDestroyer() || jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    return;
  }
  if (this.m_lockedToken.contains_0(valueOf_40(p_token.getId()))) {
    logDebug('token ' + p_token + ' is still locked !!!');
    return;
  }
  if (jsEquals(this.m_fireCover, null)) {
    this.reComputeFireCover();
    return;
  }
  fireRange = this.m_game.getTokenFireLength(p_token);
  color_0 = this.getFireCoverColor(p_token);
  fireCover = this.m_fireCover;
  if (this.m_game.isTokenFireCoverDisabled(p_token)) {
    fireCover = this.m_disabledFireCover;
  }
  tokenPosition = p_token.getPosition();
  for (ix0 = tokenPosition.getX() - fireRange; ix0 < tokenPosition.getX() + fireRange + 1; ix0++) {
    for (iy = tokenPosition.getY() - fireRange; iy < tokenPosition.getY() + fireRange + 1; iy++) {
      targetPosition = new AnBoardPosition_0(ix0, iy);
      if (this.m_game.canTokenFireOn_0(p_token, tokenPosition, targetPosition)) {
        this.incFireCover_0(targetPosition, color_0, fireCover);
      }
    }
  }
  if (p_token.getHexagonSize() > 1) {
    tokenPosition = castTo(p_token.getExtraPositions(this.m_game.getCoordinateSystem()).get_0(0), 23);
    for (ix = tokenPosition.getX() - fireRange; ix < tokenPosition.getX() + fireRange + 1; ix++) {
      for (iy = tokenPosition.getY() - fireRange; iy < tokenPosition.getY() + fireRange + 1; iy++) {
        targetPosition = new AnBoardPosition_0(ix, iy);
        if (this.m_game.canTokenFireOn_0(p_token, tokenPosition, targetPosition)) {
          this.incFireCover_0(targetPosition, color_0, fireCover);
        }
      }
    }
  }
}
;
_.invalidateFireCover = function invalidateFireCover(){
  this.m_fireCover = null;
  this.m_disabledFireCover = null;
  this.m_lockedToken.clear_0();
}
;
_.reComputeFireCover = function reComputeFireCover(){
  var fdAdded, fdRemoved;
  fdRemoved = new ArrayList;
  fdAdded = new ArrayList;
  this.reComputeFireCover_0(fdRemoved, fdAdded);
  if (!fdRemoved.isEmpty() || !fdAdded.isEmpty()) {
    logError('#### fire disable flag was wrong !');
  }
}
;
_.reComputeFireCover_0 = function reComputeFireCover_0(p_fdRemoved, p_fdAdded){
  var colorLessFire, token, token$iterator, token$iterator0, token$iterator1;
  this.m_fireCover = initMultidimensionalArray(B_classLit, [{4:1, 1:1, 5:1}, {489:1, 4:1, 1:1, 5:1}, {173:1, 4:1, 1:1}], [489, 173, 29], 15, [this.m_game.getLandWidth(), this.m_game.getLandHeight(), getTotalNumberOfColor()], 3);
  this.m_disabledFireCover = initMultidimensionalArray(B_classLit, [{4:1, 1:1, 5:1}, {489:1, 4:1, 1:1, 5:1}, {173:1, 4:1, 1:1}], [489, 173, 29], 15, [this.m_game.getLandWidth(), this.m_game.getLandHeight(), getTotalNumberOfColor()], 3);
  this.m_lockedToken.clear_0();
  for (token$iterator0 = this.m_game.getSetToken().iterator_0(); token$iterator0.hasNext_0();) {
    token = castTo(token$iterator0.next_1(), 19);
    this.incFireCover_1(token);
  }
  for (token$iterator1 = this.m_game.getSetToken().iterator_0(); token$iterator1.hasNext_0();) {
    token = castTo(token$iterator1.next_1(), 19);
    this.checkFireDisableFlag_0(token, ($clinit_BoardFireCover$FdChange() , ALL), p_fdRemoved, p_fdAdded);
  }
  this.cleanFireDisableCollection(p_fdRemoved, p_fdAdded);
  if (this.m_game.getCurrentTimeStep() == 1) {
    colorLessFire = new EnuColor_0(this.m_game.getTeamByOrderIndex(0).getFireColor());
    for (token$iterator = this.m_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Freighter)) && jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
        this.incFireCover(token.getPosition(), 9, this.getFireCoverColor(token), true);
        this.incFireCover(token.getPosition(), 9, this.getFireCoverColor(token), true);
      }
       else if ((jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) && jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
        this.incFireCover(token.getPosition(), 6, colorLessFire, true);
        this.incFireCover(token.getPosition(), 6, colorLessFire, true);
        this.decFireCover(token.getPosition(), 4 + 1, colorLessFire, true);
        this.decFireCover(token.getPosition(), 4 + 1, colorLessFire, true);
      }
    }
  }
}
;
_.recursiveCheckFireDisableFlag = function recursiveCheckFireDisableFlag(p_token, p_fdChange, p_fdRemoved, p_fdAdded){
  var isFd, isFdChanged;
  isFd = p_token.isFireDisabled();
  isFdChanged = this.checkFireDisableFlag_0(p_token, p_fdChange, p_fdRemoved, p_fdAdded);
  if (isFd != p_token.isFireDisabled()) {
    isFdChanged = isFdChanged | this.checkFireDisableFlag(p_token.getPosition(), this.m_game.getTokenFireLength(p_token), fromDestroyerFireDisableStatus(p_token.isFireDisabled()), p_fdRemoved, p_fdAdded);
  }
  return isFdChanged;
}
;
_.removeFireDisabling = function removeFireDisabling(p_fireDisabling){
  if (!isNotNull(p_fireDisabling)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_fireDisabling.getTarget(this.m_game))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_fireDisabling.getDestroyer1(this.m_game))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_fireDisabling.getDestroyer2(this.m_game))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.decFireCover_1(p_fireDisabling.getTarget(this.m_game));
  p_fireDisabling.getTarget(this.m_game).removeFireDisabling(p_fireDisabling);
  p_fireDisabling.getDestroyer1(this.m_game).removeFireDisabling(p_fireDisabling);
  p_fireDisabling.getDestroyer2(this.m_game).removeFireDisabling(p_fireDisabling);
  this.incFireCover_1(p_fireDisabling.getTarget(this.m_game));
}
;
_.removeFireDisabling_0 = function removeFireDisabling_0(p_fireDisabling){
  var fd, fd$iterator;
  if (isNull(p_fireDisabling)) {
    return;
  }
  for (fd$iterator = p_fireDisabling.iterator_0(); fd$iterator.hasNext_0();) {
    fd = castTo(fd$iterator.next_1(), 96);
    this.removeFireDisabling(fd);
  }
}
;
var Lcom_fullmetalgalaxy_model_BoardFireCover_2_classLit = createForClass('com.fullmetalgalaxy.model', 'BoardFireCover', 795, Ljava_lang_Object_2_classLit);
function $clinit_Enum(){
  $clinit_Enum = emptyMethod;
  $clinit_Object();
}

function Enum(name_0, ordinal){
  $clinit_Enum();
  Object_0.call(this);
  this.$init_252();
  this.name_0 = name_0;
  this.ordinal = ordinal;
}

function createValueOfMap(enumConstants){
  $clinit_Enum();
  var result, value_0, value$array, value$index, value$max;
  result = createObject();
  for (value$array = enumConstants , value$index = 0 , value$max = value$array.length; value$index < value$max; ++value$index) {
    value_0 = value$array[value$index];
    put0(result, ':' + value_0.name_1(), value_0);
  }
  return result;
}

function get0(map_0, name_0){
  return map_0[name_0];
}

function put0(map_0, name_0, value_0){
  map_0[name_0] = value_0;
}

function valueOf(map_0, name_0){
  $clinit_Enum();
  var result;
  checkNotNull(name_0);
  result = get0(map_0, ':' + name_0);
  checkCriticalArgument_0(isNotNull(result), 'Enum constant undefined: %s', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), {4:1, 1:1, 5:1}, 1, 5, [name_0]));
  return result;
}

defineClass(7, 1, {4:1, 8:1, 7:1, 1:1});
_.$init_252 = function $init_252(){
}
;
_.compareTo_0 = function compareTo_0(other){
  return this.compareTo(castTo(other, 7));
}
;
_.compareTo = function compareTo(other){
  return this.ordinal - castTo(other, 7).ordinal;
}
;
_.equals_0 = function equals_3(other){
  return maskUndefined(this) === maskUndefined(other);
}
;
_.getDeclaringClass = function getDeclaringClass(){
  var clazz, superclass;
  clazz = getClass__Ljava_lang_Class___devirtual$(this);
  if (!isNotNull(clazz)) {
    debugger;
    throw toJs(makeAssertionError_Object('clazz'));
  }
  superclass = clazz.getEnumSuperclass();
  if (!isNotNull(superclass)) {
    debugger;
    throw toJs(makeAssertionError_Object('superclass'));
  }
  return jsEquals(superclass, Ljava_lang_Enum_2_classLit)?clazz:superclass;
}
;
_.hashCode_1 = function hashCode_3(){
  return getClassPrototype(1).hashCode_1.call(this);
}
;
_.name_1 = function name_1(){
  return jsNotEquals(this.name_0, null)?this.name_0:'' + this.ordinal;
}
;
_.ordinal_0 = function ordinal_0(){
  return this.ordinal;
}
;
_.toString_0 = function toString_10(){
  return this.name_1();
}
;
_.ordinal = 0;
var Ljava_lang_Enum_2_classLit = createForClass('java.lang', 'Enum', 7, Ljava_lang_Object_2_classLit);
function $clinit_BoardFireCover$FdChange(){
  $clinit_BoardFireCover$FdChange = emptyMethod;
  $clinit_Enum();
  ALL = new BoardFireCover$FdChange('ALL', 0);
  DISABLE = new BoardFireCover$FdChange('DISABLE', 1);
  ENABLE = new BoardFireCover$FdChange('ENABLE', 2);
}

function BoardFireCover$FdChange(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_253();
}

function fromDestroyerFireDisableStatus(p_isFireDisable){
  $clinit_BoardFireCover$FdChange();
  if (p_isFireDisable) {
    return ENABLE;
  }
  return DISABLE;
}

function valueOf_0(name_0){
  $clinit_BoardFireCover$FdChange();
  return valueOf(($clinit_BoardFireCover$FdChange$Map() , $MAP), name_0);
}

function values_1(){
  $clinit_BoardFireCover$FdChange();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_BoardFireCover$FdChange_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 242, 0, [ALL, DISABLE, ENABLE]);
}

defineClass(242, 7, {242:1, 4:1, 8:1, 7:1, 1:1}, BoardFireCover$FdChange);
_.$init_253 = function $init_253(){
}
;
var ALL, DISABLE, ENABLE;
var Lcom_fullmetalgalaxy_model_BoardFireCover$FdChange_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'BoardFireCover/FdChange', 242, Ljava_lang_Enum_2_classLit, values_1, valueOf_0);
function $clinit_BoardFireCover$FdChange$Map(){
  $clinit_BoardFireCover$FdChange$Map = emptyMethod;
  $MAP = createValueOfMap(values_1());
}

var $MAP;
function $clinit_IsSerializable(){
  $clinit_IsSerializable = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_IsSerializable_2_classLit = createForInterface('com.google.gwt.user.client.rpc', 'IsSerializable');
function $clinit_ChatMessage(){
  $clinit_ChatMessage = emptyMethod;
  $clinit_Object();
}

function ChatMessage(){
  $clinit_ChatMessage();
  Object_0.call(this);
  this.$init_254();
}

function ChatMessage_0(p_gameId, p_from, p_text){
  $clinit_ChatMessage();
  Object_0.call(this);
  this.$init_254();
  this.m_gameId = p_gameId;
  this.m_fromPseudo = p_from;
  this.m_text = p_text;
}

defineClass(132, 1, {132:1, 4:1, 1:1}, ChatMessage, ChatMessage_0);
_.$init_254 = function $init_254(){
  this.m_gameId = 0;
  this.m_text = '';
  this.m_fromPseudo = '';
  this.m_fromPageId = 0;
  this.m_date = new Date_1(currentTimeMillis_0());
}
;
_.getDate_0 = function getDate_0(){
  return this.m_date;
}
;
_.getFromPseudo = function getFromPseudo(){
  return this.m_fromPseudo;
}
;
_.getText = function getText(){
  return this.m_text;
}
;
_.isEmpty = function isEmpty_3(){
  return jsEquals(this.m_text, null) || isEmpty__Z__devirtual$(this.m_text);
}
;
_.setFromPageId = function setFromPageId(p_fromPageId){
  this.m_fromPageId = p_fromPageId;
}
;
_.setFromPseudo = function setFromPseudo(p_fromLogin){
  this.m_fromPseudo = p_fromLogin;
}
;
_.setGameId = function setGameId(p_gameId){
  this.m_gameId = p_gameId;
}
;
_.setText = function setText_2(p_text){
  this.m_text = p_text;
}
;
_.toString_0 = function toString_11(){
  return this.getFromPseudo() + ': ' + this.getText();
}
;
_.m_fromPageId = 0;
_.m_gameId = 0;
var Lcom_fullmetalgalaxy_model_ChatMessage_2_classLit = createForClass('com.fullmetalgalaxy.model', 'ChatMessage', 132, Ljava_lang_Object_2_classLit);
function $clinit_ChatMessage_FieldSerializer(){
  $clinit_ChatMessage_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_0(streamReader, instance){
  $clinit_ChatMessage_FieldSerializer();
  setM_date(instance, castTo(streamReader.readObject(), 30));
  setM_fromPageId(instance, streamReader.readInt());
  setM_fromPseudo(instance, streamReader.readString());
  setM_gameId(instance, streamReader.readLong());
  setM_text(instance, streamReader.readString());
}

function getM_date(instance){
  return instance.m_date;
}

function getM_fromPageId(instance){
  return instance.m_fromPageId;
}

function getM_fromPseudo(instance){
  return instance.m_fromPseudo;
}

function getM_gameId(instance){
  return instance.m_gameId;
}

function getM_text(instance){
  return instance.m_text;
}

function instantiate(streamReader){
  $clinit_ChatMessage_FieldSerializer();
  return new ChatMessage;
}

function serialize(streamWriter, instance){
  $clinit_ChatMessage_FieldSerializer();
  streamWriter.writeObject(getM_date(instance));
  streamWriter.writeInt(getM_fromPageId(instance));
  streamWriter.writeString(getM_fromPseudo(instance));
  streamWriter.writeLong(getM_gameId(instance));
  streamWriter.writeString(getM_text(instance));
}

function setM_date(instance, value_0){
  instance.m_date = value_0;
}

function setM_fromPageId(instance, value_0){
  instance.m_fromPageId = value_0;
}

function setM_fromPseudo(instance, value_0){
  instance.m_fromPseudo = value_0;
}

function setM_gameId(instance, value_0){
  instance.m_gameId = value_0;
}

function setM_text(instance, value_0){
  instance.m_text = value_0;
}

function $clinit_Company(){
  $clinit_Company = emptyMethod;
  $clinit_Enum();
  Freelancer = new Company('Freelancer', 0);
  Digging = new Company('Digging', 1);
  Stargate = new Company('Stargate', 2);
  TTC = new Company('TTC', 3);
  DSM = new Company('DSM', 4);
  Ranger = new Company('Ranger', 5);
  MDA = new Company('MDA', 6);
}

function Company(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_255();
}

function valueOf_1(name_0){
  $clinit_Company();
  return valueOf(($clinit_Company$Map() , $MAP_0), name_0);
}

function values_2(){
  $clinit_Company();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_Company_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 120, 0, [Freelancer, Digging, Stargate, TTC, DSM, Ranger, MDA]);
}

defineClass(120, 7, {120:1, 4:1, 8:1, 7:1, 1:1}, Company);
_.$init_255 = function $init_255(){
}
;
_.getFullName = function getFullName(){
  switch (this.ordinal_0()) {
    case Digging.ordinal_0():
      return 'Digging inc';
    case Stargate.ordinal_0():
      return 'Stargate Corp';
    case TTC.ordinal_0():
      return 'Tiberium Tuco Company';
    case DSM.ordinal_0():
      return 'Deep Space Mining';
    case Ranger.ordinal_0():
      return "Ranger's Corp";
    case MDA.ordinal_0():
      return "Les Mineurs d'Astorg";
    default:case Freelancer.ordinal_0():
      return this.toString_0();
  }
}
;
var DSM, Digging, Freelancer, MDA, Ranger, Stargate, TTC;
var Lcom_fullmetalgalaxy_model_Company_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'Company', 120, Ljava_lang_Enum_2_classLit, values_2, valueOf_1);
function $clinit_Company$Map(){
  $clinit_Company$Map = emptyMethod;
  $MAP_0 = createValueOfMap(values_2());
}

var $MAP_0;
function $clinit_Company_FieldSerializer(){
  $clinit_Company_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_1(streamReader, instance){
  $clinit_Company_FieldSerializer();
}

function instantiate_0(streamReader){
  $clinit_Company_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_2();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_0(streamWriter, instance){
  $clinit_Company_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_Coordinate(){
  $clinit_Coordinate = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_Coordinate_2_classLit = createForInterface('com.fullmetalgalaxy.model', 'Coordinate');
function $clinit_CoordinateSystem(){
  $clinit_CoordinateSystem = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_CoordinateSystem_2_classLit = createForInterface('com.fullmetalgalaxy.model', 'CoordinateSystem');
function $clinit_MyEnum(){
  $clinit_MyEnum = emptyMethod;
  $clinit_Object();
  Unknown = -1;
}

function MyEnum(){
  $clinit_MyEnum();
  Object_0.call(this);
  this.$init_256();
  this.m_value = -1;
}

function MyEnum_0(p_value){
  $clinit_MyEnum();
  Object_0.call(this);
  this.$init_256();
  this.setValue_3(p_value);
}

defineClass(178, 1, {178:1, 4:1, 1:1});
_.$init_256 = function $init_256(){
  this.m_value = -1;
}
;
_.equals_2 = function equals_4(obj){
  return this.getValue_1() == obj.getValue_1();
}
;
_.equals_0 = function equals_5(obj){
  var other, th;
  other = null;
  try {
    other = castTo(obj, 178);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 24)) {
      th = $e0;
      return getClassPrototype(1).equals_0.call(this, obj);
    }
     else 
      throw toJs($e0);
  }
  return this.equals_2(other);
}
;
_.getMaxValue = function getMaxValue(){
  return -1;
}
;
_.getValue_1 = function getValue_0(){
  return this.m_value;
}
;
_.hashCode_1 = function hashCode_4(){
  var prime, result;
  prime = 31;
  result = 1;
  result = 31 * result + this.m_value;
  return result;
}
;
_.setValue_3 = function setValue_1(p_value){
  this.m_value = p_value;
  if (p_value < 0 || p_value > this.getMaxValue()) {
    this.m_value = -1;
  }
}
;
_.toString_0 = function toString_12(){
  switch (this.getValue_1()) {
    case -1:
      return 'Unknown';
    default:return 'Unknown (' + this.getValue_1() + ')';
  }
}
;
_.m_value = 0;
var Unknown = 0;
var Lcom_fullmetalgalaxy_model_MyEnum_2_classLit = createForClass('com.fullmetalgalaxy.model', 'MyEnum', 178, Ljava_lang_Object_2_classLit);
function $clinit_EnuColor(){
  $clinit_EnuColor = emptyMethod;
  $clinit_MyEnum();
}

function EnuColor(){
  $clinit_EnuColor();
  MyEnum.call(this);
  this.$init_257();
}

function EnuColor_0(p_value){
  $clinit_EnuColor();
  MyEnum_0.call(this, p_value);
  this.$init_257();
}

function addColor_0(p_colorValue, p_colorToAdd){
  $clinit_EnuColor();
  return p_colorValue | p_colorToAdd;
}

function getAllSingleColor(){
  $clinit_EnuColor();
  return stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768]);
}

function getColorFromIndex(p_index){
  $clinit_EnuColor();
  switch (p_index) {
    case 0:
      return new EnuColor_0(1);
    case 1:
      return new EnuColor_0(2);
    case 2:
      return new EnuColor_0(256);
    case 3:
      return new EnuColor_0(128);
    case 4:
      return new EnuColor_0(4);
    case 5:
      return new EnuColor_0(16);
    case 6:
      return new EnuColor_0(8);
    case 7:
      return new EnuColor_0(32);
    case 8:
      return new EnuColor_0(64);
    case 9:
      return new EnuColor_0(512);
    case 10:
      return new EnuColor_0(1024);
    case 11:
      return new EnuColor_0(2048);
    case 12:
      return new EnuColor_0(4096);
    case 13:
      return new EnuColor_0(8192);
    case 14:
      return new EnuColor_0(16384);
    case 15:
      return new EnuColor_0(32768);
    default:return new EnuColor_0(0);
  }
}

function getMaxColorValue(){
  $clinit_EnuColor();
  return 0 + 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 16384 + 32768;
}

function getTotalNumberOfColor(){
  $clinit_EnuColor();
  return 16;
}

function isSingleColor_0(p_colorValue){
  $clinit_EnuColor();
  switch (p_colorValue) {
    case 1:
    case 2:
    case 256:
    case 128:
    case 4:
    case 16:
    case 8:
    case 32:
    case 64:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 16384:
    case 8192:
    case 32768:
      return true;
    case 0:
    case -1:
    default:return false;
  }
}

function removeColor_0(p_colorValue, p_colorToRemove){
  $clinit_EnuColor();
  return p_colorValue & (p_colorToRemove ^ getMaxColorValue());
}

function singleColorToString(p_colorValue){
  $clinit_EnuColor();
  switch (p_colorValue) {
    case 1:
      return 'blue';
    case 2:
      return 'cyan';
    case 256:
      return 'grey';
    case 128:
      return 'yellow';
    case 4:
      return 'olive';
    case 16:
      return 'red';
    case 8:
      return 'orange';
    case 32:
      return 'green';
    case 64:
      return 'purple';
    case 512:
      return 'brown';
    case 4096:
      return 'camouflage';
    case 32768:
      return 'lightning';
    case 16384:
      return 'pantera';
    case 2048:
      return 'pink';
    case 1024:
      return 'white';
    case 8192:
      return 'zebra';
    case 0:
      return 'colorless';
    case -1:
    default:return 'unknown';
  }
}

defineClass(34, 178, {34:1, 178:1, 4:1, 1:1}, EnuColor, EnuColor_0);
_.$init_257 = function $init_257(){
}
;
_.addColor = function addColor(p_colorValue){
  this.setValue_3(addColor_0(this.getValue_1(), p_colorValue));
}
;
_.addColor_0 = function addColor_1(p_color){
  this.addColor(p_color.getValue_1());
}
;
_.contain_1 = function contain_1(p_colorValue){
  return (this.getValue_1() & p_colorValue) != 0;
}
;
_.getColorIndex = function getColorIndex(){
  switch (this.getValue_1()) {
    case 1:
      return 0;
    case 2:
      return 1;
    case 256:
      return 2;
    case 128:
      return 3;
    case 4:
      return 4;
    case 16:
      return 5;
    case 8:
      return 6;
    case 32:
      return 7;
    case 64:
      return 8;
    case 512:
      return 9;
    case 1024:
      return 10;
    case 2048:
      return 11;
    case 4096:
      return 12;
    case 8192:
      return 13;
    case 16384:
      return 14;
    case 32768:
      return 15;
    case 0:
    case -1:
    default:return -1;
  }
}
;
_.getMaxValue = function getMaxValue_0(){
  return 0 + 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192 + 16384 + 32768;
}
;
_.getNbColor = function getNbColor(){
  var color_0, nb;
  nb = 0;
  for (color_0 = 1; color_0 <= getMaxColorValue(); color_0 *= 2) {
    if (this.isColored(color_0))
      nb++;
  }
  return nb;
}
;
_.getSingleColor = function getSingleColor(){
  var color_0, iColor;
  color_0 = null;
  for (iColor = 0; iColor < getTotalNumberOfColor(); iColor++) {
    color_0 = getColorFromIndex(iColor);
    if (this.isColored_0(color_0)) {
      return color_0;
    }
  }
  return new EnuColor_0(0);
}
;
_.isColored = function isColored(p_colorValue){
  return (this.getValue_1() & p_colorValue) == p_colorValue;
}
;
_.isColored_0 = function isColored_0(p_color){
  return this.isColored(p_color.getValue_1());
}
;
_.isSingleColor = function isSingleColor(){
  return isSingleColor_0(this.getValue_1());
}
;
_.removeColor = function removeColor(p_colorValue){
  this.setValue_3(removeColor_0(this.getValue_1(), p_colorValue));
}
;
_.toString_0 = function toString_13(){
  var color_0, isEmpty, str;
  if (this.isSingleColor() || this.getValue_1() == 0)
    return singleColorToString(this.getValue_1());
  if (this.getValue_1() == -1) {
    return getSingleColorString(0, -1);
  }
  str = '';
  isEmpty = true;
  for (color_0 = 1; color_0 <= getMaxColorValue(); color_0 *= 2) {
    if (this.isColored(color_0)) {
      str += '' + getSingleColorString(0, color_0);
      isEmpty = false;
    }
  }
  if (isEmpty) {
    str = getSingleColorString(0, 0);
  }
  return str;
}
;
var Lcom_fullmetalgalaxy_model_EnuColor_2_classLit = createForClass('com.fullmetalgalaxy.model', 'EnuColor', 34, Lcom_fullmetalgalaxy_model_MyEnum_2_classLit);
function $clinit_EnuZoom(){
  $clinit_EnuZoom = emptyMethod;
  $clinit_MyEnum();
}

function EnuZoom(p_value){
  $clinit_EnuZoom();
  MyEnum_0.call(this, p_value);
  this.$init_258();
}

defineClass(390, 178, {178:1, 4:1, 1:1}, EnuZoom);
_.$init_258 = function $init_258(){
}
;
_.getMaxValue = function getMaxValue_1(){
  return 2;
}
;
_.toString_0 = function toString_14(){
  switch (this.getValue_1()) {
    case 0:
      return 'strategy';
    case 1:
      return 'tactic';
    case -1:
    default:return getClassPrototype(178).toString_0.call(this);
  }
}
;
var Lcom_fullmetalgalaxy_model_EnuZoom_2_classLit = createForClass('com.fullmetalgalaxy.model', 'EnuZoom', 390, Lcom_fullmetalgalaxy_model_MyEnum_2_classLit);
function $clinit_GameEventStack(){
  $clinit_GameEventStack = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_GameEventStack_2_classLit = createForInterface('com.fullmetalgalaxy.model', 'GameEventStack');
function $clinit_GameGenerator(){
  $clinit_GameGenerator = emptyMethod;
  $clinit_Object();
}

function GameGenerator(game){
  $clinit_GameGenerator();
  Object_0.call(this);
  this.$init_259();
  this.game = game;
  this.s_oreAllowedOnLands.add_5(($clinit_LandType() , Montain));
  this.s_oreAllowedOnLands.add_5(($clinit_LandType() , Plain));
  this.s_oreAllowedOnLands.add_5(($clinit_LandType() , Marsh));
  this.s_oreAllowedOnLands.add_5(($clinit_LandType() , Reef));
}

defineClass(389, 1, {1:1}, GameGenerator);
_.$init_259 = function $init_259(){
  this.game = null;
  this.s_oreAllowedOnLands = new HashSet;
  this.s_useAllOre = false;
  this.s_useOreGenerator = false;
  this.m_mapSize = ($clinit_MapSize() , Medium);
  this.s_seaPercent = 40;
  this.s_landPercent = 60;
  this.s_isHexagonMap = false;
  this.s_isLakeBoard = true;
}
;
_.setGame = function setGame(game){
  this.game = game;
}
;
_.s_isHexagonMap = false;
_.s_isLakeBoard = false;
_.s_landPercent = 0;
_.s_seaPercent = 0;
_.s_useAllOre = false;
_.s_useOreGenerator = false;
var Lcom_fullmetalgalaxy_model_GameGenerator_2_classLit = createForClass('com.fullmetalgalaxy.model', 'GameGenerator', 389, Ljava_lang_Object_2_classLit);
function $clinit_GameServicesAsync(){
  $clinit_GameServicesAsync = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_GameServicesAsync_2_classLit = createForInterface('com.fullmetalgalaxy.model', 'GameServicesAsync');
function $clinit_SerializationStreamFactory(){
  $clinit_SerializationStreamFactory = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_SerializationStreamFactory_2_classLit = createForInterface('com.google.gwt.user.client.rpc', 'SerializationStreamFactory');
function $clinit_ServiceDefTarget(){
  $clinit_ServiceDefTarget = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_ServiceDefTarget_2_classLit = createForInterface('com.google.gwt.user.client.rpc', 'ServiceDefTarget');
function $clinit_HasRpcToken(){
  $clinit_HasRpcToken = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_HasRpcToken_2_classLit = createForInterface('com.google.gwt.user.client.rpc', 'HasRpcToken');
function $clinit_RemoteServiceProxy(){
  $clinit_RemoteServiceProxy = emptyMethod;
  $clinit_Object();
}

function RemoteServiceProxy(moduleBaseURL, remoteServiceRelativePath, serializationPolicyName, serializer){
  $clinit_RemoteServiceProxy();
  Object_0.call(this);
  this.$init_260();
  this.moduleBaseURL = moduleBaseURL;
  if (jsNotEquals(remoteServiceRelativePath, null)) {
    this.remoteServiceURL = moduleBaseURL + ('' + remoteServiceRelativePath);
  }
  this.serializer = serializer;
  this.serializationPolicyName = serializationPolicyName;
}

function getEncodedInstance(encodedResponse){
  if (isReturnValue(encodedResponse) || isThrownException(encodedResponse)) {
    return substring_I_Ljava_lang_String___devirtual$(encodedResponse, 4);
  }
  return encodedResponse;
}

function isReturnValue(encodedResponse){
  $clinit_RemoteServiceProxy();
  return startsWith_Ljava_lang_String__Z__devirtual$(encodedResponse, '//OK');
}

function isThrownException(encodedResponse){
  $clinit_RemoteServiceProxy();
  return startsWith_Ljava_lang_String__Z__devirtual$(encodedResponse, '//EX');
}

defineClass(377, 1, {1:1});
_.$init_260 = function $init_260(){
}
;
_.createStreamReader = function createStreamReader(encoded){
  var clientSerializationStreamReader;
  clientSerializationStreamReader = new ClientSerializationStreamReader(this.serializer);
  clientSerializationStreamReader.prepareToRead(getEncodedInstance(encoded));
  return clientSerializationStreamReader;
}
;
_.createStreamWriter = function createStreamWriter(){
  var clientSerializationStreamWriter;
  clientSerializationStreamWriter = new ClientSerializationStreamWriter(this.serializer, this.moduleBaseURL, this.serializationPolicyName);
  clientSerializationStreamWriter.prepareToWrite();
  return clientSerializationStreamWriter;
}
;
_.doCreateRequestCallback = function doCreateRequestCallback(responseReader, methodName, statsContext, callback){
  return new RequestCallbackAdapter(this, methodName, statsContext, callback, this.getRpcTokenExceptionHandler(), responseReader);
}
;
_.doInvoke = function doInvoke(responseReader, methodName, statsContext, requestData, callback){
  var ex, iex, rb;
  rb = this.doPrepareRequestBuilderImpl(responseReader, methodName, statsContext, requestData, callback);
  try {
    return rb.send_0();
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 165)) {
      ex = $e0;
      iex = new InvocationException_0('Unable to initiate the asynchronous service invocation (' + methodName + ') -- check the network connection', ex);
      callback.onFailure(iex);
    }
     else 
      throw toJs($e0);
  }
   finally {
    if (statsContext.isStatsAvailable_0()) {
      statsContext.stats(statsContext.bytesStat(methodName, length__I__devirtual$(requestData), 'requestSent'));
    }
  }
  return null;
}
;
_.doPrepareRequestBuilderImpl = function doPrepareRequestBuilderImpl(responseReader, methodName, statsContext, requestData, callback){
  var responseHandler;
  if (jsEquals(this.getServiceEntryPoint(), null)) {
    throw toJs(new ServiceDefTarget$NoServiceEntryPointSpecifiedException);
  }
  responseHandler = this.doCreateRequestCallback(responseReader, methodName, statsContext, callback);
  this.ensureRpcRequestBuilder();
  this.rpcRequestBuilder.create_0(this.getServiceEntryPoint());
  this.rpcRequestBuilder.setCallback_1(responseHandler);
  this.rpcRequestBuilder.setContentType('text/x-gwt-rpc; charset=utf-8');
  this.rpcRequestBuilder.setRequestData_0(requestData);
  this.rpcRequestBuilder.setRequestId(statsContext.getRequestId());
  return this.rpcRequestBuilder.finish_1();
}
;
_.ensureRpcRequestBuilder = function ensureRpcRequestBuilder(){
  if (isNull(this.rpcRequestBuilder)) {
    this.rpcRequestBuilder = new RpcRequestBuilder;
  }
}
;
_.getRpcToken = function getRpcToken(){
  return this.rpcToken;
}
;
_.getRpcTokenExceptionHandler = function getRpcTokenExceptionHandler(){
  return this.rpcTokenExceptionHandler;
}
;
_.getServiceEntryPoint = function getServiceEntryPoint(){
  return this.remoteServiceURL;
}
;
_.setServiceEntryPoint = function setServiceEntryPoint(url_0){
  this.remoteServiceURL = url_0;
}
;
var Lcom_google_gwt_user_client_rpc_impl_RemoteServiceProxy_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'RemoteServiceProxy', 377, Ljava_lang_Object_2_classLit);
function $clinit_GameServices_Proxy(){
  $clinit_GameServices_Proxy = emptyMethod;
  $clinit_RemoteServiceProxy();
  SERIALIZER = new GameServices_TypeSerializer;
}

function GameServices_Proxy(){
  $clinit_GameServices_Proxy();
  RemoteServiceProxy.call(this, getModuleBaseURL(), 'Services', '887D4FDFF7A5DB792E2DE4C615C3F397', SERIALIZER);
  this.$init_261();
}

defineClass(259, 377, {1142:1, 362:1, 1143:1, 1:1}, GameServices_Proxy);
_.$init_261 = function $init_261(){
}
;
_.checkUpdate = function checkUpdate(p_gameId, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'checkUpdate');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 1);
    streamWriter.writeString('J');
    streamWriter.writeLong(p_gameId);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , VOID));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
_.createStreamWriter = function createStreamWriter_0(){
  var toReturn;
  toReturn = castTo(getClassPrototype(377).createStreamWriter.call(this), 341);
  if (isNotNull(this.getRpcToken())) {
    toReturn.addFlags(2);
  }
  return toReturn;
}
;
_.disconnect = function disconnect(p_presence, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'disconnect');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 1);
    streamWriter.writeString('com.fullmetalgalaxy.model.Presence/1360205529');
    streamWriter.writeObject(p_presence);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , VOID));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
_.getAdditionalGameLog = function getAdditionalGameLog(p_gameId, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'getAdditionalGameLog');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 1);
    streamWriter.writeString('J');
    streamWriter.writeLong(p_gameId);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , OBJECT));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
_.getModelFmpInit = function getModelFmpInit(p_gameId, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'getModelFmpInit');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 1);
    streamWriter.writeString('java.lang.String/2004016611');
    streamWriter.writeString(p_gameId);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , OBJECT));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
_.getUpdate = function getUpdate(p_gameId, p_myVersion, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'getUpdate');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 2);
    streamWriter.writeString('J');
    streamWriter.writeString('J');
    streamWriter.writeLong(p_gameId);
    streamWriter.writeLong(p_myVersion);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , OBJECT));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
_.reconnect = function reconnect(p_presence, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'reconnect');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 1);
    streamWriter.writeString('com.fullmetalgalaxy.model.Presence/1360205529');
    streamWriter.writeObject(p_presence);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , STRING));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
_.runModelUpdate = function runModelUpdate(p_modelUpdate, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'runModelUpdate');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 1);
    streamWriter.writeString('com.fullmetalgalaxy.model.ModelFmpUpdate/3138838735');
    streamWriter.writeObject(p_modelUpdate);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , OBJECT));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
_.sendChatMessage = function sendChatMessage(p_message, callback){
  var ex, helper, streamWriter;
  helper = new RemoteServiceProxy$ServiceHelper(this, 'GameServices_Proxy', 'sendChatMessage');
  try {
    streamWriter = helper.start_2('com.fullmetalgalaxy.model.GameServices', 1);
    streamWriter.writeString('com.fullmetalgalaxy.model.ChatMessage/2535258450');
    streamWriter.writeObject(p_message);
    helper.finish_2(callback, ($clinit_RequestCallbackAdapter$ResponseReader() , VOID));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      ex = $e0;
      callback.onFailure(ex);
    }
     else 
      throw toJs($e0);
  }
}
;
var SERIALIZER;
var Lcom_fullmetalgalaxy_model_GameServices_1Proxy_2_classLit = createForClass('com.fullmetalgalaxy.model', 'GameServices_Proxy', 259, Lcom_google_gwt_user_client_rpc_impl_RemoteServiceProxy_2_classLit);
function $clinit_Serializer(){
  $clinit_Serializer = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_impl_Serializer_2_classLit = createForInterface('com.google.gwt.user.client.rpc.impl', 'Serializer');
function $clinit_SerializerBase(){
  $clinit_SerializerBase = emptyMethod;
  $clinit_Object();
}

function SerializerBase(methodMapJava, methodMapNative, signatureMapJava, signatureMapNative){
  $clinit_SerializerBase();
  Object_0.call(this);
  this.$init_262();
  this.handlerCache = new HashMap;
  this.methodMapJava = methodMapJava;
  this.methodMapNative = methodMapNative;
  this.signatureMapJava = signatureMapJava;
  this.signatureMapNative = signatureMapNative;
}

defineClass(607, 1, {1:1});
_.$init_262 = function $init_262(){
}
;
_.check = function check(typeSignature, length_0){
  if (isNull($get_2(this.methodMapNative, typeSignature))) {
    throw toJs(new SerializationException(typeSignature));
  }
  if (!($length($get_2(this.methodMapNative, typeSignature)) >= length_0)) {
    debugger;
    throw toJs(makeAssertionError_Object('Not enough methods, expecting ' + length_0 + ' saw ' + $length($get_2(this.methodMapNative, typeSignature))));
  }
}
;
_.deserialize_0 = function deserialize_2(stream, instance, typeSignature){
  var typeHandler;
  if (isScript_0()) {
    this.check(typeSignature, 2);
    $deserialize(this.methodMapNative, stream, instance, typeSignature);
  }
   else {
    typeHandler = this.getTypeHandler(typeSignature);
    typeHandler.deserial(stream, instance);
  }
}
;
_.getSerializationSignature = function getSerializationSignature(clazz){
  if (!isNotNull(clazz)) {
    debugger;
    throw toJs(makeAssertionError_Object('clazz'));
  }
  if (isScript_0()) {
    return $get_0(this.signatureMapNative, hashCode__I__devirtual$(clazz));
  }
   else {
    return castToString(this.signatureMapJava.get_1(clazz.getName()));
  }
}
;
_.getTypeHandler = function getTypeHandler(typeSignature){
  var e, klass, typeHandler, typeHandlerClass;
  typeHandlerClass = castToString(this.methodMapJava.get_1(typeSignature));
  if (jsEquals(typeHandlerClass, null)) {
    throw toJs(new SerializationException(typeSignature));
  }
  typeHandler = castTo(this.handlerCache.get_1(typeHandlerClass), 15);
  if (isNull(typeHandler)) {
    try {
      klass = loadClass(typeHandlerClass);
      typeHandler = castTo(castTo(newInstance_0(klass), 15), 15);
      this.handlerCache.put(typeHandlerClass, typeHandler);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new SerializationException_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
  return typeHandler;
}
;
_.instantiate = function instantiate_1(stream, typeSignature){
  var typeHandler;
  if (isScript_0()) {
    this.check(typeSignature, 1);
    return $instantiate(this.methodMapNative, stream, typeSignature);
  }
   else {
    typeHandler = this.getTypeHandler(typeSignature);
    return typeHandler.create_1(stream);
  }
}
;
_.serialize = function serialize_1(stream, instance, typeSignature){
  var typeHandler;
  if (isScript_0()) {
    this.check(typeSignature, 3);
    $serialize(this.methodMapNative, stream, instance, typeSignature);
  }
   else {
    typeHandler = this.getTypeHandler(typeSignature);
    typeHandler.serial(stream, instance);
  }
}
;
var Lcom_google_gwt_user_client_rpc_impl_SerializerBase_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'SerializerBase', 607, Ljava_lang_Object_2_classLit);
function $clinit_GameServices_TypeSerializer(){
  $clinit_GameServices_TypeSerializer = emptyMethod;
  $clinit_SerializerBase();
  {
    methodMapNative_0 = loadMethodsNative();
    signatureMapNative_0 = loadSignaturesNative();
  }
}

function GameServices_TypeSerializer(){
  $clinit_GameServices_TypeSerializer();
  SerializerBase.call(this, null, methodMapNative_0, null, signatureMapNative_0);
  this.$init_263();
}

function loadMethodsNative(){
  var result = {};
  result['[B/3308590456'] = [instantiate_112, deserialize_117, serialize_112];
  result['com.fullmetalgalaxy.model.ChatMessage/2535258450'] = [instantiate, deserialize_0, serialize];
  result['com.fullmetalgalaxy.model.Company/799026722'] = [instantiate_0, deserialize_1, serialize_0];
  result['com.fullmetalgalaxy.model.GameStatus/1576242291'] = [instantiate_2, deserialize_3, serialize_2];
  result['com.fullmetalgalaxy.model.GameType/1505173682'] = [instantiate_3, deserialize_4, serialize_3];
  result['com.fullmetalgalaxy.model.Location/873482117'] = [instantiate_4, deserialize_5, serialize_4];
  result['com.fullmetalgalaxy.model.MapShape/3124633492'] = [instantiate_5, deserialize_6, serialize_5];
  result['com.fullmetalgalaxy.model.ModelFmpInit/3901106331'] = [instantiate_6, deserialize_7];
  result['com.fullmetalgalaxy.model.ModelFmpUpdate/3138838735'] = [instantiate_7, deserialize_8, serialize_6];
  result['com.fullmetalgalaxy.model.PlanetType/2781726516'] = [instantiate_8, deserialize_9, serialize_7];
  result['com.fullmetalgalaxy.model.Presence/1360205529'] = [instantiate_12, deserialize_13, serialize_9];
  result['com.fullmetalgalaxy.model.Presence$ClientType/2388207833'] = [instantiate_11, deserialize_12, serialize_8];
  result['com.fullmetalgalaxy.model.PresenceRoom/2766768989'] = [instantiate_9, deserialize_10];
  result['[Lcom.fullmetalgalaxy.model.Presence;/1675116704'] = [instantiate_10, deserialize_11];
  result['com.fullmetalgalaxy.model.RpcFmpException/3092219040'] = [instantiate_13, deserialize_14];
  result['com.fullmetalgalaxy.model.Sector/1877529254'] = [instantiate_14, deserialize_15, serialize_10];
  result['com.fullmetalgalaxy.model.Tide/4078581920'] = [instantiate_15, deserialize_16, serialize_11];
  result['com.fullmetalgalaxy.model.TokenType/3249203916'] = [instantiate_16, deserialize_17, serialize_12];
  result['com.fullmetalgalaxy.model.constant.ConfigGameTime/1019747645'] = [instantiate_17, deserialize_18, serialize_13];
  result['com.fullmetalgalaxy.model.persist.AccountComment/3037386834'] = [instantiate_18, deserialize_19, serialize_14];
  result['com.fullmetalgalaxy.model.persist.AnBoardPosition/3793603335'] = [instantiate_19, deserialize_20, serialize_15];
  result['com.fullmetalgalaxy.model.persist.CompanyStatistics/1936218469'] = [instantiate_20, deserialize_23, serialize_18];
  result['com.fullmetalgalaxy.model.persist.EbBase/1093399040'] = [instantiate_21, deserialize_24, serialize_19];
  result['com.fullmetalgalaxy.model.persist.EbCommentBase/376522687'] = [instantiate_22, deserialize_25, serialize_20];
  result['com.fullmetalgalaxy.model.persist.EbConfigGameTime/2449449304'] = [instantiate_23, deserialize_26, serialize_21];
  result['com.fullmetalgalaxy.model.persist.EbConfigGameVariant/2223496812'] = [instantiate_24, deserialize_27, serialize_22];
  result['com.fullmetalgalaxy.model.persist.EbGameData/696497153'] = [instantiate_25, deserialize_29, serialize_24];
  result['com.fullmetalgalaxy.model.persist.EbGameLog/850805968'] = [instantiate_26, deserialize_30, serialize_25];
  result['com.fullmetalgalaxy.model.persist.EbGamePreview/3406039237'] = [instantiate_27, deserialize_31, serialize_26];
  result['com.fullmetalgalaxy.model.persist.EbPublicAccount/4097414481'] = [instantiate_28, deserialize_32, serialize_27];
  result['com.fullmetalgalaxy.model.persist.EbRegistration/1328800861'] = [instantiate_29, deserialize_33, serialize_28];
  result['com.fullmetalgalaxy.model.persist.EbTeam/3820852465'] = [instantiate_30, deserialize_34, serialize_29];
  result['com.fullmetalgalaxy.model.persist.EbToken/45014158'] = [instantiate_32, deserialize_36, serialize_31];
  result['[Lcom.fullmetalgalaxy.model.persist.EbToken;/3167954681'] = [instantiate_31, deserialize_35, serialize_30];
  result['com.fullmetalgalaxy.model.persist.FireDisabling/4189488491'] = [instantiate_34, deserialize_38, serialize_33];
  result['[Lcom.fullmetalgalaxy.model.persist.FireDisabling;/3276443123'] = [instantiate_33, deserialize_37, serialize_32];
  result['com.fullmetalgalaxy.model.persist.Game/3066018984'] = [instantiate_36, deserialize_41, serialize_36];
  result['com.fullmetalgalaxy.model.persist.GameStatistics/1394868306'] = [instantiate_35, deserialize_40, serialize_35];
  result['com.fullmetalgalaxy.model.persist.PlayerGameStatistics/3761462000'] = [instantiate_37, deserialize_42, serialize_37];
  result['com.fullmetalgalaxy.model.persist.gamelog.AnEvent/1282026302'] = [instantiate_44, deserialize_49, serialize_44];
  result['com.fullmetalgalaxy.model.persist.gamelog.AnEventList/1541296532'] = [instantiate_38, deserialize_43, serialize_38];
  result['com.fullmetalgalaxy.model.persist.gamelog.AnEventPlay/1539403453'] = [instantiate_40, deserialize_45, serialize_40];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.AnEventPlay;/4266824982'] = [instantiate_39, deserialize_44, serialize_39];
  result['com.fullmetalgalaxy.model.persist.gamelog.AnEventUser/3393021746'] = [instantiate_42, deserialize_47, serialize_42];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.AnEventUser;/1585821316'] = [instantiate_41, deserialize_46, serialize_41];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.AnEvent;/3192597192'] = [instantiate_43, deserialize_48, serialize_43];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbAdmin/3233455616'] = [instantiate_54, deserialize_59, serialize_54];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbAdminAbort/261770198'] = [instantiate_46, deserialize_51, serialize_46];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminAbort;/1392148047'] = [instantiate_45, deserialize_50, serialize_45];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbAdminBan/4270272077'] = [instantiate_48, deserialize_53, serialize_48];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminBan;/4178101927'] = [instantiate_47, deserialize_52, serialize_47];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePause/2611416551'] = [instantiate_50, deserialize_55, serialize_50];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePause;/2298443993'] = [instantiate_49, deserialize_54, serialize_49];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePlay/2230456855'] = [instantiate_52, deserialize_57, serialize_52];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePlay;/1728589138'] = [instantiate_51, deserialize_56, serialize_51];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdmin;/2270725426'] = [instantiate_53, deserialize_58, serialize_53];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtCancel/573854412'] = [instantiate_56, deserialize_61, serialize_56];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtCancel;/3699505133'] = [instantiate_55, deserialize_60, serialize_55];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtChangePlayerOrder/2327061844'] = [instantiate_58, deserialize_63, serialize_58];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtChangePlayerOrder;/2915147133'] = [instantiate_57, deserialize_62, serialize_57];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtConstruct/1353769187'] = [instantiate_60, deserialize_65, serialize_60];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtConstruct;/2405286926'] = [instantiate_59, deserialize_64, serialize_59];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtControl/2957456644'] = [instantiate_64, deserialize_69, serialize_64];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtControlFreighter/3387482297'] = [instantiate_62, deserialize_67, serialize_62];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtControlFreighter;/2799083939'] = [instantiate_61, deserialize_66, serialize_61];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtControl;/2918399194'] = [instantiate_63, deserialize_68, serialize_63];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtDeployment/2491702142'] = [instantiate_66, deserialize_71, serialize_66];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtDeployment;/1229517451'] = [instantiate_65, deserialize_70, serialize_65];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtFire/2046208666'] = [instantiate_68, deserialize_73, serialize_68];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtFire;/4157946403'] = [instantiate_67, deserialize_72, serialize_67];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtLand/1618674008'] = [instantiate_70, deserialize_75, serialize_70];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtLand;/3848918112'] = [instantiate_69, deserialize_74, serialize_69];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtLoad/1250841881'] = [instantiate_72, deserialize_77, serialize_72];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtLoad;/3481335717'] = [instantiate_71, deserialize_76, serialize_71];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtMessage/1577922233'] = [instantiate_74, deserialize_79, serialize_74];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtMessage;/3076418679'] = [instantiate_73, deserialize_78, serialize_73];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtMove/1291059480'] = [instantiate_76, deserialize_81, serialize_76];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtMove;/3793686048'] = [instantiate_75, deserialize_80, serialize_75];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtPlayerTurn/2370617833'] = [instantiate_78, deserialize_83, serialize_78];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtPlayerTurn;/2396127520'] = [instantiate_77, deserialize_82, serialize_77];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtRepair/3152666771'] = [instantiate_80, deserialize_85, serialize_80];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtRepair;/2146429394'] = [instantiate_79, deserialize_84, serialize_79];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtTakeOff/1623386636'] = [instantiate_82, deserialize_87, serialize_82];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTakeOff;/2031158692'] = [instantiate_81, deserialize_86, serialize_81];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtTide/2952170194'] = [instantiate_84, deserialize_89, serialize_84];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTide;/356862630'] = [instantiate_83, deserialize_88, serialize_83];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtTimeStep/839028355'] = [instantiate_86, deserialize_91, serialize_86];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTimeStep;/70295490'] = [instantiate_85, deserialize_90, serialize_85];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtTransfer/4076173149'] = [instantiate_88, deserialize_93, serialize_88];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTransfer;/410579370'] = [instantiate_87, deserialize_92, serialize_87];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbEvtUnLoad/3763004980'] = [instantiate_90, deserialize_95, serialize_90];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtUnLoad;/1571041178'] = [instantiate_89, deserialize_94, serialize_89];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbGameJoin/930028540'] = [instantiate_92, deserialize_97, serialize_92];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbGameJoin;/1196918533'] = [instantiate_91, deserialize_96, serialize_91];
  result['com.fullmetalgalaxy.model.persist.gamelog.EbRemember/696988367'] = [instantiate_94, deserialize_99, serialize_94];
  result['[Lcom.fullmetalgalaxy.model.persist.gamelog.EbRemember;/4251493710'] = [instantiate_93, deserialize_98, serialize_93];
  result['com.fullmetalgalaxy.model.persist.triggers.AnGameZone/3549986720'] = [instantiate_95, deserialize_100, serialize_95];
  result['com.fullmetalgalaxy.model.persist.triggers.EbTrigger/1305042193'] = [instantiate_97, deserialize_102, serialize_97];
  result['[Lcom.fullmetalgalaxy.model.persist.triggers.EbTrigger;/1367275450'] = [instantiate_96, deserialize_101, serialize_96];
  result['com.fullmetalgalaxy.model.persist.triggers.actions.AnAction/1899086985'] = [instantiate_98, deserialize_103, serialize_98];
  result['com.fullmetalgalaxy.model.persist.triggers.actions.EbActChangeTide/2221865424'] = [instantiate_99, deserialize_104, serialize_99];
  result['com.fullmetalgalaxy.model.persist.triggers.actions.EbActMessage/1079213135'] = [instantiate_100, deserialize_105, serialize_100];
  result['com.fullmetalgalaxy.model.persist.triggers.actions.EbActTakeOff/2550826692'] = [instantiate_101, deserialize_106, serialize_101];
  result['com.fullmetalgalaxy.model.persist.triggers.conditions.AnCondition/3127227898'] = [instantiate_102, deserialize_107, serialize_102];
  result['com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndPlayerColor/90513702'] = [instantiate_103, deserialize_108, serialize_103];
  result['com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndPuzzleLoad/1102290697'] = [instantiate_104, deserialize_109, serialize_104];
  result['com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndTokenColor/3053529935'] = [instantiate_105, deserialize_110, serialize_105];
  result['com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndTokenTypeZone/1219842554'] = [instantiate_106, deserialize_111, serialize_106];
  result['com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndTokenZone/2091487217'] = [instantiate_107, deserialize_112, serialize_107];
  result['com.google.appengine.api.datastore.Key/1349195865'] = [instantiate_108, deserialize_113, serialize_108];
  result['com.google.gwt.i18n.shared.impl.DateRecord/3173882066'] = [instantiate_109, deserialize_114, serialize_109];
  result['com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException/3936916533'] = [instantiate_110, deserialize_115, serialize_110];
  result['com.google.gwt.user.client.rpc.RpcTokenException/2345075298'] = [instantiate_111, deserialize_116];
  result['com.google.gwt.user.client.rpc.XsrfToken/4254043109'] = [undefined, undefined, serialize_111];
  result['com.googlecode.objectify.Key/1892801593'] = [instantiate_141, deserialize_153, serialize_148];
  result['java.lang.Boolean/476441737'] = [instantiate_113, deserialize_118, serialize_113];
  result['java.lang.Integer/3438268394'] = [instantiate_115, deserialize_121, serialize_116];
  result['[Ljava.lang.Integer;/1574882222'] = [instantiate_114, deserialize_120, serialize_115];
  result['java.lang.Long/4227064769'] = [instantiate_117, deserialize_123, serialize_118];
  result['[Ljava.lang.Long;/97727328'] = [instantiate_116, deserialize_122, serialize_117];
  result['java.lang.String/2004016611'] = [instantiate_119, deserialize_127, serialize_122];
  result['[Ljava.lang.String;/2600011424'] = [instantiate_118, deserialize_126, serialize_121];
  result['java.sql.Date/730999118'] = [instantiate_120, deserialize_129, serialize_124];
  result['java.sql.Time/1816797103'] = [instantiate_121, deserialize_130, serialize_125];
  result['java.sql.Timestamp/3040052672'] = [instantiate_122, deserialize_131, serialize_126];
  result['java.util.ArrayList/4159755760'] = [instantiate_123, deserialize_132, serialize_127];
  result['java.util.Arrays$ArrayList/2507071751'] = [instantiate_124, deserialize_133, serialize_128];
  result['java.util.Collections$EmptyList/4157118744'] = [instantiate_125, deserialize_135, serialize_130];
  result['java.util.Collections$EmptyMap/4174664486'] = [instantiate_126, deserialize_136, serialize_131];
  result['java.util.Collections$EmptySet/3523698179'] = [instantiate_127, deserialize_137, serialize_132];
  result['java.util.Collections$SingletonList/1586180994'] = [instantiate_128, deserialize_138, serialize_133];
  result['java.util.Date/3385151746'] = [instantiate_129, deserialize_139, serialize_134];
  result['java.util.EnumMap/1826390227'] = [instantiate_130, deserialize_140, serialize_135];
  result['java.util.HashMap/1797211028'] = [instantiate_131, deserialize_141, serialize_136];
  result['java.util.HashSet/3273092938'] = [instantiate_132, deserialize_142, serialize_137];
  result['java.util.IdentityHashMap/1839153020'] = [instantiate_133, deserialize_143, serialize_138];
  result['java.util.LinkedHashMap/3008245022'] = [instantiate_134, deserialize_144, serialize_139];
  result['java.util.LinkedHashSet/95640124'] = [instantiate_135, deserialize_145, serialize_140];
  result['java.util.LinkedList/3953877921'] = [instantiate_136, deserialize_146, serialize_141];
  result['java.util.Stack/1346942793'] = [instantiate_137, deserialize_148, serialize_143];
  result['java.util.TreeMap/1493889780'] = [instantiate_138, deserialize_149, serialize_144];
  result['java.util.TreeSet/4043497002'] = [instantiate_139, deserialize_150, serialize_145];
  result['java.util.Vector/3057315478'] = [instantiate_140, deserialize_151, serialize_146];
  return result;
}

function loadSignaturesNative(){
  var result = [];
  result[getObjectIdentityHashCode(getClassLiteralForArray(B_classLit, 1))] = '[B/3308590456';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_ChatMessage_2_classLit)] = 'com.fullmetalgalaxy.model.ChatMessage/2535258450';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_Company_2_classLit)] = 'com.fullmetalgalaxy.model.Company/799026722';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_GameStatus_2_classLit)] = 'com.fullmetalgalaxy.model.GameStatus/1576242291';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_GameType_2_classLit)] = 'com.fullmetalgalaxy.model.GameType/1505173682';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_Location_2_classLit)] = 'com.fullmetalgalaxy.model.Location/873482117';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_MapShape_2_classLit)] = 'com.fullmetalgalaxy.model.MapShape/3124633492';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_ModelFmpInit_2_classLit)] = 'com.fullmetalgalaxy.model.ModelFmpInit/3901106331';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_ModelFmpUpdate_2_classLit)] = 'com.fullmetalgalaxy.model.ModelFmpUpdate/3138838735';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_PlanetType_2_classLit)] = 'com.fullmetalgalaxy.model.PlanetType/2781726516';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_Presence_2_classLit)] = 'com.fullmetalgalaxy.model.Presence/1360205529';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_Presence$ClientType_2_classLit)] = 'com.fullmetalgalaxy.model.Presence$ClientType/2388207833';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_PresenceRoom_2_classLit)] = 'com.fullmetalgalaxy.model.PresenceRoom/2766768989';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_Presence_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.Presence;/1675116704';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_RpcFmpException_2_classLit)] = 'com.fullmetalgalaxy.model.RpcFmpException/3092219040';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_Sector_2_classLit)] = 'com.fullmetalgalaxy.model.Sector/1877529254';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_Tide_2_classLit)] = 'com.fullmetalgalaxy.model.Tide/4078581920';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_TokenType_2_classLit)] = 'com.fullmetalgalaxy.model.TokenType/3249203916';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_constant_ConfigGameTime_2_classLit)] = 'com.fullmetalgalaxy.model.constant.ConfigGameTime/1019747645';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_AccountComment_2_classLit)] = 'com.fullmetalgalaxy.model.persist.AccountComment/3037386834';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_AnBoardPosition_2_classLit)] = 'com.fullmetalgalaxy.model.persist.AnBoardPosition/3793603335';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_CompanyStatistics_2_classLit)] = 'com.fullmetalgalaxy.model.persist.CompanyStatistics/1936218469';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbBase/1093399040';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbCommentBase_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbCommentBase/376522687';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbConfigGameTime_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbConfigGameTime/2449449304';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbConfigGameVariant_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbConfigGameVariant/2223496812';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbGameData_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbGameData/696497153';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbGameLog_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbGameLog/850805968';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbGamePreview_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbGamePreview/3406039237';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbPublicAccount_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbPublicAccount/4097414481';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbRegistration_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbRegistration/1328800861';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbTeam_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbTeam/3820852465';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_EbToken_2_classLit)] = 'com.fullmetalgalaxy.model.persist.EbToken/45014158';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_EbToken_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.EbToken;/3167954681';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_FireDisabling_2_classLit)] = 'com.fullmetalgalaxy.model.persist.FireDisabling/4189488491';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_FireDisabling_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.FireDisabling;/3276443123';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_Game_2_classLit)] = 'com.fullmetalgalaxy.model.persist.Game/3066018984';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_GameStatistics_2_classLit)] = 'com.fullmetalgalaxy.model.persist.GameStatistics/1394868306';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_PlayerGameStatistics_2_classLit)] = 'com.fullmetalgalaxy.model.persist.PlayerGameStatistics/3761462000';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.AnEvent/1282026302';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventList_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.AnEventList/1541296532';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.AnEventPlay/1539403453';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.AnEventPlay;/4266824982';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.AnEventUser/3393021746';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.AnEventUser;/1585821316';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.AnEvent;/3192597192';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbAdmin/3233455616';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminAbort_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbAdminAbort/261770198';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminAbort_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminAbort;/1392148047';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminBan_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbAdminBan/4270272077';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminBan_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminBan;/4178101927';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePause_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePause/2611416551';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePause_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePause;/2298443993';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePlay_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePlay/2230456855';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePlay_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdminTimePlay;/1728589138';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbAdmin;/2270725426';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtCancel_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtCancel/573854412';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtCancel_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtCancel;/3699505133';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtChangePlayerOrder_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtChangePlayerOrder/2327061844';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtChangePlayerOrder_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtChangePlayerOrder;/2915147133';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtConstruct_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtConstruct/1353769187';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtConstruct_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtConstruct;/2405286926';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControl_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtControl/2957456644';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControlFreighter_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtControlFreighter/3387482297';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControlFreighter_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtControlFreighter;/2799083939';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControl_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtControl;/2918399194';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtDeployment_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtDeployment/2491702142';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtDeployment_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtDeployment;/1229517451';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtFire_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtFire/2046208666';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtFire_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtFire;/4157946403';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLand_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtLand/1618674008';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLand_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtLand;/3848918112';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLoad_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtLoad/1250841881';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLoad_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtLoad;/3481335717';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMessage_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtMessage/1577922233';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMessage_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtMessage;/3076418679';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMove_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtMove/1291059480';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMove_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtMove;/3793686048';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtPlayerTurn_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtPlayerTurn/2370617833';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtPlayerTurn_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtPlayerTurn;/2396127520';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtRepair_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtRepair/3152666771';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtRepair_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtRepair;/2146429394';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTakeOff_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtTakeOff/1623386636';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTakeOff_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTakeOff;/2031158692';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTide_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtTide/2952170194';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTide_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTide;/356862630';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTimeStep_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtTimeStep/839028355';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTimeStep_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTimeStep;/70295490';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTransfer_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtTransfer/4076173149';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTransfer_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtTransfer;/410579370';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtUnLoad_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbEvtUnLoad/3763004980';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtUnLoad_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbEvtUnLoad;/1571041178';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbGameJoin_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbGameJoin/930028540';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbGameJoin_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbGameJoin;/1196918533';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_gamelog_EbRemember_2_classLit)] = 'com.fullmetalgalaxy.model.persist.gamelog.EbRemember/696988367';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbRemember_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.gamelog.EbRemember;/4251493710';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_AnGameZone_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.AnGameZone/3549986720';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_EbTrigger_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.EbTrigger/1305042193';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_triggers_EbTrigger_2_classLit, 1))] = '[Lcom.fullmetalgalaxy.model.persist.triggers.EbTrigger;/1367275450';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_actions_AnAction_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.actions.AnAction/1899086985';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_actions_EbActChangeTide_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.actions.EbActChangeTide/2221865424';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_actions_EbActMessage_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.actions.EbActMessage/1079213135';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_actions_EbActTakeOff_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.actions.EbActTakeOff/2550826692';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_conditions_AnCondition_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.conditions.AnCondition/3127227898';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndPlayerColor_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndPlayerColor/90513702';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndPuzzleLoad_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndPuzzleLoad/1102290697';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndTokenColor_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndTokenColor/3053529935';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndTokenTypeZone_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndTokenTypeZone/1219842554';
  result[getObjectIdentityHashCode(Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndTokenZone_2_classLit)] = 'com.fullmetalgalaxy.model.persist.triggers.conditions.EbCndTokenZone/2091487217';
  result[getObjectIdentityHashCode(Lcom_google_appengine_api_datastore_Key_2_classLit)] = 'com.google.appengine.api.datastore.Key/1349195865';
  result[getObjectIdentityHashCode(Lcom_google_gwt_i18n_shared_impl_DateRecord_2_classLit)] = 'com.google.gwt.i18n.shared.impl.DateRecord/3173882066';
  result[getObjectIdentityHashCode(Lcom_google_gwt_user_client_rpc_IncompatibleRemoteServiceException_2_classLit)] = 'com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException/3936916533';
  result[getObjectIdentityHashCode(Lcom_google_gwt_user_client_rpc_RpcTokenException_2_classLit)] = 'com.google.gwt.user.client.rpc.RpcTokenException/2345075298';
  result[getObjectIdentityHashCode(Lcom_google_gwt_user_client_rpc_XsrfToken_2_classLit)] = 'com.google.gwt.user.client.rpc.XsrfToken/4254043109';
  result[getObjectIdentityHashCode(Lcom_googlecode_objectify_Key_2_classLit)] = 'com.googlecode.objectify.Key/1892801593';
  result[getObjectIdentityHashCode(Ljava_lang_Boolean_2_classLit)] = 'java.lang.Boolean/476441737';
  result[getObjectIdentityHashCode(Ljava_lang_Integer_2_classLit)] = 'java.lang.Integer/3438268394';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1))] = '[Ljava.lang.Integer;/1574882222';
  result[getObjectIdentityHashCode(Ljava_lang_Long_2_classLit)] = 'java.lang.Long/4227064769';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Ljava_lang_Long_2_classLit, 1))] = '[Ljava.lang.Long;/97727328';
  result[getObjectIdentityHashCode(Ljava_lang_String_2_classLit)] = 'java.lang.String/2004016611';
  result[getObjectIdentityHashCode(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1))] = '[Ljava.lang.String;/2600011424';
  result[getObjectIdentityHashCode(Ljava_sql_Date_2_classLit)] = 'java.sql.Date/730999118';
  result[getObjectIdentityHashCode(Ljava_sql_Time_2_classLit)] = 'java.sql.Time/1816797103';
  result[getObjectIdentityHashCode(Ljava_sql_Timestamp_2_classLit)] = 'java.sql.Timestamp/3040052672';
  result[getObjectIdentityHashCode(Ljava_util_ArrayList_2_classLit)] = 'java.util.ArrayList/4159755760';
  result[getObjectIdentityHashCode(Ljava_util_Arrays$ArrayList_2_classLit)] = 'java.util.Arrays$ArrayList/2507071751';
  result[getObjectIdentityHashCode(Ljava_util_Collections$EmptyList_2_classLit)] = 'java.util.Collections$EmptyList/4157118744';
  result[getObjectIdentityHashCode(Ljava_util_Collections$EmptyMap_2_classLit)] = 'java.util.Collections$EmptyMap/4174664486';
  result[getObjectIdentityHashCode(Ljava_util_Collections$EmptySet_2_classLit)] = 'java.util.Collections$EmptySet/3523698179';
  result[getObjectIdentityHashCode(Ljava_util_Collections$SingletonList_2_classLit)] = 'java.util.Collections$SingletonList/1586180994';
  result[getObjectIdentityHashCode(Ljava_util_Date_2_classLit)] = 'java.util.Date/3385151746';
  result[getObjectIdentityHashCode(Ljava_util_EnumMap_2_classLit)] = 'java.util.EnumMap/1826390227';
  result[getObjectIdentityHashCode(Ljava_util_HashMap_2_classLit)] = 'java.util.HashMap/1797211028';
  result[getObjectIdentityHashCode(Ljava_util_HashSet_2_classLit)] = 'java.util.HashSet/3273092938';
  result[getObjectIdentityHashCode(Ljava_util_IdentityHashMap_2_classLit)] = 'java.util.IdentityHashMap/1839153020';
  result[getObjectIdentityHashCode(Ljava_util_LinkedHashMap_2_classLit)] = 'java.util.LinkedHashMap/3008245022';
  result[getObjectIdentityHashCode(Ljava_util_LinkedHashSet_2_classLit)] = 'java.util.LinkedHashSet/95640124';
  result[getObjectIdentityHashCode(Ljava_util_LinkedList_2_classLit)] = 'java.util.LinkedList/3953877921';
  result[getObjectIdentityHashCode(Ljava_util_Stack_2_classLit)] = 'java.util.Stack/1346942793';
  result[getObjectIdentityHashCode(Ljava_util_TreeMap_2_classLit)] = 'java.util.TreeMap/1493889780';
  result[getObjectIdentityHashCode(Ljava_util_TreeSet_2_classLit)] = 'java.util.TreeSet/4043497002';
  result[getObjectIdentityHashCode(Ljava_util_Vector_2_classLit)] = 'java.util.Vector/3057315478';
  return result;
}

defineClass(608, 607, {1:1}, GameServices_TypeSerializer);
_.$init_263 = function $init_263(){
}
;
var methodMapNative_0, signatureMapNative_0;
var Lcom_fullmetalgalaxy_model_GameServices_1TypeSerializer_2_classLit = createForClass('com.fullmetalgalaxy.model', 'GameServices_TypeSerializer', 608, Lcom_google_gwt_user_client_rpc_impl_SerializerBase_2_classLit);
function $clinit_GameStatus(){
  $clinit_GameStatus = emptyMethod;
  $clinit_Enum();
  Unknown_0 = new GameStatus('Unknown', 0);
  Open = new GameStatus('Open', 1);
  Pause = new GameStatus('Pause', 2);
  Running = new GameStatus('Running', 3);
  Aborted = new GameStatus('Aborted', 4);
  History_0 = new GameStatus('History', 5);
  Puzzle = new GameStatus('Puzzle', 6);
  Scenario = new GameStatus('Scenario', 7);
  Practice = new GameStatus('Practice', 8);
}

function GameStatus(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_264();
}

function valueOf_2(name_0){
  $clinit_GameStatus();
  return valueOf(($clinit_GameStatus$Map() , $MAP_1), name_0);
}

function values_3(){
  $clinit_GameStatus();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_GameStatus_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 126, 0, [Unknown_0, Open, Pause, Running, Aborted, History_0, Puzzle, Scenario, Practice]);
}

defineClass(126, 7, {126:1, 4:1, 8:1, 7:1, 1:1}, GameStatus);
_.$init_264 = function $init_264(){
}
;
_.getIconAsHtml = function getIconAsHtml(){
  return "<image src='" + this.getIconFileName() + "' />";
}
;
_.getIconFileName = function getIconFileName(){
  switch (this.ordinal_0()) {
    case Open.ordinal_0():
      return '/images/icons/open16.png';
    case Aborted.ordinal_0():
      return '/images/icons/canceled16.png';
    case Pause.ordinal_0():
      return '/images/icons/pause16.png';
    case History_0.ordinal_0():
      return '/images/icons/history16.png';
    default:case Scenario.ordinal_0():
    case Practice.ordinal_0():
    case Puzzle.ordinal_0():
      return '/images/icons/puzzle16.png';
    case Running.ordinal_0():
      return '/images/icons/running16.png';
  }
}
;
var Aborted, History_0, Open, Pause, Practice, Puzzle, Running, Scenario, Unknown_0;
var Lcom_fullmetalgalaxy_model_GameStatus_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'GameStatus', 126, Ljava_lang_Enum_2_classLit, values_3, valueOf_2);
function $clinit_GameStatus$Map(){
  $clinit_GameStatus$Map = emptyMethod;
  $MAP_1 = createValueOfMap(values_3());
}

var $MAP_1;
function $clinit_GameStatus_FieldSerializer(){
  $clinit_GameStatus_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_3(streamReader, instance){
  $clinit_GameStatus_FieldSerializer();
}

function instantiate_2(streamReader){
  $clinit_GameStatus_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_3();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_2(streamWriter, instance){
  $clinit_GameStatus_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_GameType(){
  $clinit_GameType = emptyMethod;
  $clinit_Enum();
  MultiPlayer = new GameType('MultiPlayer', 0);
  Initiation = new GameType('Initiation', 1);
  Puzzle_0 = new GameType('Puzzle', 2);
  Scenario_0 = new GameType('Scenario', 3);
  Practice_0 = new GameType('Practice', 4);
}

function GameType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_265();
}

function valueOf_3(name_0){
  $clinit_GameType();
  return valueOf(($clinit_GameType$Map() , $MAP_2), name_0);
}

function values_4(){
  $clinit_GameType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_GameType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 162, 0, [MultiPlayer, Initiation, Puzzle_0, Scenario_0, Practice_0]);
}

defineClass(162, 7, {162:1, 4:1, 8:1, 7:1, 1:1}, GameType);
_.$init_265 = function $init_265(){
}
;
_.getIconAsHtml = function getIconAsHtml_0(){
  if (isEmpty__Z__devirtual$(this.getIconFileName_0())) {
    return '';
  }
  return "<image src='" + this.getIconFileName_0() + "' />";
}
;
_.getIconFileName_0 = function getIconFileName_0(){
  switch (this.ordinal_0()) {
    default:case MultiPlayer.ordinal_0():
      return '';
    case Initiation.ordinal_0():
      return '/images/icons/initiation16.png';
    case Scenario_0.ordinal_0():
    case Practice_0.ordinal_0():
    case Puzzle_0.ordinal_0():
      return '/images/icons/puzzle16.png';
  }
}
;
var Initiation, MultiPlayer, Practice_0, Puzzle_0, Scenario_0;
var Lcom_fullmetalgalaxy_model_GameType_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'GameType', 162, Ljava_lang_Enum_2_classLit, values_4, valueOf_3);
function $clinit_GameType$Map(){
  $clinit_GameType$Map = emptyMethod;
  $MAP_2 = createValueOfMap(values_4());
}

var $MAP_2;
function $clinit_GameType_FieldSerializer(){
  $clinit_GameType_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_4(streamReader, instance){
  $clinit_GameType_FieldSerializer();
}

function instantiate_3(streamReader){
  $clinit_GameType_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_4();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_3(streamWriter, instance){
  $clinit_GameType_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_HexCoordinateSystem(){
  $clinit_HexCoordinateSystem = emptyMethod;
  $clinit_Object();
}

function HexCoordinateSystem(){
  $clinit_HexCoordinateSystem();
  Object_0.call(this);
  this.$init_266();
}

defineClass(163, 1, {1:1}, HexCoordinateSystem);
_.$init_266 = function $init_266(){
}
;
_.areNeighbor = function areNeighbor(p_A, p_B){
  var distance;
  distance = this.getStraightDistance(p_A, p_B);
  return distance < 1.1 && distance > 0.9;
}
;
_.drawHexagon = function drawHexagon(p_center, p_radius){
  var i, i0, i1, i2, i3, i4, list;
  list = new ArrayList;
  p_center = p_center.newInstance();
  p_center.setY(p_center.getY() - p_radius);
  for (i0 = 0; i0 < p_radius; i0++) {
    p_center = this.getNeighbor(p_center, ($clinit_Sector() , SouthWest));
    list.add_5(p_center);
  }
  for (i1 = 0; i1 < p_radius; i1++) {
    p_center = this.getNeighbor(p_center, ($clinit_Sector() , South));
    list.add_5(p_center);
  }
  for (i2 = 0; i2 < p_radius; i2++) {
    p_center = this.getNeighbor(p_center, ($clinit_Sector() , SouthEast));
    list.add_5(p_center);
  }
  for (i3 = 0; i3 < p_radius; i3++) {
    p_center = this.getNeighbor(p_center, ($clinit_Sector() , NorthEast));
    list.add_5(p_center);
  }
  for (i4 = 0; i4 < p_radius; i4++) {
    p_center = this.getNeighbor(p_center, ($clinit_Sector() , North));
    list.add_5(p_center);
  }
  for (i = 0; i < p_radius; i++) {
    p_center = this.getNeighbor(p_center, ($clinit_Sector() , NorthWest));
    list.add_5(p_center);
  }
  return list;
}
;
_.getAllNeighbors = function getAllNeighbors(p_origin){
  var neighbors, sector, sector$array, sector$index, sector$max;
  neighbors = new HashSet;
  for (sector$array = values_11() , sector$index = 0 , sector$max = sector$array.length; sector$index < sector$max; ++sector$index) {
    sector = sector$array[sector$index];
    neighbors.add_5(this.getNeighbor(p_origin, sector));
  }
  return neighbors;
}
;
_.getDiscreteDistance = function getDiscreteDistance(p_A, p_B){
  var a, dx, dy;
  dy = p_B.getY() - p_A.getY();
  dx = $wnd.Math.abs(p_B.getX() - p_A.getX());
  a = narrow_int(dx / 2);
  if (p_A.getX() % 2 != 0 && p_B.getX() % 2 == 0 && dy > 0 || p_A.getX() % 2 == 0 && p_B.getX() % 2 != 0 && dy < 0) {
    a++;
  }
  dy = $wnd.Math.abs(dy) - a;
  if (dy < 0) {
    dy = 0;
  }
  return dx + dy;
}
;
_.getNeighbor = function getNeighbor(p_origin, p_sector){
  var neighbour;
  if (!isNotNull(p_origin)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_sector)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  neighbour = new AnBoardPosition_1(p_origin.getX(), p_origin.getY(), p_sector);
  switch (p_sector.ordinal_0()) {
    case ($clinit_Sector() , North).ordinal_0():
      neighbour.setY(p_origin.getY() - 1);
      break;
    case ($clinit_Sector() , NorthEast).ordinal_0():
      neighbour.setX(p_origin.getX() + 1);
      if (p_origin.getX() % 2 == 0) {
        neighbour.setY(p_origin.getY() - 1);
      }

      break;
    case ($clinit_Sector() , SouthEast).ordinal_0():
      neighbour.setX(p_origin.getX() + 1);
      if (p_origin.getX() % 2 != 0) {
        neighbour.setY(p_origin.getY() + 1);
      }

      break;
    case ($clinit_Sector() , South).ordinal_0():
      neighbour.setY(p_origin.getY() + 1);
      break;
    case ($clinit_Sector() , SouthWest).ordinal_0():
      neighbour.setX(p_origin.getX() - 1);
      if (p_origin.getX() % 2 != 0) {
        neighbour.setY(p_origin.getY() + 1);
      }

      break;
    case ($clinit_Sector() , NorthWest).ordinal_0():
      neighbour.setX(p_origin.getX() - 1);
      if (p_origin.getX() % 2 == 0) {
        neighbour.setY(p_origin.getY() - 1);
      }

      break;
    default:break;
  }
  return neighbour;
}
;
_.getSector_0 = function getSector_0(p_origin, p_to){
  var distance, i, sector, tmp, values;
  if (!isNotNull(p_origin)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_to)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  sector = ($clinit_Sector() , North);
  distance = 1.7976931348623157E308;
  tmp = 0;
  values = values_11();
  for (i = 0; i < values.length; i++) {
    tmp = this.getStraightDistance(p_to, this.getNeighbor(p_origin, values[i]));
    if (tmp < distance) {
      distance = tmp;
      sector = values[i];
    }
  }
  return sector;
}
;
_.getStraightDistance = function getStraightDistance(p_A, p_B){
  var fx, fy;
  fx = (p_B.getX() - p_A.getX()) * 0.8660254037844386;
  fy = p_B.getY() - p_A.getY();
  if (p_B.getX() % 2 != 0)
    fy += 0.5;
  if (p_A.getX() % 2 != 0)
    fy -= 0.5;
  return $wnd.Math.sqrt(fx * fx + fy * fy);
}
;
_.normalizePosition = function normalizePosition(p_position){
  return p_position;
}
;
var Lcom_fullmetalgalaxy_model_HexCoordinateSystem_2_classLit = createForClass('com.fullmetalgalaxy.model', 'HexCoordinateSystem', 163, Ljava_lang_Object_2_classLit);
function $clinit_HexTorusCoordinateSystem(){
  $clinit_HexTorusCoordinateSystem = emptyMethod;
  $clinit_HexCoordinateSystem();
}

function HexTorusCoordinateSystem(p_mapShape, p_width, p_height){
  $clinit_HexTorusCoordinateSystem();
  HexCoordinateSystem.call(this);
  this.$init_267();
  if (isNotNull(p_mapShape)) {
    this.m_mapShape = p_mapShape;
  }
  this.m_width = p_width;
  this.m_height = p_height;
}

defineClass(963, 163, {1:1}, HexTorusCoordinateSystem);
_.$init_267 = function $init_267(){
  this.m_mapShape = ($clinit_MapShape() , Flat);
  this.m_width = 2147483647;
  this.m_height = 2147483647;
}
;
_.areNeighbor = function areNeighbor_0(p_A, p_B){
  return getClassPrototype(163).areNeighbor.call(this, p_A, this.getClosestB(p_A, p_B));
}
;
_.drawHexagon = function drawHexagon_0(p_center, p_radius){
  var list, listTmp, position, position$iterator;
  listTmp = getClassPrototype(163).drawHexagon.call(this, p_center, p_radius);
  list = new ArrayList;
  for (position$iterator = listTmp.iterator_0(); position$iterator.hasNext_0();) {
    position = castTo(position$iterator.next_1(), 23);
    list.add_5(this.normalizePosition(position));
  }
  return list;
}
;
_.getAllNeighbors = function getAllNeighbors_0(p_origin){
  var neighbors, sector, sector$array, sector$index, sector$max;
  neighbors = new HashSet;
  for (sector$array = values_11() , sector$index = 0 , sector$max = sector$array.length; sector$index < sector$max; ++sector$index) {
    sector = sector$array[sector$index];
    neighbors.add_5(this.normalizePosition(this.getNeighbor(p_origin, sector)));
  }
  return neighbors;
}
;
_.getClosestB = function getClosestB(p_A, p_B){
  p_B = new AnBoardPosition_2(p_B);
  if (this.m_mapShape.isEWLinked()) {
    if ($wnd.Math.abs(p_B.getX() + this.m_width - p_A.getX()) < $wnd.Math.abs(p_B.getX() - p_A.getX())) {
      p_B.setX(p_B.getX() + this.m_width);
    }
     else if ($wnd.Math.abs(p_B.getX() - this.m_width - p_A.getX()) < $wnd.Math.abs(p_B.getX() - p_A.getX())) {
      p_B.setX(p_B.getX() - this.m_width);
    }
  }
  if (this.m_mapShape.isNSLinked()) {
    if ($wnd.Math.abs(p_B.getY() + this.m_height - p_A.getY()) < $wnd.Math.abs(p_B.getY() - p_A.getY())) {
      p_B.setY(p_B.getY() + this.m_height);
    }
     else if ($wnd.Math.abs(p_B.getY() - this.m_height - p_A.getY()) < $wnd.Math.abs(p_B.getY() - p_A.getY())) {
      p_B.setY(p_B.getY() - this.m_height);
    }
  }
  return p_B;
}
;
_.getDiscreteDistance = function getDiscreteDistance_0(p_A, p_B){
  return getClassPrototype(163).getDiscreteDistance.call(this, p_A, this.getClosestB(p_A, p_B));
}
;
_.getNeighbor = function getNeighbor_0(p_origin, p_sector){
  return this.normalizePosition(getClassPrototype(163).getNeighbor.call(this, p_origin, p_sector));
}
;
_.getSector_0 = function getSector_1(p_origin, p_to){
  return getClassPrototype(163).getSector_0.call(this, p_origin, this.getClosestB(p_origin, p_to));
}
;
_.getStraightDistance = function getStraightDistance_0(p_A, p_B){
  return getClassPrototype(163).getStraightDistance.call(this, p_A, this.getClosestB(p_A, p_B));
}
;
_.normalizePosition = function normalizePosition_0(p_position){
  if (isNotNull(p_position) && this.m_mapShape.isEWLinked()) {
    if (p_position.getX() >= this.m_width)
      p_position.setX(p_position.getX() - this.m_width);
    if (p_position.getX() < 0)
      p_position.setX(p_position.getX() + this.m_width);
  }
  if (isNotNull(p_position) && this.m_mapShape.isNSLinked()) {
    if (p_position.getY() >= this.m_height)
      p_position.setY(p_position.getY() - this.m_height);
    if (p_position.getY() < 0)
      p_position.setY(p_position.getY() + this.m_height);
  }
  return p_position;
}
;
_.m_height = 0;
_.m_width = 0;
var Lcom_fullmetalgalaxy_model_HexTorusCoordinateSystem_2_classLit = createForClass('com.fullmetalgalaxy.model', 'HexTorusCoordinateSystem', 963, Lcom_fullmetalgalaxy_model_HexCoordinateSystem_2_classLit);
function $clinit_LandType(){
  $clinit_LandType = emptyMethod;
  $clinit_Enum();
  None = new LandType('None', 0);
  Sea = new LandType('Sea', 1);
  Reef = new LandType('Reef', 2);
  Marsh = new LandType('Marsh', 3);
  Plain = new LandType('Plain', 4);
  Montain = new LandType('Montain', 5);
}

function LandType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_268();
}

function getFromOrdinal(p_value){
  $clinit_LandType();
  if (!(p_value >= 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!(p_value < values_5().length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values_5()[p_value];
}

function valueOf_4(name_0){
  $clinit_LandType();
  return valueOf(($clinit_LandType$Map() , $MAP_3), name_0);
}

function values_5(){
  $clinit_LandType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_LandType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 179, 0, [None, Sea, Reef, Marsh, Plain, Montain]);
}

defineClass(179, 7, {179:1, 4:1, 8:1, 7:1, 1:1}, LandType);
_.$init_268 = function $init_268(){
}
;
_.getImageName_0 = function getImageName_0(p_tide){
  switch (this.ordinal_0()) {
    case Sea.ordinal_0():
      return 'sea1.png';
    case Reef.ordinal_0():
      if (jsEquals(p_tide, ($clinit_Tide() , Low))) {
        return 'reef_low1.png';
      }
       else {
        return 'reef_hight1.png';
      }

    case Marsh.ordinal_0():
      if (jsEquals(p_tide, ($clinit_Tide() , Hight))) {
        return 'swamp_hight1.png';
      }
       else {
        return 'swamp_low1.png';
      }

    case Plain.ordinal_0():
      return 'plain1.png';
    case Montain.ordinal_0():
      return 'montain1.png';
    case None.ordinal_0():
    default:return 'grid.png';
  }
}
;
_.getLandValue = function getLandValue(p_tide){
  var landValue;
  landValue = this;
  switch (p_tide.ordinal_0()) {
    case ($clinit_Tide() , Low).ordinal_0():
      if (jsEquals(landValue, Marsh) || jsEquals(landValue, Reef)) {
        landValue = Plain;
      }

      break;
    case ($clinit_Tide() , Hight).ordinal_0():
      if (jsEquals(landValue, Marsh) || jsEquals(landValue, Reef)) {
        landValue = Sea;
      }

      break;
    case ($clinit_Tide() , Medium_0).ordinal_0():
    default:if (jsEquals(landValue, Marsh)) {
        landValue = Plain;
      }

      if (jsEquals(landValue, Reef)) {
        landValue = Sea;
      }

      break;
  }
  return landValue;
}
;
var Marsh, Montain, None, Plain, Reef, Sea;
var Lcom_fullmetalgalaxy_model_LandType_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'LandType', 179, Ljava_lang_Enum_2_classLit, values_5, valueOf_4);
function $clinit_LandType$Map(){
  $clinit_LandType$Map = emptyMethod;
  $MAP_3 = createValueOfMap(values_5());
}

var $MAP_3;
function $clinit_Location(){
  $clinit_Location = emptyMethod;
  $clinit_Enum();
  ToBeConstructed = new Location_0('ToBeConstructed', 0);
  Orbit = new Location_0('Orbit', 1);
  Board = new Location_0('Board', 2);
  Token = new Location_0('Token', 3);
  Graveyard = new Location_0('Graveyard', 4);
  EndGame = new Location_0('EndGame', 5);
}

function Location_0(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_269();
}

function valueOf_5(name_0){
  $clinit_Location();
  return valueOf(($clinit_Location$Map() , $MAP_4), name_0);
}

function values_6(){
  $clinit_Location();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_Location_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 156, 0, [ToBeConstructed, Orbit, Board, Token, Graveyard, EndGame]);
}

defineClass(156, 7, {156:1, 4:1, 8:1, 7:1, 1:1}, Location_0);
_.$init_269 = function $init_269(){
}
;
var Board, EndGame, Graveyard, Orbit, ToBeConstructed, Token;
var Lcom_fullmetalgalaxy_model_Location_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'Location', 156, Ljava_lang_Enum_2_classLit, values_6, valueOf_5);
function $clinit_Location$Map(){
  $clinit_Location$Map = emptyMethod;
  $MAP_4 = createValueOfMap(values_6());
}

var $MAP_4;
function $clinit_Location_FieldSerializer(){
  $clinit_Location_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_5(streamReader, instance){
  $clinit_Location_FieldSerializer();
}

function instantiate_4(streamReader){
  $clinit_Location_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_6();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_4(streamWriter, instance){
  $clinit_Location_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_MapShape(){
  $clinit_MapShape = emptyMethod;
  $clinit_Enum();
  Flat = new MapShape('Flat', 0);
  CylinderEW = new MapShape('CylinderEW', 1);
  CylinderNS = new MapShape('CylinderNS', 2);
  Torus = new MapShape('Torus', 3);
}

function MapShape(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_270();
}

function valueOf_6(name_0){
  $clinit_MapShape();
  return valueOf(($clinit_MapShape$Map() , $MAP_5), name_0);
}

function values_7(){
  $clinit_MapShape();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_MapShape_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 197, 0, [Flat, CylinderEW, CylinderNS, Torus]);
}

defineClass(197, 7, {197:1, 4:1, 8:1, 7:1, 1:1}, MapShape);
_.$init_270 = function $init_270(){
}
;
_.isEWLinked = function isEWLinked(){
  return jsEquals(this, CylinderEW) || jsEquals(this, Torus);
}
;
_.isNSLinked = function isNSLinked(){
  return jsEquals(this, CylinderNS) || jsEquals(this, Torus);
}
;
var CylinderEW, CylinderNS, Flat, Torus;
var Lcom_fullmetalgalaxy_model_MapShape_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'MapShape', 197, Ljava_lang_Enum_2_classLit, values_7, valueOf_6);
function $clinit_MapShape$Map(){
  $clinit_MapShape$Map = emptyMethod;
  $MAP_5 = createValueOfMap(values_7());
}

var $MAP_5;
function $clinit_MapShape_FieldSerializer(){
  $clinit_MapShape_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_6(streamReader, instance){
  $clinit_MapShape_FieldSerializer();
}

function instantiate_5(streamReader){
  $clinit_MapShape_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_7();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_5(streamWriter, instance){
  $clinit_MapShape_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_MapSize(){
  $clinit_MapSize = emptyMethod;
  $clinit_Enum();
  Small = new MapSize('Small', 0);
  Medium = new MapSize('Medium', 1);
  Large = new MapSize('Large', 2);
  Custom = new MapSize('Custom', 3);
}

function MapSize(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_271();
}

function valueOf_7(name_0){
  $clinit_MapSize();
  return valueOf(($clinit_MapSize$Map() , $MAP_6), name_0);
}

function values_8(){
  $clinit_MapSize();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_MapSize_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 213, 0, [Small, Medium, Large, Custom]);
}

defineClass(213, 7, {213:1, 4:1, 8:1, 7:1, 1:1}, MapSize);
_.$init_271 = function $init_271(){
}
;
var Custom, Large, Medium, Small;
var Lcom_fullmetalgalaxy_model_MapSize_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'MapSize', 213, Ljava_lang_Enum_2_classLit, values_8, valueOf_7);
function $clinit_MapSize$Map(){
  $clinit_MapSize$Map = emptyMethod;
  $MAP_6 = createValueOfMap(values_8());
}

var $MAP_6;
function $clinit_PathMobile(){
  $clinit_PathMobile = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_pathfinder_PathMobile_2_classLit = createForInterface('com.fullmetalgalaxy.model.pathfinder', 'PathMobile');
function $clinit_Mobile(){
  $clinit_Mobile = emptyMethod;
  $clinit_Object();
}

function Mobile(p_registration, p_token){
  $clinit_Mobile();
  Object_0.call(this);
  this.$init_272();
  this.m_token = p_token;
  this.m_registration = p_registration;
}

defineClass(357, 1, {357:1, 1:1}, Mobile);
_.$init_272 = function $init_272(){
  this.m_token = null;
  this.m_registration = null;
}
;
_.getRegistration = function getRegistration(){
  return this.m_registration;
}
;
_.getToken = function getToken(){
  return this.m_token;
}
;
var Lcom_fullmetalgalaxy_model_Mobile_2_classLit = createForClass('com.fullmetalgalaxy.model', 'Mobile', 357, Ljava_lang_Object_2_classLit);
function $clinit_ModelFmpInit(){
  $clinit_ModelFmpInit = emptyMethod;
  $clinit_Object();
}

function ModelFmpInit(){
  $clinit_ModelFmpInit();
  Object_0.call(this);
  this.$init_273();
}

defineClass(193, 1, {193:1, 4:1, 1:1}, ModelFmpInit);
_.$init_273 = function $init_273(){
  this.game = null;
  this.m_presenceRoom = null;
}
;
_.getGame = function getGame_1(){
  return this.game;
}
;
_.getPresenceRoom = function getPresenceRoom_1(){
  return this.m_presenceRoom;
}
;
var Lcom_fullmetalgalaxy_model_ModelFmpInit_2_classLit = createForClass('com.fullmetalgalaxy.model', 'ModelFmpInit', 193, Ljava_lang_Object_2_classLit);
function $clinit_ModelFmpInit_FieldSerializer(){
  $clinit_ModelFmpInit_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_7(streamReader, instance){
  $clinit_ModelFmpInit_FieldSerializer();
  setGame_0(instance, castTo(streamReader.readObject(), 274));
  setM_presenceRoom(instance, castTo(streamReader.readObject(), 146));
}

function instantiate_6(streamReader){
  $clinit_ModelFmpInit_FieldSerializer();
  return new ModelFmpInit;
}

function setGame_0(instance, value_0){
  instance.game = value_0;
}

function setM_presenceRoom(instance, value_0){
  instance.m_presenceRoom = value_0;
}

function $clinit_ModelFmpUpdate(){
  $clinit_ModelFmpUpdate = emptyMethod;
  $clinit_Object();
}

function ModelFmpUpdate(){
  $clinit_ModelFmpUpdate();
  Object_0.call(this);
  this.$init_274();
}

function ModelFmpUpdate_0(p_game){
  $clinit_ModelFmpUpdate();
  Object_0.call(this);
  this.$init_274();
  this.setGameId(p_game.getId());
  this.setFromVersion(p_game.getVersion());
}

defineClass(138, 1, {138:1, 4:1, 1:1}, ModelFmpUpdate, ModelFmpUpdate_0);
_.$init_274 = function $init_274(){
  this.m_gameId = 0;
  this.m_gameEvents = null;
  this.m_fromPseudo = '';
  this.m_fromPageId = 0;
  this.m_fromVersion = 0;
  this.m_toVersion = 0;
  this.m_clientID = 0;
}
;
_.getAccountId = function getAccountId(){
  var event_0, event$iterator;
  for (event$iterator = this.getGameEvents().iterator_0(); event$iterator.hasNext_0();) {
    event_0 = castTo(event$iterator.next_1(), 20);
    if (instanceOf(event_0, 33)) {
      return castTo(event_0, 33).getAccountId();
    }
  }
  return 0;
}
;
_.getClientID = function getClientID(){
  return this.m_clientID;
}
;
_.getFromVersion = function getFromVersion(){
  return this.m_fromVersion;
}
;
_.getGameEvents = function getGameEvents(){
  if (isNull(this.m_gameEvents)) {
    this.m_gameEvents = new ArrayList;
  }
  return this.m_gameEvents;
}
;
_.getToVersion = function getToVersion(){
  return this.m_toVersion;
}
;
_.setClientID = function setClientID(p_clientID){
  this.m_clientID = p_clientID;
}
;
_.setFromPageId = function setFromPageId_0(p_fromPageId){
  this.m_fromPageId = p_fromPageId;
}
;
_.setFromPseudo = function setFromPseudo_0(p_fromPseudo){
  this.m_fromPseudo = p_fromPseudo;
}
;
_.setFromVersion = function setFromVersion(p_fromVersion){
  this.m_fromVersion = p_fromVersion;
}
;
_.setGameEvents = function setGameEvents(p_gameEvents){
  this.m_gameEvents = p_gameEvents;
}
;
_.setGameId = function setGameId_0(p_gameId){
  this.m_gameId = p_gameId;
}
;
_.setToVersion = function setToVersion(p_toVersion){
  this.m_toVersion = p_toVersion;
}
;
_.m_clientID = 0;
_.m_fromPageId = 0;
_.m_fromVersion = 0;
_.m_gameId = 0;
_.m_toVersion = 0;
var Lcom_fullmetalgalaxy_model_ModelFmpUpdate_2_classLit = createForClass('com.fullmetalgalaxy.model', 'ModelFmpUpdate', 138, Ljava_lang_Object_2_classLit);
function $clinit_ModelFmpUpdate_FieldSerializer(){
  $clinit_ModelFmpUpdate_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_8(streamReader, instance){
  $clinit_ModelFmpUpdate_FieldSerializer();
  setM_clientID(instance, streamReader.readInt());
  setM_fromPageId_0(instance, streamReader.readInt());
  setM_fromPseudo_0(instance, streamReader.readString());
  setM_fromVersion(instance, streamReader.readLong());
  setM_gameEvents(instance, castTo(streamReader.readObject(), 38));
  setM_gameId_0(instance, streamReader.readLong());
  setM_toVersion(instance, streamReader.readLong());
}

function getM_clientID(instance){
  return instance.m_clientID;
}

function getM_fromPageId_0(instance){
  return instance.m_fromPageId;
}

function getM_fromPseudo_0(instance){
  return instance.m_fromPseudo;
}

function getM_fromVersion(instance){
  return instance.m_fromVersion;
}

function getM_gameEvents(instance){
  return instance.m_gameEvents;
}

function getM_gameId_0(instance){
  return instance.m_gameId;
}

function getM_toVersion(instance){
  return instance.m_toVersion;
}

function instantiate_7(streamReader){
  $clinit_ModelFmpUpdate_FieldSerializer();
  return new ModelFmpUpdate;
}

function serialize_6(streamWriter, instance){
  $clinit_ModelFmpUpdate_FieldSerializer();
  streamWriter.writeInt(getM_clientID(instance));
  streamWriter.writeInt(getM_fromPageId_0(instance));
  streamWriter.writeString(getM_fromPseudo_0(instance));
  streamWriter.writeLong(getM_fromVersion(instance));
  streamWriter.writeObject(getM_gameEvents(instance));
  streamWriter.writeLong(getM_gameId_0(instance));
  streamWriter.writeLong(getM_toVersion(instance));
}

function setM_clientID(instance, value_0){
  instance.m_clientID = value_0;
}

function setM_fromPageId_0(instance, value_0){
  instance.m_fromPageId = value_0;
}

function setM_fromPseudo_0(instance, value_0){
  instance.m_fromPseudo = value_0;
}

function setM_fromVersion(instance, value_0){
  instance.m_fromVersion = value_0;
}

function setM_gameEvents(instance, value_0){
  instance.m_gameEvents = value_0;
}

function setM_gameId_0(instance, value_0){
  instance.m_gameId = value_0;
}

function setM_toVersion(instance, value_0){
  instance.m_toVersion = value_0;
}

function $clinit_PlanetType(){
  $clinit_PlanetType = emptyMethod;
  $clinit_Enum();
  Desert = new PlanetType('Desert', 0);
  Grass = new PlanetType('Grass', 1);
  Ice = new PlanetType('Ice', 2);
  Lava = new PlanetType('Lava', 3);
  Lagoon = new PlanetType('Lagoon', 4);
  Moon = new PlanetType('Moon', 5);
  Dirt = new PlanetType('Dirt', 6);
}

function PlanetType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_275();
}

function valueOf_8(name_0){
  $clinit_PlanetType();
  return valueOf(($clinit_PlanetType$Map() , $MAP_7), name_0);
}

function values_9(){
  $clinit_PlanetType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_PlanetType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 143, 0, [Desert, Grass, Ice, Lava, Lagoon, Moon, Dirt]);
}

defineClass(143, 7, {143:1, 4:1, 8:1, 7:1, 1:1}, PlanetType);
_.$init_275 = function $init_275(){
}
;
_.getFolderName = function getFolderName(){
  switch (this.ordinal_0()) {
    default:case Desert.ordinal_0():
      return 'desert';
    case Grass.ordinal_0():
      return 'grass';
    case Ice.ordinal_0():
      return 'ice';
    case Lava.ordinal_0():
      return 'lava';
    case Lagoon.ordinal_0():
      return 'lagoon';
    case Moon.ordinal_0():
      return 'moon';
    case Dirt.ordinal_0():
      return 'dirt';
  }
}
;
var Desert, Dirt, Grass, Ice, Lagoon, Lava, Moon;
var Lcom_fullmetalgalaxy_model_PlanetType_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'PlanetType', 143, Ljava_lang_Enum_2_classLit, values_9, valueOf_8);
function $clinit_PlanetType$Map(){
  $clinit_PlanetType$Map = emptyMethod;
  $MAP_7 = createValueOfMap(values_9());
}

var $MAP_7;
function $clinit_PlanetType_FieldSerializer(){
  $clinit_PlanetType_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_9(streamReader, instance){
  $clinit_PlanetType_FieldSerializer();
}

function instantiate_8(streamReader){
  $clinit_PlanetType_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_9();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_7(streamWriter, instance){
  $clinit_PlanetType_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_Presence(){
  $clinit_Presence = emptyMethod;
  $clinit_Object();
}

function Presence(){
  $clinit_Presence();
  Object_0.call(this);
  this.$init_276();
}

function Presence_0(p_pseudo, p_gameId, p_pageId){
  $clinit_Presence();
  Object_0.call(this);
  this.$init_276();
  this.m_pseudo = p_pseudo;
  this.m_gameId = p_gameId;
  this.m_pageId = p_pageId;
}

defineClass(109, 1, {109:1, 4:1, 1:1}, Presence, Presence_0);
_.$init_276 = function $init_276(){
  this.m_pseudo = '';
  this.m_gameId = 0;
  this.m_pageId = 0;
  this.m_jabberId = null;
  this.m_lastConnexion = new Date_1(currentTimeMillis_0());
  this.m_clientType = ($clinit_Presence$ClientType() , UNKNOWN);
}
;
_.equals_0 = function equals_6(obj){
  var other;
  if (maskUndefined(this) === maskUndefined(obj))
    return true;
  if (jsEquals(obj, null))
    return false;
  if (jsNotEquals(getClass__Ljava_lang_Class___devirtual$(this), getClass__Ljava_lang_Class___devirtual$(obj)))
    return false;
  other = castTo(obj, 109);
  if (neq(this.m_gameId, other.m_gameId))
    return false;
  if (jsEquals(this.m_jabberId, null)) {
    if (jsNotEquals(other.m_jabberId, null))
      return false;
  }
   else if (!equals_Ljava_lang_Object__Z__devirtual$_2(this.m_jabberId, other.m_jabberId))
    return false;
  if (this.m_pageId != other.m_pageId)
    return false;
  if (jsEquals(this.m_pseudo, null)) {
    if (jsNotEquals(other.m_pseudo, null))
      return false;
  }
   else if (!equals_Ljava_lang_Object__Z__devirtual$_2(this.m_pseudo, other.m_pseudo))
    return false;
  return true;
}
;
_.getAvatarUrl = function getAvatarUrl(){
  return '/ImageServlet?avatar=' + this.getPseudo();
}
;
_.getClientType = function getClientType(){
  return this.m_clientType;
}
;
_.getPseudo = function getPseudo_0(){
  return this.m_pseudo;
}
;
_.hashCode_1 = function hashCode_5(){
  var prime, result;
  prime = 31;
  result = 1;
  result = 31 * result + toInt_0(xor_0(this.m_gameId, shru_0(this.m_gameId, 32)));
  result = 31 * result + (jsEquals(this.m_jabberId, null)?0:hashCode__I__devirtual$_0(this.m_jabberId));
  result = 31 * result + this.m_pageId;
  result = 31 * result + (jsEquals(this.m_pseudo, null)?0:hashCode__I__devirtual$_0(this.m_pseudo));
  return result;
}
;
_.toString_0 = function toString_15(){
  return this.getPseudo() + '[' + this.getClientType() + ']';
}
;
_.m_gameId = 0;
_.m_pageId = 0;
var Lcom_fullmetalgalaxy_model_Presence_2_classLit = createForClass('com.fullmetalgalaxy.model', 'Presence', 109, Ljava_lang_Object_2_classLit);
function $clinit_Presence$ClientType(){
  $clinit_Presence$ClientType = emptyMethod;
  $clinit_Enum();
  UNKNOWN = new Presence$ClientType('UNKNOWN', 0);
  GAME = new Presence$ClientType('GAME', 1);
  CHAT = new Presence$ClientType('CHAT', 2);
  XMPP = new Presence$ClientType('XMPP', 3);
}

function Presence$ClientType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_277();
}

function valueOf_9(name_0){
  $clinit_Presence$ClientType();
  return valueOf(($clinit_Presence$ClientType$Map() , $MAP_8), name_0);
}

function values_10(){
  $clinit_Presence$ClientType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_Presence$ClientType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 200, 0, [UNKNOWN, GAME, CHAT, XMPP]);
}

defineClass(200, 7, {200:1, 4:1, 8:1, 7:1, 1:1}, Presence$ClientType);
_.$init_277 = function $init_277(){
}
;
var CHAT, GAME, UNKNOWN, XMPP;
var Lcom_fullmetalgalaxy_model_Presence$ClientType_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'Presence/ClientType', 200, Ljava_lang_Enum_2_classLit, values_10, valueOf_9);
function $clinit_Presence$ClientType$Map(){
  $clinit_Presence$ClientType$Map = emptyMethod;
  $MAP_8 = createValueOfMap(values_10());
}

var $MAP_8;
function $clinit_PresenceRoom(){
  $clinit_PresenceRoom = emptyMethod;
  $clinit_Object();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_List();
}

function PresenceRoom(){
  $clinit_PresenceRoom();
  Object_0.call(this);
  this.$init_278();
}

function PresenceRoom_0(p_gameId){
  $clinit_PresenceRoom();
  Object_0.call(this);
  this.$init_278();
  this.m_gameId = p_gameId;
}

defineClass(146, 1, {146:1, 4:1, 1:1, 47:1, 38:1}, PresenceRoom, PresenceRoom_0);
_.$init_278 = function $init_278(){
  this.m_gameId = 0;
  this.m_presenceList = new ArrayList;
}
;
_.add_6 = function add_14(p_arg0, p_arg1){
  this.add_7(p_arg0, castTo(p_arg1, 109));
}
;
_.add_5 = function add_16(p_arg0){
  return this.add_8(castTo(p_arg0, 109));
}
;
_.get_0 = function get_2651(p_arg0){
  return this.get_2(p_arg0);
}
;
_.remove_2 = function remove_12(p_arg0){
  return this.remove_5(p_arg0);
}
;
_.set_1 = function set_4(p_arg0, p_arg1){
  return this.set_2(p_arg0, castTo(p_arg1, 109));
}
;
_.sort_0 = function sort_2(c){
  $sort(this, c);
}
;
_.add_7 = function add_13(p_arg0, p_arg1){
  this.m_presenceList.add_6(p_arg0, p_arg1);
}
;
_.add_8 = function add_15(p_arg0){
  if (isNull(p_arg0)) {
    return false;
  }
  return this.m_presenceList.add_5(p_arg0);
}
;
_.addAll = function addAll_1(p_arg0){
  return this.m_presenceList.addAll(p_arg0);
}
;
_.clear_0 = function clear_8(){
  this.m_presenceList.clear_0();
}
;
_.contains_0 = function contains_1(p_arg0){
  return this.m_presenceList.contains_0(p_arg0);
}
;
_.equals_0 = function equals_7(p_arg0){
  return equals_Ljava_lang_Object__Z__devirtual$(this.m_presenceList, p_arg0);
}
;
_.get_2 = function get_2650(p_arg0){
  return castTo(this.m_presenceList.get_0(p_arg0), 109);
}
;
_.getGameId = function getGameId(){
  return this.m_gameId;
}
;
_.hashCode_1 = function hashCode_6(){
  return hashCode__I__devirtual$(this.m_presenceList);
}
;
_.isConnected = function isConnected(p_pseudo){
  var presence, presence$iterator;
  for (presence$iterator = this.iterator_0(); presence$iterator.hasNext_0();) {
    presence = castTo(presence$iterator.next_1(), 109);
    if (equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(presence.getPseudo(), p_pseudo)) {
      return true;
    }
  }
  return false;
}
;
_.isEmpty = function isEmpty_4(){
  return this.m_presenceList.isEmpty();
}
;
_.iterator_0 = function iterator_5(){
  return this.m_presenceList.iterator_0();
}
;
_.listIterator = function listIterator_1(){
  return this.m_presenceList.listIterator();
}
;
_.listIterator_0 = function listIterator_2(p_arg0){
  return this.m_presenceList.listIterator_0(p_arg0);
}
;
_.remove_5 = function remove_11(p_arg0){
  return castTo(this.m_presenceList.remove_2(p_arg0), 109);
}
;
_.remove_1 = function remove_13(p_arg0){
  return this.m_presenceList.remove_1(p_arg0);
}
;
_.removeAll = function removeAll_0(p_arg0){
  return this.m_presenceList.removeAll(p_arg0);
}
;
_.set_2 = function set_3(p_arg0, p_arg1){
  return castTo(this.m_presenceList.set_1(p_arg0, p_arg1), 109);
}
;
_.setGameId = function setGameId_1(p_gameId){
  this.m_gameId = p_gameId;
}
;
_.size_1 = function size_4(){
  return this.m_presenceList.size_1();
}
;
_.toArray = function toArray_3(){
  return this.m_presenceList.toArray();
}
;
_.toArray_0 = function toArray_4(p_arg0){
  return this.m_presenceList.toArray_0(p_arg0);
}
;
_.toString_0 = function toString_16(){
  return 'Room ID=' + toString_45(this.m_gameId) + ' ' + this.m_presenceList;
}
;
_.m_gameId = 0;
var Lcom_fullmetalgalaxy_model_PresenceRoom_2_classLit = createForClass('com.fullmetalgalaxy.model', 'PresenceRoom', 146, Ljava_lang_Object_2_classLit);
function $clinit_PresenceRoom_FieldSerializer(){
  $clinit_PresenceRoom_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_10(streamReader, instance){
  $clinit_PresenceRoom_FieldSerializer();
  setM_gameId_1(instance, streamReader.readLong());
  setM_presenceList(instance, castTo(streamReader.readObject(), 38));
}

function instantiate_9(streamReader){
  $clinit_PresenceRoom_FieldSerializer();
  return new PresenceRoom;
}

function setM_gameId_1(instance, value_0){
  instance.m_gameId = value_0;
}

function setM_presenceList(instance, value_0){
  instance.m_presenceList = value_0;
}

function $clinit_Presence_Array_Rank_1_FieldSerializer(){
  $clinit_Presence_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_11(streamReader, instance){
  $clinit_Presence_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_10(streamReader){
  $clinit_Presence_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_Presence_2_classLit, {4:1, 1:1, 5:1}, 109, size_0, 0, 1);
}

function $clinit_Presence_ClientType_FieldSerializer(){
  $clinit_Presence_ClientType_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_12(streamReader, instance){
  $clinit_Presence_ClientType_FieldSerializer();
}

function instantiate_11(streamReader){
  $clinit_Presence_ClientType_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_10();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_8(streamWriter, instance){
  $clinit_Presence_ClientType_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_Presence_FieldSerializer(){
  $clinit_Presence_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_13(streamReader, instance){
  $clinit_Presence_FieldSerializer();
  setM_clientType(instance, castTo(streamReader.readObject(), 200));
  setM_gameId_2(instance, streamReader.readLong());
  setM_jabberId(instance, streamReader.readString());
  setM_lastConnexion(instance, castTo(streamReader.readObject(), 30));
  setM_pageId(instance, streamReader.readInt());
  setM_pseudo(instance, streamReader.readString());
}

function getM_clientType(instance){
  return instance.m_clientType;
}

function getM_gameId_1(instance){
  return instance.m_gameId;
}

function getM_jabberId(instance){
  return instance.m_jabberId;
}

function getM_lastConnexion(instance){
  return instance.m_lastConnexion;
}

function getM_pageId(instance){
  return instance.m_pageId;
}

function getM_pseudo(instance){
  return instance.m_pseudo;
}

function instantiate_12(streamReader){
  $clinit_Presence_FieldSerializer();
  return new Presence;
}

function serialize_9(streamWriter, instance){
  $clinit_Presence_FieldSerializer();
  streamWriter.writeObject(getM_clientType(instance));
  streamWriter.writeLong(getM_gameId_1(instance));
  streamWriter.writeString(getM_jabberId(instance));
  streamWriter.writeObject(getM_lastConnexion(instance));
  streamWriter.writeInt(getM_pageId(instance));
  streamWriter.writeString(getM_pseudo(instance));
}

function setM_clientType(instance, value_0){
  instance.m_clientType = value_0;
}

function setM_gameId_2(instance, value_0){
  instance.m_gameId = value_0;
}

function setM_jabberId(instance, value_0){
  instance.m_jabberId = value_0;
}

function setM_lastConnexion(instance, value_0){
  instance.m_lastConnexion = value_0;
}

function setM_pageId(instance, value_0){
  instance.m_pageId = value_0;
}

function setM_pseudo(instance, value_0){
  instance.m_pseudo = value_0;
}

function $clinit_Throwable(){
  $clinit_Throwable = emptyMethod;
  $clinit_Object();
}

function Throwable(){
  $clinit_Throwable();
  Object_0.call(this);
  this.$init_279();
  this.fillInStackTrace();
  this.initializeBackingError();
}

function Throwable_0(backingJsObject){
  $clinit_Throwable();
  Object_0.call(this);
  this.$init_279();
  this.fillInStackTrace();
  this.setBackingJsObject(backingJsObject);
  this.detailMessage = valueOf_47(backingJsObject);
}

function Throwable_1(message){
  $clinit_Throwable();
  Object_0.call(this);
  this.$init_279();
  this.detailMessage = message;
  this.fillInStackTrace();
  this.initializeBackingError();
}

function Throwable_2(message, cause){
  $clinit_Throwable();
  Object_0.call(this);
  this.$init_279();
  this.cause_1 = cause;
  this.detailMessage = message;
  this.fillInStackTrace();
  this.initializeBackingError();
}

function Throwable_3(cause){
  $clinit_Throwable();
  Object_0.call(this);
  this.$init_279();
  this.detailMessage = isNull(cause)?null:cause.toString_0();
  this.cause_1 = cause;
  this.fillInStackTrace();
  this.initializeBackingError();
}

function fixIE(e){
  if (!('stack' in e)) {
    try {
      throw e;
    }
     catch (ignored) {
    }
  }
  return e;
}

function lambda$0(t_0){
  $clinit_Throwable();
  return t_0.backingJsObject_0;
}

defineClass(24, 1, {4:1, 1:1, 24:1});
_.$init_279 = function $init_279(){
  this.stackTrace = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, {4:1, 1:1, 5:1}, 159, 0, 0, 1);
  this.writableStackTrace = true;
  this.backingJsObject_0 = UNINITIALIZED;
}
;
_.addSuppressed = function addSuppressed(exception){
  checkNotNull_0(exception, 'Cannot suppress a null exception.');
  checkCriticalArgument(jsNotEquals(exception, this), 'Exception can not suppress itself.');
  if (this.disableSuppression) {
    return;
  }
  if (jsEquals(this.suppressedExceptions, null)) {
    this.suppressedExceptions = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Throwable_2_classLit, 1), {4:1, 1:1, 5:1}, 24, 0, [exception]);
  }
   else {
    setCheck(this.suppressedExceptions, this.suppressedExceptions.length, exception);
  }
}
;
_.captureStackTrace = function captureStackTrace(){
  captureStackTrace_0(this);
}
;
_.constructJavaStackTrace = function constructJavaStackTrace(){
  return constructJavaStackTrace_0(this);
}
;
_.createError = function createError(msg){
  return new Error(msg);
}
;
_.fillInStackTrace = function fillInStackTrace(){
  if (this.writableStackTrace) {
    if (maskUndefined(this.backingJsObject_0) !== maskUndefined(UNINITIALIZED)) {
      this.initializeBackingError();
    }
    this.stackTrace = null;
  }
  return this;
}
;
_.getBackingJsObject = function getBackingJsObject(){
  return this.backingJsObject_0;
}
;
_.getBackingSuppressed = function getBackingSuppressed(){
  return stream_0(this.getSuppressed()).map_2(new Throwable$lambda$0$Type).toArray();
}
;
_.getCause = function getCause(){
  return this.cause_1;
}
;
_.getLocalizedMessage = function getLocalizedMessage(){
  return this.getMessage();
}
;
_.getMessage = function getMessage(){
  return this.detailMessage;
}
;
_.getStackTrace = function getStackTrace(){
  if (jsEquals(this.stackTrace, null)) {
    this.stackTrace = this.constructJavaStackTrace();
  }
  return this.stackTrace;
}
;
_.getSuppressed = function getSuppressed(){
  if (jsEquals(this.suppressedExceptions, null)) {
    this.suppressedExceptions = initUnidimensionalArray(Ljava_lang_Throwable_2_classLit, {4:1, 1:1, 5:1}, 24, 0, 0, 1);
  }
  return this.suppressedExceptions;
}
;
_.initCause = function initCause(cause){
  checkState_0(isNull(this.cause_1), "Can't overwrite cause");
  checkCriticalArgument(jsNotEquals(cause, this), 'Self-causation not permitted');
  this.cause_1 = cause;
  return this;
}
;
_.initializeBackingError = function initializeBackingError(){
  this.setBackingJsObject(fixIE(this.createError(this.toString_3(this.detailMessage))));
  this.captureStackTrace();
}
;
_.linkBack = function linkBack(error){
  if (error instanceof Object) {
    try {
      error.__java$exception = this;
      if (navigator.userAgent.toLowerCase().indexOf('msie') != -1 && $doc.documentMode < 9) {
        return;
      }
      var throwable = this;
      Object.defineProperties(error, {cause:{get:function(){
        var cause = throwable.getCause();
        return cause && cause.getBackingJsObject();
      }
      }, suppressed:{get:function(){
        return throwable.getBackingSuppressed();
      }
      }});
    }
     catch (ignored) {
    }
  }
}
;
_.printStackTrace = function printStackTrace(){
  this.printStackTrace_0(($clinit_System() , err));
}
;
_.printStackTrace_0 = function printStackTrace_0(out){
  this.printStackTraceImpl(out, '', '');
}
;
_.printStackTraceImpl = function printStackTraceImpl(out, prefix, ident){
  var t, t$array, t$index, t$max, theCause;
  out.println(ident + ('' + prefix) + this);
  this.printStackTraceItems(out, ident);
  for (t$array = this.getSuppressed() , t$index = 0 , t$max = t$array.length; t$index < t$max; ++t$index) {
    t = t$array[t$index];
    t.printStackTraceImpl(out, 'Suppressed: ', '\t' + ident);
  }
  theCause = this.getCause();
  if (isNotNull(theCause)) {
    theCause.printStackTraceImpl(out, 'Caused by: ', ident);
  }
}
;
_.printStackTraceItems = function printStackTraceItems(out, ident){
  var element, element$array, element$index, element$max;
  for (element$array = this.getStackTrace() , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index) {
    element = element$array[element$index];
    out.println(ident + '\tat ' + element);
  }
}
;
_.setBackingJsObject = function setBackingJsObject(backingJsObject){
  this.backingJsObject_0 = backingJsObject;
  this.linkBack(backingJsObject);
}
;
_.toString_0 = function toString_17(){
  return this.toString_3(this.getLocalizedMessage());
}
;
_.toString_3 = function toString_18(message){
  var className;
  className = getClass__Ljava_lang_Class___devirtual$(this).getName();
  return jsEquals(message, null)?className:className + ': ' + message;
}
;
_.disableSuppression = false;
_.writableStackTrace = false;
var UNINITIALIZED = '__noinit__';
var Ljava_lang_Throwable_2_classLit = createForClass('java.lang', 'Throwable', 24, Ljava_lang_Object_2_classLit);
function $clinit_Exception(){
  $clinit_Exception = emptyMethod;
  $clinit_Throwable();
}

function Exception(){
  $clinit_Exception();
  Throwable.call(this);
  this.$init_280();
}

function Exception_0(backingJsObject){
  $clinit_Exception();
  Throwable_0.call(this, backingJsObject);
  this.$init_280();
}

function Exception_1(message){
  $clinit_Exception();
  Throwable_1.call(this, message);
  this.$init_280();
}

function Exception_2(message, cause){
  $clinit_Exception();
  Throwable_2.call(this, message, cause);
  this.$init_280();
}

function Exception_3(cause){
  $clinit_Exception();
  Throwable_3.call(this, cause);
  this.$init_280();
}

defineClass(25, 24, {4:1, 25:1, 1:1, 24:1}, Exception);
_.$init_280 = function $init_280(){
}
;
var Ljava_lang_Exception_2_classLit = createForClass('java.lang', 'Exception', 25, Ljava_lang_Throwable_2_classLit);
function $clinit_RpcFmpException(){
  $clinit_RpcFmpException = emptyMethod;
  $clinit_Exception();
}

function RpcFmpException(){
  $clinit_RpcFmpException();
  Exception.call(this);
  this.$init_281();
}

function RpcFmpException_0(p_message){
  $clinit_RpcFmpException();
  Exception_1.call(this, p_message);
  this.$init_281();
  this.m_message = p_message;
}

function RpcFmpException_1(p_message, p_cause){
  $clinit_RpcFmpException();
  Exception_1.call(this, p_message);
  this.$init_281();
  this.m_message = p_message;
  this.cause_0 = p_cause;
}

defineClass(10, 25, {10:1, 4:1, 25:1, 1:1, 24:1}, RpcFmpException, RpcFmpException_0, RpcFmpException_1);
_.$init_281 = function $init_281(){
}
;
_.getMessage = function getMessage_0(){
  return this.m_message;
}
;
_.toString_0 = function toString_19(){
  return this.getMessage();
}
;
var Lcom_fullmetalgalaxy_model_RpcFmpException_2_classLit = createForClass('com.fullmetalgalaxy.model', 'RpcFmpException', 10, Ljava_lang_Exception_2_classLit);
function $clinit_RpcFmpException_FieldSerializer(){
  $clinit_RpcFmpException_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_14(streamReader, instance){
  $clinit_RpcFmpException_FieldSerializer();
  setCause(instance, castTo(streamReader.readObject(), 20));
  setM_message(instance, streamReader.readString());
  deserialize_119(streamReader, instance);
}

function instantiate_13(streamReader){
  $clinit_RpcFmpException_FieldSerializer();
  return new RpcFmpException;
}

function setCause(instance, value_0){
  instance.cause_0 = value_0;
}

function setM_message(instance, value_0){
  instance.m_message = value_0;
}

function $clinit_RpcUtil(){
  $clinit_RpcUtil = emptyMethod;
  $clinit_Object();
}

function logDebug(p_message){
  $clinit_RpcUtil();
  log_1(p_message, null);
}

function logError(p_message){
  $clinit_RpcUtil();
  logError_0(p_message, new Exception);
}

function logError_0(p_message, p_e){
  $clinit_RpcUtil();
  log_1(p_message, p_e);
}

function $clinit_Sector(){
  $clinit_Sector = emptyMethod;
  $clinit_Enum();
  North = new Sector('North', 0);
  NorthEast = new Sector('NorthEast', 1);
  SouthEast = new Sector('SouthEast', 2);
  South = new Sector('South', 3);
  SouthWest = new Sector('SouthWest', 4);
  NorthWest = new Sector('NorthWest', 5);
}

function Sector(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_282();
}

function getFromOrdinal_0(p_value){
  $clinit_Sector();
  if (!(p_value >= 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!(p_value < values_11().length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values_11()[p_value];
}

function valueOf_10(name_0){
  $clinit_Sector();
  return valueOf(($clinit_Sector$Map() , $MAP_9), name_0);
}

function values_11(){
  $clinit_Sector();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_Sector_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 166, 0, [North, NorthEast, SouthEast, South, SouthWest, NorthWest]);
}

defineClass(166, 7, {166:1, 4:1, 8:1, 7:1, 1:1}, Sector);
_.$init_282 = function $init_282(){
}
;
_.getNext = function getNext(){
  var index_0;
  index_0 = this.ordinal_0() + 1;
  if (index_0 >= values_11().length) {
    index_0 = 0;
  }
  return values_11()[index_0];
}
;
var North, NorthEast, NorthWest, South, SouthEast, SouthWest;
var Lcom_fullmetalgalaxy_model_Sector_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'Sector', 166, Ljava_lang_Enum_2_classLit, values_11, valueOf_10);
function $clinit_Sector$Map(){
  $clinit_Sector$Map = emptyMethod;
  $MAP_9 = createValueOfMap(values_11());
}

var $MAP_9;
function $clinit_Sector_FieldSerializer(){
  $clinit_Sector_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_15(streamReader, instance){
  $clinit_Sector_FieldSerializer();
}

function instantiate_14(streamReader){
  $clinit_Sector_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_11();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_10(streamWriter, instance){
  $clinit_Sector_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_SharedMethods(){
  $clinit_SharedMethods = emptyMethod;
  $clinit_Object();
}

function currentTimeMillis_0(){
  $clinit_SharedMethods();
  return serverTimeMillis();
}

function encodePathSegment(decodedURLComponent){
  $clinit_SharedMethods();
  if (jsEquals(decodedURLComponent, null)) {
    return null;
  }
  return encodePathSegment_0(decodedURLComponent);
}

function $clinit_Tide(){
  $clinit_Tide = emptyMethod;
  $clinit_Enum();
  Unknown_1 = new Tide('Unknown', 0);
  Low = new Tide('Low', 1);
  Medium_0 = new Tide('Medium', 2);
  Hight = new Tide('Hight', 3);
}

function Tide(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_283();
}

function getRandom_0(p_averageLevel){
  $clinit_Tide();
  if (p_averageLevel > 2) {
    switch (round_int($wnd.Math.floor($wnd.Math.random() * 2))) {
      case 0:
        return Low;
      default:case 1:
        return Medium_0;
    }
  }
   else if (p_averageLevel < -2) {
    switch (round_int($wnd.Math.floor($wnd.Math.random() * 2))) {
      case 0:
        return Medium_0;
      default:case 1:
        return Hight;
    }
  }
  switch (round_int($wnd.Math.floor($wnd.Math.random() * 3))) {
    case 0:
      return Low;
    default:case 1:
      return Medium_0;
    case 2:
      return Hight;
  }
}

function valueOf_11(name_0){
  $clinit_Tide();
  return valueOf(($clinit_Tide$Map() , $MAP_10), name_0);
}

function values_12(){
  $clinit_Tide();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_Tide_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 139, 0, [Unknown_1, Low, Medium_0, Hight]);
}

defineClass(139, 7, {139:1, 4:1, 8:1, 7:1, 1:1}, Tide);
_.$init_283 = function $init_283(){
}
;
_.getLevel = function getLevel(){
  switch (this.ordinal_0()) {
    case Low.ordinal_0():
      return -1;
    case Hight.ordinal_0():
      return 1;
    default:return 0;
  }
}
;
var Hight, Low, Medium_0, Unknown_1;
var Lcom_fullmetalgalaxy_model_Tide_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'Tide', 139, Ljava_lang_Enum_2_classLit, values_12, valueOf_11);
function $clinit_Tide$Map(){
  $clinit_Tide$Map = emptyMethod;
  $MAP_10 = createValueOfMap(values_12());
}

var $MAP_10;
function $clinit_Tide_FieldSerializer(){
  $clinit_Tide_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_16(streamReader, instance){
  $clinit_Tide_FieldSerializer();
}

function instantiate_15(streamReader){
  $clinit_Tide_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_12();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_11(streamWriter, instance){
  $clinit_Tide_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_TokenType(){
  $clinit_TokenType = emptyMethod;
  $clinit_Enum();
  Freighter = new TokenType('Freighter', 0);
  Turret = new TokenType('Turret', 1);
  Barge = new TokenType('Barge', 2);
  Speedboat = new TokenType('Speedboat', 3);
  Tank = new TokenType('Tank', 4);
  Heap = new TokenType('Heap', 5);
  Crab = new TokenType('Crab', 6);
  WeatherHen = new TokenType('WeatherHen', 7);
  Pontoon = new TokenType('Pontoon', 8);
  Ore = new TokenType('Ore', 9);
  None_0 = new TokenType('None', 10);
  Ore0 = new TokenType('Ore0', 11);
  Ore3 = new TokenType('Ore3', 12);
  Ore5 = new TokenType('Ore5', 13);
  Crayfish = new TokenType('Crayfish', 14);
  Sluice = new TokenType('Sluice', 15);
  Hovertank = new TokenType('Hovertank', 16);
  Tarask = new TokenType('Tarask', 17);
  Destroyer = new TokenType('Destroyer', 18);
  Ore2Generator = new TokenType('Ore2Generator', 19);
  Ore3Generator = new TokenType('Ore3Generator', 20);
  Teleporter = new TokenType('Teleporter', 21);
  Warp = new TokenType('Warp', 22);
}

function TokenType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_284();
}

function valueOf_12(name_0){
  $clinit_TokenType();
  return valueOf(($clinit_TokenType$Map() , $MAP_11), name_0);
}

function values_13(){
  $clinit_TokenType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_TokenType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 55, 0, [Freighter, Turret, Barge, Speedboat, Tank, Heap, Crab, WeatherHen, Pontoon, Ore, None_0, Ore0, Ore3, Ore5, Crayfish, Sluice, Hovertank, Tarask, Destroyer, Ore2Generator, Ore3Generator, Teleporter, Warp]);
}

defineClass(55, 7, {55:1, 4:1, 8:1, 7:1, 1:1}, TokenType);
_.$init_284 = function $init_284(){
}
;
_.canBeColored = function canBeColored(){
  switch (this.ordinal_0()) {
    case Turret.ordinal_0():
    case Barge.ordinal_0():
    case WeatherHen.ordinal_0():
    case Crab.ordinal_0():
    case Freighter.ordinal_0():
    case Speedboat.ordinal_0():
    case Tank.ordinal_0():
    case Heap.ordinal_0():
    case Crayfish.ordinal_0():
    case Hovertank.ordinal_0():
    case Tarask.ordinal_0():
    case Destroyer.ordinal_0():
    case Teleporter.ordinal_0():
      return true;
    case Pontoon.ordinal_0():
    case Ore0.ordinal_0():
    case Ore.ordinal_0():
    case Ore3.ordinal_0():
    case Ore5.ordinal_0():
    case Sluice.ordinal_0():
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
    case Warp.ordinal_0():
    default:return false;
  }
}
;
_.canLoad = function canLoad(p_tokenType){
  switch (this.ordinal_0()) {
    case Warp.ordinal_0():
      return jsNotEquals(p_tokenType, Ore2Generator) && jsNotEquals(p_tokenType, Ore3Generator);
    case Freighter.ordinal_0():
    case Teleporter.ordinal_0():
      return jsNotEquals(p_tokenType, Warp) && jsNotEquals(p_tokenType, Ore2Generator) && jsNotEquals(p_tokenType, Ore3Generator);
    case Barge.ordinal_0():
      if (jsEquals(p_tokenType, Tank) || jsEquals(p_tokenType, Crab) || jsEquals(p_tokenType, Heap) || jsEquals(p_tokenType, WeatherHen) || p_tokenType.isOre() || jsEquals(p_tokenType, Sluice) || jsEquals(p_tokenType, Pontoon) || jsEquals(p_tokenType, Crayfish) || jsEquals(p_tokenType, Teleporter)) {
        return true;
      }

      return false;
    case Crab.ordinal_0():
    case Crayfish.ordinal_0():
      if (jsEquals(p_tokenType, Tank) || jsEquals(p_tokenType, Heap) || p_tokenType.isOre() || jsEquals(p_tokenType, Sluice) || jsEquals(p_tokenType, Pontoon) || jsEquals(p_tokenType, Teleporter)) {
        return true;
      }

      return false;
    case WeatherHen.ordinal_0():
      if (p_tokenType.isOre()) {
        return true;
      }

      return false;
    case Pontoon.ordinal_0():
      if (jsEquals(p_tokenType, Tank) || jsEquals(p_tokenType, Heap) || p_tokenType.isOre() || jsEquals(p_tokenType, Crab) || jsEquals(p_tokenType, WeatherHen)) {
        return true;
      }

      return false;
    case Sluice.ordinal_0():
      if (jsEquals(p_tokenType, Speedboat) || jsEquals(p_tokenType, Barge) || jsEquals(p_tokenType, Crayfish) || jsEquals(p_tokenType, Tarask) || jsEquals(p_tokenType, Destroyer)) {
        return true;
      }

      return false;
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
      return p_tokenType.isOre();
    case Speedboat.ordinal_0():
    case Tank.ordinal_0():
    case Heap.ordinal_0():
    case Ore.ordinal_0():
    case Turret.ordinal_0():
    case Ore0.ordinal_0():
    case Ore3.ordinal_0():
    case Ore5.ordinal_0():
    default:return false;
  }
}
;
_.getLoadingCapability = function getLoadingCapability(){
  switch (this.ordinal_0()) {
    case Freighter.ordinal_0():
    case Teleporter.ordinal_0():
    case Warp.ordinal_0():
      return 1000;
    case Barge.ordinal_0():
      return 4;
    case WeatherHen.ordinal_0():
      return 1;
    case Crab.ordinal_0():
    case Crayfish.ordinal_0():
      return 2;
    case Pontoon.ordinal_0():
    case Sluice.ordinal_0():
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
      return 10;
    case Speedboat.ordinal_0():
    case Tank.ordinal_0():
    case Heap.ordinal_0():
    case Hovertank.ordinal_0():
    case Tarask.ordinal_0():
    case Destroyer.ordinal_0():
    case Ore0.ordinal_0():
    case Ore.ordinal_0():
    case Ore3.ordinal_0():
    case Ore5.ordinal_0():
    case Turret.ordinal_0():
    default:return 0;
  }
}
;
_.getLoadingSize = function getLoadingSize(){
  switch (this.ordinal_0()) {
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
    case Freighter.ordinal_0():
    case Warp.ordinal_0():
      return 10;
    case Barge.ordinal_0():
    case Destroyer.ordinal_0():
      return 6;
    case WeatherHen.ordinal_0():
    case Crab.ordinal_0():
    case Crayfish.ordinal_0():
    case Tarask.ordinal_0():
    case Teleporter.ordinal_0():
    case Ore5.ordinal_0():
      return 2;
    case Pontoon.ordinal_0():
    case Speedboat.ordinal_0():
    case Tank.ordinal_0():
    case Heap.ordinal_0():
    case Ore0.ordinal_0():
    case Ore.ordinal_0():
    case Ore3.ordinal_0():
    case Sluice.ordinal_0():
    case Hovertank.ordinal_0():
    case Turret.ordinal_0():
    default:return 1;
  }
}
;
_.getMaxBulletCount = function getMaxBulletCount(){
  switch (this.ordinal_0()) {
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
    case Turret.ordinal_0():
      return 100;
    case Destroyer.ordinal_0():
      return 6;
    case Freighter.ordinal_0():
      return 3;
    case Speedboat.ordinal_0():
    case Tank.ordinal_0():
    case Heap.ordinal_0():
    case WeatherHen.ordinal_0():
    case Tarask.ordinal_0():
    case Hovertank.ordinal_0():
      return 2;
    case Barge.ordinal_0():
    case Crab.ordinal_0():
    case Pontoon.ordinal_0():
    case Ore.ordinal_0():
    case Ore0.ordinal_0():
    case Ore3.ordinal_0():
    case Ore5.ordinal_0():
    case Teleporter.ordinal_0():
    case Warp.ordinal_0():
    default:return 0;
  }
}
;
_.getWinningPoint = function getWinningPoint(){
  switch (this.ordinal_0()) {
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
    case Ore0.ordinal_0():
    case Warp.ordinal_0():
      return 0;
    case Ore.ordinal_0():
      return 2;
    case Ore3.ordinal_0():
      return 3;
    case Ore5.ordinal_0():
      return 5;
    default:return 1;
  }
}
;
_.getZIndex = function getZIndex(p_sector){
  switch (this.ordinal_0()) {
    case Pontoon.ordinal_0():
    case Sluice.ordinal_0():
    case Warp.ordinal_0():
      return 0;
    case Freighter.ordinal_0():
      if (jsEquals(p_sector, ($clinit_Sector() , North)) || jsEquals(p_sector, ($clinit_Sector() , SouthEast)) || jsEquals(p_sector, ($clinit_Sector() , SouthWest)))
        return 3;
      else 
        return 2;
    case Barge.ordinal_0():
    case Crab.ordinal_0():
    case WeatherHen.ordinal_0():
    case Speedboat.ordinal_0():
    case Tank.ordinal_0():
    case Heap.ordinal_0():
    case Crayfish.ordinal_0():
    case Hovertank.ordinal_0():
    case Tarask.ordinal_0():
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
    case Destroyer.ordinal_0():
    case Teleporter.ordinal_0():
      return 3;
    case Ore0.ordinal_0():
    case Ore.ordinal_0():
    case Ore3.ordinal_0():
    case Ore5.ordinal_0():
      return 4;
    case Turret.ordinal_0():
      return 6;
    default:return 10;
  }
}
;
_.isDestroyer = function isDestroyer_0(){
  switch (this.ordinal_0()) {
    case Turret.ordinal_0():
    case Speedboat.ordinal_0():
    case Tank.ordinal_0():
    case Heap.ordinal_0():
    case Hovertank.ordinal_0():
    case Tarask.ordinal_0():
    case Destroyer.ordinal_0():
      return true;
    case Freighter.ordinal_0():
    case Barge.ordinal_0():
    case WeatherHen.ordinal_0():
    case Crab.ordinal_0():
    case Pontoon.ordinal_0():
    case Sluice.ordinal_0():
    case Crayfish.ordinal_0():
    case Ore0.ordinal_0():
    case Ore.ordinal_0():
    case Ore3.ordinal_0():
    case Ore5.ordinal_0():
    case Ore2Generator.ordinal_0():
    case Ore3Generator.ordinal_0():
    case Teleporter.ordinal_0():
    case Warp.ordinal_0():
    default:return false;
  }
}
;
_.isOre = function isOre(){
  switch (this.ordinal_0()) {
    case Ore0.ordinal_0():
    case Ore.ordinal_0():
    case Ore3.ordinal_0():
    case Ore5.ordinal_0():
      return true;
    default:return false;
  }
}
;
var Barge, Crab, Crayfish, Destroyer, Freighter, Heap, Hovertank, None_0, Ore, Ore0, Ore2Generator, Ore3, Ore3Generator, Ore5, Pontoon, Sluice, Speedboat, Tank, Tarask, Teleporter, Turret, Warp, WeatherHen;
var Lcom_fullmetalgalaxy_model_TokenType_2_classLit = createForEnum('com.fullmetalgalaxy.model', 'TokenType', 55, Ljava_lang_Enum_2_classLit, values_13, valueOf_12);
function $clinit_TokenType$Map(){
  $clinit_TokenType$Map = emptyMethod;
  $MAP_11 = createValueOfMap(values_13());
}

var $MAP_11;
function $clinit_TokenType_FieldSerializer(){
  $clinit_TokenType_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_17(streamReader, instance){
  $clinit_TokenType_FieldSerializer();
}

function instantiate_16(streamReader){
  $clinit_TokenType_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_13();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_12(streamWriter, instance){
  $clinit_TokenType_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_ScoreEstimation(){
  $clinit_ScoreEstimation = emptyMethod;
  $clinit_Object();
}

function ScoreEstimation(game){
  $clinit_ScoreEstimation();
  Object_0.call(this);
  this.$init_285();
  this.game = game;
}

defineClass(812, 1, {1:1}, ScoreEstimation);
_.$init_285 = function $init_285(){
  this.game = null;
  this.unusedActionPoint = new HashMap;
}
;
_.estimateFinalScore = function estimateFinalScore(){
  var assignedOre, currentTeam, finalScores, freighter, freighter$iterator, freighters, generatedOre, i, minDistance, onBoardFreighter, onBoardFreighters, oreFound, oreGeneratorOreCount, remainingActionPoint, team, team$iterator, team$iterator0, team$iterator1, teamScore, teamTokenDistances, token, token$iterator, tokenDistance, tokenDistance$iterator, tokenDistances, tokenDistances$iterator, totalActionPoint;
  finalScores = new HashMap;
  totalActionPoint = this.estimateTotalActionPoint();
  this.unusedActionPoint = new HashMap;
  oreGeneratorOreCount = narrow_int((this.game.getEbConfigGameTime().getTotalTimeStep() - this.game.getCurrentTimeStep()) / 3);
  freighters = this.game.getAllFreighter(getMaxColorValue());
  onBoardFreighters = new HashMap;
  for (team$iterator0 = this.game.getTeams().iterator_0(); team$iterator0.hasNext_0();) {
    team = castTo(team$iterator0.next_1(), 43);
    teamScore = 0;
    onBoardFreighter = new ArrayList;
    for (freighter$iterator = freighters.iterator_0(); freighter$iterator.hasNext_0();) {
      freighter = castTo(freighter$iterator.next_1(), 19);
      if (freighter.getEnuColor().isColored(team.getColors(this.game.getPreview()))) {
        if (jsEquals(freighter.getLocation(), ($clinit_Location() , Orbit)) || jsEquals(freighter.getLocation(), ($clinit_Location() , EndGame))) {
          teamScore += freighter.getWinningPoint();
        }
         else if (jsEquals(freighter.getLocation(), ($clinit_Location() , Board))) {
          onBoardFreighter.add_5(freighter);
        }
      }
    }
    teamScore -= team.getPlayerIds().size_1() * this.game.getInitialScore();
    onBoardFreighters.put(team, onBoardFreighter);
    finalScores.put(team, valueOf_37(teamScore));
  }
  teamTokenDistances = new HashMap;
  for (team$iterator1 = this.game.getTeams().iterator_0(); team$iterator1.hasNext_0();) {
    team = castTo(team$iterator1.next_1(), 43);
    teamTokenDistances.put(team, new ArrayList);
  }
  for (token$iterator = this.game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
      if (token.getType().isOre()) {
        for (team$iterator = this.game.getTeams().iterator_0(); team$iterator.hasNext_0();) {
          team = castTo(team$iterator.next_1(), 43);
          minDistance = 2147483647;
          for (freighter$iterator = castTo(onBoardFreighters.get_1(team), 38).iterator_0(); freighter$iterator.hasNext_0();) {
            freighter = castTo(freighter$iterator.next_1(), 19);
            minDistance = $wnd.Math.min(minDistance, this.game.getCoordinateSystem().getDiscreteDistance(token.getPosition(), freighter.getPosition()));
          }
          castTo(teamTokenDistances.get_1(team), 38).add_5(new ScoreEstimation$TokenDistance(token, minDistance));
        }
      }
       else if (jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
        for (i = 0; i < oreGeneratorOreCount; i++) {
          generatedOre = new EbToken_0(($clinit_TokenType() , Ore));
          if (jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
            generatedOre.setType(($clinit_TokenType() , Ore3));
          }
          generatedOre.setLocation(token.getLocation());
          generatedOre.setPosition(token.getPosition());
          for (team$iterator = this.game.getTeams().iterator_0(); team$iterator.hasNext_0();) {
            team = castTo(team$iterator.next_1(), 43);
            minDistance = 2147483647;
            for (freighter$iterator = castTo(onBoardFreighters.get_1(team), 38).iterator_0(); freighter$iterator.hasNext_0();) {
              freighter = castTo(freighter$iterator.next_1(), 19);
              minDistance = $wnd.Math.min(minDistance, this.game.getCoordinateSystem().getDiscreteDistance(generatedOre.getPosition(), freighter.getPosition()));
            }
            castTo(teamTokenDistances.get_1(team), 38).add_5(new ScoreEstimation$TokenDistance(generatedOre, minDistance));
          }
        }
      }
       else if (token.getColor_0() != 0) {
        team = this.game.getRegistrationByColor(token.getColor_0()).getTeam_1(this.game);
        minDistance = 2147483647;
        for (freighter$iterator = castTo(onBoardFreighters.get_1(team), 38).iterator_0(); freighter$iterator.hasNext_0();) {
          freighter = castTo(freighter$iterator.next_1(), 19);
          minDistance = $wnd.Math.min(minDistance, this.game.getCoordinateSystem().getDiscreteDistance(token.getPosition(), freighter.getPosition()));
        }
        remainingActionPoint = castTo(totalActionPoint.get_1(team), 28).intValue() - minDistance;
        if (remainingActionPoint >= 0) {
          totalActionPoint.put(team, valueOf_37(remainingActionPoint));
          finalScores.put(team, valueOf_37(castTo(finalScores.get_1(team), 28).intValue() + token.getWinningPoint()));
        }
      }
    }
  }
  for (tokenDistances$iterator = teamTokenDistances.values_0().iterator_0(); tokenDistances$iterator.hasNext_0();) {
    tokenDistances = castTo(tokenDistances$iterator.next_1(), 38);
    sort_6(tokenDistances);
  }
  assignedOre = new HashSet;
  currentTeam = this.getHigherActionTeam(totalActionPoint, 0);
  while (isNotNull(currentTeam)) {
    tokenDistances = castTo(teamTokenDistances.get_1(currentTeam), 38);
    oreFound = null;
    for (tokenDistance$iterator = tokenDistances.iterator_0(); tokenDistance$iterator.hasNext_0();) {
      tokenDistance = castTo(tokenDistance$iterator.next_1(), 244);
      if (!assignedOre.contains_0(tokenDistance.token)) {
        if (castTo(totalActionPoint.get_1(currentTeam), 28).intValue() > tokenDistance.distance) {
          assignedOre.add_5(tokenDistance.token);
          totalActionPoint.put(currentTeam, valueOf_37(castTo(totalActionPoint.get_1(currentTeam), 28).intValue() - tokenDistance.distance));
          finalScores.put(currentTeam, valueOf_37(castTo(finalScores.get_1(currentTeam), 28).intValue() + tokenDistance.token.getWinningPoint()));
          oreFound = tokenDistance;
        }
        break;
      }
    }
    if (isNull(oreFound)) {
      this.unusedActionPoint.put(currentTeam, castTo(totalActionPoint.get_1(currentTeam), 28));
      totalActionPoint.put(currentTeam, valueOf_37(0));
    }
    currentTeam = this.getHigherActionTeam(totalActionPoint, 0);
  }
  return finalScores;
}
;
_.estimateTotalActionPoint = function estimateTotalActionPoint(){
  var entry, entry$iterator, remainingTimeStep, takeOffTurn, takeOffTurn$iterator, totalActionPoint;
  totalActionPoint = new HashMap;
  remainingTimeStep = this.game.getEbConfigGameTime().getTotalTimeStep() - this.game.getCurrentTimeStep();
  for (takeOffTurn$iterator = this.game.getEbConfigGameTime().getTakeOffTurns().iterator_0(); takeOffTurn$iterator.hasNext_0();) {
    takeOffTurn = castTo(takeOffTurn$iterator.next_1(), 28);
    if (this.game.getCurrentTimeStep() < takeOffTurn.intValue()) {
      remainingTimeStep--;
    }
  }
  for (entry$iterator = this.getActionPtPerTimeStep().entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    totalActionPoint.put(castTo(entry.getKey(), 43), valueOf_37(castTo(entry.getValue_0(), 28).intValue() * remainingTimeStep));
  }
  return totalActionPoint;
}
;
_.getActionPtPerTimeStep = function getActionPtPerTimeStep(){
  var actionPtPerTimeStep, freighter, freighter$iterator, freighters, player, player$iterator, playerActionPt, team, team$iterator, teamActionPt;
  actionPtPerTimeStep = new HashMap;
  freighters = this.game.getAllFreighter(getMaxColorValue());
  for (team$iterator = this.game.getTeams().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    teamActionPt = 0;
    for (player$iterator = team.getPlayers(this.game.getPreview()).iterator_0(); player$iterator.hasNext_0();) {
      player = castTo(player$iterator.next_1(), 51);
      playerActionPt = 0;
      for (freighter$iterator = freighters.iterator_0(); freighter$iterator.hasNext_0();) {
        freighter = castTo(freighter$iterator.next_1(), 19);
        if (player.getEnuColor().contain_1(freighter.getColor_0()) && jsEquals(freighter.getLocation(), ($clinit_Location() , Board))) {
          if (playerActionPt == 0) {
            playerActionPt = this.game.getEbConfigGameTime().getActionPtPerTimeStep_0();
          }
           else {
            playerActionPt += this.game.getEbConfigGameTime().getActionPtPerExtraShip();
          }
        }
      }
      teamActionPt += playerActionPt;
    }
    actionPtPerTimeStep.put(team, valueOf_37(teamActionPt));
  }
  return actionPtPerTimeStep;
}
;
_.getHigherActionTeam = function getHigherActionTeam(totalActionPoint, minValue){
  var actionPoint, entry, entry$iterator, team;
  team = null;
  actionPoint = minValue;
  for (entry$iterator = totalActionPoint.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    if (castTo(entry.getValue_0(), 28).intValue() > actionPoint) {
      actionPoint = castTo(entry.getValue_0(), 28).intValue();
      team = castTo(entry.getKey(), 43);
    }
  }
  return team;
}
;
var Lcom_fullmetalgalaxy_model_ai_ScoreEstimation_2_classLit = createForClass('com.fullmetalgalaxy.model.ai', 'ScoreEstimation', 812, Ljava_lang_Object_2_classLit);
function $clinit_ScoreEstimation$TokenDistance(){
  $clinit_ScoreEstimation$TokenDistance = emptyMethod;
  $clinit_Object();
}

function ScoreEstimation$TokenDistance(p_token, p_distance){
  $clinit_ScoreEstimation$TokenDistance();
  Object_0.call(this);
  this.$init_286();
  this.token = p_token;
  this.distance = p_distance;
}

defineClass(244, 1, {244:1, 8:1, 1:1}, ScoreEstimation$TokenDistance);
_.$init_286 = function $init_286(){
  this.token = null;
  this.distance = 0;
}
;
_.compareTo_0 = function compareTo_2(p_o){
  return this.compareTo_1(castTo(p_o, 244));
}
;
_.compareTo_1 = function compareTo_1(p_o){
  return this.distance - p_o.distance;
}
;
_.distance = 0;
var Lcom_fullmetalgalaxy_model_ai_ScoreEstimation$TokenDistance_2_classLit = createForClass('com.fullmetalgalaxy.model.ai', 'ScoreEstimation/TokenDistance', 244, Ljava_lang_Object_2_classLit);
function $clinit_ConfigGameTime(){
  $clinit_ConfigGameTime = emptyMethod;
  var takeOffTurns, timeConfig;
  $clinit_Enum();
  Standard = new ConfigGameTime('Standard', 0);
  QuickAsynch = new ConfigGameTime('QuickAsynch', 1);
  QuickTurnBased = new ConfigGameTime('QuickTurnBased', 2);
  StandardAsynch = new ConfigGameTime('StandardAsynch', 3);
  Custom_0 = new ConfigGameTime('Custom', 4);
  s_configMap = new HashMap;
  {
    takeOffTurns = null;
    timeConfig = null;
    timeConfig = new EbConfigGameTime;
    timeConfig.setTimeStepDurationInSec(0);
    timeConfig.setTideChangeFrequency(1);
    timeConfig.setTotalTimeStep(26);
    timeConfig.setActionPtPerTimeStep(15);
    timeConfig.setActionPtPerExtraShip(5);
    timeConfig.setBulletCountIncrement(2);
    takeOffTurns = new ArrayList;
    takeOffTurns.add_5(valueOf_37(21));
    takeOffTurns.add_5(valueOf_37(26));
    timeConfig.setTakeOffTurns(takeOffTurns);
    timeConfig.setParallel(false);
    timeConfig.setRoundActionPt(5);
    timeConfig.setDescription('26 tours (pas de temps limite)');
    timeConfig.setDeploymentTimeStep(2);
    s_configMap.put(Standard, timeConfig);
    timeConfig = new EbConfigGameTime;
    timeConfig.setTimeStepDurationInSec(270);
    timeConfig.setTideChangeFrequency(1);
    timeConfig.setTotalTimeStep(26);
    timeConfig.setActionPtPerTimeStep(15);
    timeConfig.setActionPtPerExtraShip(5);
    timeConfig.setBulletCountIncrement(2);
    takeOffTurns = new ArrayList;
    takeOffTurns.add_5(valueOf_37(21));
    takeOffTurns.add_5(valueOf_37(26));
    timeConfig.setTakeOffTurns(takeOffTurns);
    timeConfig.setParallel(false);
    timeConfig.setRoundActionPt(5);
    timeConfig.setDescription('26 tours (3 min pour jouer)');
    timeConfig.setDeploymentTimeStep(2);
    s_configMap.put(QuickTurnBased, timeConfig);
    timeConfig = new EbConfigGameTime;
    timeConfig.setTimeStepDurationInSec(21000);
    timeConfig.setTideChangeFrequency(5);
    timeConfig.setTotalTimeStep(125);
    timeConfig.setActionPtPerTimeStep(3);
    timeConfig.setActionPtPerExtraShip(1);
    timeConfig.setBulletCountIncrement(0.5);
    takeOffTurns = new ArrayList;
    takeOffTurns.add_5(valueOf_37(103));
    takeOffTurns.add_5(valueOf_37(104));
    takeOffTurns.add_5(valueOf_37(105));
    takeOffTurns.add_5(valueOf_37(106));
    takeOffTurns.add_5(valueOf_37(107));
    takeOffTurns.add_5(valueOf_37(125));
    timeConfig.setTakeOffTurns(takeOffTurns);
    timeConfig.setParallel(true);
    timeConfig.setLockGameInMillis(30000);
    timeConfig.setRoundActionPt(1);
    timeConfig.setDescription('30 jours en parall\xE8le');
    timeConfig.setDeploymentTimeStep(8);
    s_configMap.put(StandardAsynch, timeConfig);
    timeConfig = new EbConfigGameTime;
    timeConfig.setTimeStepDurationInSec(140);
    timeConfig.setTideChangeFrequency(2);
    timeConfig.setTotalTimeStep(50);
    timeConfig.setActionPtPerTimeStep(8);
    timeConfig.setActionPtPerExtraShip(3);
    timeConfig.setBulletCountIncrement(1);
    takeOffTurns = new ArrayList;
    takeOffTurns.add_5(valueOf_37(41));
    takeOffTurns.add_5(valueOf_37(42));
    takeOffTurns.add_5(valueOf_37(50));
    timeConfig.setTakeOffTurns(takeOffTurns);
    timeConfig.setParallel(true);
    timeConfig.setLockGameInMillis(10000);
    timeConfig.setRoundActionPt(1);
    timeConfig.setDescription('1h20 en parall\xE8le');
    timeConfig.setDeploymentTimeStep(4);
    s_configMap.put(QuickAsynch, timeConfig);
  }
}

function ConfigGameTime(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_287();
}

function getEbConfigGameTime_0(p_config){
  return castTo(s_configMap.get_1(p_config), 142);
}

function getFromProperties(p_isQuick, p_isParallel){
  $clinit_ConfigGameTime();
  if (p_isQuick) {
    if (p_isParallel) {
      return QuickAsynch;
    }
     else {
      return QuickTurnBased;
    }
  }
   else {
    if (p_isParallel) {
      return StandardAsynch;
    }
     else {
      return Standard;
    }
  }
}

function valueOf_13(name_0){
  $clinit_ConfigGameTime();
  return valueOf(($clinit_ConfigGameTime$Map() , $MAP_12), name_0);
}

function values_14(){
  $clinit_ConfigGameTime();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_constant_ConfigGameTime_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 164, 0, [Standard, QuickAsynch, QuickTurnBased, StandardAsynch, Custom_0]);
}

defineClass(164, 7, {164:1, 4:1, 8:1, 7:1, 1:1}, ConfigGameTime);
_.$init_287 = function $init_287(){
}
;
_.getEbConfigGameTime = function getEbConfigGameTime(){
  return getEbConfigGameTime_0(this);
}
;
_.isParallel = function isParallel(){
  return jsEquals(this, QuickAsynch) || jsEquals(this, StandardAsynch);
}
;
var Custom_0, QuickAsynch, QuickTurnBased, Standard, StandardAsynch, s_configMap;
var Lcom_fullmetalgalaxy_model_constant_ConfigGameTime_2_classLit = createForEnum('com.fullmetalgalaxy.model.constant', 'ConfigGameTime', 164, Ljava_lang_Enum_2_classLit, values_14, valueOf_13);
function $clinit_ConfigGameTime$Map(){
  $clinit_ConfigGameTime$Map = emptyMethod;
  $MAP_12 = createValueOfMap(values_14());
}

var $MAP_12;
function $clinit_ConfigGameTime_FieldSerializer(){
  $clinit_ConfigGameTime_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_18(streamReader, instance){
  $clinit_ConfigGameTime_FieldSerializer();
}

function instantiate_17(streamReader){
  $clinit_ConfigGameTime_FieldSerializer();
  var ordinal, values;
  ordinal = streamReader.readInt();
  values = values_14();
  if (!(ordinal >= 0 && ordinal < values.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return values[ordinal];
}

function serialize_13(streamWriter, instance){
  $clinit_ConfigGameTime_FieldSerializer();
  if (!isNotNull(instance)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  streamWriter.writeInt(instance.ordinal_0());
}

function $clinit_FmpConstant(){
  $clinit_FmpConstant = emptyMethod;
  $clinit_Object();
  currentStatsTimeWindowInMillis = mul_0(mul_0(mul_0(mul_0(mul_0(1000, 60), 60), 24), 30), 18);
}

function getDefaultInitialHolds(){
  $clinit_FmpConstant();
  var initialHold;
  initialHold = new HashMap;
  initialHold.put(($clinit_TokenType() , Pontoon), valueOf_37(1));
  initialHold.put(($clinit_TokenType() , Crab), valueOf_37(1));
  initialHold.put(($clinit_TokenType() , Tank), valueOf_37(4));
  initialHold.put(($clinit_TokenType() , Heap), valueOf_37(1));
  initialHold.put(($clinit_TokenType() , Speedboat), valueOf_37(2));
  initialHold.put(($clinit_TokenType() , Barge), valueOf_37(1));
  initialHold.put(($clinit_TokenType() , WeatherHen), valueOf_37(1));
  initialHold.put(($clinit_TokenType() , Turret), valueOf_37(3));
  return initialHold;
}

function getDefaultReserve(p_playerCount){
  $clinit_FmpConstant();
  var constructReserve, entry, entry$iterator;
  constructReserve = new HashMap;
  constructReserve.put(($clinit_TokenType() , Pontoon), valueOf_37(1));
  constructReserve.put(($clinit_TokenType() , Crab), valueOf_37(1));
  constructReserve.put(($clinit_TokenType() , Tank), valueOf_37(4));
  for (entry$iterator = constructReserve.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    entry.setValue_6(valueOf_37(castTo(entry.getValue_0(), 28).intValue() * p_playerCount));
  }
  return constructReserve;
}

function getHexHeight(p_zoom){
  $clinit_FmpConstant();
  switch (p_zoom) {
    case 0:
      return 29;
    default:case 1:
      return 40;
  }
}

function getHexHeight_0(p_zoom){
  $clinit_FmpConstant();
  return getHexHeight(p_zoom.getValue_1());
}

function getHexWidth(p_zoom){
  $clinit_FmpConstant();
  switch (p_zoom) {
    case 0:
      return 34;
    default:case 1:
      return 76;
  }
}

function getHexWidth_0(p_zoom){
  $clinit_FmpConstant();
  return getHexWidth(p_zoom.getValue_1());
}

var currentStatsTimeWindowInMillis = 0;
function $clinit_PathFinder(){
  $clinit_PathFinder = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_pathfinder_PathFinder_2_classLit = createForInterface('com.fullmetalgalaxy.model.pathfinder', 'PathFinder');
function $clinit_PathGraph(){
  $clinit_PathGraph = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_pathfinder_PathGraph_2_classLit = createForInterface('com.fullmetalgalaxy.model.pathfinder', 'PathGraph');
function $clinit_PathNode(){
  $clinit_PathNode = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_pathfinder_PathNode_2_classLit = createForInterface('com.fullmetalgalaxy.model.pathfinder', 'PathNode');
function $clinit_SimplePathFinder(){
  $clinit_SimplePathFinder = emptyMethod;
  $clinit_Object();
}

function SimplePathFinder(p_pathGraph){
  $clinit_SimplePathFinder();
  Object_0.call(this);
  this.$init_288();
  this.m_pathGraph = p_pathGraph;
}

defineClass(1045, 1, {1:1}, SimplePathFinder);
_.$init_288 = function $init_288(){
  this.m_pathGraph = null;
  this.m_path = null;
  this.m_closedPath = null;
}
;
_.findPath = function findPath(p_fromNode, p_toNode, p_mobile){
  var nextNode;
  this.m_path = new Stack;
  this.m_closedPath = new HashSet;
  this.m_path.push_0(p_fromNode);
  nextNode = this.getBestNextNode(p_toNode, p_mobile);
  while (!equals_Ljava_lang_Object__Z__devirtual$(p_fromNode, nextNode) && !equals_Ljava_lang_Object__Z__devirtual$(p_toNode, nextNode)) {
    if (equals_Ljava_lang_Object__Z__devirtual$(nextNode, this.m_path.peek_0())) {
      this.m_closedPath.add_5(castTo(this.m_path.pop_0(), 256));
    }
     else {
      this.m_path.push_0(nextNode);
    }
    nextNode = this.getBestNextNode(p_toNode, p_mobile);
  }
  if (equals_Ljava_lang_Object__Z__devirtual$(p_toNode, nextNode)) {
    this.m_path.push_0(p_toNode);
  }
   else {
    this.m_path.clear_0();
  }
  return this.m_path;
}
;
_.getBestNextNode = function getBestNextNode(p_toNode, p_mobile){
  var bestHeuristic, bestNode, fromNode, heuristic, it, nodes, pathNode;
  fromNode = castTo(castTo(this.m_path.peek_0(), 256), 256);
  nodes = this.m_pathGraph.getAvailableNode(fromNode, p_mobile);
  bestNode = fromNode;
  bestHeuristic = this.m_pathGraph.heuristic(bestNode, p_toNode, p_mobile);
  for (it = nodes.iterator_0(); it.hasNext_0();) {
    pathNode = castTo(castTo(it.next_1(), 256), 256);
    heuristic = this.m_pathGraph.heuristic(pathNode, p_toNode, p_mobile);
    if (heuristic < bestHeuristic && !this.m_closedPath.contains_0(pathNode)) {
      bestNode = pathNode;
      bestHeuristic = heuristic;
    }
  }
  return bestNode;
}
;
var Lcom_fullmetalgalaxy_model_pathfinder_SimplePathFinder_2_classLit = createForClass('com.fullmetalgalaxy.model.pathfinder', 'SimplePathFinder', 1045, Ljava_lang_Object_2_classLit);
function $clinit_AnPojoBase(){
  $clinit_AnPojoBase = emptyMethod;
  $clinit_Object();
}

function AnPojoBase(){
  $clinit_AnPojoBase();
  Object_0.call(this);
  this.$init_289();
}

defineClass(323, 1, {4:1, 1:1});
_.$init_289 = function $init_289(){
}
;
var Lcom_fullmetalgalaxy_model_persist_AnPojoBase_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'AnPojoBase', 323, Ljava_lang_Object_2_classLit);
function $clinit_EbBase(){
  $clinit_EbBase = emptyMethod;
  $clinit_AnPojoBase();
}

function EbBase(){
  $clinit_EbBase();
  AnPojoBase.call(this);
  this.$init_290();
  this.init_0();
}

defineClass(21, 323, {21:1, 4:1, 1:1}, EbBase);
_.$init_290 = function $init_290(){
  this.id_0 = null;
}
;
_.createEbBase = function createEbBase(){
  var base;
  base = new EbBase;
  base.setId(this.getId());
  return base;
}
;
_.equals_0 = function equals_8(p_arg){
  if (maskUndefined(this) === maskUndefined(p_arg)) {
    return true;
  }
  if (!instanceOf(p_arg, 21)) {
    return false;
  }
  if (this.isTrancient() || castTo(p_arg, 21).isTrancient()) {
    return false;
  }
  if (eq(this.getId(), 0) || eq(castTo(p_arg, 21).getId(), 0)) {
    return false;
  }
  return eq(this.getId(), castTo(p_arg, 21).getId());
}
;
_.getId = function getId(){
  if (isNull(this.id_0)) {
    return 0;
  }
  return this.id_0.longValue();
}
;
_.hashCode_1 = function hashCode_7(){
  return getClassPrototype(1).hashCode_1.call(this);
}
;
_.init_0 = function init(){
  this.id_0 = null;
}
;
_.isTrancient = function isTrancient(){
  return isNull(this.id_0) || eq(this.id_0.longValue(), 0);
}
;
_.setId = function setId(p_id){
  this.id_0 = valueOf_40(p_id);
  if (eq(this.id_0.longValue(), 0)) {
    this.id_0 = null;
  }
}
;
var Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbBase', 21, Lcom_fullmetalgalaxy_model_persist_AnPojoBase_2_classLit);
function $clinit_EbCommentBase(){
  $clinit_EbCommentBase = emptyMethod;
  $clinit_EbBase();
}

function EbCommentBase(){
  $clinit_EbCommentBase();
  EbBase.call(this);
  this.$init_291();
}

defineClass(411, 21, {21:1, 4:1, 1:1}, EbCommentBase);
_.$init_291 = function $init_291(){
  this.m_fromAcount = null;
  this.m_comment = '';
  this.m_date = new Date_0;
}
;
var Lcom_fullmetalgalaxy_model_persist_EbCommentBase_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbCommentBase', 411, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_AccountComment(){
  $clinit_AccountComment = emptyMethod;
  $clinit_EbCommentBase();
}

function AccountComment(){
  $clinit_AccountComment();
  EbCommentBase.call(this);
  this.$init_292();
}

defineClass(816, 411, {21:1, 4:1, 1:1}, AccountComment);
_.$init_292 = function $init_292(){
  this.m_toAcount = null;
  this.m_score = 0;
}
;
_.m_score = 0;
var Lcom_fullmetalgalaxy_model_persist_AccountComment_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'AccountComment', 816, Lcom_fullmetalgalaxy_model_persist_EbCommentBase_2_classLit);
function $clinit_AccountComment_FieldSerializer(){
  $clinit_AccountComment_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_19(streamReader, instance){
  $clinit_AccountComment_FieldSerializer();
  setM_score(instance, streamReader.readInt());
  setM_toAcount(instance, castTo(streamReader.readObject(), 131));
  deserialize_25(streamReader, instance);
}

function getM_score(instance){
  return instance.m_score;
}

function getM_toAcount(instance){
  return instance.m_toAcount;
}

function instantiate_18(streamReader){
  $clinit_AccountComment_FieldSerializer();
  return new AccountComment;
}

function serialize_14(streamWriter, instance){
  $clinit_AccountComment_FieldSerializer();
  streamWriter.writeInt(getM_score(instance));
  streamWriter.writeObject(getM_toAcount(instance));
  serialize_20(streamWriter, instance);
}

function setM_score(instance, value_0){
  instance.m_score = value_0;
}

function setM_toAcount(instance, value_0){
  instance.m_toAcount = value_0;
}

function $clinit_EbEmbedBase(){
  $clinit_EbEmbedBase = emptyMethod;
  $clinit_AnPojoBase();
  serialVersionUID = neg_0(755917115);
}

function EbEmbedBase(){
  $clinit_EbEmbedBase();
  AnPojoBase.call(this);
  this.$init_293();
}

defineClass(286, 323, {4:1, 1:1});
_.$init_293 = function $init_293(){
}
;
var serialVersionUID = 0;
var Lcom_fullmetalgalaxy_model_persist_EbEmbedBase_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbEmbedBase', 286, Lcom_fullmetalgalaxy_model_persist_AnPojoBase_2_classLit);
function $clinit_AnPair(){
  $clinit_AnPair = emptyMethod;
  $clinit_EbEmbedBase();
}

function AnPair(){
  $clinit_AnPair();
  EbEmbedBase.call(this);
  this.$init_294();
}

function AnPair_0(p_x, p_y){
  $clinit_AnPair();
  EbEmbedBase.call(this);
  this.$init_294();
  this.x_0 = p_x;
  this.y_0 = p_y;
}

function AnPair_1(p_anPair){
  $clinit_AnPair();
  EbEmbedBase.call(this);
  this.$init_294();
  this.x_0 = p_anPair.getX();
  this.y_0 = p_anPair.getY();
}

defineClass(73, 286, {73:1, 4:1, 1:1}, AnPair, AnPair_0, AnPair_1);
_.$init_294 = function $init_294(){
  this.x_0 = -1;
  this.y_0 = -1;
}
;
_.equals_3 = function equals_9(other){
  if (jsEquals(this, other))
    return true;
  if (isNull(other))
    return false;
  if (this.x_0 == other.x_0 && this.y_0 == other.y_0)
    return true;
  else 
    return false;
}
;
_.equals_0 = function equals_10(obj){
  var other, th;
  other = null;
  try {
    other = castTo(obj, 73);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 24)) {
      th = $e0;
      return getClassPrototype(1).equals_0.call(this, obj);
    }
     else 
      throw toJs($e0);
  }
  return this.equals_3(other);
}
;
_.getX = function getX(){
  return this.x_0;
}
;
_.getY = function getY(){
  return this.y_0;
}
;
_.hashCode_1 = function hashCode_8(){
  var prime, result;
  prime = 31;
  result = 1;
  result = 31 * result + this.x_0;
  result = 31 * result + this.y_0;
  return result;
}
;
_.setX = function setX(p_x){
  this.x_0 = p_x;
}
;
_.setY = function setY(p_y){
  this.y_0 = p_y;
}
;
_.x_0 = 0;
_.y_0 = 0;
var Lcom_fullmetalgalaxy_model_persist_AnPair_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'AnPair', 73, Lcom_fullmetalgalaxy_model_persist_EbEmbedBase_2_classLit);
function $clinit_AnBoardPosition(){
  $clinit_AnBoardPosition = emptyMethod;
  $clinit_AnPair();
}

function AnBoardPosition(){
  $clinit_AnBoardPosition();
  AnPair.call(this);
  this.$init_295();
}

function AnBoardPosition_0(p_x, p_y){
  $clinit_AnBoardPosition();
  AnPair_0.call(this, p_x, p_y);
  this.$init_295();
}

function AnBoardPosition_1(p_x, p_y, p_sector){
  $clinit_AnBoardPosition();
  AnPair_0.call(this, p_x, p_y);
  this.$init_295();
  this.sector = p_sector;
}

function AnBoardPosition_2(p_position){
  $clinit_AnBoardPosition();
  AnPair_1.call(this, p_position);
  this.$init_295();
  this.setSector(p_position.getSector());
}

defineClass(23, 73, {256:1, 23:1, 73:1, 4:1, 1:1}, AnBoardPosition, AnBoardPosition_0, AnBoardPosition_1, AnBoardPosition_2);
_.$init_295 = function $init_295(){
  this.sector = ($clinit_Sector() , North);
}
;
_.getSector = function getSector_2(){
  return this.sector;
}
;
_.newInstance = function newInstance(){
  return new AnBoardPosition_2(this);
}
;
_.setSector = function setSector_0(p_sector){
  this.sector = p_sector;
}
;
_.toString_0 = function toString_20(){
  var str;
  str = '[';
  str += '' + toString_64(this.getX());
  str += ',';
  str += '' + toString_64(this.getY());
  str += ';';
  str += '' + this.getSector().toString_0();
  str += ']';
  return str;
}
;
var Lcom_fullmetalgalaxy_model_persist_AnBoardPosition_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'AnBoardPosition', 23, Lcom_fullmetalgalaxy_model_persist_AnPair_2_classLit);
function $clinit_AnBoardPosition_FieldSerializer(){
  $clinit_AnBoardPosition_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_20(streamReader, instance){
  $clinit_AnBoardPosition_FieldSerializer();
  setSector_1(instance, castTo(streamReader.readObject(), 166));
  deserialize_21(streamReader, instance);
}

function getSector_3(instance){
  return instance.sector;
}

function instantiate_19(streamReader){
  $clinit_AnBoardPosition_FieldSerializer();
  return new AnBoardPosition;
}

function serialize_15(streamWriter, instance){
  $clinit_AnBoardPosition_FieldSerializer();
  streamWriter.writeObject(getSector_3(instance));
  serialize_16(streamWriter, instance);
}

function setSector_1(instance, value_0){
  instance.sector = value_0;
}

function $clinit_AnPair_FieldSerializer(){
  $clinit_AnPair_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_21(streamReader, instance){
  $clinit_AnPair_FieldSerializer();
  setX_0(instance, streamReader.readInt());
  setY_0(instance, streamReader.readInt());
  deserialize_28(streamReader, instance);
}

function getX_0(instance){
  return instance.x_0;
}

function getY_0(instance){
  return instance.y_0;
}

function serialize_16(streamWriter, instance){
  $clinit_AnPair_FieldSerializer();
  streamWriter.writeInt(getX_0(instance));
  streamWriter.writeInt(getY_0(instance));
  serialize_23(streamWriter, instance);
}

function setX_0(instance, value_0){
  instance.x_0 = value_0;
}

function setY_0(instance, value_0){
  instance.y_0 = value_0;
}

function $clinit_AnPojoBase_FieldSerializer(){
  $clinit_AnPojoBase_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_22(streamReader, instance){
  $clinit_AnPojoBase_FieldSerializer();
}

function serialize_17(streamWriter, instance){
  $clinit_AnPojoBase_FieldSerializer();
}

function $clinit_CompanyStatistics(){
  $clinit_CompanyStatistics = emptyMethod;
  $clinit_EbBase();
}

function CompanyStatistics(){
  $clinit_CompanyStatistics();
  CompanyStatistics_0.call(this, null);
}

function CompanyStatistics_0(p_company){
  EbBase.call(this);
  this.$init_296();
  this.m_company = p_company;
  if (isNull(this.m_company)) {
    this.m_company = ($clinit_Company() , Freelancer);
  }
  this.m_year = (new Date_0).getYear_0();
}

defineClass(412, 21, {21:1, 4:1, 1:1}, CompanyStatistics);
_.$init_296 = function $init_296(){
  this.m_company = null;
  this.m_year = 0;
  this.m_profit = 0;
  this.m_miningCount = 0;
  this.m_profitability = 0;
}
;
_.m_miningCount = 0;
_.m_profit = 0;
_.m_profitability = 0;
_.m_year = 0;
var Lcom_fullmetalgalaxy_model_persist_CompanyStatistics_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'CompanyStatistics', 412, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_CompanyStatistics_FieldSerializer(){
  $clinit_CompanyStatistics_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_23(streamReader, instance){
  $clinit_CompanyStatistics_FieldSerializer();
  setM_company(instance, castTo(streamReader.readObject(), 120));
  setM_miningCount(instance, streamReader.readInt());
  setM_profit(instance, streamReader.readInt());
  setM_profitability(instance, streamReader.readFloat());
  setM_year(instance, streamReader.readInt());
  deserialize_24(streamReader, instance);
}

function getM_company(instance){
  return instance.m_company;
}

function getM_miningCount(instance){
  return instance.m_miningCount;
}

function getM_profit(instance){
  return instance.m_profit;
}

function getM_profitability(instance){
  return instance.m_profitability;
}

function getM_year(instance){
  return instance.m_year;
}

function instantiate_20(streamReader){
  $clinit_CompanyStatistics_FieldSerializer();
  return new CompanyStatistics;
}

function serialize_18(streamWriter, instance){
  $clinit_CompanyStatistics_FieldSerializer();
  streamWriter.writeObject(getM_company(instance));
  streamWriter.writeInt(getM_miningCount(instance));
  streamWriter.writeInt(getM_profit(instance));
  streamWriter.writeFloat(getM_profitability(instance));
  streamWriter.writeInt(getM_year(instance));
  serialize_19(streamWriter, instance);
}

function setM_company(instance, value_0){
  instance.m_company = value_0;
}

function setM_miningCount(instance, value_0){
  instance.m_miningCount = value_0;
}

function setM_profit(instance, value_0){
  instance.m_profit = value_0;
}

function setM_profitability(instance, value_0){
  instance.m_profitability = value_0;
}

function setM_year(instance, value_0){
  instance.m_year = value_0;
}

function $clinit_EbBase_FieldSerializer(){
  $clinit_EbBase_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_24(streamReader, instance){
  $clinit_EbBase_FieldSerializer();
  setId_0(instance, castTo(streamReader.readObject(), 66));
  deserialize_22(streamReader, instance);
}

function getId_0(instance){
  return instance.id_0;
}

function instantiate_21(streamReader){
  $clinit_EbBase_FieldSerializer();
  return new EbBase;
}

function serialize_19(streamWriter, instance){
  $clinit_EbBase_FieldSerializer();
  streamWriter.writeObject(getId_0(instance));
  serialize_17(streamWriter, instance);
}

function setId_0(instance, value_0){
  instance.id_0 = value_0;
}

function $clinit_EbCommentBase_FieldSerializer(){
  $clinit_EbCommentBase_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_25(streamReader, instance){
  $clinit_EbCommentBase_FieldSerializer();
  setM_comment(instance, streamReader.readString());
  setM_date_0(instance, castTo(streamReader.readObject(), 30));
  setM_fromAcount(instance, castTo(streamReader.readObject(), 131));
  deserialize_24(streamReader, instance);
}

function getM_comment(instance){
  return instance.m_comment;
}

function getM_date_0(instance){
  return instance.m_date;
}

function getM_fromAcount(instance){
  return instance.m_fromAcount;
}

function instantiate_22(streamReader){
  $clinit_EbCommentBase_FieldSerializer();
  return new EbCommentBase;
}

function serialize_20(streamWriter, instance){
  $clinit_EbCommentBase_FieldSerializer();
  streamWriter.writeString(getM_comment(instance));
  streamWriter.writeObject(getM_date_0(instance));
  streamWriter.writeObject(getM_fromAcount(instance));
  serialize_19(streamWriter, instance);
}

function setM_comment(instance, value_0){
  instance.m_comment = value_0;
}

function setM_date_0(instance, value_0){
  instance.m_date = value_0;
}

function setM_fromAcount(instance, value_0){
  instance.m_fromAcount = value_0;
}

function $clinit_EbConfigGameTime(){
  $clinit_EbConfigGameTime = emptyMethod;
  $clinit_EbBase();
}

function EbConfigGameTime(){
  $clinit_EbConfigGameTime();
  EbBase.call(this);
  this.$init_297();
  this.init_1();
}

defineClass(142, 21, {21:1, 142:1, 4:1, 1:1}, EbConfigGameTime);
_.$init_297 = function $init_297(){
  this.m_timeStepDurationInSec = 86400;
  this.m_tideChangeFrequency = 1;
  this.m_totalTimeStep = 26;
  this.m_actionPtPerTimeStep = 15;
  this.m_actionPtPerExtraShip = 5;
  this.m_actionPtMaxReserve = 25;
  this.m_actionPtMaxPerExtraShip = 5;
  this.m_bulletCountIncrement = 20;
  this.m_description = '';
  this.m_takeOffTurns = new ArrayList;
  this.m_isParallel = false;
  this.m_lockGameInMillis = 2000;
  this.m_roundActionPt = 1;
  this.m_deploymentTimeStep = 1;
}
;
_.getActionPtMaxPerExtraShip = function getActionPtMaxPerExtraShip(){
  if (this.m_actionPtMaxPerExtraShip == 0)
    this.m_actionPtMaxPerExtraShip = 5;
  return this.m_actionPtMaxPerExtraShip;
}
;
_.getActionPtMaxReserve = function getActionPtMaxReserve(){
  if (this.m_actionPtMaxReserve == 0)
    this.m_actionPtMaxReserve = 25;
  return this.m_actionPtMaxReserve;
}
;
_.getActionPtPerExtraShip = function getActionPtPerExtraShip(){
  return this.m_actionPtPerExtraShip;
}
;
_.getActionPtPerTimeStep_0 = function getActionPtPerTimeStep_0(){
  return this.m_actionPtPerTimeStep;
}
;
_.getBulletCountIncrement = function getBulletCountIncrement(){
  return this.m_bulletCountIncrement / 10;
}
;
_.getDeploymentTimeStep = function getDeploymentTimeStep(){
  return this.m_deploymentTimeStep;
}
;
_.getLockGameInMillis = function getLockGameInMillis(){
  return this.m_lockGameInMillis;
}
;
_.getRoundActionPt = function getRoundActionPt(){
  return this.m_roundActionPt;
}
;
_.getTakeOffTurns = function getTakeOffTurns(){
  return this.m_takeOffTurns;
}
;
_.getTideChangeFrequency = function getTideChangeFrequency(){
  return this.m_tideChangeFrequency;
}
;
_.getTimeStepDurationInMili = function getTimeStepDurationInMili(){
  return fromInt_0(this.getTimeStepDurationInSec() * 1000);
}
;
_.getTimeStepDurationInSec = function getTimeStepDurationInSec(){
  return this.m_timeStepDurationInSec;
}
;
_.getTotalTimeStep = function getTotalTimeStep(){
  return this.m_totalTimeStep;
}
;
_.init_1 = function init_0(){
  this.m_timeStepDurationInSec = 86400;
  this.m_tideChangeFrequency = 1;
  this.m_totalTimeStep = 26;
  this.m_actionPtPerTimeStep = 15;
  this.m_actionPtPerExtraShip = 5;
  this.m_actionPtMaxReserve = 25;
  this.m_actionPtMaxPerExtraShip = 5;
  this.m_takeOffTurns = new ArrayList;
  this.m_takeOffTurns.add_5(valueOf_37(21));
  this.m_takeOffTurns.add_5(valueOf_37(26));
  this.m_isParallel = false;
  this.m_roundActionPt = 1;
  this.m_deploymentTimeStep = 1;
}
;
_.isParallel = function isParallel_0(){
  return this.m_isParallel;
}
;
_.isQuick = function isQuick(){
  return this.m_timeStepDurationInSec > 0 && this.m_timeStepDurationInSec < 60 * 30;
}
;
_.setActionPtPerExtraShip = function setActionPtPerExtraShip(p_actionPtPerExtraShip){
  this.m_actionPtPerExtraShip = p_actionPtPerExtraShip;
}
;
_.setActionPtPerTimeStep = function setActionPtPerTimeStep(p_actionPtPerTimeStep){
  this.m_actionPtPerTimeStep = p_actionPtPerTimeStep;
}
;
_.setBulletCountIncrement = function setBulletCountIncrement(p_bulletCountIncrement){
  this.m_bulletCountIncrement = round_1(p_bulletCountIncrement * 10);
}
;
_.setDeploymentTimeStep = function setDeploymentTimeStep(p_deploymentTimeStep){
  this.m_deploymentTimeStep = p_deploymentTimeStep;
}
;
_.setDescription = function setDescription(p_description){
  this.m_description = p_description;
}
;
_.setLockGameInMillis = function setLockGameInMillis(p_lockGameInMillis){
  this.m_lockGameInMillis = p_lockGameInMillis;
}
;
_.setParallel = function setParallel(p_asynchron){
  this.m_isParallel = p_asynchron;
}
;
_.setRoundActionPt = function setRoundActionPt(p_roundActionPt){
  this.m_roundActionPt = p_roundActionPt;
}
;
_.setTakeOffTurns = function setTakeOffTurns(p_takeOffTurns){
  this.m_takeOffTurns = p_takeOffTurns;
}
;
_.setTideChangeFrequency = function setTideChangeFrequency(p_tideChangeFrequency){
  this.m_tideChangeFrequency = p_tideChangeFrequency;
}
;
_.setTimeStepDurationInSec = function setTimeStepDurationInSec(p_timeStepDurationInSec){
  this.m_timeStepDurationInSec = p_timeStepDurationInSec;
}
;
_.setTotalTimeStep = function setTotalTimeStep(p_totalTimeStep){
  this.m_totalTimeStep = p_totalTimeStep;
}
;
_.m_actionPtMaxPerExtraShip = 0;
_.m_actionPtMaxReserve = 0;
_.m_actionPtPerExtraShip = 0;
_.m_actionPtPerTimeStep = 0;
_.m_bulletCountIncrement = 0;
_.m_deploymentTimeStep = 0;
_.m_isParallel = false;
_.m_lockGameInMillis = 0;
_.m_roundActionPt = 0;
_.m_tideChangeFrequency = 0;
_.m_timeStepDurationInSec = 0;
_.m_totalTimeStep = 0;
var Lcom_fullmetalgalaxy_model_persist_EbConfigGameTime_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbConfigGameTime', 142, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbConfigGameTime_FieldSerializer(){
  $clinit_EbConfigGameTime_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_26(streamReader, instance){
  $clinit_EbConfigGameTime_FieldSerializer();
  setM_actionPtMaxPerExtraShip(instance, streamReader.readInt());
  setM_actionPtMaxReserve(instance, streamReader.readInt());
  setM_actionPtPerExtraShip(instance, streamReader.readInt());
  setM_actionPtPerTimeStep(instance, streamReader.readInt());
  instance.m_bulletCountIncrement = streamReader.readInt();
  setM_deploymentTimeStep(instance, streamReader.readInt());
  setM_description(instance, streamReader.readString());
  setM_isParallel(instance, streamReader.readBoolean());
  setM_lockGameInMillis(instance, streamReader.readInt());
  setM_roundActionPt(instance, streamReader.readInt());
  setM_takeOffTurns(instance, castTo(streamReader.readObject(), 12));
  setM_tideChangeFrequency(instance, streamReader.readInt());
  setM_timeStepDurationInSec(instance, streamReader.readInt());
  setM_totalTimeStep(instance, streamReader.readInt());
  deserialize_24(streamReader, instance);
}

function getM_actionPtMaxPerExtraShip(instance){
  return instance.m_actionPtMaxPerExtraShip;
}

function getM_actionPtMaxReserve(instance){
  return instance.m_actionPtMaxReserve;
}

function getM_actionPtPerExtraShip(instance){
  return instance.m_actionPtPerExtraShip;
}

function getM_actionPtPerTimeStep(instance){
  return instance.m_actionPtPerTimeStep;
}

function getM_deploymentTimeStep(instance){
  return instance.m_deploymentTimeStep;
}

function getM_description(instance){
  return instance.m_description;
}

function getM_isParallel(instance){
  return instance.m_isParallel;
}

function getM_lockGameInMillis(instance){
  return instance.m_lockGameInMillis;
}

function getM_roundActionPt(instance){
  return instance.m_roundActionPt;
}

function getM_takeOffTurns(instance){
  return instance.m_takeOffTurns;
}

function getM_tideChangeFrequency(instance){
  return instance.m_tideChangeFrequency;
}

function getM_timeStepDurationInSec(instance){
  return instance.m_timeStepDurationInSec;
}

function getM_totalTimeStep(instance){
  return instance.m_totalTimeStep;
}

function instantiate_23(streamReader){
  $clinit_EbConfigGameTime_FieldSerializer();
  return new EbConfigGameTime;
}

function serialize_21(streamWriter, instance){
  $clinit_EbConfigGameTime_FieldSerializer();
  streamWriter.writeInt(getM_actionPtMaxPerExtraShip(instance));
  streamWriter.writeInt(getM_actionPtMaxReserve(instance));
  streamWriter.writeInt(getM_actionPtPerExtraShip(instance));
  streamWriter.writeInt(getM_actionPtPerTimeStep(instance));
  streamWriter.writeInt(instance.m_bulletCountIncrement);
  streamWriter.writeInt(getM_deploymentTimeStep(instance));
  streamWriter.writeString(getM_description(instance));
  streamWriter.writeBoolean(getM_isParallel(instance));
  streamWriter.writeInt(getM_lockGameInMillis(instance));
  streamWriter.writeInt(getM_roundActionPt(instance));
  streamWriter.writeObject(getM_takeOffTurns(instance));
  streamWriter.writeInt(getM_tideChangeFrequency(instance));
  streamWriter.writeInt(getM_timeStepDurationInSec(instance));
  streamWriter.writeInt(getM_totalTimeStep(instance));
  serialize_19(streamWriter, instance);
}

function setM_actionPtMaxPerExtraShip(instance, value_0){
  instance.m_actionPtMaxPerExtraShip = value_0;
}

function setM_actionPtMaxReserve(instance, value_0){
  instance.m_actionPtMaxReserve = value_0;
}

function setM_actionPtPerExtraShip(instance, value_0){
  instance.m_actionPtPerExtraShip = value_0;
}

function setM_actionPtPerTimeStep(instance, value_0){
  instance.m_actionPtPerTimeStep = value_0;
}

function setM_deploymentTimeStep(instance, value_0){
  instance.m_deploymentTimeStep = value_0;
}

function setM_description(instance, value_0){
  instance.m_description = value_0;
}

function setM_isParallel(instance, value_0){
  instance.m_isParallel = value_0;
}

function setM_lockGameInMillis(instance, value_0){
  instance.m_lockGameInMillis = value_0;
}

function setM_roundActionPt(instance, value_0){
  instance.m_roundActionPt = value_0;
}

function setM_takeOffTurns(instance, value_0){
  instance.m_takeOffTurns = value_0;
}

function setM_tideChangeFrequency(instance, value_0){
  instance.m_tideChangeFrequency = value_0;
}

function setM_timeStepDurationInSec(instance, value_0){
  instance.m_timeStepDurationInSec = value_0;
}

function setM_totalTimeStep(instance, value_0){
  instance.m_totalTimeStep = value_0;
}

function $clinit_EbConfigGameVariant(){
  $clinit_EbConfigGameVariant = emptyMethod;
  $clinit_EbBase();
}

function EbConfigGameVariant(){
  $clinit_EbConfigGameVariant();
  EbBase.call(this);
  this.$init_298();
  this.init_2();
}

defineClass(285, 21, {21:1, 285:1, 4:1, 1:1}, EbConfigGameVariant);
_.$init_298 = function $init_298(){
  this.m_constructReserve = new HashMap;
}
;
_.init_2 = function init_1(){
  this.m_constructReserve = new HashMap;
  this.setConstructQty(($clinit_TokenType() , Pontoon), 1);
  this.setConstructQty(($clinit_TokenType() , Crab), 1);
  this.setConstructQty(($clinit_TokenType() , Tank), 4);
}
;
_.setConstructQty = function setConstructQty(p_type, p_qty){
  this.m_constructReserve.put(p_type, valueOf_37(p_qty));
}
;
var Lcom_fullmetalgalaxy_model_persist_EbConfigGameVariant_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbConfigGameVariant', 285, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbConfigGameVariant_FieldSerializer(){
  $clinit_EbConfigGameVariant_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_27(streamReader, instance){
  $clinit_EbConfigGameVariant_FieldSerializer();
  setM_constructReserve(instance, castTo(streamReader.readObject(), 82));
  deserialize_24(streamReader, instance);
}

function getM_constructReserve(instance){
  return instance.m_constructReserve;
}

function instantiate_24(streamReader){
  $clinit_EbConfigGameVariant_FieldSerializer();
  return new EbConfigGameVariant;
}

function serialize_22(streamWriter, instance){
  $clinit_EbConfigGameVariant_FieldSerializer();
  streamWriter.writeObject(getM_constructReserve(instance));
  serialize_19(streamWriter, instance);
}

function setM_constructReserve(instance, value_0){
  instance.m_constructReserve = value_0;
}

function $clinit_EbEmbedBase_FieldSerializer(){
  $clinit_EbEmbedBase_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_28(streamReader, instance){
  $clinit_EbEmbedBase_FieldSerializer();
  deserialize_22(streamReader, instance);
}

function serialize_23(streamWriter, instance){
  $clinit_EbEmbedBase_FieldSerializer();
  serialize_17(streamWriter, instance);
}

function $clinit_EbGameData(){
  $clinit_EbGameData = emptyMethod;
  $clinit_EbBase();
}

function EbGameData(){
  $clinit_EbGameData();
  EbBase.call(this);
  this.$init_299();
  this.init();
}

defineClass(281, 21, {21:1, 281:1, 4:1, 1:1}, EbGameData);
_.$init_299 = function $init_299(){
  this.m_currentTide = ($clinit_Tide() , Medium_0);
  this.m_nextTide = ($clinit_Tide() , Medium_0);
  this.m_nextTide2 = ($clinit_Tide() , Medium_0);
  this.m_averageTideLevel = 0;
  this.m_lastTideChange = 0;
  this.m_lastTimeStepChange = new Date_1(currentTimeMillis_0());
  this.m_takeOffTurns = null;
  this.m_mapUri = null;
  this.m_messages = null;
  this.m_lands = initUnidimensionalArray(B_classLit, {173:1, 4:1, 1:1}, 29, 0, 15, 1);
  this.m_setToken = new HashSet;
  this.m_additionalEventCount = 0;
  this.m_additionalGameLog = null;
  this.m_setGameLog = new ArrayList;
  this.m_triggers = new ArrayList;
  this.m_accounts = null;
  this.m_constructReserve = new HashMap;
  this.m_initialHolds = null;
  this.m_nextLocalId = 0;
}
;
_.addAccount = function addAccount(p_otherAccount){
  if (isNull(p_otherAccount))
    return;
  if (isNull(this.m_accounts)) {
    this.m_accounts = new HashSet;
  }
  this.m_accounts.add_5(p_otherAccount);
}
;
_.getAccount = function getAccount(p_accountId){
  var account, account$iterator;
  if (isNull(this.m_accounts)) {
    return null;
  }
  for (account$iterator = this.m_accounts.iterator_0(); account$iterator.hasNext_0();) {
    account = castTo(account$iterator.next_1(), 131);
    if (eq(account.getId(), p_accountId)) {
      return account;
    }
  }
  return null;
}
;
_.getAdditionalEventCount = function getAdditionalEventCount_0(){
  return this.m_additionalEventCount;
}
;
_.getAverageTideLevel = function getAverageTideLevel(){
  return this.m_averageTideLevel;
}
;
_.getConstructReserve = function getConstructReserve(){
  return this.m_constructReserve;
}
;
_.getCurrentTide = function getCurrentTide(){
  return this.m_currentTide;
}
;
_.getInitialHolds = function getInitialHolds(){
  if (isNull(this.m_initialHolds)) {
    return getDefaultInitialHolds();
  }
  return this.m_initialHolds;
}
;
_.getInitialScore = function getInitialScore(){
  var entry, entry$iterator, score;
  score = 1;
  for (entry$iterator = this.getInitialHolds().entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    score += castTo(entry.getKey(), 55).getWinningPoint() * castTo(entry.getValue_0(), 28).intValue();
  }
  return score;
}
;
_.getLands = function getLands(){
  return this.m_lands;
}
;
_.getLastTideChange = function getLastTideChange(){
  return this.m_lastTideChange;
}
;
_.getLastTimeStepChange = function getLastTimeStepChange(){
  return this.m_lastTimeStepChange;
}
;
_.getLogs = function getLogs(){
  return this.m_setGameLog;
}
;
_.getMapUri = function getMapUri(){
  return this.m_mapUri;
}
;
_.getMessage = function getMessage_1(){
  return this.m_messages;
}
;
_.getNextLocalId = function getNextLocalId(){
  var $tmp;
  $tmp = this.m_nextLocalId , this.m_nextLocalId = add_19(this.m_nextLocalId, 1) , $tmp;
  return this.m_nextLocalId;
}
;
_.getNextTide = function getNextTide(){
  if (isNull(this.m_nextTide)) {
    this.m_nextTide = getRandom_0(this.getAverageTideLevel());
    this.setAverageTideLevel(this.getAverageTideLevel() + this.m_nextTide.getLevel());
  }
  return this.m_nextTide;
}
;
_.getNextTide2 = function getNextTide2(){
  if (isNull(this.m_nextTide2)) {
    this.m_nextTide2 = getRandom_0(this.getAverageTideLevel());
    this.setAverageTideLevel(this.getAverageTideLevel() + this.m_nextTide2.getLevel());
  }
  return this.m_nextTide2;
}
;
_.getSetToken = function getSetToken(){
  return this.m_setToken;
}
;
_.getTakeOffTurns = function getTakeOffTurns_0(){
  return this.m_takeOffTurns;
}
;
_.getTriggers = function getTriggers(){
  return this.m_triggers;
}
;
_.init = function init_2(){
  this.m_currentTide = ($clinit_Tide() , Medium_0);
  this.m_nextTide = ($clinit_Tide() , Medium_0);
  this.m_nextTide2 = ($clinit_Tide() , Medium_0);
  this.m_averageTideLevel = 0;
  this.m_lastTideChange = 0;
  this.m_lands = initUnidimensionalArray(B_classLit, {173:1, 4:1, 1:1}, 29, 0, 15, 1);
  this.m_lastTimeStepChange = new Date_1(currentTimeMillis_0());
  this.m_takeOffTurns = null;
  this.m_mapUri = null;
  this.m_messages = null;
  this.m_setToken = new HashSet;
  this.m_setGameLog = new ArrayList;
  this.m_triggers = new ArrayList;
  this.m_nextLocalId = 0;
}
;
_.isMessageWebUrl = function isMessageWebUrl(){
  return jsNotEquals(this.getMessage(), null) && (startsWith_Ljava_lang_String__Z__devirtual$(this.getMessage(), './') || startsWith_Ljava_lang_String__Z__devirtual$(this.getMessage(), '/') || startsWith_Ljava_lang_String__Z__devirtual$(this.getMessage(), 'http://'));
}
;
_.setAdditionalEventCount = function setAdditionalEventCount(p_additionalEventCount){
  this.m_additionalEventCount = p_additionalEventCount;
}
;
_.setAverageTideLevel = function setAverageTideLevel(p_averageTideLevel){
  this.m_averageTideLevel = p_averageTideLevel;
}
;
_.setCurrentTide = function setCurrentTide(p_currentTide){
  this.m_currentTide = p_currentTide;
}
;
_.setLands = function setLands(p_lands){
  this.m_lands = p_lands;
}
;
_.setLastTideChange = function setLastTideChange(p_lastTideChange){
  this.m_lastTideChange = p_lastTideChange;
}
;
_.setLastTimeStepChange = function setLastTimeStepChange(p_lastTimeStepChange){
  this.m_lastTimeStepChange = p_lastTimeStepChange;
}
;
_.setLogs = function setLogs(p_setActionLog){
  this.m_setGameLog = p_setActionLog;
}
;
_.setMessage = function setMessage(p_messages){
  this.m_messages = p_messages;
}
;
_.setNextTide = function setNextTide(p_nextTide){
  this.m_nextTide = p_nextTide;
}
;
_.setNextTide2 = function setNextTide2(p_nextTide){
  this.m_nextTide2 = p_nextTide;
}
;
_.m_additionalEventCount = 0;
_.m_averageTideLevel = 0;
_.m_lastTideChange = 0;
_.m_nextLocalId = 0;
var Lcom_fullmetalgalaxy_model_persist_EbGameData_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbGameData', 281, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbGameData_FieldSerializer(){
  $clinit_EbGameData_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_29(streamReader, instance){
  $clinit_EbGameData_FieldSerializer();
  instance.m_accounts = castTo(streamReader.readObject(), 53);
  instance.m_additionalEventCount = streamReader.readInt();
  instance.m_additionalGameLog = castTo(streamReader.readObject(), 38);
  instance.m_averageTideLevel = streamReader.readInt();
  instance.m_constructReserve = castTo(streamReader.readObject(), 82);
  instance.m_currentTide = castTo(streamReader.readObject(), 139);
  instance.m_initialHolds = castTo(streamReader.readObject(), 82);
  instance.m_lands = castTo(streamReader.readObject(), 173);
  instance.m_lastTideChange = streamReader.readInt();
  instance.m_lastTimeStepChange = castTo(streamReader.readObject(), 30);
  instance.m_mapUri = streamReader.readString();
  instance.m_messages = streamReader.readString();
  instance.m_nextLocalId = streamReader.readLong();
  instance.m_nextTide = castTo(streamReader.readObject(), 139);
  instance.m_nextTide2 = castTo(streamReader.readObject(), 139);
  instance.m_preview = castTo(streamReader.readObject(), 181);
  instance.m_setGameLog = castTo(streamReader.readObject(), 38);
  instance.m_setToken = castTo(streamReader.readObject(), 53);
  instance.m_takeOffTurns = castTo(streamReader.readObject(), 12);
  instance.m_triggers = castTo(streamReader.readObject(), 38);
  deserialize_24(streamReader, instance);
}

function instantiate_25(streamReader){
  $clinit_EbGameData_FieldSerializer();
  return new EbGameData;
}

function serialize_24(streamWriter, instance){
  $clinit_EbGameData_FieldSerializer();
  streamWriter.writeObject(instance.m_accounts);
  streamWriter.writeInt(instance.m_additionalEventCount);
  streamWriter.writeObject(instance.m_additionalGameLog);
  streamWriter.writeInt(instance.m_averageTideLevel);
  streamWriter.writeObject(instance.m_constructReserve);
  streamWriter.writeObject(instance.m_currentTide);
  streamWriter.writeObject(instance.m_initialHolds);
  streamWriter.writeObject(instance.m_lands);
  streamWriter.writeInt(instance.m_lastTideChange);
  streamWriter.writeObject(instance.m_lastTimeStepChange);
  streamWriter.writeString(instance.m_mapUri);
  streamWriter.writeString(instance.m_messages);
  streamWriter.writeLong(instance.m_nextLocalId);
  streamWriter.writeObject(instance.m_nextTide);
  streamWriter.writeObject(instance.m_nextTide2);
  streamWriter.writeObject(instance.m_preview);
  streamWriter.writeObject(instance.m_setGameLog);
  streamWriter.writeObject(instance.m_setToken);
  streamWriter.writeObject(instance.m_takeOffTurns);
  streamWriter.writeObject(instance.m_triggers);
  serialize_19(streamWriter, instance);
}

function $clinit_EbGameLog(){
  $clinit_EbGameLog = emptyMethod;
  $clinit_EbBase();
}

function EbGameLog(){
  $clinit_EbGameLog();
  EbBase.call(this);
  this.$init_300();
}

defineClass(345, 21, {21:1, 345:1, 4:1, 1:1}, EbGameLog);
_.$init_300 = function $init_300(){
  this.m_index = 0;
  this.m_log = new ArrayList;
}
;
_.getLog = function getLog(){
  return this.m_log;
}
;
_.m_index = 0;
var Lcom_fullmetalgalaxy_model_persist_EbGameLog_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbGameLog', 345, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbGameLog_FieldSerializer(){
  $clinit_EbGameLog_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_30(streamReader, instance){
  $clinit_EbGameLog_FieldSerializer();
  setM_index(instance, streamReader.readInt());
  setM_log(instance, castTo(streamReader.readObject(), 38));
  instance.m_preview = castTo(streamReader.readObject(), 181);
  deserialize_24(streamReader, instance);
}

function getM_index(instance){
  return instance.m_index;
}

function getM_log(instance){
  return instance.m_log;
}

function instantiate_26(streamReader){
  $clinit_EbGameLog_FieldSerializer();
  return new EbGameLog;
}

function serialize_25(streamWriter, instance){
  $clinit_EbGameLog_FieldSerializer();
  streamWriter.writeInt(getM_index(instance));
  streamWriter.writeObject(getM_log(instance));
  streamWriter.writeObject(instance.m_preview);
  serialize_19(streamWriter, instance);
}

function setM_index(instance, value_0){
  instance.m_index = value_0;
}

function setM_log(instance, value_0){
  instance.m_log = value_0;
}

function $clinit_EbGamePreview(){
  $clinit_EbGamePreview = emptyMethod;
  $clinit_EbBase();
}

function EbGamePreview(){
  $clinit_EbGamePreview();
  EbBase.call(this);
  this.$init_301();
  this.init_3();
}

defineClass(280, 21, {21:1, 280:1, 4:1, 1:1}, EbGamePreview);
_.$init_301 = function $init_301(){
  this.m_version = 0;
  this.m_name = '';
  this.m_description = '';
  this.m_maxNumberOfPlayer = 4;
  this.m_currentTimeStep = 1;
  this.m_gameType = ($clinit_GameType() , MultiPlayer);
  this.m_planetType = ($clinit_PlanetType() , Desert);
  this.m_history = false;
  this.m_isOpen = true;
  this.m_started = false;
  this.m_status = ($clinit_GameStatus() , Unknown_0);
  this.m_currentPlayerIds = new ArrayList;
  this.m_currentPlayerId = 0;
  this.m_accountCreator = null;
  this.m_landWidth = 36;
  this.m_landHeight = 24;
  this.m_creationDate = new Date_1(currentTimeMillis_0());
  this.m_lastUpdate = new Date_0;
  this.m_isVip = false;
  this.m_password = null;
  this.m_maxTeamAllowed = 0;
  this.m_configGameTime = ($clinit_ConfigGameTime() , Standard);
  this.m_ebConfigGameTime = null;
  this.m_ebConfigGameVariant = null;
  this.m_setRegistration = new HashSet;
  this.m_teams = new HashSet;
  this.m_tags = new ArrayList;
  this.m_mapShape = ($clinit_MapShape() , Flat);
  this.m_stats = null;
}
;
_.getAccountCreator = function getAccountCreator(){
  return this.m_accountCreator;
}
;
_.getConfigGameTime = function getConfigGameTime(){
  return this.m_configGameTime;
}
;
_.getCreationDate = function getCreationDate(){
  return this.m_creationDate;
}
;
_.getCurrentNumberOfRegiteredPlayer = function getCurrentNumberOfRegiteredPlayer(){
  var count, registration, registration$iterator;
  count = 0;
  for (registration$iterator = this.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    if (registration.haveAccount()) {
      count++;
    }
  }
  return count;
}
;
_.getCurrentPlayerIds = function getCurrentPlayerIds(){
  return this.m_currentPlayerIds;
}
;
_.getCurrentTimeStep = function getCurrentTimeStep(){
  return this.m_currentTimeStep;
}
;
_.getDescription = function getDescription_0(){
  return this.m_description;
}
;
_.getEbConfigGameTime = function getEbConfigGameTime_1(){
  if (jsEquals(this.getConfigGameTime(), ($clinit_ConfigGameTime() , Custom_0))) {
    if (isNull(this.m_ebConfigGameTime)) {
      this.m_ebConfigGameTime = new EbConfigGameTime;
    }
    return this.m_ebConfigGameTime;
  }
  this.m_ebConfigGameTime = null;
  return this.getConfigGameTime().getEbConfigGameTime();
}
;
_.getFreePlayersColors = function getFreePlayersColors(){
  var color_0, colors, iColor, registration, registration$iterator, takenColor;
  colors = new HashSet;
  takenColor = new EnuColor_0(0);
  for (registration$iterator = this.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    if (registration.haveAccount()) {
      takenColor.addColor(registration.getColor_0());
    }
  }
  for (iColor = 0; iColor < getTotalNumberOfColor(); iColor++) {
    color_0 = getColorFromIndex(iColor);
    if (!takenColor.isColored_0(color_0)) {
      colors.add_5(color_0);
    }
  }
  return colors;
}
;
_.getFreeRegistrationColors = function getFreeRegistrationColors(){
  var colors, registration, registration$iterator;
  colors = new HashSet;
  for (registration$iterator = this.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    if (!registration.haveAccount()) {
      colors.add_5(registration.getEnuColor());
    }
  }
  return colors;
}
;
_.getGameType = function getGameType(){
  return this.m_gameType;
}
;
_.getLandHeight = function getLandHeight(){
  return this.m_landHeight;
}
;
_.getLandWidth = function getLandWidth(){
  return this.m_landWidth;
}
;
_.getMapShape = function getMapShape(){
  if (isNull(this.m_mapShape)) {
    this.m_mapShape = ($clinit_MapShape() , Flat);
  }
  return this.m_mapShape;
}
;
_.getMaxNumberOfPlayer = function getMaxNumberOfPlayer(){
  return this.m_maxNumberOfPlayer;
}
;
_.getMaxTeamAllowed = function getMaxTeamAllowed(){
  return this.m_maxTeamAllowed;
}
;
_.getName = function getName(){
  return this.m_name;
}
;
_.getPassword = function getPassword(){
  return this.m_password;
}
;
_.getPlanetType = function getPlanetType(){
  return this.m_planetType;
}
;
_.getRegistration_0 = function getRegistration_0(p_idRegistration){
  var it, registration;
  for (it = this.getSetRegistration().iterator_0(); it.hasNext_0();) {
    registration = castTo(castTo(it.next_1(), 51), 51);
    if (eq(registration.getId(), p_idRegistration)) {
      return registration;
    }
  }
  return null;
}
;
_.getRegistrationByColor = function getRegistrationByColor(p_color){
  var it, registration;
  if (p_color == 0) {
    return null;
  }
  for (it = this.getSetRegistration().iterator_0(); it.hasNext_0();) {
    registration = castTo(castTo(it.next_1(), 51), 51);
    if (registration.getEnuColor().isColored(p_color)) {
      return registration;
    }
  }
  return null;
}
;
_.getRegistrationByIdAccount = function getRegistrationByIdAccount(p_idAccount){
  var registration, registration$iterator;
  for (registration$iterator = this.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    if (registration.haveAccount() && eq(registration.getAccount_0().getId(), p_idAccount)) {
      return registration;
    }
  }
  return null;
}
;
_.getSetRegistration = function getSetRegistration(){
  return this.m_setRegistration;
}
;
_.getStatus = function getStatus(){
  if (isNull(this.m_status) || jsEquals(this.m_status, ($clinit_GameStatus() , Unknown_0))) {
    if (this.isOpen_0()) {
      this.m_status = ($clinit_GameStatus() , Open);
    }
     else if (!this.isStarted_0()) {
      this.m_status = ($clinit_GameStatus() , Pause);
    }
     else if (this.isHistory() && this.isFinished()) {
      this.m_status = ($clinit_GameStatus() , History_0);
    }
     else if (this.isHistory() && !this.isFinished()) {
      this.m_status = ($clinit_GameStatus() , Aborted);
    }
     else {
      this.m_status = ($clinit_GameStatus() , Running);
    }
  }
  return this.m_status;
}
;
_.getTeam = function getTeam(p_idTeam){
  var team, team$iterator;
  for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    if (eq(team.getId(), p_idTeam))
      return team;
  }
  return null;
}
;
_.getTeam_0 = function getTeam_0(p_company){
  var team, team$iterator;
  for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    if (jsEquals(team.getCompany(), p_company)) {
      return team;
    }
  }
  return null;
}
;
_.getTeamByOrderIndex = function getTeamByOrderIndex(p_index){
  var e;
  try {
    return castTo(this.getTeamByPlayOrder().get_0(p_index), 43);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 25)) {
      e = $e0;
    }
     else 
      throw toJs($e0);
  }
  return null;
}
;
_.getTeamByPlayOrder = function getTeamByPlayOrder(){
  var index_0, index0, sortedTeam, team, team$iterator;
  sortedTeam = new ArrayList;
  for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    index0 = 0;
    while (index0 < sortedTeam.size_1()) {
      if (team.getOrderIndex() < castTo(sortedTeam.get_0(index0), 43).getOrderIndex()) {
        break;
      }
      index0++;
    }
    sortedTeam.add_6(index0, team);
  }
  for (index_0 = 0; index_0 < sortedTeam.size_1(); index_0++) {
    castTo(sortedTeam.get_0(index_0), 43).setOrderIndex(index_0);
  }
  return sortedTeam;
}
;
_.getTeams = function getTeams(){
  if (isNull(this.m_teams)) {
    this.m_teams = new HashSet;
  }
  return this.m_teams;
}
;
_.getUnusedColors = function getUnusedColors(){
  var color_0, registration, registration$iterator;
  color_0 = new EnuColor_0(getMaxColorValue());
  for (registration$iterator = this.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    color_0.removeColor(registration.getColor_0());
  }
  return color_0;
}
;
_.getVersion = function getVersion(){
  return this.m_version;
}
;
_.init_3 = function init_3(){
  this.m_maxNumberOfPlayer = 4;
  this.m_history = false;
  this.m_currentTimeStep = 1;
  this.m_currentPlayerIds = new ArrayList;
  this.m_landWidth = 36;
  this.m_landHeight = 24;
  this.m_creationDate = new Date_1(currentTimeMillis_0());
  this.m_description = '';
  this.m_name = '';
  this.m_gameType = ($clinit_GameType() , MultiPlayer);
  this.m_planetType = ($clinit_PlanetType() , Desert);
  this.m_setRegistration = new HashSet;
}
;
_.isFinished = function isFinished(){
  return this.getCurrentTimeStep() > this.getEbConfigGameTime().getTotalTimeStep();
}
;
_.isHistory = function isHistory(){
  return this.m_history;
}
;
_.isOpen_0 = function isOpen_0(){
  this.m_isOpen = this.getCurrentNumberOfRegiteredPlayer() < this.getMaxNumberOfPlayer() && !this.isStarted_0() && !this.isHistory();
  return this.m_isOpen;
}
;
_.isParallel = function isParallel_1(){
  return this.getEbConfigGameTime().isParallel();
}
;
_.isPasswordProtected = function isPasswordProtected(){
  return jsNotEquals(this.getPassword(), null) && !isEmpty__Z__devirtual$(this.getPassword());
}
;
_.isStarted_0 = function isStarted(){
  return this.m_started;
}
;
_.isTeamAllowed = function isTeamAllowed(){
  return this.getMaxTeamAllowed() > 1;
}
;
_.isTimeStepParallelHidden = function isTimeStepParallelHidden(p_timeStep){
  if (this.isParallel())
    return false;
  return p_timeStep > 1 && p_timeStep <= this.getEbConfigGameTime().getDeploymentTimeStep() || this.getEbConfigGameTime().getTakeOffTurns().contains_0(valueOf_37(p_timeStep)) && p_timeStep != this.getEbConfigGameTime().getTotalTimeStep();
}
;
_.setConfigGameTime = function setConfigGameTime(p_configGameTime){
  this.m_configGameTime = p_configGameTime;
}
;
_.setCurrentTimeStep = function setCurrentTimeStep(p_currentTimeStep){
  this.m_currentTimeStep = p_currentTimeStep;
}
;
_.setGameType = function setGameType(p_gameType){
  this.m_gameType = p_gameType;
}
;
_.setHistory = function setHistory(p_history){
  this.m_history = p_history;
}
;
_.setLandHeight = function setLandHeight(p_landHeight){
  this.m_landHeight = p_landHeight;
}
;
_.setLandWidth = function setLandWidth(p_landWidth){
  this.m_landWidth = p_landWidth;
}
;
_.setStarted = function setStarted(p_started){
  this.m_started = p_started;
  this.m_isOpen = this.isOpen_0();
}
;
_.setStatus = function setStatus(p_status){
  this.m_status = p_status;
  if (jsEquals(this.m_status, ($clinit_GameStatus() , Open))) {
    this.setStarted(false);
    this.setHistory(false);
  }
   else if (jsEquals(this.m_status, ($clinit_GameStatus() , Pause))) {
    this.setStarted(false);
    this.setHistory(false);
  }
   else if (jsEquals(this.m_status, ($clinit_GameStatus() , Running))) {
    this.setStarted(true);
    this.setHistory(false);
  }
   else if (jsEquals(this.m_status, ($clinit_GameStatus() , Aborted))) {
    this.setHistory(true);
  }
   else if (jsEquals(this.m_status, ($clinit_GameStatus() , History_0))) {
    this.setHistory(true);
  }
}
;
_.setVersion = function setVersion(p_version){
  this.m_version = p_version;
}
;
_.toString_0 = function toString_21(){
  return this.getName() + '(' + toString_45(this.getId()) + ')';
}
;
_.m_currentPlayerId = 0;
_.m_currentTimeStep = 0;
_.m_history = false;
_.m_isOpen = false;
_.m_isVip = false;
_.m_landHeight = 0;
_.m_landWidth = 0;
_.m_maxNumberOfPlayer = 0;
_.m_maxTeamAllowed = 0;
_.m_started = false;
_.m_version = 0;
var Lcom_fullmetalgalaxy_model_persist_EbGamePreview_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbGamePreview', 280, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbGamePreview_FieldSerializer(){
  $clinit_EbGamePreview_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_31(streamReader, instance){
  $clinit_EbGamePreview_FieldSerializer();
  setM_accountCreator(instance, castTo(streamReader.readObject(), 131));
  setM_configGameTime(instance, castTo(streamReader.readObject(), 164));
  setM_creationDate(instance, castTo(streamReader.readObject(), 30));
  setM_currentPlayerId(instance, streamReader.readLong());
  setM_currentPlayerIds(instance, castTo(streamReader.readObject(), 38));
  setM_currentTimeStep(instance, streamReader.readInt());
  setM_description_0(instance, streamReader.readString());
  setM_ebConfigGameTime(instance, castTo(streamReader.readObject(), 142));
  setM_ebConfigGameVariant(instance, castTo(streamReader.readObject(), 285));
  setM_gameType(instance, castTo(streamReader.readObject(), 162));
  setM_history(instance, streamReader.readBoolean());
  setM_isOpen(instance, streamReader.readBoolean());
  setM_isVip(instance, streamReader.readBoolean());
  setM_landHeight(instance, streamReader.readInt());
  setM_landWidth(instance, streamReader.readInt());
  setM_lastUpdate(instance, castTo(streamReader.readObject(), 30));
  setM_mapShape(instance, castTo(streamReader.readObject(), 197));
  setM_maxNumberOfPlayer(instance, streamReader.readInt());
  setM_maxTeamAllowed(instance, streamReader.readInt());
  setM_name(instance, streamReader.readString());
  setM_password(instance, streamReader.readString());
  setM_planetType(instance, castTo(streamReader.readObject(), 143));
  setM_setRegistration(instance, castTo(streamReader.readObject(), 53));
  setM_started(instance, streamReader.readBoolean());
  setM_stats(instance, castTo(streamReader.readObject(), 346));
  setM_status(instance, castTo(streamReader.readObject(), 126));
  setM_tags(instance, castTo(streamReader.readObject(), 38));
  setM_teams(instance, castTo(streamReader.readObject(), 53));
  setM_version(instance, streamReader.readLong());
  deserialize_24(streamReader, instance);
}

function getM_accountCreator(instance){
  return instance.m_accountCreator;
}

function getM_configGameTime(instance){
  return instance.m_configGameTime;
}

function getM_creationDate(instance){
  return instance.m_creationDate;
}

function getM_currentPlayerId(instance){
  return instance.m_currentPlayerId;
}

function getM_currentPlayerIds(instance){
  return instance.m_currentPlayerIds;
}

function getM_currentTimeStep(instance){
  return instance.m_currentTimeStep;
}

function getM_description_0(instance){
  return instance.m_description;
}

function getM_ebConfigGameTime(instance){
  return instance.m_ebConfigGameTime;
}

function getM_ebConfigGameVariant(instance){
  return instance.m_ebConfigGameVariant;
}

function getM_gameType(instance){
  return instance.m_gameType;
}

function getM_history(instance){
  return instance.m_history;
}

function getM_isOpen(instance){
  return instance.m_isOpen;
}

function getM_isVip(instance){
  return instance.m_isVip;
}

function getM_landHeight(instance){
  return instance.m_landHeight;
}

function getM_landWidth(instance){
  return instance.m_landWidth;
}

function getM_lastUpdate(instance){
  return instance.m_lastUpdate;
}

function getM_mapShape(instance){
  return instance.m_mapShape;
}

function getM_maxNumberOfPlayer(instance){
  return instance.m_maxNumberOfPlayer;
}

function getM_maxTeamAllowed(instance){
  return instance.m_maxTeamAllowed;
}

function getM_name(instance){
  return instance.m_name;
}

function getM_password(instance){
  return instance.m_password;
}

function getM_planetType(instance){
  return instance.m_planetType;
}

function getM_setRegistration(instance){
  return instance.m_setRegistration;
}

function getM_started(instance){
  return instance.m_started;
}

function getM_stats(instance){
  return instance.m_stats;
}

function getM_status(instance){
  return instance.m_status;
}

function getM_tags(instance){
  return instance.m_tags;
}

function getM_teams(instance){
  return instance.m_teams;
}

function getM_version(instance){
  return instance.m_version;
}

function instantiate_27(streamReader){
  $clinit_EbGamePreview_FieldSerializer();
  return new EbGamePreview;
}

function serialize_26(streamWriter, instance){
  $clinit_EbGamePreview_FieldSerializer();
  streamWriter.writeObject(getM_accountCreator(instance));
  streamWriter.writeObject(getM_configGameTime(instance));
  streamWriter.writeObject(getM_creationDate(instance));
  streamWriter.writeLong(getM_currentPlayerId(instance));
  streamWriter.writeObject(getM_currentPlayerIds(instance));
  streamWriter.writeInt(getM_currentTimeStep(instance));
  streamWriter.writeString(getM_description_0(instance));
  streamWriter.writeObject(getM_ebConfigGameTime(instance));
  streamWriter.writeObject(getM_ebConfigGameVariant(instance));
  streamWriter.writeObject(getM_gameType(instance));
  streamWriter.writeBoolean(getM_history(instance));
  streamWriter.writeBoolean(getM_isOpen(instance));
  streamWriter.writeBoolean(getM_isVip(instance));
  streamWriter.writeInt(getM_landHeight(instance));
  streamWriter.writeInt(getM_landWidth(instance));
  streamWriter.writeObject(getM_lastUpdate(instance));
  streamWriter.writeObject(getM_mapShape(instance));
  streamWriter.writeInt(getM_maxNumberOfPlayer(instance));
  streamWriter.writeInt(getM_maxTeamAllowed(instance));
  streamWriter.writeString(getM_name(instance));
  streamWriter.writeString(getM_password(instance));
  streamWriter.writeObject(getM_planetType(instance));
  streamWriter.writeObject(getM_setRegistration(instance));
  streamWriter.writeBoolean(getM_started(instance));
  streamWriter.writeObject(getM_stats(instance));
  streamWriter.writeObject(getM_status(instance));
  streamWriter.writeObject(getM_tags(instance));
  streamWriter.writeObject(getM_teams(instance));
  streamWriter.writeLong(getM_version(instance));
  serialize_19(streamWriter, instance);
}

function setM_accountCreator(instance, value_0){
  instance.m_accountCreator = value_0;
}

function setM_configGameTime(instance, value_0){
  instance.m_configGameTime = value_0;
}

function setM_creationDate(instance, value_0){
  instance.m_creationDate = value_0;
}

function setM_currentPlayerId(instance, value_0){
  instance.m_currentPlayerId = value_0;
}

function setM_currentPlayerIds(instance, value_0){
  instance.m_currentPlayerIds = value_0;
}

function setM_currentTimeStep(instance, value_0){
  instance.m_currentTimeStep = value_0;
}

function setM_description_0(instance, value_0){
  instance.m_description = value_0;
}

function setM_ebConfigGameTime(instance, value_0){
  instance.m_ebConfigGameTime = value_0;
}

function setM_ebConfigGameVariant(instance, value_0){
  instance.m_ebConfigGameVariant = value_0;
}

function setM_gameType(instance, value_0){
  instance.m_gameType = value_0;
}

function setM_history(instance, value_0){
  instance.m_history = value_0;
}

function setM_isOpen(instance, value_0){
  instance.m_isOpen = value_0;
}

function setM_isVip(instance, value_0){
  instance.m_isVip = value_0;
}

function setM_landHeight(instance, value_0){
  instance.m_landHeight = value_0;
}

function setM_landWidth(instance, value_0){
  instance.m_landWidth = value_0;
}

function setM_lastUpdate(instance, value_0){
  instance.m_lastUpdate = value_0;
}

function setM_mapShape(instance, value_0){
  instance.m_mapShape = value_0;
}

function setM_maxNumberOfPlayer(instance, value_0){
  instance.m_maxNumberOfPlayer = value_0;
}

function setM_maxTeamAllowed(instance, value_0){
  instance.m_maxTeamAllowed = value_0;
}

function setM_name(instance, value_0){
  instance.m_name = value_0;
}

function setM_password(instance, value_0){
  instance.m_password = value_0;
}

function setM_planetType(instance, value_0){
  instance.m_planetType = value_0;
}

function setM_setRegistration(instance, value_0){
  instance.m_setRegistration = value_0;
}

function setM_started(instance, value_0){
  instance.m_started = value_0;
}

function setM_stats(instance, value_0){
  instance.m_stats = value_0;
}

function setM_status(instance, value_0){
  instance.m_status = value_0;
}

function setM_tags(instance, value_0){
  instance.m_tags = value_0;
}

function setM_teams(instance, value_0){
  instance.m_teams = value_0;
}

function setM_version(instance, value_0){
  instance.m_version = value_0;
}

function $clinit_EbPublicAccount(){
  $clinit_EbPublicAccount = emptyMethod;
  $clinit_EbBase();
}

function EbPublicAccount(){
  $clinit_EbPublicAccount();
  EbBase.call(this);
  this.$init_302();
  this.init_4();
}

function getEMailUrl_0(p_subject, p_id){
  $clinit_EbPublicAccount();
  var id_0, id$array, id$index, id$max, url_0;
  if (jsEquals(p_subject, null)) {
    p_subject = '';
  }
  p_subject = encodePathSegment(p_subject);
  url_0 = '/email.jsp?subject=' + p_subject;
  for (id$array = p_id , id$index = 0 , id$max = id$array.length; id$index < id$max; ++id$index) {
    id_0 = id$array[id$index];
    if (neq(id_0, 0)) {
      url_0 += '&id=' + toString_45(id_0);
    }
  }
  return url_0;
}

defineClass(131, 21, {21:1, 131:1, 4:1, 1:1}, EbPublicAccount);
_.$init_302 = function $init_302(){
  this.m_pseudo = '';
  this.m_isAI = false;
}
;
_.getAvatarUrl = function getAvatarUrl_0(){
  return '/ImageServlet?avatar=' + toString_45(this.getId());
}
;
_.getEMailUrl = function getEMailUrl(p_subject){
  return getEMailUrl_0(p_subject, stampJavaTypeInfo(getClassLiteralForArray(J_classLit, 1), {4:1, 1:1}, 29, 14, [this.getId()]));
}
;
_.getGradUrl = function getGradUrl(){
  return '/ImageServlet?grad=' + toString_45(this.getId());
}
;
_.getProfileUrl = function getProfileUrl(){
  return '/profile.jsp?id=' + toString_45(this.getId());
}
;
_.getPseudo = function getPseudo_1(){
  return this.m_pseudo;
}
;
_.hashCode_1 = function hashCode_9(){
  if (this.isTrancient()) {
    return getClassPrototype(21).hashCode_1.call(this);
  }
   else {
    return toInt_0(this.getId());
  }
}
;
_.init_4 = function init_4(){
  this.m_pseudo = '';
}
;
_.setAI = function setAI(p_isAI){
  this.m_isAI = p_isAI;
}
;
_.setPseudo = function setPseudo(p_pseudo){
  if (jsEquals(p_pseudo, null)) {
    p_pseudo = '???';
  }
  this.m_pseudo = trim__Ljava_lang_String___devirtual$(p_pseudo);
}
;
_.toString_0 = function toString_22(){
  return this.getPseudo();
}
;
_.m_isAI = false;
var Lcom_fullmetalgalaxy_model_persist_EbPublicAccount_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbPublicAccount', 131, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbPublicAccount_FieldSerializer(){
  $clinit_EbPublicAccount_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_32(streamReader, instance){
  $clinit_EbPublicAccount_FieldSerializer();
  setM_pseudo_0(instance, streamReader.readString());
  deserialize_24(streamReader, instance);
}

function getM_pseudo_0(instance){
  return instance.m_pseudo;
}

function instantiate_28(streamReader){
  $clinit_EbPublicAccount_FieldSerializer();
  return new EbPublicAccount;
}

function serialize_27(streamWriter, instance){
  $clinit_EbPublicAccount_FieldSerializer();
  streamWriter.writeString(getM_pseudo_0(instance));
  serialize_19(streamWriter, instance);
}

function setM_pseudo_0(instance, value_0){
  instance.m_pseudo = value_0;
}

function $clinit_EbRegistration(){
  $clinit_EbRegistration = emptyMethod;
  $clinit_EbBase();
}

function EbRegistration(){
  $clinit_EbRegistration();
  EbBase.call(this);
  this.$init_303();
  this.init_5();
}

function getDefaultActionInc(p_game){
  var actionInc, timeStep;
  timeStep = p_game.getCurrentTimeStep();
  timeStep -= p_game.getEbConfigGameTime().getDeploymentTimeStep();
  actionInc = p_game.getEbConfigGameTime().getActionPtPerTimeStep_0();
  if (timeStep <= 0) {
    actionInc = 0;
  }
   else if (timeStep == 1) {
    actionInc = narrow_int(actionInc / 3);
  }
   else if (timeStep == 2) {
    actionInc = narrow_int(2 * actionInc / 3);
  }
  return actionInc;
}

defineClass(51, 21, {21:1, 51:1, 4:1, 1:1}, EbRegistration);
_.$init_303 = function $init_303(){
  this.m_color = -1;
  this.m_OriginalColor = -1;
  this.m_actionPointBonus = 0;
  this.m_workingWeatherHenCount = 0;
  this.m_ptAction = 0;
  this.m_lastConnexion = new Date_0;
  this.m_notifSended = null;
  this.m_originalAccountId = 0;
  this.m_account = null;
  this.m_teamId = 0;
  this.m_teamCache = null;
  this.m_singleColor = -1;
  this.m_orderIndex = 0;
  this.m_endTurnDate = null;
  this.m_lockedPosition = null;
  this.m_myEvents = new ArrayList;
  this.m_remember = null;
}
;
_.estimateWinningScore = function estimateWinningScore(p_game){
  var token, token$iterator, winningPoint;
  winningPoint = 0;
  if (p_game.isFinished()) {
    for (token$iterator = p_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Freighter)) && this.getEnuColor().isColored(token.getColor_0()) && jsEquals(token.getLocation(), ($clinit_Location() , EndGame))) {
        winningPoint += token.getWinningPoint();
      }
    }
  }
   else {
    for (token$iterator = p_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.getColor_0() != 0 && this.getEnuColor().isColored(token.getColor_0()) && (jsEquals(token.getLocation(), ($clinit_Location() , Board)) || jsEquals(token.getLocation(), ($clinit_Location() , EndGame)))) {
        winningPoint += token.getWinningPoint();
      }
    }
  }
  winningPoint -= p_game.getInitialScore();
  return winningPoint;
}
;
_.getAccount_0 = function getAccount_0(){
  return this.m_account;
}
;
_.getActionInc = function getActionInc(p_game){
  var action, freighterCount;
  action = 0;
  freighterCount = this.getOnBoardFreighterCount(p_game);
  if (freighterCount >= 1) {
    action += getDefaultActionInc(p_game);
    action += (freighterCount - 1) * p_game.getEbConfigGameTime().getActionPtPerExtraShip();
  }
  action += this.getActionPointBonus();
  return action;
}
;
_.getActionPointBonus = function getActionPointBonus(){
  return this.m_actionPointBonus;
}
;
_.getColor_0 = function getColor_0(){
  return this.m_color;
}
;
_.getEnuColor = function getEnuColor(){
  return new EnuColor_0(this.getColor_0());
}
;
_.getLastConnexion = function getLastConnexion(){
  return this.m_lastConnexion;
}
;
_.getMaxActionPt = function getMaxActionPt(p_game){
  var freighterCount;
  freighterCount = this.getOnBoardFreighterCount(p_game);
  return this.getActionPointBonus() + p_game.getEbConfigGameTime().getActionPtMaxReserve() + (freighterCount - 1) * p_game.getEbConfigGameTime().getActionPtMaxPerExtraShip();
}
;
_.getOnBoardFreighterCount = function getOnBoardFreighterCount(p_game){
  var freighter, freighter$iterator, freighterCount;
  freighterCount = this.getEnuColor().getNbColor();
  if (p_game.getCurrentTimeStep() >= castTo(p_game.getEbConfigGameTime().getTakeOffTurns().get_0(0), 28).intValue()) {
    freighterCount = 0;
    for (freighter$iterator = p_game.getAllFreighter(this.getColor_0()).iterator_0(); freighter$iterator.hasNext_0();) {
      freighter = castTo(freighter$iterator.next_1(), 19);
      if (jsEquals(freighter.getLocation(), ($clinit_Location() , Board)))
        freighterCount++;
    }
  }
  return freighterCount;
}
;
_.getOriginalAccount = function getOriginalAccount(p_game){
  return p_game.getAccount(this.getOriginalAccountId());
}
;
_.getOriginalAccountId = function getOriginalAccountId(){
  return this.m_originalAccountId;
}
;
_.getPtAction = function getPtAction(){
  return this.m_ptAction;
}
;
_.getRemember = function getRemember(){
  return this.m_remember;
}
;
_.getRoundedActionPt = function getRoundedActionPt(p_game){
  var futurActionPt;
  futurActionPt = narrow_int(this.getPtAction() / p_game.getEbConfigGameTime().getRoundActionPt());
  futurActionPt *= p_game.getEbConfigGameTime().getRoundActionPt();
  if (futurActionPt > p_game.getEbConfigGameTime().getActionPtMaxReserve() - 15) {
    futurActionPt = p_game.getEbConfigGameTime().getActionPtMaxReserve() - 15;
  }
  return futurActionPt;
}
;
_.getTeam_1 = function getTeam_1(p_game){
  if (isNull(this.m_teamCache) && isNotNull(p_game)) {
    this.m_teamCache = p_game.getTeam(this.m_teamId);
  }
  return this.m_teamCache;
}
;
_.getWorkingWeatherHenCount = function getWorkingWeatherHenCount(){
  return this.m_workingWeatherHenCount;
}
;
_.haveAccount = function haveAccount(){
  return isNotNull(this.getAccount_0()) && gt(this.getAccount_0().getId(), 0);
}
;
_.init_5 = function init_5(){
  this.m_color = 0;
  this.m_ptAction = 0;
  this.m_orderIndex = 0;
  this.m_originalAccountId = 0;
}
;
_.isReplacement = function isReplacement(){
  return neq(this.m_originalAccountId, 0);
}
;
_.setAccount = function setAccount(p_account){
  this.m_account = p_account;
}
;
_.setActionPointBonus = function setActionPointBonus(p_actionPointBonus){
  this.m_actionPointBonus = p_actionPointBonus;
}
;
_.setColor = function setColor(p_color){
  this.setEnuColor(new EnuColor_0(p_color));
}
;
_.setEnuColor = function setEnuColor(p_color){
  this.m_color = p_color.getValue_1();
  if (isNotNull(this.getTeam_1(null)))
    this.getTeam_1(null).clearColorsCache();
}
;
_.setOriginalAccountId = function setOriginalAccountId(p_originalAccountId){
  this.m_originalAccountId = p_originalAccountId;
}
;
_.setOriginalColor = function setOriginalColor(p_originalColor){
  this.m_OriginalColor = p_originalColor;
}
;
_.setPtAction = function setPtAction(p_ptAction){
  this.m_ptAction = p_ptAction;
}
;
_.setRemember = function setRemember(p_remember){
  this.m_remember = p_remember;
}
;
_.setTeamId = function setTeamId(p_id){
  this.m_teamId = p_id;
  this.m_teamCache = null;
}
;
_.setWorkingWeatherHenCount = function setWorkingWeatherHenCount(p_workingWeatherHenCount){
  this.m_workingWeatherHenCount = p_workingWeatherHenCount;
}
;
_.toString_0 = function toString_23(){
  return this.getAccount_0() + '(' + new EnuColor_0(this.getColor_0()) + ')';
}
;
_.m_OriginalColor = 0;
_.m_actionPointBonus = 0;
_.m_color = 0;
_.m_orderIndex = 0;
_.m_originalAccountId = 0;
_.m_ptAction = 0;
_.m_singleColor = 0;
_.m_teamId = 0;
_.m_workingWeatherHenCount = 0;
var Lcom_fullmetalgalaxy_model_persist_EbRegistration_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbRegistration', 51, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbRegistration_FieldSerializer(){
  $clinit_EbRegistration_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_33(streamReader, instance){
  $clinit_EbRegistration_FieldSerializer();
  setM_OriginalColor(instance, streamReader.readInt());
  setM_account(instance, castTo(streamReader.readObject(), 131));
  setM_actionPointBonus(instance, streamReader.readInt());
  setM_color(instance, streamReader.readInt());
  instance.m_endTurnDate = castTo(streamReader.readObject(), 30);
  setM_lastConnexion_0(instance, castTo(streamReader.readObject(), 30));
  instance.m_lockedPosition = castTo(streamReader.readObject(), 23);
  instance.m_myEvents = castTo(streamReader.readObject(), 38);
  setM_notifSended(instance, castTo(streamReader.readObject(), 38));
  instance.m_orderIndex = streamReader.readInt();
  setM_originalAccountId(instance, streamReader.readLong());
  setM_ptAction(instance, streamReader.readInt());
  instance.m_remember = streamReader.readString();
  instance.m_singleColor = streamReader.readInt();
  setM_teamCache(instance, castTo(streamReader.readObject(), 43));
  setM_teamId(instance, streamReader.readLong());
  setM_workingWeatherHenCount(instance, streamReader.readInt());
  deserialize_24(streamReader, instance);
}

function getM_OriginalColor(instance){
  return instance.m_OriginalColor;
}

function getM_account(instance){
  return instance.m_account;
}

function getM_actionPointBonus(instance){
  return instance.m_actionPointBonus;
}

function getM_color(instance){
  return instance.m_color;
}

function getM_lastConnexion_0(instance){
  return instance.m_lastConnexion;
}

function getM_notifSended(instance){
  return instance.m_notifSended;
}

function getM_originalAccountId(instance){
  return instance.m_originalAccountId;
}

function getM_ptAction(instance){
  return instance.m_ptAction;
}

function getM_teamCache(instance){
  return instance.m_teamCache;
}

function getM_teamId(instance){
  return instance.m_teamId;
}

function getM_workingWeatherHenCount(instance){
  return instance.m_workingWeatherHenCount;
}

function instantiate_29(streamReader){
  $clinit_EbRegistration_FieldSerializer();
  return new EbRegistration;
}

function serialize_28(streamWriter, instance){
  $clinit_EbRegistration_FieldSerializer();
  streamWriter.writeInt(getM_OriginalColor(instance));
  streamWriter.writeObject(getM_account(instance));
  streamWriter.writeInt(getM_actionPointBonus(instance));
  streamWriter.writeInt(getM_color(instance));
  streamWriter.writeObject(instance.m_endTurnDate);
  streamWriter.writeObject(getM_lastConnexion_0(instance));
  streamWriter.writeObject(instance.m_lockedPosition);
  streamWriter.writeObject(instance.m_myEvents);
  streamWriter.writeObject(getM_notifSended(instance));
  streamWriter.writeInt(instance.m_orderIndex);
  streamWriter.writeLong(getM_originalAccountId(instance));
  streamWriter.writeInt(getM_ptAction(instance));
  streamWriter.writeString(instance.m_remember);
  streamWriter.writeInt(instance.m_singleColor);
  streamWriter.writeObject(getM_teamCache(instance));
  streamWriter.writeLong(getM_teamId(instance));
  streamWriter.writeInt(getM_workingWeatherHenCount(instance));
  serialize_19(streamWriter, instance);
}

function setM_OriginalColor(instance, value_0){
  instance.m_OriginalColor = value_0;
}

function setM_account(instance, value_0){
  instance.m_account = value_0;
}

function setM_actionPointBonus(instance, value_0){
  instance.m_actionPointBonus = value_0;
}

function setM_color(instance, value_0){
  instance.m_color = value_0;
}

function setM_lastConnexion_0(instance, value_0){
  instance.m_lastConnexion = value_0;
}

function setM_notifSended(instance, value_0){
  instance.m_notifSended = value_0;
}

function setM_originalAccountId(instance, value_0){
  instance.m_originalAccountId = value_0;
}

function setM_ptAction(instance, value_0){
  instance.m_ptAction = value_0;
}

function setM_teamCache(instance, value_0){
  instance.m_teamCache = value_0;
}

function setM_teamId(instance, value_0){
  instance.m_teamId = value_0;
}

function setM_workingWeatherHenCount(instance, value_0){
  instance.m_workingWeatherHenCount = value_0;
}

function $clinit_EbTeam(){
  $clinit_EbTeam = emptyMethod;
  $clinit_EbBase();
}

function EbTeam(){
  $clinit_EbTeam();
  EbBase.call(this);
  this.$init_304();
}

defineClass(43, 21, {21:1, 43:1, 4:1, 1:1}, EbTeam);
_.$init_304 = function $init_304(){
  this.m_playerIds = new ArrayList;
  this.m_company = ($clinit_Company() , Freelancer);
  this.m_fireColor = -1;
  this.m_colors = -1;
  this.m_orderIndex = 0;
  this.m_endTurnDate = null;
  this.m_lockedPosition = null;
  this.m_myEvents = null;
}
;
_.addMyEvent = function addMyEvent(p_action){
  if (isNull(this.m_myEvents)) {
    this.m_myEvents = new ArrayList;
  }
  if (!this.m_myEvents.contains_0(p_action)) {
    this.m_myEvents.add_5(p_action);
  }
}
;
_.clearColorsCache = function clearColorsCache(){
  this.m_colors = -1;
}
;
_.clearMyEvents = function clearMyEvents(){
  this.m_myEvents = null;
}
;
_.estimateWinningScore = function estimateWinningScore_0(p_game){
  var registration, registration$iterator, winningScore;
  winningScore = 0;
  for (registration$iterator = this.getPlayers(p_game.getPreview()).iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    winningScore += registration.estimateWinningScore(p_game);
  }
  return winningScore;
}
;
_.getColors = function getColors(p_game){
  var registration, registration$iterator;
  if (this.m_colors == -1) {
    this.m_colors = 0;
    for (registration$iterator = this.getPlayers(p_game).iterator_0(); registration$iterator.hasNext_0();) {
      registration = castTo(registration$iterator.next_1(), 51);
      if (isNotNull(registration)) {
        this.m_colors = addColor_0(this.m_colors, registration.getColor_0());
      }
    }
  }
  return this.m_colors;
}
;
_.getCompany = function getCompany(){
  return this.m_company;
}
;
_.getEndTurnDate = function getEndTurnDate(){
  return this.m_endTurnDate;
}
;
_.getFireColor = function getFireColor(){
  return this.m_fireColor;
}
;
_.getLockedPosition = function getLockedPosition(){
  return this.m_lockedPosition;
}
;
_.getMyEvents = function getMyEvents(){
  if (isNull(this.m_myEvents)) {
    return new ArrayList;
  }
  return this.m_myEvents;
}
;
_.getOnBoardFreighterCount = function getOnBoardFreighterCount_0(p_game){
  var colors, freighter, freighter$iterator, freighterCount;
  colors = new EnuColor_0(this.getColors(p_game.getPreview()));
  freighterCount = colors.getNbColor();
  if (p_game.getCurrentTimeStep() >= castTo(p_game.getEbConfigGameTime().getTakeOffTurns().get_0(0), 28).intValue()) {
    freighterCount = 0;
    for (freighter$iterator = p_game.getAllFreighter(colors.getValue_1()).iterator_0(); freighter$iterator.hasNext_0();) {
      freighter = castTo(freighter$iterator.next_1(), 19);
      if (jsEquals(freighter.getLocation(), ($clinit_Location() , Board)))
        freighterCount++;
    }
  }
  return freighterCount;
}
;
_.getOrderIndex = function getOrderIndex(){
  return this.m_orderIndex;
}
;
_.getPlayerIds = function getPlayerIds(){
  return this.m_playerIds;
}
;
_.getPlayers = function getPlayers(p_game){
  var playerId, playerId$iterator, registrationList;
  registrationList = new ArrayList;
  for (playerId$iterator = this.m_playerIds.iterator_0(); playerId$iterator.hasNext_0();) {
    playerId = castTo(playerId$iterator.next_1(), 66).longValue();
    registrationList.add_5(p_game.getRegistration_0(playerId));
  }
  return registrationList;
}
;
_.getTideForeCast = function getTideForeCast(p_game){
  var forecast, registration, registration$iterator;
  forecast = 0;
  for (registration$iterator = this.getPlayers(p_game).iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    forecast += registration.getWorkingWeatherHenCount();
  }
  forecast /= this.getPlayerIds().size_1();
  return round_int($wnd.Math.ceil(forecast));
}
;
_.haveAccount_0 = function haveAccount_0(p_game){
  var registration, registration$iterator;
  for (registration$iterator = this.getPlayers(p_game).iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    if (registration.haveAccount())
      return true;
  }
  return false;
}
;
_.setCompany = function setCompany(p_company){
  this.m_company = p_company;
}
;
_.setEndTurnDate = function setEndTurnDate(p_endTurnDate){
  this.m_endTurnDate = p_endTurnDate;
}
;
_.setFireColor = function setFireColor(p_fireColor){
  this.m_fireColor = p_fireColor;
}
;
_.setLockedPosition = function setLockedPosition(p_lockedPosition){
  this.m_lockedPosition = p_lockedPosition;
}
;
_.setOrderIndex = function setOrderIndex(p_orderIndex){
  this.m_orderIndex = p_orderIndex;
}
;
_.toString_0 = function toString_24(){
  return 'EbTeam [company=' + this.m_company + ', fireColor=' + this.m_fireColor + ']';
}
;
_.m_colors = 0;
_.m_fireColor = 0;
_.m_orderIndex = 0;
var Lcom_fullmetalgalaxy_model_persist_EbTeam_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbTeam', 43, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbTeam_FieldSerializer(){
  $clinit_EbTeam_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_34(streamReader, instance){
  $clinit_EbTeam_FieldSerializer();
  setM_company_0(instance, castTo(streamReader.readObject(), 120));
  setM_endTurnDate(instance, castTo(streamReader.readObject(), 30));
  setM_fireColor(instance, streamReader.readInt());
  setM_lockedPosition(instance, castTo(streamReader.readObject(), 23));
  instance.m_myEvents = castTo(streamReader.readObject(), 38);
  setM_orderIndex(instance, streamReader.readInt());
  setM_playerIds(instance, castTo(streamReader.readObject(), 38));
  deserialize_24(streamReader, instance);
}

function getM_company_0(instance){
  return instance.m_company;
}

function getM_endTurnDate(instance){
  return instance.m_endTurnDate;
}

function getM_fireColor(instance){
  return instance.m_fireColor;
}

function getM_lockedPosition(instance){
  return instance.m_lockedPosition;
}

function getM_orderIndex(instance){
  return instance.m_orderIndex;
}

function getM_playerIds(instance){
  return instance.m_playerIds;
}

function instantiate_30(streamReader){
  $clinit_EbTeam_FieldSerializer();
  return new EbTeam;
}

function serialize_29(streamWriter, instance){
  $clinit_EbTeam_FieldSerializer();
  streamWriter.writeObject(getM_company_0(instance));
  streamWriter.writeObject(getM_endTurnDate(instance));
  streamWriter.writeInt(getM_fireColor(instance));
  streamWriter.writeObject(getM_lockedPosition(instance));
  streamWriter.writeObject(instance.m_myEvents);
  streamWriter.writeInt(getM_orderIndex(instance));
  streamWriter.writeObject(getM_playerIds(instance));
  serialize_19(streamWriter, instance);
}

function setM_company_0(instance, value_0){
  instance.m_company = value_0;
}

function setM_endTurnDate(instance, value_0){
  instance.m_endTurnDate = value_0;
}

function setM_fireColor(instance, value_0){
  instance.m_fireColor = value_0;
}

function setM_lockedPosition(instance, value_0){
  instance.m_lockedPosition = value_0;
}

function setM_orderIndex(instance, value_0){
  instance.m_orderIndex = value_0;
}

function setM_playerIds(instance, value_0){
  instance.m_playerIds = value_0;
}

function $clinit_EbToken(){
  $clinit_EbToken = emptyMethod;
  $clinit_EbBase();
}

function EbToken(){
  $clinit_EbToken();
  EbBase.call(this);
  this.$init_305();
  this.init_6();
}

function EbToken_0(p_type){
  $clinit_EbToken();
  EbToken.call(this);
  this.setType(p_type);
  this.setBulletCount(this.getType().getMaxBulletCount());
}

defineClass(19, 21, {21:1, 19:1, 4:1, 1:1}, EbToken, EbToken_0);
_.$init_305 = function $init_305(){
  this.m_version = 0;
  this.m_type = ($clinit_TokenType() , None_0);
  this.m_color = 0;
  this.m_location = ($clinit_Location() , ToBeConstructed);
  this.m_position = new AnBoardPosition;
  this.m_bulletCount = 0;
  this.m_listFireDisabling = null;
  this.m_carrierTokenId = 0;
  this.m_carrierToken = null;
  this.m_setContain = null;
  this.m_setContainToken = null;
}
;
_.addFireDisabling = function addFireDisabling_1(p_fireDisabling){
  if (isNotNull(p_fireDisabling)) {
    if (isNull(this.m_listFireDisabling)) {
      this.m_listFireDisabling = new ArrayList;
    }
    if (!this.m_listFireDisabling.contains_0(p_fireDisabling)) {
      this.m_listFireDisabling.add_5(p_fireDisabling);
    }
  }
}
;
_.canBeATarget = function canBeATarget(p_game){
  var ix, iy, otherToken, position;
  position = this.getPosition();
  for (ix = position.getX() - 3; ix < position.getX() + 4; ix++) {
    for (iy = position.getY() - 3; iy < position.getY() + 4; iy++) {
      otherToken = p_game.getToken_1(new AnBoardPosition_0(ix, iy));
      if (isNotNull(otherToken)) {
        if (otherToken.getColor_0() != this.getColor_0() && !p_game.isTokenFireCoverDisabled(otherToken) && p_game.canTokenFireOn_2(otherToken, this)) {
          return true;
        }
      }
    }
  }
  return false;
}
;
_.canBeColored = function canBeColored_0(){
  return this.getType().canBeColored();
}
;
_.canControlNeighbor = function canControlNeighbor(p_game, p_position){
  var isDestroyer, neighborPosition, neighborPosition$iterator, token, token$iterator, tokenColor;
  if (isNull(p_position) || jsNotEquals(this.getLocation(), ($clinit_Location() , Board)) || !this.canBeColored()) {
    return false;
  }
  isDestroyer = this.getType().isDestroyer();
  if (jsEquals(this.getType(), ($clinit_TokenType() , Freighter)) && isNotNull(p_game.getToken_2(p_position, ($clinit_TokenType() , Turret)))) {
    isDestroyer = true;
  }
  tokenColor = this.getEnuColor();
  for (neighborPosition$iterator = p_game.getCoordinateSystem().getAllNeighbors(p_position).iterator_0(); neighborPosition$iterator.hasNext_0();) {
    neighborPosition = castTo(neighborPosition$iterator.next_1(), 23);
    for (token$iterator = p_game.getAllToken(neighborPosition).iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.canBeColored() && tokenColor.getValue_1() != token.getColor_0() && token.isNeighbor_0(p_game.getCoordinateSystem(), this) && (isDestroyer || token.getType().isDestroyer())) {
        return true;
      }
    }
  }
  return false;
}
;
_.canLoad = function canLoad_0(p_tokenType){
  return this.getType().canLoad(p_tokenType);
}
;
_.canMoveOn = function canMoveOn(p_game, p_land){
  var token, token$iterator;
  if (jsEquals(p_land, ($clinit_LandType() , None))) {
    return false;
  }
  switch (this.getType().ordinal_0()) {
    case ($clinit_TokenType() , Barge).ordinal_0():
    case ($clinit_TokenType() , Speedboat).ordinal_0():
    case ($clinit_TokenType() , Crayfish).ordinal_0():
    case ($clinit_TokenType() , Tarask).ordinal_0():
    case ($clinit_TokenType() , Destroyer).ordinal_0():
      if (jsEquals(p_land, ($clinit_LandType() , Montain)) || jsEquals(p_land, ($clinit_LandType() , Plain))) {
        return false;
      }

      break;
    case ($clinit_TokenType() , Hovertank).ordinal_0():
      if (jsEquals(p_land, ($clinit_LandType() , Montain))) {
        return false;
      }

      break;
    case ($clinit_TokenType() , Heap).ordinal_0():
    case ($clinit_TokenType() , Sluice).ordinal_0():
      if (jsEquals(p_land, ($clinit_LandType() , Montain)) || jsEquals(p_land, ($clinit_LandType() , Sea))) {
        return false;
      }

      break;
    case ($clinit_TokenType() , Crab).ordinal_0():
      if (jsEquals(p_land, ($clinit_LandType() , Montain)) && this.containToken()) {
        for (token$iterator = this.getContains().iterator_0(); token$iterator.hasNext_0();) {
          token = castTo(token$iterator.next_1(), 19);
          if (jsEquals(token.getType(), ($clinit_TokenType() , Heap))) {
            return false;
          }
        }
      }

    case ($clinit_TokenType() , Tank).ordinal_0():
    case ($clinit_TokenType() , WeatherHen).ordinal_0():
      if (jsEquals(p_land, ($clinit_LandType() , Sea))) {
        return false;
      }

      break;
    case ($clinit_TokenType() , Pontoon).ordinal_0():
    case ($clinit_TokenType() , Ore0).ordinal_0():
    case ($clinit_TokenType() , Ore).ordinal_0():
    case ($clinit_TokenType() , Ore3).ordinal_0():
    case ($clinit_TokenType() , Ore5).ordinal_0():
    case ($clinit_TokenType() , Teleporter).ordinal_0():
      return true;
    case ($clinit_TokenType() , Freighter).ordinal_0():
    case ($clinit_TokenType() , Turret).ordinal_0():
    case ($clinit_TokenType() , Warp).ordinal_0():
    default:return false;
  }
  return true;
}
;
_.canMoveOn_0 = function canMoveOn_0(p_game, p_player, p_position){
  var fireCoverColor, land, myColor, newTokenOnWay, tokenPontoon;
  if (!isNotNull(p_player)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_position)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  newTokenOnWay = p_game.getToken_1(p_position);
  myColor = new EnuColor_0(p_player.getTeam_1(p_game).getColors(p_game.getPreview()));
  if (isNotNull(newTokenOnWay) && jsNotEquals(newTokenOnWay, this)) {
    if (jsEquals(newTokenOnWay.getType(), ($clinit_TokenType() , Pontoon)) || jsEquals(newTokenOnWay.getType(), ($clinit_TokenType() , Sluice))) {
      return p_game.canTokenLoad(newTokenOnWay, this);
    }
    return false;
  }
   else {
    fireCoverColor = p_game.getOpponentFireCover(myColor.getValue_1(), p_position);
    if (fireCoverColor.getValue_1() != 0) {
      return false;
    }
    land = p_game.getLand_0(p_position).getLandValue(p_game.getCurrentTide());
    tokenPontoon = p_game.getToken_2(p_position, ($clinit_TokenType() , Pontoon));
    if (isNull(tokenPontoon)) {
      tokenPontoon = p_game.getToken_2(p_position, ($clinit_TokenType() , Sluice));
    }
    if (isNotNull(tokenPontoon) && !tokenPontoon.canLoad(this.getType())) {
      return false;
    }
    if (this.canMoveOn(p_game, land) == false) {
      return false;
    }
    if ((isNull(p_game.getToken_1(this.getPosition())) || p_game.getToken_1(this.getPosition()).getColor_0() == 0) && this.getColor_0() == 0) {
      return false;
    }
  }
  return true;
}
;
_.containToken = function containToken(){
  return isNotNull(this.getContains());
}
;
_.decVersion = function decVersion(){
  var $tmp;
  $tmp = this.m_version , this.m_version = sub_1(this.m_version, 1) , $tmp;
}
;
_.getBulletCount = function getBulletCount(){
  return this.m_bulletCount / 10;
}
;
_.getCarrierToken = function getCarrierToken(){
  return this.m_carrierToken;
}
;
_.getColor_0 = function getColor_1(){
  return this.m_color;
}
;
_.getContainOre = function getContainOre(){
  var loadingSize, token, token$iterator;
  loadingSize = 0;
  if (this.containToken()) {
    for (token$iterator = this.getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.getType().isOre()) {
        loadingSize += token.getType().getWinningPoint();
      }
    }
  }
  return loadingSize;
}
;
_.getContainSize = function getContainSize(){
  var loadingSize, token, token$iterator;
  loadingSize = 0;
  if (this.containToken()) {
    for (token$iterator = this.getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      loadingSize += token.getType().getLoadingSize();
    }
  }
  return loadingSize;
}
;
_.getContains = function getContains(){
  return this.m_setContainToken;
}
;
_.getCopyContains = function getCopyContains(){
  var set_0;
  set_0 = new HashSet;
  if (isNotNull(this.getContains())) {
    set_0.addAll(this.getContains());
  }
  return set_0;
}
;
_.getEnuColor = function getEnuColor_0(){
  return new EnuColor_0(this.getColor_0());
}
;
_.getExtraPositions = function getExtraPositions(p_coordinateSystem){
  var list;
  list = new ArrayList;
  if (jsEquals(this.getLocation(), ($clinit_Location() , Board)) && this.getPosition().getX() >= 0 && this.getPosition().getY() >= 0) {
    switch (this.getType().ordinal_0()) {
      case ($clinit_TokenType() , Freighter).ordinal_0():
        switch (this.getPosition().getSector().ordinal_0()) {
          case ($clinit_Sector() , North).ordinal_0():
          case ($clinit_Sector() , SouthEast).ordinal_0():
          case ($clinit_Sector() , SouthWest).ordinal_0():
            list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , North)));
            list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , SouthEast)));
            list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , SouthWest)));
            break;
          case ($clinit_Sector() , NorthEast).ordinal_0():
          case ($clinit_Sector() , South).ordinal_0():
          case ($clinit_Sector() , NorthWest).ordinal_0():
            list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , NorthEast)));
            list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , South)));
            list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , NorthWest)));
          default:break;
        }

        break;
      case ($clinit_TokenType() , Barge).ordinal_0():
      case ($clinit_TokenType() , Destroyer).ordinal_0():
        list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), this.getPosition().getSector()));
        break;
      case ($clinit_TokenType() , Warp).ordinal_0():
        list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , NorthEast)));
        list.add_5(p_coordinateSystem.getNeighbor(this.getPosition(), ($clinit_Sector() , SouthEast)));
        break;
      default:break;
    }
  }
  return list;
}
;
_.getFireDisablingList = function getFireDisablingList(){
  return this.m_listFireDisabling;
}
;
_.getFullLoadingSize = function getFullLoadingSize(){
  return this.getType().getLoadingSize() + this.getContainSize();
}
;
_.getHexagonSize = function getHexagonSize(){
  switch (this.getType().ordinal_0()) {
    case ($clinit_TokenType() , Freighter).ordinal_0():
      return 4;
    case ($clinit_TokenType() , Warp).ordinal_0():
      return 3;
    case ($clinit_TokenType() , Barge).ordinal_0():
    case ($clinit_TokenType() , Destroyer).ordinal_0():
      return 2;
    default:return 1;
  }
}
;
_.getLandPixOffset_0 = function getLandPixOffset_1(p_game){
  switch (this.getType().ordinal_0()) {
    default:case ($clinit_TokenType() , Freighter).ordinal_0():
    case ($clinit_TokenType() , Turret).ordinal_0():
    case ($clinit_TokenType() , Warp).ordinal_0():
      return 0;
    case ($clinit_TokenType() , Ore0).ordinal_0():
    case ($clinit_TokenType() , Ore).ordinal_0():
    case ($clinit_TokenType() , Ore3).ordinal_0():
    case ($clinit_TokenType() , Ore5).ordinal_0():
    case ($clinit_TokenType() , Crayfish).ordinal_0():
    case ($clinit_TokenType() , Teleporter).ordinal_0():
      return getLandPixOffset_2(p_game.getLand_0(this.getPosition()));
    case ($clinit_TokenType() , Barge).ordinal_0():
    case ($clinit_TokenType() , Crab).ordinal_0():
    case ($clinit_TokenType() , WeatherHen).ordinal_0():
    case ($clinit_TokenType() , Speedboat).ordinal_0():
    case ($clinit_TokenType() , Tank).ordinal_0():
    case ($clinit_TokenType() , Heap).ordinal_0():
    case ($clinit_TokenType() , Pontoon).ordinal_0():
    case ($clinit_TokenType() , Sluice).ordinal_0():
    case ($clinit_TokenType() , Hovertank).ordinal_0():
    case ($clinit_TokenType() , Tarask).ordinal_0():
      return p_game.getLandPixOffset_1(this.getPosition());
  }
}
;
_.getLocation = function getLocation(){
  return this.m_location;
}
;
_.getPosition = function getPosition(){
  return this.m_position;
}
;
_.getType = function getType(){
  return this.m_type;
}
;
_.getVersion = function getVersion_0(){
  return this.m_version;
}
;
_.getWinningPoint = function getWinningPoint_0(){
  var token, token$iterator, winningPoint;
  winningPoint = this.getType().getWinningPoint();
  if (this.containToken()) {
    for (token$iterator = this.getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      winningPoint += token.getWinningPoint();
    }
  }
  return winningPoint;
}
;
_.getZIndex_0 = function getZIndex_0(){
  return this.getZIndex_1(0, false);
}
;
_.getZIndex_1 = function getZIndex_1(p_yOffset, p_warnImage){
  if (!p_warnImage && jsEquals(this.getLocation(), ($clinit_Location() , Graveyard))) {
    return 0;
  }
  return this.getType().getZIndex(this.getPosition().getSector()) + (this.getPosition().getY() + p_yOffset) * 2 + this.getPosition().getX() % 2;
}
;
_.incVersion = function incVersion(){
  var $tmp;
  $tmp = this.m_version , this.m_version = add_19(this.m_version, 1) , $tmp;
}
;
_.init_6 = function init_6(){
  this.m_type = ($clinit_TokenType() , Ore);
  this.m_position = new AnBoardPosition;
  this.m_color = 0;
  this.m_location = ($clinit_Location() , ToBeConstructed);
  this.m_bulletCount = 0;
  this.m_carrierTokenId = 0;
  this.m_carrierToken = null;
  this.m_setContain = null;
  this.m_setContainToken = null;
  this.m_listFireDisabling = null;
}
;
_.isFireDisabled = function isFireDisabled(){
  var fd, fd$iterator;
  if (isNull(this.m_listFireDisabling)) {
    return false;
  }
  for (fd$iterator = this.m_listFireDisabling.iterator_0(); fd$iterator.hasNext_0();) {
    fd = castTo(fd$iterator.next_1(), 96);
    if (eq(fd.getTargetId(), this.getId())) {
      return true;
    }
  }
  return false;
}
;
_.isFireDisabling = function isFireDisabling(){
  var fd, fd$iterator;
  if (isNull(this.m_listFireDisabling)) {
    return false;
  }
  for (fd$iterator = this.m_listFireDisabling.iterator_0(); fd$iterator.hasNext_0();) {
    fd = castTo(fd$iterator.next_1(), 96);
    if (eq(fd.getDestroyer1Id(), this.getId())) {
      return true;
    }
    if (eq(fd.getDestroyer2Id(), this.getId())) {
      return true;
    }
  }
  return false;
}
;
_.isNeighbor = function isNeighbor(p_coordinateSystem, p_position){
  var myPosition, myPosition$iterator;
  if (p_coordinateSystem.areNeighbor(this.getPosition(), p_position)) {
    return true;
  }
  for (myPosition$iterator = this.getExtraPositions(p_coordinateSystem).iterator_0(); myPosition$iterator.hasNext_0();) {
    myPosition = castTo(myPosition$iterator.next_1(), 23);
    if (p_coordinateSystem.areNeighbor(myPosition, p_position)) {
      return true;
    }
  }
  return false;
}
;
_.isNeighbor_0 = function isNeighbor_0(p_coordinateSystem, p_token){
  var otherPosition, otherPosition$iterator;
  if (jsNotEquals(this.getLocation(), ($clinit_Location() , Board)) || jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    return false;
  }
  if (this.isNeighbor(p_coordinateSystem, p_token.getPosition())) {
    return true;
  }
  for (otherPosition$iterator = p_token.getExtraPositions(p_coordinateSystem).iterator_0(); otherPosition$iterator.hasNext_0();) {
    otherPosition = castTo(otherPosition$iterator.next_1(), 23);
    if (this.isNeighbor(p_coordinateSystem, otherPosition)) {
      return true;
    }
  }
  return false;
}
;
_.loadToken = function loadToken(p_token){
  if (!isNotNull(p_token)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (isNotNull(p_token.getCarrierToken())) {
    p_token.getCarrierToken().unloadToken(p_token);
  }
  p_token.setCarrierToken(castTo(this, 19));
  p_token.setLocation(($clinit_Location() , Token));
  p_token.setPosition(new AnBoardPosition_0(-1, -1));
  if (!neq(p_token.getId(), 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (isNull(this.getContains())) {
    this.m_setContainToken = new HashSet;
  }
  this.getContains().add_5(p_token);
}
;
_.removeFireDisabling = function removeFireDisabling_1(p_fireDisabling){
  if (isNotNull(this.m_listFireDisabling) && isNotNull(p_fireDisabling)) {
    this.m_listFireDisabling.remove_1(p_fireDisabling);
    if (this.m_listFireDisabling.isEmpty()) {
      this.m_listFireDisabling = null;
    }
  }
}
;
_.setBulletCount = function setBulletCount(p_bulletCount){
  this.m_bulletCount = round_1(p_bulletCount * 10);
  if (this.m_bulletCount < 0) {
    this.m_bulletCount = 0;
  }
  if (this.m_bulletCount > this.getType().getMaxBulletCount() * 10) {
    this.m_bulletCount = this.getType().getMaxBulletCount() * 10;
  }
}
;
_.setCarrierToken = function setCarrierToken(p_carrierToken){
  this.m_carrierToken = p_carrierToken;
}
;
_.setColor = function setColor_0(p_color){
  this.setEnuColor(new EnuColor_0(p_color));
}
;
_.setEnuColor = function setEnuColor_0(p_color){
  this.m_color = p_color.getValue_1();
}
;
_.setLocation = function setLocation(p_location){
  this.m_location = p_location;
}
;
_.setPosition = function setPosition(p_position){
  this.m_position = p_position;
}
;
_.setType = function setType(p_type){
  this.m_type = p_type;
}
;
_.setVersion = function setVersion_0(p_version){
  this.m_version = p_version;
}
;
_.toString_0 = function toString_25(){
  var str;
  str = '';
  if (this.getColor_0() > 0) {
    str += this.getEnuColor().toString_0() + ' ';
  }
  return str + ('' + this.getType().toString_0());
}
;
_.unloadToken = function unloadToken(p_token){
  if (!isNotNull(p_token)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!this.containToken()) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.getContains().remove_1(p_token);
  p_token.setCarrierToken(null);
  if (this.getContains().isEmpty()) {
    this.m_setContainToken = null;
  }
}
;
_.m_bulletCount = 0;
_.m_carrierTokenId = 0;
_.m_color = 0;
_.m_version = 0;
var Lcom_fullmetalgalaxy_model_persist_EbToken_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'EbToken', 19, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbToken_Array_Rank_1_FieldSerializer(){
  $clinit_EbToken_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_35(streamReader, instance){
  $clinit_EbToken_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_31(streamReader){
  $clinit_EbToken_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_EbToken_2_classLit, {4:1, 1:1, 5:1}, 19, size_0, 0, 1);
}

function serialize_30(streamWriter, instance){
  $clinit_EbToken_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbToken_FieldSerializer(){
  $clinit_EbToken_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_36(streamReader, instance){
  $clinit_EbToken_FieldSerializer();
  setM_bulletCount(instance, streamReader.readInt());
  setM_carrierToken(instance, castTo(streamReader.readObject(), 19));
  setM_carrierTokenId(instance, streamReader.readLong());
  setM_color_0(instance, streamReader.readInt());
  setM_listFireDisabling(instance, castTo(streamReader.readObject(), 38));
  setM_location(instance, castTo(streamReader.readObject(), 156));
  setM_position(instance, castTo(streamReader.readObject(), 23));
  setM_setContain(instance, castTo(streamReader.readObject(), 53));
  setM_setContainToken(instance, castTo(streamReader.readObject(), 53));
  setM_type(instance, castTo(streamReader.readObject(), 55));
  setM_version_0(instance, streamReader.readLong());
  deserialize_24(streamReader, instance);
}

function getM_bulletCount(instance){
  return instance.m_bulletCount;
}

function getM_carrierToken(instance){
  return instance.m_carrierToken;
}

function getM_carrierTokenId(instance){
  return instance.m_carrierTokenId;
}

function getM_color_0(instance){
  return instance.m_color;
}

function getM_listFireDisabling(instance){
  return instance.m_listFireDisabling;
}

function getM_location(instance){
  return instance.m_location;
}

function getM_position(instance){
  return instance.m_position;
}

function getM_setContain(instance){
  return instance.m_setContain;
}

function getM_setContainToken(instance){
  return instance.m_setContainToken;
}

function getM_type(instance){
  return instance.m_type;
}

function getM_version_0(instance){
  return instance.m_version;
}

function instantiate_32(streamReader){
  $clinit_EbToken_FieldSerializer();
  return new EbToken;
}

function serialize_31(streamWriter, instance){
  $clinit_EbToken_FieldSerializer();
  streamWriter.writeInt(getM_bulletCount(instance));
  streamWriter.writeObject(getM_carrierToken(instance));
  streamWriter.writeLong(getM_carrierTokenId(instance));
  streamWriter.writeInt(getM_color_0(instance));
  streamWriter.writeObject(getM_listFireDisabling(instance));
  streamWriter.writeObject(getM_location(instance));
  streamWriter.writeObject(getM_position(instance));
  streamWriter.writeObject(getM_setContain(instance));
  streamWriter.writeObject(getM_setContainToken(instance));
  streamWriter.writeObject(getM_type(instance));
  streamWriter.writeLong(getM_version_0(instance));
  serialize_19(streamWriter, instance);
}

function setM_bulletCount(instance, value_0){
  instance.m_bulletCount = value_0;
}

function setM_carrierToken(instance, value_0){
  instance.m_carrierToken = value_0;
}

function setM_carrierTokenId(instance, value_0){
  instance.m_carrierTokenId = value_0;
}

function setM_color_0(instance, value_0){
  instance.m_color = value_0;
}

function setM_listFireDisabling(instance, value_0){
  instance.m_listFireDisabling = value_0;
}

function setM_location(instance, value_0){
  instance.m_location = value_0;
}

function setM_position(instance, value_0){
  instance.m_position = value_0;
}

function setM_setContain(instance, value_0){
  instance.m_setContain = value_0;
}

function setM_setContainToken(instance, value_0){
  instance.m_setContainToken = value_0;
}

function setM_type(instance, value_0){
  instance.m_type = value_0;
}

function setM_version_0(instance, value_0){
  instance.m_version = value_0;
}

function $clinit_FireDisabling(){
  $clinit_FireDisabling = emptyMethod;
  $clinit_Object();
}

function FireDisabling(){
  $clinit_FireDisabling();
  Object_0.call(this);
  this.$init_306();
}

defineClass(96, 1, {96:1, 4:1, 1:1}, FireDisabling);
_.$init_306 = function $init_306(){
  this.m_targetId = 0;
  this.m_destroyer1Id = 0;
  this.m_destroyer2Id = 0;
  this.m_target = null;
  this.m_destroyer1 = null;
  this.m_destroyer2 = null;
}
;
_.equals_0 = function equals_11(p_obj){
  var fd;
  if (!instanceOf(p_obj, 96)) {
    return false;
  }
  fd = castTo(p_obj, 96);
  return isNotNull(fd) && eq(this.m_targetId, fd.m_targetId) && (eq(this.m_destroyer1Id, fd.m_destroyer1Id) && eq(this.m_destroyer2Id, fd.m_destroyer2Id)) || eq(this.m_destroyer1Id, fd.m_destroyer2Id) && eq(this.m_destroyer2Id, fd.m_destroyer1Id);
}
;
_.getDestroyer1 = function getDestroyer1(p_game){
  if (isNull(this.m_destroyer1) && neq(this.m_destroyer1Id, 0)) {
    this.m_destroyer1 = p_game.getToken_0(this.m_destroyer1Id);
  }
  return this.m_destroyer1;
}
;
_.getDestroyer1Id = function getDestroyer1Id(){
  return this.m_destroyer1Id;
}
;
_.getDestroyer2 = function getDestroyer2(p_game){
  if (isNull(this.m_destroyer2) && neq(this.m_destroyer2Id, 0)) {
    this.m_destroyer2 = p_game.getToken_0(this.m_destroyer2Id);
  }
  return this.m_destroyer2;
}
;
_.getDestroyer2Id = function getDestroyer2Id(){
  return this.m_destroyer2Id;
}
;
_.getTarget = function getTarget(p_game){
  if (isNull(this.m_target) && neq(this.m_targetId, 0)) {
    this.m_target = p_game.getToken_0(this.m_targetId);
  }
  return this.m_target;
}
;
_.getTargetId = function getTargetId(){
  return this.m_targetId;
}
;
_.setDestroyer1 = function setDestroyer1(p_destroyer1){
  this.m_destroyer1 = p_destroyer1;
  if (isNotNull(this.m_destroyer1)) {
    this.m_destroyer1Id = this.m_destroyer1.getId();
  }
   else {
    this.m_destroyer1Id = 0;
  }
}
;
_.setDestroyer2 = function setDestroyer2(p_destroyer2){
  this.m_destroyer2 = p_destroyer2;
  if (isNotNull(this.m_destroyer2)) {
    this.m_destroyer2Id = this.m_destroyer2.getId();
  }
   else {
    this.m_destroyer2Id = 0;
  }
}
;
_.setTarget = function setTarget(p_target){
  this.m_target = p_target;
  if (isNotNull(this.m_target)) {
    this.m_targetId = this.m_target.getId();
  }
   else {
    this.m_targetId = 0;
  }
}
;
_.toString_0 = function toString_26(){
  return 'FD[' + this.m_destroyer1 + '+' + this.m_destroyer2 + ' -> ' + this.m_target + ']';
}
;
_.m_destroyer1Id = 0;
_.m_destroyer2Id = 0;
_.m_targetId = 0;
var Lcom_fullmetalgalaxy_model_persist_FireDisabling_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'FireDisabling', 96, Ljava_lang_Object_2_classLit);
function $clinit_FireDisabling_Array_Rank_1_FieldSerializer(){
  $clinit_FireDisabling_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_37(streamReader, instance){
  $clinit_FireDisabling_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_33(streamReader){
  $clinit_FireDisabling_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_FireDisabling_2_classLit, {4:1, 1:1, 5:1}, 96, size_0, 0, 1);
}

function serialize_32(streamWriter, instance){
  $clinit_FireDisabling_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_FireDisabling_FieldSerializer(){
  $clinit_FireDisabling_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_38(streamReader, instance){
  $clinit_FireDisabling_FieldSerializer();
  setM_destroyer1Id(instance, streamReader.readLong());
  setM_destroyer2Id(instance, streamReader.readLong());
  setM_targetId(instance, streamReader.readLong());
}

function getM_destroyer1Id(instance){
  return instance.m_destroyer1Id;
}

function getM_destroyer2Id(instance){
  return instance.m_destroyer2Id;
}

function getM_targetId(instance){
  return instance.m_targetId;
}

function instantiate_34(streamReader){
  $clinit_FireDisabling_FieldSerializer();
  return new FireDisabling;
}

function serialize_33(streamWriter, instance){
  $clinit_FireDisabling_FieldSerializer();
  streamWriter.writeLong(getM_destroyer1Id(instance));
  streamWriter.writeLong(getM_destroyer2Id(instance));
  streamWriter.writeLong(getM_targetId(instance));
}

function setM_destroyer1Id(instance, value_0){
  instance.m_destroyer1Id = value_0;
}

function setM_destroyer2Id(instance, value_0){
  instance.m_destroyer2Id = value_0;
}

function setM_targetId(instance, value_0){
  instance.m_targetId = value_0;
}

function $clinit_GameData(){
  $clinit_GameData = emptyMethod;
  $clinit_Object();
  serialVersionUID_0 = neg_0({l:1978786, m:77897, h:404804});
}

function GameData(){
  $clinit_GameData();
  Object_0.call(this);
  this.$init_307();
  this.init_7();
}

defineClass(385, 1, {4:1, 1:1});
_.$init_307 = function $init_307(){
  this.m_preview = null;
  this.m_data = null;
}
;
_.addAccount = function addAccount_0(p_otherAccount){
  this.m_data.addAccount(p_otherAccount);
}
;
_.addRegistration = function addRegistration(p_registration){
  if (eq(p_registration.getId(), 0)) {
    p_registration.setId(this.getNextLocalId());
  }
  if (!this.getSetRegistration().contains_0(p_registration)) {
    this.getSetRegistration().add_5(p_registration);
  }
}
;
_.addTeam = function addTeam(p_team){
  if (eq(p_team.getId(), 0)) {
    p_team.setId(this.getNextLocalId());
  }
  if (!this.getTeams().contains_0(p_team)) {
    this.getTeams().add_5(p_team);
  }
}
;
_.canConstruct = function canConstruct(p_oreType, p_unitType){
  var qty;
  qty = castTo(this.getConstructReserve().get_1(p_unitType), 28);
  if (jsEquals(p_oreType, ($clinit_TokenType() , Ore)) || jsEquals(p_oreType, ($clinit_TokenType() , Ore3))) {
    return isNotNull(qty) && qty.intValue() != 0;
  }
  if (jsEquals(p_oreType, ($clinit_TokenType() , Ore0)) && jsEquals(p_unitType, ($clinit_TokenType() , Sluice)) || jsEquals(p_unitType, ($clinit_TokenType() , Pontoon))) {
    return isNotNull(qty) && qty.intValue() != 0;
  }
  return false;
}
;
_.decConstructQty = function decConstructQty(p_type){
  var $tmp, qty;
  qty = castTo(this.getConstructReserve().get_1(p_type), 28);
  if (isNotNull(qty) && qty.intValue() > 0) {
    $tmp = qty , qty = valueOf_37(qty.intValue() - 1) , $tmp;
    this.setConstructQty_0(p_type, qty.intValue());
  }
}
;
_.getAccount = function getAccount_1(p_accountId){
  var account, registration;
  account = this.m_data.getAccount(p_accountId);
  if (isNotNull(account)) {
    return account;
  }
  if (isNotNull(this.getAccountCreator()) && eq(this.getAccountCreator().getId(), p_accountId)) {
    return this.getAccountCreator();
  }
  registration = this.getRegistrationByIdAccount(p_accountId);
  if (isNotNull(registration) && isNotNull(registration.getAccount_0())) {
    return registration.getAccount_0();
  }
  return null;
}
;
_.getAccountCreator = function getAccountCreator_0(){
  return this.m_preview.getAccountCreator();
}
;
_.getAdditionalEventCount = function getAdditionalEventCount_1(){
  return this.m_data.getAdditionalEventCount();
}
;
_.getAllowedTakeOffTurns = function getAllowedTakeOffTurns(){
  if (isNotNull(this.getTakeOffTurns())) {
    return this.getTakeOffTurns();
  }
  return this.getEbConfigGameTime().getTakeOffTurns();
}
;
_.getAverageTideLevel = function getAverageTideLevel_0(){
  return this.m_data.getAverageTideLevel();
}
;
_.getConfigGameTime = function getConfigGameTime_0(){
  return this.m_preview.getConfigGameTime();
}
;
_.getConstructReserve = function getConstructReserve_0(){
  return this.m_data.getConstructReserve();
}
;
_.getCreationDate = function getCreationDate_0(){
  return this.m_preview.getCreationDate();
}
;
_.getCurrentNumberOfRegiteredPlayer = function getCurrentNumberOfRegiteredPlayer_0(){
  return this.m_preview.getCurrentNumberOfRegiteredPlayer();
}
;
_.getCurrentPlayerIds = function getCurrentPlayerIds_0(){
  return this.m_preview.getCurrentPlayerIds();
}
;
_.getCurrentTide = function getCurrentTide_0(){
  return this.m_data.getCurrentTide();
}
;
_.getCurrentTimeStep = function getCurrentTimeStep_0(){
  return this.m_preview.getCurrentTimeStep();
}
;
_.getDescription = function getDescription_1(){
  return this.m_preview.getDescription();
}
;
_.getEbConfigGameTime = function getEbConfigGameTime_2(){
  return this.m_preview.getEbConfigGameTime();
}
;
_.getFreePlayersColors = function getFreePlayersColors_0(){
  return this.m_preview.getFreePlayersColors();
}
;
_.getFreeRegistrationColors = function getFreeRegistrationColors_0(){
  return this.m_preview.getFreeRegistrationColors();
}
;
_.getGameType = function getGameType_0(){
  return this.m_preview.getGameType();
}
;
_.getId = function getId_1(){
  return this.m_preview.getId();
}
;
_.getInitialHolds = function getInitialHolds_0(){
  return this.m_data.getInitialHolds();
}
;
_.getInitialScore = function getInitialScore_0(){
  return this.m_data.getInitialScore();
}
;
_.getLand = function getLand(x_0, y_0){
  return this.getLand_0(new AnPair_0(x_0, y_0));
}
;
_.getLand_0 = function getLand_0(p_position){
  var land, offset, position;
  land = ($clinit_LandType() , None);
  if (p_position.getX() < 0 || p_position.getX() >= this.getLandWidth() || p_position.getY() < 0 || p_position.getY() >= this.getLandHeight() || p_position.getX() + p_position.getY() * this.getLandWidth() >= this.getLands().length * 2) {
  }
   else {
    position = p_position.getX() + p_position.getY() * this.getLandWidth();
    offset = position % 2;
    position = narrow_int(position / 2);
    if (offset == 0) {
      land = getFromOrdinal(this.getLands()[position] & 15);
    }
     else {
      land = getFromOrdinal((this.getLands()[position] & 240) >> 4);
    }
  }
  return land;
}
;
_.getLandHeight = function getLandHeight_0(){
  return this.m_preview.getLandHeight();
}
;
_.getLandWidth = function getLandWidth_0(){
  return this.m_preview.getLandWidth();
}
;
_.getLands = function getLands_0(){
  return this.m_data.getLands();
}
;
_.getLastTideChange = function getLastTideChange_0(){
  return this.m_data.getLastTideChange();
}
;
_.getLastTimeStepChange = function getLastTimeStepChange_0(){
  return this.m_data.getLastTimeStepChange();
}
;
_.getLogs = function getLogs_0(){
  return this.m_data.getLogs();
}
;
_.getMapShape = function getMapShape_0(){
  return this.m_preview.getMapShape();
}
;
_.getMapUri = function getMapUri_0(){
  return this.m_data.getMapUri();
}
;
_.getMaxNumberOfPlayer = function getMaxNumberOfPlayer_0(){
  return this.m_preview.getMaxNumberOfPlayer();
}
;
_.getMaxTeamAllowed = function getMaxTeamAllowed_0(){
  return this.m_preview.getMaxTeamAllowed();
}
;
_.getMessage = function getMessage_2(){
  return this.m_data.getMessage();
}
;
_.getName = function getName_0(){
  return this.m_preview.getName();
}
;
_.getNextLocalId = function getNextLocalId_0(){
  return this.m_data.getNextLocalId();
}
;
_.getNextTide = function getNextTide_0(){
  return this.m_data.getNextTide();
}
;
_.getNextTide2 = function getNextTide2_0(){
  return this.m_data.getNextTide2();
}
;
_.getPassword = function getPassword_0(){
  return this.m_preview.getPassword();
}
;
_.getPlanetType = function getPlanetType_0(){
  return this.m_preview.getPlanetType();
}
;
_.getPreview = function getPreview(){
  return this.m_preview;
}
;
_.getRegistration_0 = function getRegistration_1(p_idRegistration){
  return this.m_preview.getRegistration_0(p_idRegistration);
}
;
_.getRegistrationByColor = function getRegistrationByColor_0(p_color){
  return this.m_preview.getRegistrationByColor(p_color);
}
;
_.getRegistrationByIdAccount = function getRegistrationByIdAccount_0(p_idAccount){
  return this.m_preview.getRegistrationByIdAccount(p_idAccount);
}
;
_.getSetRegistration = function getSetRegistration_0(){
  return this.m_preview.getSetRegistration();
}
;
_.getSetToken = function getSetToken_0(){
  return this.m_data.getSetToken();
}
;
_.getStatus = function getStatus_0(){
  return this.m_preview.getStatus();
}
;
_.getTakeOffTurns = function getTakeOffTurns_1(){
  return this.m_data.getTakeOffTurns();
}
;
_.getTeam = function getTeam_2(p_idTeam){
  return this.m_preview.getTeam(p_idTeam);
}
;
_.getTeam_0 = function getTeam_3(p_company){
  return this.m_preview.getTeam_0(p_company);
}
;
_.getTeamByOrderIndex = function getTeamByOrderIndex_0(p_index){
  return this.m_preview.getTeamByOrderIndex(p_index);
}
;
_.getTeamByPlayOrder = function getTeamByPlayOrder_0(){
  return this.m_preview.getTeamByPlayOrder();
}
;
_.getTeams = function getTeams_0(){
  return this.m_preview.getTeams();
}
;
_.getTriggers = function getTriggers_0(){
  return this.m_data.getTriggers();
}
;
_.getUnusedColors = function getUnusedColors_0(){
  return this.m_preview.getUnusedColors();
}
;
_.getVersion = function getVersion_1(){
  return this.m_preview.getVersion();
}
;
_.incConstructQty = function incConstructQty(p_type){
  var $tmp, qty;
  qty = castTo(this.getConstructReserve().get_1(p_type), 28);
  if (isNotNull(qty) && qty.intValue() >= 0) {
    $tmp = qty , qty = valueOf_37(qty.intValue() + 1) , $tmp;
    this.setConstructQty_0(p_type, qty.intValue());
  }
}
;
_.init_7 = function init_7(){
  this.m_preview = new EbGamePreview;
  this.m_data = new EbGameData;
  this.setLandSize(this.m_preview.getLandWidth(), this.m_preview.getLandHeight());
  this.setLand_0(0, 0, ($clinit_LandType() , Plain));
}
;
_.isFinished = function isFinished_0(){
  return this.m_preview.isFinished();
}
;
_.isMapSquare = function isMapSquare_0(){
  return jsNotEquals(this.getLand(0, 0), ($clinit_LandType() , None));
}
;
_.isMessageWebUrl = function isMessageWebUrl_0(){
  return this.m_data.isMessageWebUrl();
}
;
_.isParallel = function isParallel_2(){
  return this.m_preview.isParallel();
}
;
_.isPasswordProtected = function isPasswordProtected_0(){
  return this.m_preview.isPasswordProtected();
}
;
_.isTeamAllowed = function isTeamAllowed_0(){
  return this.m_preview.isTeamAllowed();
}
;
_.isTimeStepParallelHidden = function isTimeStepParallelHidden_0(p_timeStep){
  return this.m_preview.isTimeStepParallelHidden(p_timeStep);
}
;
_.setAdditionalEventCount = function setAdditionalEventCount_0(p_additionalEventCount){
  this.m_data.setAdditionalEventCount(p_additionalEventCount);
}
;
_.setAverageTideLevel = function setAverageTideLevel_0(p_averageTideLevel){
  this.m_data.setAverageTideLevel(p_averageTideLevel);
}
;
_.setConfigGameTime = function setConfigGameTime_0(p_configGameTime){
  this.m_preview.setConfigGameTime(p_configGameTime);
}
;
_.setConstructQty_0 = function setConstructQty_0(p_type, p_qty){
  this.getConstructReserve().put(p_type, valueOf_37(p_qty));
}
;
_.setCurrentTide = function setCurrentTide_0(p_currentTide){
  this.m_data.setCurrentTide(p_currentTide);
}
;
_.setCurrentTimeStep = function setCurrentTimeStep_0(p_currentTimeStep){
  this.m_preview.setCurrentTimeStep(p_currentTimeStep);
}
;
_.setGameType = function setGameType_0(p_gameType){
  this.m_preview.setGameType(p_gameType);
}
;
_.setLand = function setLand(x_0, y_0, id_0){
  var intId, offset, position;
  if (x_0 < 0 || x_0 > this.getLandWidth() || y_0 < 0 || y_0 > this.getLandHeight()) {
    logError('set an hexgon outside of the map');
    return;
  }
   else {
    position = x_0 + y_0 * this.getLandWidth();
    offset = position % 2;
    position = narrow_int(position / 2);
    if (!(position < this.m_data.getLands().length)) {
      debugger;
      throw toJs(makeAssertionError());
    }
    intId = id_0 & 15;
    if (offset == 0) {
      this.m_data.getLands()[position] = narrow_byte((this.m_data.getLands()[position] & 240) + intId);
    }
     else {
      this.m_data.getLands()[position] = narrow_byte((this.m_data.getLands()[position] & 15) + (intId << 4));
    }
  }
}
;
_.setLand_0 = function setLand_0(x_0, y_0, p_land){
  this.setLand(x_0, y_0, narrow_byte(p_land.ordinal_0()));
}
;
_.setLandHeight = function setLandHeight_0(p_landHeight){
  this.m_preview.setLandHeight(p_landHeight);
}
;
_.setLandSize = function setLandSize(p_width, p_height){
  var isMapSquare;
  isMapSquare = this.isMapSquare();
  this.m_data.setLands(initUnidimensionalArray(B_classLit, {173:1, 4:1, 1:1}, 29, narrow_int(p_width * p_height / 2) + 1, 15, 1));
  this.setLandWidth(p_width);
  this.setLandHeight(p_height);
  if (isMapSquare) {
    this.setLand_0(0, 0, ($clinit_LandType() , Plain));
  }
}
;
_.setLandWidth = function setLandWidth_0(p_landWidth){
  this.m_preview.setLandWidth(p_landWidth);
}
;
_.setLastTideChange = function setLastTideChange_0(p_lastTideChange){
  this.m_data.setLastTideChange(p_lastTideChange);
}
;
_.setLastTimeStepChange = function setLastTimeStepChange_0(p_lastTimeStepChange){
  this.m_data.setLastTimeStepChange(p_lastTimeStepChange);
}
;
_.setLogs = function setLogs_0(p_setActionLog){
  this.m_data.setLogs(p_setActionLog);
}
;
_.setMessage = function setMessage_0(p_messages){
  this.m_data.setMessage(p_messages);
}
;
_.setNextTide = function setNextTide_0(p_nextTide){
  this.m_data.setNextTide(p_nextTide);
}
;
_.setNextTide2 = function setNextTide2_0(p_nextTide){
  this.m_data.setNextTide2(p_nextTide);
}
;
_.setStatus = function setStatus_0(p_status){
  this.m_preview.setStatus(p_status);
}
;
_.setVersion = function setVersion_1(p_version){
  this.m_preview.setVersion(p_version);
}
;
_.toString_0 = function toString_27(){
  return this.m_preview.getName();
}
;
_.updateOpenPauseStatus = function updateOpenPauseStatus(){
  if (jsEquals(this.getStatus(), ($clinit_GameStatus() , Open)) && this.getCurrentNumberOfRegiteredPlayer() >= this.getMaxNumberOfPlayer()) {
    this.setStatus(($clinit_GameStatus() , Pause));
  }
   else if (jsEquals(this.getStatus(), ($clinit_GameStatus() , Pause)) && this.getCurrentNumberOfRegiteredPlayer() < this.getMaxNumberOfPlayer()) {
    this.setStatus(($clinit_GameStatus() , Open));
  }
}
;
var serialVersionUID_0 = 0;
var Lcom_fullmetalgalaxy_model_persist_GameData_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'GameData', 385, Ljava_lang_Object_2_classLit);
function $clinit_Game(){
  $clinit_Game = emptyMethod;
  $clinit_GameData();
  serialVersionUID_1 = neg_0({l:993845, m:1436658, h:40769});
}

function Game(){
  $clinit_Game();
  GameData.call(this);
  this.$init_308();
  this.init_8();
}

function getLandPixOffset_2(p_landValue){
  $clinit_Game();
  switch (p_landValue.ordinal_0()) {
    case ($clinit_LandType() , Montain).ordinal_0():
      return -7;
    case ($clinit_LandType() , Sea).ordinal_0():
      return 6;
    case ($clinit_LandType() , Reef).ordinal_0():
      return 5;
    case ($clinit_LandType() , Marsh).ordinal_0():
      return 2;
    default:return 0;
  }
}

defineClass(274, 385, {274:1, 4:1, 1:1}, Game);
_.$init_308 = function $init_308(){
  this.m_tokenIndexSet = null;
  this.m_eventStack = this;
  this.m_fireCover = null;
  this.m_coordinateSystem = null;
  this.m_lastTokenUpdate = new Date_1(0);
  this.m_allowedNodeGraphCache = new HashSet;
  this.m_forbidenNodeGraphCache = new HashSet;
}
;
_.addEvent = function addEvent(p_action){
  p_action.setGame(this);
  if (eq(p_action.getId(), 0)) {
    p_action.setId(this.getNextLocalId());
  }
   else if (neq(p_action.getId(), this.getNextLocalId())) {
    logError('EbGame::addEvent(): p_action.getId() != getNextLocalId()');
  }
  if (!this.getLogs().contains_0(p_action)) {
    this.getLogs().add_5(p_action);
  }
   else {
    logError('EbGame::addEvent(): logs already contain ' + p_action);
  }
}
;
_.addToken_1 = function addToken_1(p_token){
  var token, token$iterator;
  if (eq(p_token.getId(), 0)) {
    p_token.setId(this.getNextLocalId());
    p_token.setVersion(1);
  }
  if (!this.getSetToken().contains_0(p_token)) {
    this.getSetToken().add_5(p_token);
    this.getTokenIndexSet().addToken_1(p_token);
    this.getBoardFireCover().incFireCover_1(p_token);
    if (p_token.containToken()) {
      for (token$iterator = p_token.getContains().iterator_0(); token$iterator.hasNext_0();) {
        token = castTo(token$iterator.next_1(), 19);
        this.addToken_1(token);
      }
    }
  }
  this.updateLastTokenUpdate(null);
}
;
_.canDeployUnit = function canDeployUnit(p_registration){
  var event_0, index_0;
  if (this.getEbConfigGameTime().getDeploymentTimeStep() < this.getCurrentTimeStep()) {
    return false;
  }
  if (!this.isParallel() && this.getEbConfigGameTime().getDeploymentTimeStep() != this.getCurrentTimeStep()) {
    return false;
  }
  if (this.isParallel()) {
    index_0 = this.getLogs().size_1();
    while (index_0 > 0) {
      index_0--;
      event_0 = castTo(this.getLogs().get_0(index_0), 20);
      if (instanceOf(event_0, 84) && eq(castTo(event_0, 84).getMyRegistration_0(this).getId(), p_registration.getId()) && castTo(event_0, 84).getCost() > 0) {
        return false;
      }
    }
  }
  return true;
}
;
_.canTokenFireOn = function canTokenFireOn(p_token, p_targetPosition){
  var canTokenFire, position, position$iterator;
  if (p_token.getHexagonSize() > 1) {
    canTokenFire = false;
    for (position$iterator = p_token.getExtraPositions(this.getCoordinateSystem()).iterator_0(); position$iterator.hasNext_0();) {
      position = castTo(position$iterator.next_1(), 23);
      canTokenFire = canTokenFire | this.canTokenFireOn_0(p_token, position, p_targetPosition);
    }
    if (canTokenFire)
      return true;
  }
  return this.canTokenFireOn_0(p_token, p_token.getPosition(), p_targetPosition);
}
;
_.canTokenFireOn_0 = function canTokenFireOn_0(p_token, p_fromPosition, p_targetPosition){
  if (jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board)) || !p_token.getType().isDestroyer()) {
    return false;
  }
  return this.getCoordinateSystem().getDiscreteDistance(p_fromPosition, p_targetPosition) <= this.getTokenFireLength(p_token);
}
;
_.canTokenFireOn_1 = function canTokenFireOn_1(p_token, p_fromPosition, p_tokenTarget){
  var position, position$iterator;
  if (this.canTokenFireOn_0(p_token, p_fromPosition, p_tokenTarget.getPosition())) {
    return true;
  }
  for (position$iterator = p_tokenTarget.getExtraPositions(this.getCoordinateSystem()).iterator_0(); position$iterator.hasNext_0();) {
    position = castTo(position$iterator.next_1(), 23);
    if (this.canTokenFireOn_0(p_token, p_fromPosition, position)) {
      return true;
    }
  }
  return false;
}
;
_.canTokenFireOn_2 = function canTokenFireOn_2(p_token, p_tokenTarget){
  var position, position$iterator;
  if (this.canTokenFireOn(p_token, p_tokenTarget.getPosition())) {
    return true;
  }
  for (position$iterator = p_tokenTarget.getExtraPositions(this.getCoordinateSystem()).iterator_0(); position$iterator.hasNext_0();) {
    position = castTo(position$iterator.next_1(), 23);
    if (this.canTokenFireOn(p_token, position)) {
      return true;
    }
  }
  return false;
}
;
_.canTokenLoad = function canTokenLoad(p_carrier, p_token){
  var freeLoadingSpace, token, token$iterator;
  if (!isNotNull(p_carrier)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_token)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!p_carrier.canLoad(p_token.getType())) {
    return false;
  }
  freeLoadingSpace = p_carrier.getType().getLoadingCapability();
  if (p_carrier.containToken()) {
    for (token$iterator = p_carrier.getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      freeLoadingSpace -= token.getType().getLoadingSize();
    }
  }
  return freeLoadingSpace >= p_token.getFullLoadingSize();
}
;
_.canTokenMoveOn = function canTokenMoveOn(p_token, p_position){
  var position, tokenPontoon, tokenPontoon0;
  if (isNull(p_token) || !this.isTokenTideActive(p_token) || isNull(p_position) || p_position.getX() < 0 || p_position.getY() < 0) {
    return false;
  }
  if (p_token.getHexagonSize() == 2) {
    position = this.getCoordinateSystem().getNeighbor(p_position, p_position.getSector());
    tokenPontoon0 = this.getToken_2(position, ($clinit_TokenType() , Pontoon));
    if (isNull(tokenPontoon0))
      tokenPontoon0 = this.getToken_2(position, ($clinit_TokenType() , Sluice));
    if (isNotNull(tokenPontoon0)) {
      return tokenPontoon0.canLoad(p_token.getType());
    }
    if (p_token.canMoveOn(this, this.getLand_0(position)) == false) {
      return false;
    }
  }
  tokenPontoon = this.getToken_2(p_position, ($clinit_TokenType() , Pontoon));
  if (isNull(tokenPontoon))
    tokenPontoon = this.getToken_2(p_position, ($clinit_TokenType() , Sluice));
  if (isNull(tokenPontoon))
    tokenPontoon = this.getToken_2(p_position, ($clinit_TokenType() , Ore2Generator));
  if (isNull(tokenPontoon))
    tokenPontoon = this.getToken_2(p_position, ($clinit_TokenType() , Ore3Generator));
  if (isNotNull(tokenPontoon)) {
    return tokenPontoon.canLoad(p_token.getType());
  }
  return p_token.canMoveOn(this, this.getLand_0(p_position));
}
;
_.chainRemovePontoon = function chainRemovePontoon(p_token, p_fdRemoved){
  var fdRemoved, neighborPosition, neighborPosition$iterator, otherPontoon, pontoons, position, token, token$iterator, tokens;
  if (!jsEquals(p_token.getType(), ($clinit_TokenType() , Pontoon))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  pontoons = new ArrayList;
  pontoons.add_5(valueOf_40(p_token.getId()));
  position = p_token.getPosition();
  tokens = this.getAllToken(position);
  for (token$iterator = tokens.iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsNotEquals(token, p_token)) {
      if (isNotNull(token.getFireDisablingList())) {
        fdRemoved = new ArrayList;
        fdRemoved.addAll(token.getFireDisablingList());
        p_fdRemoved.addAll(fdRemoved);
        this.getBoardFireCover().removeFireDisabling_0(fdRemoved);
      }
      pontoons.add_5(valueOf_40(token.getId()));
      this.moveToken(token, ($clinit_Location() , Graveyard));
      token.incVersion();
    }
  }
  this.moveToken(p_token, ($clinit_Location() , Graveyard));
  p_token.incVersion();
  for (neighborPosition$iterator = this.getCoordinateSystem().getAllNeighbors(position).iterator_0(); neighborPosition$iterator.hasNext_0();) {
    neighborPosition = castTo(neighborPosition$iterator.next_1(), 23);
    otherPontoon = this.getToken_2(neighborPosition, ($clinit_TokenType() , Pontoon));
    if (isNotNull(otherPontoon)) {
      pontoons.addAll(this.chainRemovePontoon(otherPontoon, p_fdRemoved));
    }
  }
  return pontoons;
}
;
_.changeTokenColor = function changeTokenColor(p_token, p_newColor){
  var token, token$iterator;
  this.getBoardFireCover().decFireCover_1(p_token);
  p_token.setColor(p_newColor);
  this.getBoardFireCover().incFireCover_1(p_token);
  if (p_token.containToken()) {
    for (token$iterator = p_token.getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.canBeColored()) {
        token.setColor(p_newColor);
      }
    }
  }
}
;
_.countTeamOnBoard = function countTeamOnBoard(){
  var allFreighterColors, team, team$iterator, teamCount, token, token$iterator;
  teamCount = 0;
  if (this.getCurrentTimeStep() < castTo(this.getEbConfigGameTime().getTakeOffTurns().get_0(0), 28).intValue()) {
    for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      if (team.getColors(this.getPreview()) != 0) {
        teamCount++;
      }
    }
  }
   else {
    allFreighterColors = new EnuColor;
    for (token$iterator = this.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Freighter)) && jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
        allFreighterColors.addColor(token.getColor_0());
      }
    }
    for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      if (allFreighterColors.contain_1(team.getColors(this.getPreview()))) {
        teamCount++;
      }
    }
  }
  return teamCount;
}
;
_.countWorkingWeatherHen = function countWorkingWeatherHen(p_color){
  var count, it, token;
  count = 0;
  for (it = this.getSetToken().iterator_0(); it.hasNext_0();) {
    token = castTo(castTo(it.next_1(), 19), 19);
    if (p_color.isColored(token.getColor_0()) && jsEquals(token.getType(), ($clinit_TokenType() , WeatherHen)) && token.getColor_0() != 0 && jsEquals(token.getLocation(), ($clinit_Location() , Board)) && this.isTokenTideActive(token) && this.isTokenFireActive(token)) {
      count++;
    }
  }
  return count;
}
;
_.createTriggersEvents = function createTriggersEvents(){
  var events, trigger, trigger$iterator;
  events = new ArrayList;
  for (trigger$iterator = this.getTriggers().iterator_0(); trigger$iterator.hasNext_0();) {
    trigger = castTo(trigger$iterator.next_1(), 248);
    events.addAll(trigger.createEvents(this));
  }
  return events;
}
;
_.estimateEndingDate = function estimateEndingDate(){
  var date;
  date = null;
  if (jsNotEquals(this.getStatus(), ($clinit_GameStatus() , Running))) {
    date = new Date_1({l:4194303, m:4194303, h:524287});
  }
   else {
    date = this.estimateTimeStepDate(this.getEbConfigGameTime().getTotalTimeStep());
  }
  return date;
}
;
_.estimateNextTideChange = function estimateNextTideChange(){
  return this.estimateTimeStepDate(this.getNextTideChangeTimeStep());
}
;
_.estimateNextTimeStep = function estimateNextTimeStep(){
  return this.estimateTimeStepDate(this.getCurrentTimeStep() + 1);
}
;
_.estimateTimeStepDate = function estimateTimeStepDate(p_step){
  var timeStepDurationInMili;
  timeStepDurationInMili = this.getEbConfigGameTime().getTimeStepDurationInMili();
  if (!this.isParallel()) {
    timeStepDurationInMili = mul_0(timeStepDurationInMili, fromInt_0(this.getSetRegistration().size_1()));
  }
  return new Date_1(add_19(this.getLastTimeStepChange().getTime_1(), mul_0(fromInt_0(p_step - this.getCurrentTimeStep()), timeStepDurationInMili)));
}
;
_.getAllFreighter = function getAllFreighter(p_color){
  var color_0, list, token, token$iterator;
  color_0 = new EnuColor_0(p_color);
  list = new ArrayList;
  if (isNull(color_0) || color_0.getNbColor() == 0) {
    return list;
  }
  for (token$iterator = this.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsEquals(token.getType(), ($clinit_TokenType() , Freighter)) && token.getColor_0() != 0 && color_0.isColored(token.getColor_0())) {
      list.add_5(token);
    }
  }
  return list;
}
;
_.getAllToken = function getAllToken(p_position){
  var allTokens;
  allTokens = this.getTokenIndexSet().getAllToken(this.getCoordinateSystem().normalizePosition(p_position));
  if (isNotNull(allTokens)) {
    return new HashSet_0(allTokens);
  }
  return new HashSet;
}
;
_.getAvailableNode = function getAvailableNode(p_fromNode, p_mobile){
  var mobile, neighborPosition, neighborPosition$iterator, nodes, position;
  if (!isNotNull(p_mobile)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  position = castTo(p_fromNode, 23);
  mobile = castTo(p_mobile, 357);
  nodes = new HashSet;
  for (neighborPosition$iterator = this.getCoordinateSystem().getAllNeighbors(position).iterator_0(); neighborPosition$iterator.hasNext_0();) {
    neighborPosition = castTo(neighborPosition$iterator.next_1(), 23);
    if (isNull(mobile.getToken())) {
      nodes.add_5(neighborPosition);
    }
     else {
      if (this.m_allowedNodeGraphCache.contains_0(neighborPosition)) {
        nodes.add_5(neighborPosition);
      }
       else if (this.m_forbidenNodeGraphCache.contains_0(neighborPosition)) {
      }
       else {
        if (mobile.getToken().canMoveOn_0(this, mobile.getRegistration(), neighborPosition)) {
          this.m_allowedNodeGraphCache.add_5(neighborPosition);
          nodes.add_5(neighborPosition);
        }
         else {
          this.m_forbidenNodeGraphCache.add_5(neighborPosition);
        }
      }
    }
  }
  return nodes;
}
;
_.getBoardFireCover = function getBoardFireCover(){
  if (isNull(this.m_fireCover)) {
    this.m_fireCover = new BoardFireCover(this);
  }
  return this.m_fireCover;
}
;
_.getCoordinateSystem = function getCoordinateSystem(){
  if (isNull(this.m_coordinateSystem)) {
    if (jsEquals(this.getMapShape(), ($clinit_MapShape() , Flat))) {
      this.m_coordinateSystem = new HexCoordinateSystem;
    }
     else {
      this.m_coordinateSystem = new HexTorusCoordinateSystem(this.getMapShape(), this.getLandWidth(), this.getLandHeight());
    }
  }
  return this.m_coordinateSystem;
}
;
_.getFireCover_1 = function getFireCover_1(p_x, p_y, p_team){
  var regColor;
  regColor = new EnuColor_0(p_team.getFireColor());
  return this.getBoardFireCover().getFireCover_0(new AnBoardPosition_0(p_x, p_y), regColor);
}
;
_.getFreighter = function getFreighter(p_registration){
  var color_0, token, token$iterator;
  if (isNull(p_registration)) {
    return null;
  }
  color_0 = p_registration.getEnuColor();
  for (token$iterator = this.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsEquals(token.getType(), ($clinit_TokenType() , Freighter)) && token.getColor_0() != 0 && color_0.isColored(token.getColor_0())) {
      return token;
    }
  }
  return null;
}
;
_.getFullTurnDurationInMili = function getFullTurnDurationInMili(){
  return mul_0(this.getEbConfigGameTime().getTimeStepDurationInMili(), fromInt_0(this.getSetRegistration().size_1()));
}
;
_.getLandPixOffset_1 = function getLandPixOffset_3(p_position){
  var land;
  land = this.getLand_0(p_position);
  switch (land.ordinal_0()) {
    default:return getLandPixOffset_2(land);
    case ($clinit_LandType() , Sea).ordinal_0():
      if (jsEquals(this.getCurrentTide(), ($clinit_Tide() , Low))) {
        return getLandPixOffset_2(($clinit_LandType() , Sea));
      }

    case ($clinit_LandType() , Reef).ordinal_0():
      if (jsNotEquals(this.getCurrentTide(), ($clinit_Tide() , Hight))) {
        return getLandPixOffset_2(($clinit_LandType() , Reef));
      }

    case ($clinit_LandType() , Marsh).ordinal_0():
      return getLandPixOffset_2(($clinit_LandType() , Marsh));
  }
}
;
_.getLastGameLog = function getLastGameLog(){
  if (this.getLogs().size_1() > 0) {
    return castTo(this.getLogs().get_0(this.getLogs().size_1() - 1), 20);
  }
  return null;
}
;
_.getLastGameLog_0 = function getLastGameLog_0(p_count){
  if (this.getLogs().size_1() < p_count) {
    return null;
  }
  return castTo(this.getLogs().get_0(this.getLogs().size_1() - (1 + p_count)), 20);
}
;
_.getLastLog = function getLastLog(){
  var event_0;
  if (isNull(this.m_eventStack)) {
    return this.getLastGameLog();
  }
  event_0 = this.m_eventStack.getLastGameLog();
  if (isNull(event_0)) {
    return this.getLastGameLog();
  }
  return event_0;
}
;
_.getLastLog_0 = function getLastLog_0(p_count){
  var event_0;
  if (isNull(this.m_eventStack)) {
    return this.getLastGameLog_0(p_count);
  }
  event_0 = this.m_eventStack.getLastGameLog_0(p_count);
  if (isNull(event_0)) {
    return this.getLastGameLog_0(p_count);
  }
  return event_0;
}
;
_.getLastTokenUpdate = function getLastTokenUpdate(){
  if (isNull(this.m_lastTokenUpdate)) {
    this.m_lastTokenUpdate = new Date_1(currentTimeMillis_0());
  }
  return this.m_lastTokenUpdate;
}
;
_.getMainWarp = function getMainWarp(){
  var token, token$iterator, warp;
  warp = null;
  for (token$iterator = this.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsEquals(token.getType(), ($clinit_TokenType() , Warp)) && (isNull(warp) || gt(warp.getId(), token.getId()))) {
      warp = token;
    }
  }
  return warp;
}
;
_.getNextTeam2Play = function getNextTeam2Play(p_currentIndex){
  var e, index_0, team, teams;
  index_0 = p_currentIndex;
  teams = this.getTeamByPlayOrder();
  team = null;
  do {
    index_0++;
    try {
      team = castTo(teams.get_0(index_0), 43);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        team = null;
      }
       else 
        throw toJs($e0);
    }
    if (isNull(team)) {
      index_0 = 0;
      team = castTo(teams.get_0(index_0), 43);
      if (p_currentIndex < 0)
        break;
    }
    if (!isNotNull(team)) {
      debugger;
      throw toJs(makeAssertionError());
    }
  }
   while ((team.getOnBoardFreighterCount(this) == 0 || !team.haveAccount_0(this.getPreview())) && index_0 != p_currentIndex);
  return team;
}
;
_.getNextTideChangeTimeStep = function getNextTideChangeTimeStep(){
  return this.getLastTideChange() + this.getEbConfigGameTime().getTideChangeFrequency();
}
;
_.getOpponentFireCover = function getOpponentFireCover(p_myColorValue, p_position){
  var fireCover;
  fireCover = this.getBoardFireCover().getFireCover(p_position);
  fireCover.removeColor(p_myColorValue);
  return fireCover;
}
;
_.getOpponentFireCover_0 = function getOpponentFireCover_0(p_token){
  var fireCover, tokenTeamColor;
  if (jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board)) || p_token.getColor_0() == 0) {
    return new EnuColor_0(0);
  }
  tokenTeamColor = this.getTokenTeamColors(p_token);
  fireCover = this.getOpponentFireCover(tokenTeamColor.getValue_1(), p_token.getPosition());
  if (p_token.getHexagonSize() == 2) {
    fireCover.addColor_0(this.getOpponentFireCover(tokenTeamColor.getValue_1(), castTo(castTo(p_token.getExtraPositions(this.getCoordinateSystem()).get_0(0), 23), 23)));
  }
  return fireCover;
}
;
_.getOtherTeamBoardLocked = function getOtherTeamBoardLocked(p_myRegistration, p_position, p_currentTime){
  var team, team$iterator;
  if (!this.isParallel() || isNull(p_position) || p_position.getX() < 0) {
    return null;
  }
  for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    if (jsNotEquals(p_myRegistration.getTeam_1(this), team) && isNotNull(team.getEndTurnDate()) && isNotNull(team.getLockedPosition())) {
      if (lt(team.getEndTurnDate().getTime_1(), p_currentTime)) {
        team.setEndTurnDate(null);
        team.setLockedPosition(null);
      }
       else if (this.getCoordinateSystem().getDiscreteDistance(team.getLockedPosition(), p_position) <= 6) {
        return team;
      }
    }
  }
  return null;
}
;
_.getTankCheating = function getTankCheating(p_token){
  var i, neighborPosition, sectorValues, token, tokenPosition, tokenTeamColor;
  if (jsNotEquals(p_token.getType(), ($clinit_TokenType() , Tank)) || jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    return null;
  }
  tokenPosition = p_token.getPosition();
  if (jsNotEquals(this.getLand_0(tokenPosition), ($clinit_LandType() , Montain))) {
    return null;
  }
  sectorValues = values_11();
  for (i = 0; i < sectorValues.length; i++) {
    neighborPosition = this.getCoordinateSystem().getNeighbor(tokenPosition, sectorValues[i]);
    tokenTeamColor = this.getTokenTeamColors(p_token);
    if (jsEquals(this.getLand_0(neighborPosition), ($clinit_LandType() , Montain))) {
      token = this.getToken_1(neighborPosition);
      if (isNotNull(token) && jsEquals(token.getType(), ($clinit_TokenType() , Tank)) && tokenTeamColor.isColored(token.getColor_0())) {
        return token;
      }
    }
  }
  return null;
}
;
_.getToken_0 = function getToken_0(p_id){
  return this.getTokenIndexSet().getToken_0(p_id);
}
;
_.getToken_1 = function getToken_1(p_position){
  var it, list, nextToken, token;
  list = this.getAllToken(p_position);
  token = null;
  for (it = list.iterator_0(); it.hasNext_0();) {
    nextToken = castTo(castTo(it.next_1(), 19), 19);
    if (isNull(token) || token.getType().getZIndex(token.getPosition().getSector()) < nextToken.getType().getZIndex(nextToken.getPosition().getSector())) {
      token = nextToken;
    }
  }
  return token;
}
;
_.getToken_2 = function getToken_2(p_position, p_tokenType){
  var it, nextToken, token;
  token = null;
  for (it = this.getAllToken(p_position).iterator_0(); it.hasNext_0();) {
    nextToken = castTo(castTo(it.next_1(), 19), 19);
    if (jsEquals(nextToken.getType(), p_tokenType)) {
      token = nextToken;
    }
  }
  return token;
}
;
_.getTokenFireLength = function getTokenFireLength(p_token){
  if (isNull(p_token) || jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    return 0;
  }
  switch (p_token.getType().ordinal_0()) {
    case ($clinit_TokenType() , Turret).ordinal_0():
    case ($clinit_TokenType() , Speedboat).ordinal_0():
    case ($clinit_TokenType() , Hovertank).ordinal_0():
    case ($clinit_TokenType() , Destroyer).ordinal_0():
      return 2;
    case ($clinit_TokenType() , Tank).ordinal_0():
      if (jsEquals(this.getLand_0(p_token.getPosition()), ($clinit_LandType() , Montain))) {
        return 3;
      }

      return 2;
    case ($clinit_TokenType() , Heap).ordinal_0():
    case ($clinit_TokenType() , Tarask).ordinal_0():
      return 3;
    case ($clinit_TokenType() , Freighter).ordinal_0():
    case ($clinit_TokenType() , Barge).ordinal_0():
    case ($clinit_TokenType() , Crab).ordinal_0():
    case ($clinit_TokenType() , WeatherHen).ordinal_0():
    case ($clinit_TokenType() , Pontoon).ordinal_0():
    case ($clinit_TokenType() , Ore).ordinal_0():
    default:return 0;
  }
}
;
_.getTokenIndexSet = function getTokenIndexSet(){
  if (isNull(this.m_tokenIndexSet)) {
    this.m_tokenIndexSet = new TokenIndexSet(this.getCoordinateSystem(), this.getSetToken());
  }
  return this.m_tokenIndexSet;
}
;
_.getTokenTeamColors = function getTokenTeamColors(p_token){
  var color_0, team, team$iterator, tokenOwnerColor;
  tokenOwnerColor = p_token.getEnuColor();
  if (tokenOwnerColor.getValue_1() != 0) {
    for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      color_0 = new EnuColor_0(team.getColors(this.getPreview()));
      if (color_0.isColored(p_token.getColor_0())) {
        tokenOwnerColor.addColor_0(color_0);
        break;
      }
    }
  }
  return tokenOwnerColor;
}
;
_.getWinnerTeam = function getWinnerTeam(){
  var point, team, team$iterator, winner;
  winner = null;
  point = 0;
  for (team$iterator = this.getTeams().iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    if (team.estimateWinningScore(this) > point) {
      winner = team;
      point = team.estimateWinningScore(this);
    }
  }
  return winner;
}
;
_.haveNewMessage = function haveNewMessage(p_since){
  var index_0, lastEventDate;
  if (isNull(p_since))
    return true;
  index_0 = this.getLogs().size_1() - 1;
  lastEventDate = null;
  while (index_0 > 0 && (isNull(lastEventDate) || lastEventDate.after(p_since))) {
    if (instanceOf(this.getLogs().get_0(index_0), 137)) {
      return true;
    }
    lastEventDate = castTo(this.getLogs().get_0(index_0), 20).getLastUpdate();
    index_0--;
  }
  return false;
}
;
_.heuristic = function heuristic_0(p_fromNode, p_toNode, p_mobile){
  return this.getCoordinateSystem().getDiscreteDistance(castTo(p_fromNode, 23), castTo(p_toNode, 23));
}
;
_.init_8 = function init_8(){
  this.setConfigGameTime(($clinit_ConfigGameTime() , Standard));
}
;
_.invalidateFireCover = function invalidateFireCover_0(){
  this.getBoardFireCover().invalidateFireCover();
}
;
_.isLanded = function isLanded(p_color){
  var it, token;
  for (it = this.getSetToken().iterator_0(); it.hasNext_0();) {
    token = castTo(castTo(it.next_1(), 19), 19);
    if (p_color.isColored(token.getColor_0()) && jsEquals(token.getType(), ($clinit_TokenType() , Freighter)) && jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
      return true;
    }
  }
  return false;
}
;
_.isPontoonLinkToGround = function isPontoonLinkToGround(p_position){
  var checkedPontoon, land, neighborPosition, neighborPosition$iterator, neighborPosition$iterator0, neighborPosition$iterator1, otherPontoon;
  land = this.getLand_0(p_position).getLandValue(this.getCurrentTide());
  if (jsEquals(land, ($clinit_LandType() , Plain)) || jsEquals(land, ($clinit_LandType() , Montain))) {
    return true;
  }
  for (neighborPosition$iterator0 = this.getCoordinateSystem().getAllNeighbors(p_position).iterator_0(); neighborPosition$iterator0.hasNext_0();) {
    neighborPosition = castTo(neighborPosition$iterator0.next_1(), 23);
    land = this.getLand_0(neighborPosition).getLandValue(this.getCurrentTide());
    if (jsEquals(land, ($clinit_LandType() , Plain)) || jsEquals(land, ($clinit_LandType() , Montain))) {
      return true;
    }
  }
  otherPontoon = this.getToken_2(p_position, ($clinit_TokenType() , Pontoon));
  checkedPontoon = new HashSet;
  if (isNotNull(otherPontoon)) {
    checkedPontoon.add_5(otherPontoon);
  }
  for (neighborPosition$iterator1 = this.getCoordinateSystem().getAllNeighbors(p_position).iterator_0(); neighborPosition$iterator1.hasNext_0();) {
    neighborPosition = castTo(neighborPosition$iterator1.next_1(), 23);
    otherPontoon = this.getToken_2(neighborPosition, ($clinit_TokenType() , Pontoon));
    if (isNotNull(otherPontoon)) {
      checkedPontoon.add_5(otherPontoon);
      if (this.isPontoonLinkToGround_1(otherPontoon, checkedPontoon)) {
        return true;
      }
    }
  }
  if (jsEquals(this.getCurrentTide(), ($clinit_Tide() , Hight))) {
    for (neighborPosition$iterator = this.getCoordinateSystem().getAllNeighbors(p_position).iterator_0(); neighborPosition$iterator.hasNext_0();) {
      neighborPosition = castTo(neighborPosition$iterator.next_1(), 23);
      if (isNotNull(this.getToken_2(neighborPosition, ($clinit_TokenType() , Freighter))))
        return true;
    }
  }
  return false;
}
;
_.isPontoonLinkToGround_0 = function isPontoonLinkToGround_0(p_token){
  var checkedPontoon;
  if (jsNotEquals(p_token.getType(), ($clinit_TokenType() , Pontoon))) {
    return false;
  }
  checkedPontoon = new HashSet;
  return this.isPontoonLinkToGround_1(p_token, checkedPontoon);
}
;
_.isPontoonLinkToGround_1 = function isPontoonLinkToGround_1(p_token, p_checkedPontoon){
  var land, neighborPosition, neighborPosition$iterator, neighborPosition$iterator0, neighborPosition$iterator1, otherPontoon;
  land = this.getLand_0(p_token.getPosition()).getLandValue(this.getCurrentTide());
  if (jsEquals(land, ($clinit_LandType() , Plain)) || jsEquals(land, ($clinit_LandType() , Montain))) {
    return true;
  }
  for (neighborPosition$iterator0 = this.getCoordinateSystem().getAllNeighbors(p_token.getPosition()).iterator_0(); neighborPosition$iterator0.hasNext_0();) {
    neighborPosition = castTo(neighborPosition$iterator0.next_1(), 23);
    land = this.getLand_0(neighborPosition).getLandValue(this.getCurrentTide());
    if (jsEquals(land, ($clinit_LandType() , Plain)) || jsEquals(land, ($clinit_LandType() , Montain))) {
      return true;
    }
  }
  otherPontoon = null;
  for (neighborPosition$iterator1 = this.getCoordinateSystem().getAllNeighbors(p_token.getPosition()).iterator_0(); neighborPosition$iterator1.hasNext_0();) {
    neighborPosition = castTo(neighborPosition$iterator1.next_1(), 23);
    otherPontoon = this.getToken_2(neighborPosition, ($clinit_TokenType() , Pontoon));
    if (isNotNull(otherPontoon) && !p_checkedPontoon.contains_0(otherPontoon)) {
      p_checkedPontoon.add_5(otherPontoon);
      if (this.isPontoonLinkToGround_1(otherPontoon, p_checkedPontoon)) {
        return true;
      }
    }
  }
  if (jsEquals(this.getCurrentTide(), ($clinit_Tide() , Hight))) {
    for (neighborPosition$iterator = this.getCoordinateSystem().getAllNeighbors(p_token.getPosition()).iterator_0(); neighborPosition$iterator.hasNext_0();) {
      neighborPosition = castTo(neighborPosition$iterator.next_1(), 23);
      if (isNotNull(this.getToken_2(neighborPosition, ($clinit_TokenType() , Freighter))))
        return true;
    }
  }
  return false;
}
;
_.isRecordingScript = function isRecordingScript(){
  return jsNotEquals(this.getMessage(), null) && startsWith_Ljava_lang_String__Z__devirtual$(this.getMessage(), '#recording');
}
;
_.isTankCheating = function isTankCheating(p_token){
  var nearTank;
  nearTank = this.getTankCheating(p_token);
  return isNotNull(nearTank) && gt(nearTank.getId(), p_token.getId());
}
;
_.isTokenFireActive = function isTokenFireActive(p_token){
  var teamColor;
  teamColor = this.getTokenTeamColors(p_token);
  return jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board)) || jsEquals(p_token.getType(), ($clinit_TokenType() , Freighter)) || jsEquals(p_token.getType(), ($clinit_TokenType() , Turret)) || teamColor.getValue_1() == 0 || this.getOpponentFireCover(teamColor.getValue_1(), p_token.getPosition()).getValue_1() == 0;
}
;
_.isTokenFireCoverDisabled = function isTokenFireCoverDisabled(p_token){
  if (isNull(p_token) || !p_token.getType().isDestroyer()) {
    return false;
  }
  if (p_token.isFireDisabled()) {
    return true;
  }
  if (!this.isTokenTideActive(p_token)) {
    return true;
  }
  if (this.isTankCheating(p_token)) {
    return true;
  }
  return false;
}
;
_.isTokenTideActive = function isTokenTideActive(p_token){
  var extraLandValue, landValue;
  if (isNull(p_token)) {
    return false;
  }
  if (jsEquals(p_token.getLocation(), ($clinit_Location() , Token)) || jsEquals(p_token.getLocation(), ($clinit_Location() , ToBeConstructed))) {
    return this.isTokenTideActive(castTo(p_token.getCarrierToken(), 19));
  }
  if (jsEquals(p_token.getLocation(), ($clinit_Location() , Orbit)) || jsEquals(p_token.getLocation(), ($clinit_Location() , Graveyard))) {
    return true;
  }
  landValue = this.getLand_0(p_token.getPosition()).getLandValue(this.getCurrentTide());
  if (jsEquals(landValue, ($clinit_LandType() , None))) {
    return false;
  }
  switch (p_token.getType().ordinal_0()) {
    case ($clinit_TokenType() , Barge).ordinal_0():
    case ($clinit_TokenType() , Destroyer).ordinal_0():
      extraLandValue = this.getLand_0(castTo(p_token.getExtraPositions(this.getCoordinateSystem()).get_0(0), 73)).getLandValue(this.getCurrentTide());
      if (jsNotEquals(extraLandValue, ($clinit_LandType() , Sea))) {
        if (isNotNull(this.getToken_2(castTo(p_token.getExtraPositions(this.getCoordinateSystem()).get_0(0), 23), ($clinit_TokenType() , Sluice)))) {
          return true;
        }
        return false;
      }

    case ($clinit_TokenType() , Speedboat).ordinal_0():
    case ($clinit_TokenType() , Tarask).ordinal_0():
    case ($clinit_TokenType() , Crayfish).ordinal_0():
      if (jsNotEquals(landValue, ($clinit_LandType() , Sea))) {
        if (isNotNull(this.getToken_2(p_token.getPosition(), ($clinit_TokenType() , Sluice)))) {
          return true;
        }
        return false;
      }

      return true;
    case ($clinit_TokenType() , Heap).ordinal_0():
    case ($clinit_TokenType() , Tank).ordinal_0():
    case ($clinit_TokenType() , Crab).ordinal_0():
    case ($clinit_TokenType() , WeatherHen).ordinal_0():
    case ($clinit_TokenType() , Ore0).ordinal_0():
    case ($clinit_TokenType() , Ore).ordinal_0():
    case ($clinit_TokenType() , Ore3).ordinal_0():
    case ($clinit_TokenType() , Ore5).ordinal_0():
      if (jsEquals(landValue, ($clinit_LandType() , Sea))) {
        if (isNotNull(this.getToken_2(p_token.getPosition(), ($clinit_TokenType() , Pontoon)))) {
          return true;
        }
        return false;
      }

      return true;
    case ($clinit_TokenType() , Turret).ordinal_0():
    case ($clinit_TokenType() , Freighter).ordinal_0():
    case ($clinit_TokenType() , Pontoon).ordinal_0():
    case ($clinit_TokenType() , Sluice).ordinal_0():
    case ($clinit_TokenType() , Hovertank).ordinal_0():
    case ($clinit_TokenType() , Ore2Generator).ordinal_0():
    case ($clinit_TokenType() , Ore3Generator).ordinal_0():
    case ($clinit_TokenType() , Teleporter).ordinal_0():
    case ($clinit_TokenType() , Warp).ordinal_0():
    default:return true;
  }
}
;
_.moveToken = function moveToken(p_token, p_location){
  this.getBoardFireCover().decFireCover_1(p_token);
  if (isNotNull(p_token.getCarrierToken())) {
    p_token.getCarrierToken().unloadToken(p_token);
  }
  this.getTokenIndexSet().setPosition_0(p_token, p_location);
  this.getBoardFireCover().incFireCover_1(p_token);
  this.updateLastTokenUpdate(null);
}
;
_.moveToken_0 = function moveToken_0(p_token, p_position){
  this.getBoardFireCover().decFireCover_1(p_token);
  if (isNotNull(p_token.getCarrierToken())) {
    p_token.getCarrierToken().unloadToken(p_token);
  }
  this.getTokenIndexSet().setPosition_1(p_token, new AnBoardPosition_2(p_position));
  this.getBoardFireCover().incFireCover_1(p_token);
  this.updateLastTokenUpdate(null);
}
;
_.moveToken_1 = function moveToken_1(p_tokenToMove, p_tokenCarrier){
  this.getBoardFireCover().decFireCover_1(p_tokenToMove);
  this.m_tokenIndexSet.setPosition_0(p_tokenToMove, ($clinit_Location() , Token));
  if (isNotNull(p_tokenToMove.getCarrierToken())) {
    p_tokenToMove.getCarrierToken().unloadToken(p_tokenToMove);
  }
  p_tokenCarrier.loadToken(p_tokenToMove);
  if (p_tokenToMove.canBeColored() && p_tokenCarrier.getColor_0() != 0) {
    p_tokenToMove.setColor(p_tokenCarrier.getColor_0());
  }
  this.getBoardFireCover().incFireCover_1(p_tokenToMove);
  this.updateLastTokenUpdate(null);
}
;
_.resetPathGraph = function resetPathGraph(){
  this.m_allowedNodeGraphCache.clear_0();
  this.m_forbidenNodeGraphCache.clear_0();
}
;
_.setGameEventStack = function setGameEventStack(p_stack){
  this.m_eventStack = p_stack;
}
;
_.updateLastTokenUpdate = function updateLastTokenUpdate(p_lastUpdate){
  if (isNull(p_lastUpdate)) {
    this.m_lastTokenUpdate = new Date_1(currentTimeMillis_0());
  }
   else if (p_lastUpdate.after(this.m_lastTokenUpdate)) {
    this.m_lastTokenUpdate = p_lastUpdate;
  }
}
;
var serialVersionUID_1 = 0;
var Lcom_fullmetalgalaxy_model_persist_Game_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'Game', 274, Lcom_fullmetalgalaxy_model_persist_GameData_2_classLit);
function $clinit_GameData_FieldSerializer(){
  $clinit_GameData_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_39(streamReader, instance){
  $clinit_GameData_FieldSerializer();
  setM_data(instance, castTo(streamReader.readObject(), 281));
  setM_preview(instance, castTo(streamReader.readObject(), 280));
}

function getM_data(instance){
  return instance.m_data;
}

function getM_preview(instance){
  return instance.m_preview;
}

function serialize_34(streamWriter, instance){
  $clinit_GameData_FieldSerializer();
  streamWriter.writeObject(getM_data(instance));
  streamWriter.writeObject(getM_preview(instance));
}

function setM_data(instance, value_0){
  instance.m_data = value_0;
}

function setM_preview(instance, value_0){
  instance.m_preview = value_0;
}

function $clinit_GameStatistics(){
  $clinit_GameStatistics = emptyMethod;
  $clinit_Object();
}

function GameStatistics(){
  $clinit_GameStatistics();
  Object_0.call(this);
  this.$init_309();
}

defineClass(346, 1, {346:1, 4:1, 1:1}, GameStatistics);
_.$init_309 = function $init_309(){
}
;
var Lcom_fullmetalgalaxy_model_persist_GameStatistics_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'GameStatistics', 346, Ljava_lang_Object_2_classLit);
function $clinit_GameStatistics_FieldSerializer(){
  $clinit_GameStatistics_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_40(streamReader, instance){
  $clinit_GameStatistics_FieldSerializer();
}

function instantiate_35(streamReader){
  $clinit_GameStatistics_FieldSerializer();
  return new GameStatistics;
}

function serialize_35(streamWriter, instance){
  $clinit_GameStatistics_FieldSerializer();
}

function $clinit_Game_FieldSerializer(){
  $clinit_Game_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_41(streamReader, instance){
  $clinit_Game_FieldSerializer();
  setM_allowedNodeGraphCache(instance, castTo(streamReader.readObject(), 53));
  setM_forbidenNodeGraphCache(instance, castTo(streamReader.readObject(), 53));
  setM_lastTokenUpdate(instance, castTo(streamReader.readObject(), 30));
  deserialize_39(streamReader, instance);
}

function getM_allowedNodeGraphCache(instance){
  return instance.m_allowedNodeGraphCache;
}

function getM_forbidenNodeGraphCache(instance){
  return instance.m_forbidenNodeGraphCache;
}

function getM_lastTokenUpdate(instance){
  return instance.m_lastTokenUpdate;
}

function instantiate_36(streamReader){
  $clinit_Game_FieldSerializer();
  return new Game;
}

function serialize_36(streamWriter, instance){
  $clinit_Game_FieldSerializer();
  streamWriter.writeObject(getM_allowedNodeGraphCache(instance));
  streamWriter.writeObject(getM_forbidenNodeGraphCache(instance));
  streamWriter.writeObject(getM_lastTokenUpdate(instance));
  serialize_34(streamWriter, instance);
}

function setM_allowedNodeGraphCache(instance, value_0){
  instance.m_allowedNodeGraphCache = value_0;
}

function setM_forbidenNodeGraphCache(instance, value_0){
  instance.m_forbidenNodeGraphCache = value_0;
}

function setM_lastTokenUpdate(instance, value_0){
  instance.m_lastTokenUpdate = value_0;
}

function $clinit_PlayerGameStatistics(){
  $clinit_PlayerGameStatistics = emptyMethod;
  $clinit_EbBase();
}

function PlayerGameStatistics(){
  $clinit_PlayerGameStatistics();
  EbBase.call(this);
  this.$init_310();
}

defineClass(817, 21, {21:1, 4:1, 1:1}, PlayerGameStatistics);
_.$init_310 = function $init_310(){
  this.m_keyGamePreview = null;
  this.m_gameName = '';
  this.m_gameBeginDate = null;
  this.m_gameEndDate = null;
  this.m_gameTeamCount = 0;
  this.m_gamePlayerCount = 0;
  this.m_investment = 0;
  this.m_gameType = ($clinit_GameType() , Initiation);
  this.m_gameStatus = ($clinit_GameStatus() , History_0);
  this.m_gameConfigTime = ($clinit_ConfigGameTime() , Standard);
  this.m_opponentPlayers = new HashSet;
  this.m_partnerPlayers = new HashSet;
  this.m_myTeamSize = 0;
  this.m_account = null;
  this.m_rank = 0;
  this.m_score = 0;
  this.m_oreLoad = 0;
  this.m_construction = 0;
  this.m_destruction = 0;
  this.m_freighterCapture = 0;
  this.m_unitsCapture = 0;
  this.m_company = ($clinit_Company() , Freelancer);
  this.m_averageReactivityInSec = 0;
  this.m_playerTurnCount = 0;
  this.m_replacement = null;
  this.m_wasBanned = false;
  this.m_tsMeanUpdate = 0;
  this.m_tsSDUpdate = 0;
  this.m_currentColor = new EnuColor;
  this.m_lastOponentTurnDate = null;
}
;
_.m_averageReactivityInSec = 0;
_.m_construction = 0;
_.m_destruction = 0;
_.m_freighterCapture = 0;
_.m_gamePlayerCount = 0;
_.m_gameTeamCount = 0;
_.m_investment = 0;
_.m_myTeamSize = 0;
_.m_oreLoad = 0;
_.m_playerTurnCount = 0;
_.m_rank = 0;
_.m_score = 0;
_.m_tsMeanUpdate = 0;
_.m_tsSDUpdate = 0;
_.m_unitsCapture = 0;
_.m_wasBanned = false;
var Lcom_fullmetalgalaxy_model_persist_PlayerGameStatistics_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'PlayerGameStatistics', 817, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_PlayerGameStatistics_FieldSerializer(){
  $clinit_PlayerGameStatistics_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_42(streamReader, instance){
  $clinit_PlayerGameStatistics_FieldSerializer();
  setM_account_0(instance, castTo(streamReader.readObject(), 131));
  setM_averageReactivityInSec(instance, streamReader.readLong());
  setM_company_1(instance, castTo(streamReader.readObject(), 120));
  setM_construction(instance, streamReader.readInt());
  setM_destruction(instance, streamReader.readInt());
  setM_freighterCapture(instance, streamReader.readInt());
  setM_gameBeginDate(instance, castTo(streamReader.readObject(), 30));
  setM_gameConfigTime(instance, castTo(streamReader.readObject(), 164));
  setM_gameEndDate(instance, castTo(streamReader.readObject(), 30));
  setM_gameName(instance, streamReader.readString());
  setM_gamePlayerCount(instance, streamReader.readInt());
  setM_gameStatus(instance, castTo(streamReader.readObject(), 126));
  setM_gameTeamCount(instance, streamReader.readInt());
  setM_gameType_0(instance, castTo(streamReader.readObject(), 162));
  setM_investment(instance, streamReader.readInt());
  instance.m_keyGamePreview = castTo(streamReader.readObject(), 181);
  setM_myTeamSize(instance, streamReader.readInt());
  setM_opponentPlayers(instance, castTo(streamReader.readObject(), 53));
  setM_oreLoad(instance, streamReader.readInt());
  setM_partnerPlayers(instance, castTo(streamReader.readObject(), 53));
  setM_playerTurnCount(instance, streamReader.readInt());
  setM_rank(instance, streamReader.readInt());
  setM_replacement(instance, castTo(streamReader.readObject(), 131));
  setM_score_0(instance, streamReader.readInt());
  setM_tsMeanUpdate(instance, streamReader.readDouble());
  setM_tsSDUpdate(instance, streamReader.readDouble());
  setM_unitsCapture(instance, streamReader.readInt());
  setM_wasBanned(instance, streamReader.readBoolean());
  deserialize_24(streamReader, instance);
}

function getM_account_0(instance){
  return instance.m_account;
}

function getM_averageReactivityInSec(instance){
  return instance.m_averageReactivityInSec;
}

function getM_company_1(instance){
  return instance.m_company;
}

function getM_construction(instance){
  return instance.m_construction;
}

function getM_destruction(instance){
  return instance.m_destruction;
}

function getM_freighterCapture(instance){
  return instance.m_freighterCapture;
}

function getM_gameBeginDate(instance){
  return instance.m_gameBeginDate;
}

function getM_gameConfigTime(instance){
  return instance.m_gameConfigTime;
}

function getM_gameEndDate(instance){
  return instance.m_gameEndDate;
}

function getM_gameName(instance){
  return instance.m_gameName;
}

function getM_gamePlayerCount(instance){
  return instance.m_gamePlayerCount;
}

function getM_gameStatus(instance){
  return instance.m_gameStatus;
}

function getM_gameTeamCount(instance){
  return instance.m_gameTeamCount;
}

function getM_gameType_0(instance){
  return instance.m_gameType;
}

function getM_investment(instance){
  return instance.m_investment;
}

function getM_myTeamSize(instance){
  return instance.m_myTeamSize;
}

function getM_opponentPlayers(instance){
  return instance.m_opponentPlayers;
}

function getM_oreLoad(instance){
  return instance.m_oreLoad;
}

function getM_partnerPlayers(instance){
  return instance.m_partnerPlayers;
}

function getM_playerTurnCount(instance){
  return instance.m_playerTurnCount;
}

function getM_rank(instance){
  return instance.m_rank;
}

function getM_replacement(instance){
  return instance.m_replacement;
}

function getM_score_0(instance){
  return instance.m_score;
}

function getM_tsMeanUpdate(instance){
  return instance.m_tsMeanUpdate;
}

function getM_tsSDUpdate(instance){
  return instance.m_tsSDUpdate;
}

function getM_unitsCapture(instance){
  return instance.m_unitsCapture;
}

function getM_wasBanned(instance){
  return instance.m_wasBanned;
}

function instantiate_37(streamReader){
  $clinit_PlayerGameStatistics_FieldSerializer();
  return new PlayerGameStatistics;
}

function serialize_37(streamWriter, instance){
  $clinit_PlayerGameStatistics_FieldSerializer();
  streamWriter.writeObject(getM_account_0(instance));
  streamWriter.writeLong(getM_averageReactivityInSec(instance));
  streamWriter.writeObject(getM_company_1(instance));
  streamWriter.writeInt(getM_construction(instance));
  streamWriter.writeInt(getM_destruction(instance));
  streamWriter.writeInt(getM_freighterCapture(instance));
  streamWriter.writeObject(getM_gameBeginDate(instance));
  streamWriter.writeObject(getM_gameConfigTime(instance));
  streamWriter.writeObject(getM_gameEndDate(instance));
  streamWriter.writeString(getM_gameName(instance));
  streamWriter.writeInt(getM_gamePlayerCount(instance));
  streamWriter.writeObject(getM_gameStatus(instance));
  streamWriter.writeInt(getM_gameTeamCount(instance));
  streamWriter.writeObject(getM_gameType_0(instance));
  streamWriter.writeInt(getM_investment(instance));
  streamWriter.writeObject(instance.m_keyGamePreview);
  streamWriter.writeInt(getM_myTeamSize(instance));
  streamWriter.writeObject(getM_opponentPlayers(instance));
  streamWriter.writeInt(getM_oreLoad(instance));
  streamWriter.writeObject(getM_partnerPlayers(instance));
  streamWriter.writeInt(getM_playerTurnCount(instance));
  streamWriter.writeInt(getM_rank(instance));
  streamWriter.writeObject(getM_replacement(instance));
  streamWriter.writeInt(getM_score_0(instance));
  streamWriter.writeDouble(getM_tsMeanUpdate(instance));
  streamWriter.writeDouble(getM_tsSDUpdate(instance));
  streamWriter.writeInt(getM_unitsCapture(instance));
  streamWriter.writeBoolean(getM_wasBanned(instance));
  serialize_19(streamWriter, instance);
}

function setM_account_0(instance, value_0){
  instance.m_account = value_0;
}

function setM_averageReactivityInSec(instance, value_0){
  instance.m_averageReactivityInSec = value_0;
}

function setM_company_1(instance, value_0){
  instance.m_company = value_0;
}

function setM_construction(instance, value_0){
  instance.m_construction = value_0;
}

function setM_destruction(instance, value_0){
  instance.m_destruction = value_0;
}

function setM_freighterCapture(instance, value_0){
  instance.m_freighterCapture = value_0;
}

function setM_gameBeginDate(instance, value_0){
  instance.m_gameBeginDate = value_0;
}

function setM_gameConfigTime(instance, value_0){
  instance.m_gameConfigTime = value_0;
}

function setM_gameEndDate(instance, value_0){
  instance.m_gameEndDate = value_0;
}

function setM_gameName(instance, value_0){
  instance.m_gameName = value_0;
}

function setM_gamePlayerCount(instance, value_0){
  instance.m_gamePlayerCount = value_0;
}

function setM_gameStatus(instance, value_0){
  instance.m_gameStatus = value_0;
}

function setM_gameTeamCount(instance, value_0){
  instance.m_gameTeamCount = value_0;
}

function setM_gameType_0(instance, value_0){
  instance.m_gameType = value_0;
}

function setM_investment(instance, value_0){
  instance.m_investment = value_0;
}

function setM_myTeamSize(instance, value_0){
  instance.m_myTeamSize = value_0;
}

function setM_opponentPlayers(instance, value_0){
  instance.m_opponentPlayers = value_0;
}

function setM_oreLoad(instance, value_0){
  instance.m_oreLoad = value_0;
}

function setM_partnerPlayers(instance, value_0){
  instance.m_partnerPlayers = value_0;
}

function setM_playerTurnCount(instance, value_0){
  instance.m_playerTurnCount = value_0;
}

function setM_rank(instance, value_0){
  instance.m_rank = value_0;
}

function setM_replacement(instance, value_0){
  instance.m_replacement = value_0;
}

function setM_score_0(instance, value_0){
  instance.m_score = value_0;
}

function setM_tsMeanUpdate(instance, value_0){
  instance.m_tsMeanUpdate = value_0;
}

function setM_tsSDUpdate(instance, value_0){
  instance.m_tsSDUpdate = value_0;
}

function setM_unitsCapture(instance, value_0){
  instance.m_unitsCapture = value_0;
}

function setM_wasBanned(instance, value_0){
  instance.m_wasBanned = value_0;
}

function $clinit_TokenIndexSet(){
  $clinit_TokenIndexSet = emptyMethod;
  $clinit_Object();
}

function TokenIndexSet(p_coordinateSystem, p_set){
  $clinit_TokenIndexSet();
  Object_0.call(this);
  this.$init_311();
  if (!isNotNull(p_coordinateSystem)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_set)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.m_coordinateSystem = p_coordinateSystem;
  this.m_tokenSet = p_set;
  this.rebuildIndex();
}

defineClass(794, 1, {1:1}, TokenIndexSet);
_.$init_311 = function $init_311(){
  this.m_tokenSet = null;
  this.m_positionIndex = null;
  this.m_idIndex = null;
  this.m_coordinateSystem = null;
}
;
_.addToken_1 = function addToken_2(p_token){
  var position, position$iterator;
  if (!isNotNull(this.m_positionIndex)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(this.m_idIndex)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.m_idIndex.put(valueOf_40(p_token.getId()), p_token);
  if (jsNotEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    return;
  }
  this.addTokenPosition(p_token, p_token.getPosition());
  for (position$iterator = p_token.getExtraPositions(this.m_coordinateSystem).iterator_0(); position$iterator.hasNext_0();) {
    position = castTo(position$iterator.next_1(), 23);
    this.addTokenPosition(p_token, position);
  }
}
;
_.addTokenPosition = function addTokenPosition(p_token, p_position){
  if (jsEquals(this.m_positionIndex.get_1(p_position), null)) {
    this.m_positionIndex.put(p_position, new HashSet);
  }
  castTo(this.m_positionIndex.get_1(p_position), 53).add_5(p_token);
}
;
_.getAllToken = function getAllToken_0(p_position){
  if (!isNotNull(this.m_positionIndex)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return castTo(this.m_positionIndex.get_1(p_position), 53);
}
;
_.getToken_0 = function getToken_3(p_id){
  if (!isNotNull(this.m_idIndex)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return castTo(this.m_idIndex.get_1(valueOf_40(p_id)), 19);
}
;
_.rebuildIndex = function rebuildIndex(){
  var token, token$iterator;
  if (!isNotNull(this.m_tokenSet)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.m_positionIndex = new HashMap;
  this.m_idIndex = new HashMap;
  for (token$iterator = this.m_tokenSet.iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    this.addToken_1(token);
  }
}
;
_.setPosition_0 = function setPosition_0(p_token, p_location){
  var index_0, position, position$iterator;
  if (jsEquals(p_location, ($clinit_Location() , Board))) {
    this.setPosition_1(p_token, p_token.getPosition());
  }
   else if (isNotNull(this.m_positionIndex) && jsEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    index_0 = castTo(this.m_positionIndex.get_1(p_token.getPosition()), 53);
    if (isNotNull(index_0)) {
      index_0.remove_1(p_token);
    }
     else {
      logError('token ' + p_token + " isn't referenced by position index");
    }
    for (position$iterator = p_token.getExtraPositions(this.m_coordinateSystem).iterator_0(); position$iterator.hasNext_0();) {
      position = castTo(position$iterator.next_1(), 23);
      index_0 = castTo(this.m_positionIndex.get_1(position), 53);
      if (isNotNull(index_0)) {
        index_0.remove_1(p_token);
      }
       else {
        logError('token ' + p_token + " isn't referenced by position index");
      }
    }
  }
  p_token.setLocation(p_location);
}
;
_.setPosition_1 = function setPosition_1(p_token, p_position){
  var position, position$iterator;
  if (isNotNull(this.m_positionIndex) && jsEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    castTo(this.m_positionIndex.get_1(p_token.getPosition()), 53).remove_1(p_token);
    for (position$iterator = p_token.getExtraPositions(this.m_coordinateSystem).iterator_0(); position$iterator.hasNext_0();) {
      position = castTo(position$iterator.next_1(), 23);
      castTo(this.m_positionIndex.get_1(position), 53).remove_1(p_token);
    }
  }
  p_token.setPosition(p_position);
  p_token.setLocation(($clinit_Location() , Board));
  if (isNotNull(this.m_positionIndex)) {
    this.addTokenPosition(p_token, p_token.getPosition());
    for (position$iterator = p_token.getExtraPositions(this.m_coordinateSystem).iterator_0(); position$iterator.hasNext_0();) {
      position = castTo(position$iterator.next_1(), 23);
      this.addTokenPosition(p_token, position);
    }
  }
}
;
var Lcom_fullmetalgalaxy_model_persist_TokenIndexSet_2_classLit = createForClass('com.fullmetalgalaxy.model.persist', 'TokenIndexSet', 794, Ljava_lang_Object_2_classLit);
function $clinit_GameEvent(){
  $clinit_GameEvent = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_persist_gamelog_GameEvent_2_classLit = createForInterface('com.fullmetalgalaxy.model.persist.gamelog', 'GameEvent');
function $clinit_AnEvent(){
  $clinit_AnEvent = emptyMethod;
  $clinit_EbBase();
}

function AnEvent(){
  $clinit_AnEvent();
  EbBase.call(this);
  this.$init_312();
  this.init_9();
}

defineClass(20, 21, {21:1, 20:1, 64:1, 4:1, 1:1}, AnEvent);
_.$init_312 = function $init_312(){
  this.m_lastUpdate = null;
  this.m_gameVersion = 0;
  this.m_idGame = 0;
  this.m_fdRemoved = new ArrayList;
  this.m_fdAdded = new ArrayList;
  this.m_isFdComputed = false;
  this.m_auto = false;
  this.m_isPersistent = false;
  this.m_transientComment = null;
}
;
_.addFdAdded = function addFdAdded(p_fdAdded){
  if (isNull(p_fdAdded) || p_fdAdded.isEmpty()) {
    return;
  }
  if (isNull(this.m_fdAdded)) {
    this.setFdAdded(new ArrayList);
  }
  this.m_fdAdded.addAll(p_fdAdded);
}
;
_.addFdRemoved = function addFdRemoved(p_fdRemoved){
  if (isNull(p_fdRemoved) || p_fdRemoved.isEmpty()) {
    return;
  }
  if (isNull(this.m_fdRemoved)) {
    this.setFdRemoved(new ArrayList);
  }
  this.m_fdRemoved.addAll(p_fdRemoved);
}
;
_.canBeParallelHidden = function canBeParallelHidden(){
  return false;
}
;
_.check_0 = function check_0(p_game){
  if (isNull(p_game)) {
    throw toJs(new RpcFmpException_1('game [' + toString_45(this.getIdGame()) + '] was null', this));
  }
  if (neq(this.getIdGame(), p_game.getId())) {
    throw toJs(new RpcFmpException_1('try to apply event from game [' + toString_45(this.getIdGame()) + '] on game [' + toString_45(p_game.getId()) + ']', this));
  }
}
;
_.exec_0 = function exec_0(p_game){
}
;
_.execFireDisabling = function execFireDisabling(p_game){
  var fdAdded, fdRemoved;
  if (this.isFdComputed()) {
    p_game.getBoardFireCover().addFireDisabling_0(this.getFdAdded());
    p_game.getBoardFireCover().removeFireDisabling_0(this.getFdRemoved());
  }
   else {
    fdRemoved = new ArrayList;
    fdAdded = new ArrayList;
    p_game.getBoardFireCover().reComputeFireCover_0(fdRemoved, fdAdded);
    this.addFdRemoved(fdRemoved);
    this.addFdAdded(fdAdded);
    this.setFdComputed(true);
  }
}
;
_.execFireDisabling_0 = function execFireDisabling_0(p_game, p_position){
  var fdAdded, fdRemoved, fireRange;
  if (this.isFdComputed()) {
    p_game.getBoardFireCover().addFireDisabling_0(this.getFdAdded());
    p_game.getBoardFireCover().removeFireDisabling_0(this.getFdRemoved());
  }
   else {
    fireRange = 3;
    fdRemoved = new ArrayList;
    fdAdded = new ArrayList;
    p_game.getBoardFireCover().checkFireDisableFlag(p_position, fireRange, ($clinit_BoardFireCover$FdChange() , ALL), fdRemoved, fdAdded);
    p_game.getBoardFireCover().cleanFireDisableCollection(fdRemoved, fdAdded);
    this.addFdRemoved(fdRemoved);
    this.addFdAdded(fdAdded);
    this.setFdComputed(true);
  }
}
;
_.getFdAdded = function getFdAdded(){
  return this.m_fdAdded;
}
;
_.getFdRemoved = function getFdRemoved(){
  return this.m_fdRemoved;
}
;
_.getIdGame = function getIdGame(){
  return this.m_idGame;
}
;
_.getLastUpdate = function getLastUpdate(){
  return this.m_lastUpdate;
}
;
_.getType_0 = function getType_0(){
  return $clinit_GameLogType() , None_2;
}
;
_.init_9 = function init_9(){
  this.setLastUpdate(new Date_0);
  this.m_idGame = 0;
  this.m_fdRemoved = null;
  this.m_fdAdded = null;
  this.m_isFdComputed = false;
}
;
_.isAuto = function isAuto(){
  return this.m_auto;
}
;
_.isFdComputed = function isFdComputed(){
  return this.m_isFdComputed;
}
;
_.isTrancient = function isTrancient_1(){
  if (this.m_isPersistent) {
    return false;
  }
  return getClassPrototype(21).isTrancient.call(this);
}
;
_.setAuto = function setAuto(p_auto){
  this.m_auto = p_auto;
}
;
_.setFdAdded = function setFdAdded(p_fdAdded){
  this.m_fdAdded = p_fdAdded;
}
;
_.setFdComputed = function setFdComputed(p_isFdComputed){
  this.m_isFdComputed = p_isFdComputed;
}
;
_.setFdRemoved = function setFdRemoved(p_fdRemoved){
  this.m_fdRemoved = p_fdRemoved;
}
;
_.setGame = function setGame_1(p_game){
  this.m_idGame = p_game.getId();
  this.m_gameVersion = p_game.getVersion();
}
;
_.setLastUpdate = function setLastUpdate(p_lastUpdate){
  this.m_lastUpdate = p_lastUpdate;
}
;
_.toString_0 = function toString_28(){
  var str;
  str = '' + this.getType_0();
  return str;
}
;
_.unexec = function unexec(p_game){
}
;
_.unexecFireDisabling = function unexecFireDisabling(p_game){
  if (!this.isFdComputed()) {
    debugger;
    throw toJs(makeAssertionError());
  }
  p_game.getBoardFireCover().addFireDisabling_0(this.getFdRemoved());
  p_game.getBoardFireCover().removeFireDisabling_0(this.getFdAdded());
}
;
_.m_auto = false;
_.m_gameVersion = 0;
_.m_idGame = 0;
_.m_isFdComputed = false;
_.m_isPersistent = false;
var Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'AnEvent', 20, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_AnEventList(){
  $clinit_AnEventList = emptyMethod;
  $clinit_ArrayList();
}

function AnEventList(){
  $clinit_AnEventList();
  ArrayList.call(this);
  this.$init_313();
}

defineClass(818, 12, {64:1, 4:1, 1:1, 12:1, 47:1, 38:1, 158:1}, AnEventList);
_.$init_313 = function $init_313(){
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventList_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'AnEventList', 818, Ljava_util_ArrayList_2_classLit);
function $clinit_AnEventList_FieldSerializer(){
  $clinit_AnEventList_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_43(streamReader, instance){
  $clinit_AnEventList_FieldSerializer();
  deserialize_132(streamReader, instance);
}

function instantiate_38(streamReader){
  $clinit_AnEventList_FieldSerializer();
  return new AnEventList;
}

function serialize_38(streamWriter, instance){
  $clinit_AnEventList_FieldSerializer();
  serialize_127(streamWriter, instance);
}

function $clinit_AnEventUser(){
  $clinit_AnEventUser = emptyMethod;
  $clinit_AnEvent();
}

function AnEventUser(){
  $clinit_AnEventUser();
  AnEvent.call(this);
  this.$init_314();
  this.init_10();
}

defineClass(33, 20, {21:1, 20:1, 33:1, 64:1, 4:1, 1:1}, AnEventUser);
_.$init_314 = function $init_314(){
  this.m_accountId = 0;
}
;
_.check_0 = function check_1(p_game){
  getClassPrototype(20).check_0.call(this, p_game);
  if (eq(this.getAccountId(), 0) && !this.isAuto() && (jsEquals(p_game.getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(p_game.getGameType(), ($clinit_GameType() , Initiation)))) {
    throw toJs(new RpcFmpException_1(this.errMsg().MustBeLogged(), this));
  }
}
;
_.errMsg = function errMsg(){
  return getMessagesError(this.getAccountId());
}
;
_.getAccountId = function getAccountId_0(){
  return this.m_accountId;
}
;
_.getMyRegistration_0 = function getMyRegistration_0(p_game){
  if (jsEquals(p_game.getGameType(), ($clinit_GameType() , MultiPlayer)) || jsEquals(p_game.getGameType(), ($clinit_GameType() , Initiation))) {
    return p_game.getRegistrationByIdAccount(this.getAccountId());
  }
   else if (jsEquals(p_game.getGameType(), ($clinit_GameType() , Puzzle_0)) && !p_game.getCurrentPlayerIds().isEmpty()) {
    return p_game.getRegistration_0(castTo(p_game.getCurrentPlayerIds().get_0(0), 66).longValue());
  }
  return null;
}
;
_.init_10 = function init_10(){
  this.m_accountId = 0;
}
;
_.setAccountId = function setAccountId(p_id){
  this.m_accountId = p_id;
}
;
_.toString_0 = function toString_29(){
  var str;
  str = getClassPrototype(20).toString_0.call(this);
  str += '[' + toString_45(this.getAccountId()) + ']';
  return str;
}
;
_.m_accountId = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'AnEventUser', 33, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit);
function $clinit_AnEventPlay(){
  $clinit_AnEventPlay = emptyMethod;
  $clinit_AnEventUser();
}

function AnEventPlay(){
  $clinit_AnEventPlay();
  AnEventUser.call(this);
  this.$init_315();
  this.init_11();
}

defineClass(17, 33, {21:1, 20:1, 17:1, 33:1, 64:1, 4:1, 1:1}, AnEventPlay);
_.$init_315 = function $init_315(){
  this.m_registrationId = 0;
  this.m_cost = 0;
  this.m_position = null;
  this.m_newPosition = null;
  this.m_oldPosition = null;
  this.m_packedToken = null;
  this.m_packedTokenCarrier = null;
  this.m_packedNewTokenCarrier = null;
  this.m_packedTokenDestroyer1 = null;
  this.m_packedTokenDestroyer2 = null;
  this.m_token = null;
  this.m_tokenCarrier = null;
  this.m_newTokenCarrier = null;
  this.m_tokenDestroyer1 = null;
  this.m_tokenDestroyer2 = null;
}
;
_.canBeParallelHidden = function canBeParallelHidden_0(){
  return true;
}
;
_.check_0 = function check_2(p_game){
  var myRegistration, team;
  getClassPrototype(33).check_0.call(this, p_game);
  if (this.isAuto()) {
    return;
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (isNull(myRegistration)) {
    throw toJs(new RpcFmpException_1("you didn't join this game.", this));
  }
  if (myRegistration.getPtAction() < this.getCost() && jsNotEquals(p_game.getGameType(), ($clinit_GameType() , Practice_0))) {
    throw toJs(new RpcFmpException_1(this.errMsg().NotEnouthActionPt(), this));
  }
  if ((!p_game.isParallel() || p_game.getCurrentTimeStep() <= 1) && !p_game.getCurrentPlayerIds().contains_0(valueOf_40(myRegistration.getId())) && jsNotEquals(p_game.getGameType(), ($clinit_GameType() , Practice_0))) {
    throw toJs(new RpcFmpException_1(this.errMsg().NotYourTurn(), this));
  }
  if ((jsEquals(p_game.getStatus(), ($clinit_GameStatus() , Open)) || jsEquals(p_game.getStatus(), ($clinit_GameStatus() , Pause))) && jsNotEquals(p_game.getGameType(), ($clinit_GameType() , Practice_0))) {
    throw toJs(new RpcFmpException_1(this.errMsg().gameNotStarted(), this));
  }
  if (p_game.isParallel() && p_game.getCurrentTimeStep() > p_game.getEbConfigGameTime().getDeploymentTimeStep()) {
    team = p_game.getOtherTeamBoardLocked(myRegistration, this.getLockedPosition_0(), currentTimeMillis_0());
    if (isNotNull(team)) {
      throw toJs(new RpcFmpException_1(this.errMsg().boardLocked(), this));
    }
  }
}
;
_.exec_0 = function exec_1(p_game){
  var registration;
  getClassPrototype(20).exec_0.call(this, p_game);
  registration = this.getMyRegistration_0(p_game);
  if (isNotNull(registration)) {
    registration.setPtAction(registration.getPtAction() - this.getCost());
    if (p_game.isParallel()) {
      registration.getTeam_1(p_game).setLockedPosition(this.getLockedPosition_0());
      registration.getTeam_1(p_game).setEndTurnDate(new Date_1(add_19(currentTimeMillis_0(), fromInt_0(p_game.getEbConfigGameTime().getLockGameInMillis()))));
    }
  }
}
;
_.getCost = function getCost(){
  return this.m_cost;
}
;
_.getLockedPosition_0 = function getLockedPosition_0(){
  var position;
  position = this.getPosition();
  if (isNull(position)) {
    position = this.getNewPosition();
  }
  if (isNull(position)) {
    position = this.getOldPosition();
  }
  return position;
}
;
_.getMyRegistration_0 = function getMyRegistration_1(p_game){
  var registration;
  registration = p_game.getRegistration_0(this.getRegistrationId());
  if (isNotNull(registration)) {
    return registration;
  }
  return getClassPrototype(33).getMyRegistration_0.call(this, p_game);
}
;
_.getMyTeam = function getMyTeam(p_game){
  return this.getMyRegistration_0(p_game).getTeam_1(p_game);
}
;
_.getNewPosition = function getNewPosition_3(){
  return this.m_newPosition;
}
;
_.getNewTokenCarrier = function getNewTokenCarrier(p_game){
  if (isNull(this.m_newTokenCarrier) && isNotNull(this.getPackedNewTokenCarrier())) {
    this.m_newTokenCarrier = p_game.getToken_0(this.getPackedNewTokenCarrier().getId());
  }
  return this.m_newTokenCarrier;
}
;
_.getOldPosition = function getOldPosition_3(){
  return this.m_oldPosition;
}
;
_.getPackedNewTokenCarrier = function getPackedNewTokenCarrier(){
  return this.m_packedNewTokenCarrier;
}
;
_.getPackedToken = function getPackedToken(){
  return this.m_packedToken;
}
;
_.getPackedTokenCarrier = function getPackedTokenCarrier(){
  return this.m_packedTokenCarrier;
}
;
_.getPackedTokenDestroyer1 = function getPackedTokenDestroyer1(){
  return this.m_packedTokenDestroyer1;
}
;
_.getPackedTokenDestroyer2 = function getPackedTokenDestroyer2(){
  return this.m_packedTokenDestroyer2;
}
;
_.getPosition = function getPosition_0(){
  return this.m_position;
}
;
_.getRegistrationId = function getRegistrationId(){
  return this.m_registrationId;
}
;
_.getSelectedPosition = function getSelectedPosition(p_game){
  return null;
}
;
_.getToken_3 = function getToken_4(p_game){
  if (isNull(this.m_token) && isNotNull(this.getPackedToken())) {
    this.m_token = p_game.getToken_0(this.getPackedToken().getId());
  }
  return this.m_token;
}
;
_.getTokenCarrier = function getTokenCarrier(p_game){
  if (isNull(this.m_tokenCarrier) && isNotNull(this.getPackedTokenCarrier())) {
    this.m_tokenCarrier = p_game.getToken_0(this.getPackedTokenCarrier().getId());
  }
  return this.m_tokenCarrier;
}
;
_.getTokenDestroyer1 = function getTokenDestroyer1(p_game){
  if (isNull(this.m_tokenDestroyer1) && isNotNull(this.getPackedTokenDestroyer1())) {
    this.m_tokenDestroyer1 = p_game.getToken_0(this.getPackedTokenDestroyer1().getId());
  }
  return this.m_tokenDestroyer1;
}
;
_.getTokenDestroyer2 = function getTokenDestroyer2(p_game){
  if (isNull(this.m_tokenDestroyer2) && isNotNull(this.getPackedTokenDestroyer2())) {
    this.m_tokenDestroyer2 = p_game.getToken_0(this.getPackedTokenDestroyer2().getId());
  }
  return this.m_tokenDestroyer2;
}
;
_.init_11 = function init_11(){
  this.m_registrationId = 0;
  this.m_cost = 0;
  this.m_newPosition = null;
  this.m_packedToken = null;
  this.m_packedTokenCarrier = null;
  this.m_packedNewTokenCarrier = null;
  this.m_position = null;
  this.m_oldPosition = null;
  this.m_packedTokenDestroyer1 = null;
  this.m_packedTokenDestroyer2 = null;
}
;
_.setCost = function setCost(p_cost){
  this.m_cost = p_cost;
}
;
_.setNewPosition = function setNewPosition(p_newPosition){
  this.m_newPosition = p_newPosition;
}
;
_.setNewTokenCarrier = function setNewTokenCarrier(p_newTokenCarrier){
  if (isNotNull(p_newTokenCarrier)) {
    this.m_packedNewTokenCarrier = p_newTokenCarrier.createEbBase();
  }
   else {
    this.m_packedNewTokenCarrier = null;
  }
  this.m_newTokenCarrier = p_newTokenCarrier;
}
;
_.setOldPosition = function setOldPosition(p_oldPosition){
  this.m_oldPosition = p_oldPosition;
}
;
_.setPosition = function setPosition_2(p_position){
  this.m_position = p_position;
}
;
_.setRegistration = function setRegistration(p_registration){
  if (isNull(p_registration)) {
    this.m_registrationId = 0;
    return;
  }
  this.m_registrationId = p_registration.getId();
  if (isNull(p_registration.getAccount_0())) {
    this.setAccountId(0);
  }
   else {
    this.setAccountId(p_registration.getAccount_0().getId());
  }
}
;
_.setToken = function setToken(p_token){
  if (isNotNull(p_token)) {
    this.m_packedToken = p_token.createEbBase();
  }
   else {
    this.m_packedToken = null;
  }
  this.m_token = p_token;
}
;
_.setTokenCarrier = function setTokenCarrier(p_tokenCarrier){
  if (isNotNull(p_tokenCarrier)) {
    this.m_packedTokenCarrier = p_tokenCarrier.createEbBase();
  }
   else {
    this.m_packedTokenCarrier = null;
  }
  this.m_tokenCarrier = p_tokenCarrier;
}
;
_.setTokenDestroyer1 = function setTokenDestroyer1(p_tokenDestroyer1){
  if (isNotNull(p_tokenDestroyer1)) {
    this.m_packedTokenDestroyer1 = p_tokenDestroyer1.createEbBase();
  }
   else {
    this.m_packedTokenDestroyer1 = null;
  }
  this.m_tokenDestroyer1 = p_tokenDestroyer1;
}
;
_.setTokenDestroyer2 = function setTokenDestroyer2(p_tokenDestroyer2){
  if (isNotNull(p_tokenDestroyer2)) {
    this.m_packedTokenDestroyer2 = p_tokenDestroyer2.createEbBase();
  }
   else {
    this.m_packedTokenDestroyer2 = null;
  }
  this.m_tokenDestroyer2 = p_tokenDestroyer2;
}
;
_.toString_0 = function toString_30(){
  var str;
  str = getClassPrototype(33).toString_0.call(this);
  str += this.getCost() + 'pt : ';
  return str;
}
;
_.unexec = function unexec_0(p_game){
  var registration;
  getClassPrototype(20).unexec.call(this, p_game);
  registration = this.getMyRegistration_0(p_game);
  if (isNotNull(registration)) {
    registration.setPtAction(registration.getPtAction() + this.getCost());
  }
}
;
_.m_cost = 0;
_.m_registrationId = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'AnEventPlay', 17, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit);
function $clinit_AnEventPlay_Array_Rank_1_FieldSerializer(){
  $clinit_AnEventPlay_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_44(streamReader, instance){
  $clinit_AnEventPlay_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_39(streamReader){
  $clinit_AnEventPlay_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit, {4:1, 1:1, 5:1}, 17, size_0, 0, 1);
}

function serialize_39(streamWriter, instance){
  $clinit_AnEventPlay_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_AnEventPlay_FieldSerializer(){
  $clinit_AnEventPlay_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_45(streamReader, instance){
  $clinit_AnEventPlay_FieldSerializer();
  setM_cost(instance, streamReader.readInt());
  setM_newPosition(instance, castTo(streamReader.readObject(), 23));
  setM_oldPosition(instance, castTo(streamReader.readObject(), 23));
  setM_packedNewTokenCarrier(instance, castTo(streamReader.readObject(), 21));
  setM_packedToken(instance, castTo(streamReader.readObject(), 21));
  setM_packedTokenCarrier(instance, castTo(streamReader.readObject(), 21));
  setM_packedTokenDestroyer1(instance, castTo(streamReader.readObject(), 21));
  setM_packedTokenDestroyer2(instance, castTo(streamReader.readObject(), 21));
  setM_position_0(instance, castTo(streamReader.readObject(), 23));
  setM_registrationId(instance, streamReader.readLong());
  deserialize_47(streamReader, instance);
}

function getM_cost(instance){
  return instance.m_cost;
}

function getM_newPosition(instance){
  return instance.m_newPosition;
}

function getM_oldPosition(instance){
  return instance.m_oldPosition;
}

function getM_packedNewTokenCarrier(instance){
  return instance.m_packedNewTokenCarrier;
}

function getM_packedToken(instance){
  return instance.m_packedToken;
}

function getM_packedTokenCarrier(instance){
  return instance.m_packedTokenCarrier;
}

function getM_packedTokenDestroyer1(instance){
  return instance.m_packedTokenDestroyer1;
}

function getM_packedTokenDestroyer2(instance){
  return instance.m_packedTokenDestroyer2;
}

function getM_position_0(instance){
  return instance.m_position;
}

function getM_registrationId(instance){
  return instance.m_registrationId;
}

function instantiate_40(streamReader){
  $clinit_AnEventPlay_FieldSerializer();
  return new AnEventPlay;
}

function serialize_40(streamWriter, instance){
  $clinit_AnEventPlay_FieldSerializer();
  streamWriter.writeInt(getM_cost(instance));
  streamWriter.writeObject(getM_newPosition(instance));
  streamWriter.writeObject(getM_oldPosition(instance));
  streamWriter.writeObject(getM_packedNewTokenCarrier(instance));
  streamWriter.writeObject(getM_packedToken(instance));
  streamWriter.writeObject(getM_packedTokenCarrier(instance));
  streamWriter.writeObject(getM_packedTokenDestroyer1(instance));
  streamWriter.writeObject(getM_packedTokenDestroyer2(instance));
  streamWriter.writeObject(getM_position_0(instance));
  streamWriter.writeLong(getM_registrationId(instance));
  serialize_42(streamWriter, instance);
}

function setM_cost(instance, value_0){
  instance.m_cost = value_0;
}

function setM_newPosition(instance, value_0){
  instance.m_newPosition = value_0;
}

function setM_oldPosition(instance, value_0){
  instance.m_oldPosition = value_0;
}

function setM_packedNewTokenCarrier(instance, value_0){
  instance.m_packedNewTokenCarrier = value_0;
}

function setM_packedToken(instance, value_0){
  instance.m_packedToken = value_0;
}

function setM_packedTokenCarrier(instance, value_0){
  instance.m_packedTokenCarrier = value_0;
}

function setM_packedTokenDestroyer1(instance, value_0){
  instance.m_packedTokenDestroyer1 = value_0;
}

function setM_packedTokenDestroyer2(instance, value_0){
  instance.m_packedTokenDestroyer2 = value_0;
}

function setM_position_0(instance, value_0){
  instance.m_position = value_0;
}

function setM_registrationId(instance, value_0){
  instance.m_registrationId = value_0;
}

function $clinit_AnEventUser_Array_Rank_1_FieldSerializer(){
  $clinit_AnEventUser_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_46(streamReader, instance){
  $clinit_AnEventUser_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_41(streamReader){
  $clinit_AnEventUser_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit, {4:1, 1:1, 5:1}, 33, size_0, 0, 1);
}

function serialize_41(streamWriter, instance){
  $clinit_AnEventUser_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_AnEventUser_FieldSerializer(){
  $clinit_AnEventUser_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_47(streamReader, instance){
  $clinit_AnEventUser_FieldSerializer();
  setM_accountId(instance, streamReader.readLong());
  deserialize_49(streamReader, instance);
}

function getM_accountId(instance){
  return instance.m_accountId;
}

function instantiate_42(streamReader){
  $clinit_AnEventUser_FieldSerializer();
  return new AnEventUser;
}

function serialize_42(streamWriter, instance){
  $clinit_AnEventUser_FieldSerializer();
  streamWriter.writeLong(getM_accountId(instance));
  serialize_44(streamWriter, instance);
}

function setM_accountId(instance, value_0){
  instance.m_accountId = value_0;
}

function $clinit_AnEvent_Array_Rank_1_FieldSerializer(){
  $clinit_AnEvent_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_48(streamReader, instance){
  $clinit_AnEvent_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_43(streamReader){
  $clinit_AnEvent_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit, {4:1, 1:1, 5:1}, 20, size_0, 0, 1);
}

function serialize_43(streamWriter, instance){
  $clinit_AnEvent_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_AnEvent_FieldSerializer(){
  $clinit_AnEvent_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_49(streamReader, instance){
  $clinit_AnEvent_FieldSerializer();
  setM_auto(instance, streamReader.readBoolean());
  setM_fdAdded(instance, castTo(streamReader.readObject(), 38));
  setM_fdRemoved(instance, castTo(streamReader.readObject(), 38));
  setM_gameVersion(instance, streamReader.readLong());
  setM_idGame(instance, streamReader.readLong());
  setM_isFdComputed(instance, streamReader.readBoolean());
  setM_lastUpdate_0(instance, castTo(streamReader.readObject(), 30));
  deserialize_24(streamReader, instance);
}

function getM_auto(instance){
  return instance.m_auto;
}

function getM_fdAdded(instance){
  return instance.m_fdAdded;
}

function getM_fdRemoved(instance){
  return instance.m_fdRemoved;
}

function getM_gameVersion(instance){
  return instance.m_gameVersion;
}

function getM_idGame(instance){
  return instance.m_idGame;
}

function getM_isFdComputed(instance){
  return instance.m_isFdComputed;
}

function getM_lastUpdate_0(instance){
  return instance.m_lastUpdate;
}

function instantiate_44(streamReader){
  $clinit_AnEvent_FieldSerializer();
  return new AnEvent;
}

function serialize_44(streamWriter, instance){
  $clinit_AnEvent_FieldSerializer();
  streamWriter.writeBoolean(getM_auto(instance));
  streamWriter.writeObject(getM_fdAdded(instance));
  streamWriter.writeObject(getM_fdRemoved(instance));
  streamWriter.writeLong(getM_gameVersion(instance));
  streamWriter.writeLong(getM_idGame(instance));
  streamWriter.writeBoolean(getM_isFdComputed(instance));
  streamWriter.writeObject(getM_lastUpdate_0(instance));
  serialize_19(streamWriter, instance);
}

function setM_auto(instance, value_0){
  instance.m_auto = value_0;
}

function setM_fdAdded(instance, value_0){
  instance.m_fdAdded = value_0;
}

function setM_fdRemoved(instance, value_0){
  instance.m_fdRemoved = value_0;
}

function setM_gameVersion(instance, value_0){
  instance.m_gameVersion = value_0;
}

function setM_idGame(instance, value_0){
  instance.m_idGame = value_0;
}

function setM_isFdComputed(instance, value_0){
  instance.m_isFdComputed = value_0;
}

function setM_lastUpdate_0(instance, value_0){
  instance.m_lastUpdate = value_0;
}

function $clinit_EbAdmin(){
  $clinit_EbAdmin = emptyMethod;
  $clinit_AnEventUser();
}

function EbAdmin(){
  $clinit_EbAdmin();
  AnEventUser.call(this);
  this.$init_316();
  this.init_12();
}

defineClass(89, 33, {21:1, 20:1, 33:1, 89:1, 64:1, 4:1, 1:1}, EbAdmin);
_.$init_316 = function $init_316(){
  this.m_message = null;
}
;
_.init_12 = function init_12(){
  this.m_message = null;
}
;
_.unexec = function unexec_1(p_game){
  throw toJs(new RpcFmpException_1("les actions d'administrations ne peuvent \xEAtre d\xE9faite", this));
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbAdmin', 89, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit);
function $clinit_EbAdminAbort(){
  $clinit_EbAdminAbort = emptyMethod;
  $clinit_EbAdmin();
}

function EbAdminAbort(){
  $clinit_EbAdminAbort();
  EbAdmin.call(this);
  this.$init_317();
}

defineClass(292, 89, {21:1, 20:1, 33:1, 89:1, 292:1, 64:1, 4:1, 1:1}, EbAdminAbort);
_.$init_317 = function $init_317(){
}
;
_.check_0 = function check_3(p_game){
  getClassPrototype(33).check_0.call(this, p_game);
}
;
_.exec_0 = function exec_2(p_game){
  getClassPrototype(20).exec_0.call(this, p_game);
  p_game.setStatus(($clinit_GameStatus() , Aborted));
}
;
_.getType_0 = function getType_1(){
  return $clinit_GameLogType() , AdminAbort;
}
;
_.toString_0 = function toString_31(){
  var str;
  str = getClassPrototype(33).toString_0.call(this);
  return str;
}
;
_.unexec = function unexec_2(p_game){
  p_game.setStatus(($clinit_GameStatus() , Running));
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminAbort_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbAdminAbort', 292, Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit);
function $clinit_EbAdminAbort_Array_Rank_1_FieldSerializer(){
  $clinit_EbAdminAbort_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_50(streamReader, instance){
  $clinit_EbAdminAbort_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_45(streamReader){
  $clinit_EbAdminAbort_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminAbort_2_classLit, {4:1, 1:1, 5:1}, 292, size_0, 0, 1);
}

function serialize_45(streamWriter, instance){
  $clinit_EbAdminAbort_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbAdminAbort_FieldSerializer(){
  $clinit_EbAdminAbort_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_51(streamReader, instance){
  $clinit_EbAdminAbort_FieldSerializer();
  deserialize_59(streamReader, instance);
}

function instantiate_46(streamReader){
  $clinit_EbAdminAbort_FieldSerializer();
  return new EbAdminAbort;
}

function serialize_46(streamWriter, instance){
  $clinit_EbAdminAbort_FieldSerializer();
  serialize_54(streamWriter, instance);
}

function $clinit_EbAdminBan(){
  $clinit_EbAdminBan = emptyMethod;
  $clinit_EbAdmin();
}

function EbAdminBan(){
  $clinit_EbAdminBan();
  EbAdmin.call(this);
  this.$init_318();
}

defineClass(293, 89, {21:1, 20:1, 33:1, 89:1, 293:1, 64:1, 4:1, 1:1}, EbAdminBan);
_.$init_318 = function $init_318(){
  this.m_registrationId = fromInt_0(-1);
  this.m_oldAccountId = 0;
}
;
_.check_0 = function check_4(p_game){
  var registration;
  getClassPrototype(33).check_0.call(this, p_game);
  registration = p_game.getRegistration_0(this.getRegistrationId());
  if (isNull(registration)) {
    throw toJs(new RpcFmpException_1('No registration to ban was selected', this));
  }
  if (registration.getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().cantBanPlayerNoFreighter(), this));
  }
}
;
_.exec_0 = function exec_3(p_game){
  var registration;
  getClassPrototype(20).exec_0.call(this, p_game);
  p_game.setLastTimeStepChange(new Date_1(currentTimeMillis_0()));
  registration = p_game.getRegistration_0(this.getRegistrationId());
  if (isNotNull(registration)) {
    this.m_oldAccountId = registration.getAccount_0().getId();
    p_game.addAccount(registration.getAccount_0());
    if (!registration.isReplacement()) {
      registration.setOriginalAccountId(registration.getAccount_0().getId());
    }
    registration.setAccount(null);
    registration.getTeam_1(p_game).setEndTurnDate(null);
    p_game.updateOpenPauseStatus();
  }
}
;
_.getRegistrationId = function getRegistrationId_0(){
  return this.m_registrationId;
}
;
_.getType_0 = function getType_2(){
  return $clinit_GameLogType() , AdminBan;
}
;
_.setRegistrationId = function setRegistrationId(p_registrationId){
  this.m_registrationId = p_registrationId;
}
;
_.toString_0 = function toString_32(){
  var str;
  str = getClassPrototype(33).toString_0.call(this);
  str += ' : accountid = ' + toString_45(this.m_oldAccountId);
  return str;
}
;
_.m_oldAccountId = 0;
_.m_registrationId = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminBan_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbAdminBan', 293, Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit);
function $clinit_EbAdminBan_Array_Rank_1_FieldSerializer(){
  $clinit_EbAdminBan_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_52(streamReader, instance){
  $clinit_EbAdminBan_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_47(streamReader){
  $clinit_EbAdminBan_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminBan_2_classLit, {4:1, 1:1, 5:1}, 293, size_0, 0, 1);
}

function serialize_47(streamWriter, instance){
  $clinit_EbAdminBan_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbAdminBan_FieldSerializer(){
  $clinit_EbAdminBan_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_53(streamReader, instance){
  $clinit_EbAdminBan_FieldSerializer();
  setM_oldAccountId(instance, streamReader.readLong());
  setM_registrationId_0(instance, streamReader.readLong());
  deserialize_59(streamReader, instance);
}

function getM_oldAccountId(instance){
  return instance.m_oldAccountId;
}

function getM_registrationId_0(instance){
  return instance.m_registrationId;
}

function instantiate_48(streamReader){
  $clinit_EbAdminBan_FieldSerializer();
  return new EbAdminBan;
}

function serialize_48(streamWriter, instance){
  $clinit_EbAdminBan_FieldSerializer();
  streamWriter.writeLong(getM_oldAccountId(instance));
  streamWriter.writeLong(getM_registrationId_0(instance));
  serialize_54(streamWriter, instance);
}

function setM_oldAccountId(instance, value_0){
  instance.m_oldAccountId = value_0;
}

function setM_registrationId_0(instance, value_0){
  instance.m_registrationId = value_0;
}

function $clinit_EbAdminTimePause(){
  $clinit_EbAdminTimePause = emptyMethod;
  $clinit_EbAdmin();
}

function EbAdminTimePause(){
  $clinit_EbAdminTimePause();
  EbAdmin.call(this);
  this.$init_319();
  this.init_15();
}

defineClass(294, 89, {21:1, 20:1, 33:1, 89:1, 294:1, 64:1, 4:1, 1:1}, EbAdminTimePause);
_.$init_319 = function $init_319(){
}
;
_.check_0 = function check_5(p_game){
  getClassPrototype(33).check_0.call(this, p_game);
}
;
_.exec_0 = function exec_4(p_game){
  var team, team$iterator;
  getClassPrototype(20).exec_0.call(this, p_game);
  p_game.setStatus(($clinit_GameStatus() , Pause));
  p_game.updateOpenPauseStatus();
  if (!p_game.isParallel()) {
    for (team$iterator = p_game.getTeams().iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      team.setEndTurnDate(null);
    }
  }
}
;
_.getType_0 = function getType_3(){
  return $clinit_GameLogType() , AdminTimePause;
}
;
_.init_15 = function init_15(){
}
;
_.toString_0 = function toString_33(){
  var str;
  str = getClassPrototype(33).toString_0.call(this);
  str += ' : Pause';
  return str;
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePause_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbAdminTimePause', 294, Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit);
function $clinit_EbAdminTimePause_Array_Rank_1_FieldSerializer(){
  $clinit_EbAdminTimePause_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_54(streamReader, instance){
  $clinit_EbAdminTimePause_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_49(streamReader){
  $clinit_EbAdminTimePause_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePause_2_classLit, {4:1, 1:1, 5:1}, 294, size_0, 0, 1);
}

function serialize_49(streamWriter, instance){
  $clinit_EbAdminTimePause_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbAdminTimePause_FieldSerializer(){
  $clinit_EbAdminTimePause_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_55(streamReader, instance){
  $clinit_EbAdminTimePause_FieldSerializer();
  deserialize_59(streamReader, instance);
}

function instantiate_50(streamReader){
  $clinit_EbAdminTimePause_FieldSerializer();
  return new EbAdminTimePause;
}

function serialize_50(streamWriter, instance){
  $clinit_EbAdminTimePause_FieldSerializer();
  serialize_54(streamWriter, instance);
}

function $clinit_EbAdminTimePlay(){
  $clinit_EbAdminTimePlay = emptyMethod;
  $clinit_EbAdmin();
}

function EbAdminTimePlay(){
  $clinit_EbAdminTimePlay();
  EbAdmin.call(this);
  this.$init_320();
  this.init_16();
}

defineClass(245, 89, {21:1, 20:1, 33:1, 89:1, 245:1, 64:1, 4:1, 1:1}, EbAdminTimePlay);
_.$init_320 = function $init_320(){
}
;
_.check_0 = function check_6(p_game){
  getClassPrototype(33).check_0.call(this, p_game);
  if (p_game.getCurrentNumberOfRegiteredPlayer() < 2) {
    throw toJs(new RpcFmpException_1(this.errMsg().mustHaveTwoPlayerToStart(), this));
  }
}
;
_.exec_0 = function exec_5(p_game){
  var myRegistration, team, team$iterator;
  getClassPrototype(20).exec_0.call(this, p_game);
  p_game.setLastTimeStepChange(new Date_1(currentTimeMillis_0()));
  p_game.setStatus(($clinit_GameStatus() , Running));
  if (!p_game.isParallel()) {
    for (team$iterator = p_game.getTeams().iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      team.setEndTurnDate(null);
    }
    myRegistration = this.getMyRegistration_0(p_game);
    if (isNotNull(myRegistration)) {
      myRegistration.getTeam_1(p_game).setEndTurnDate(new Date_1(add_19(currentTimeMillis_0(), p_game.getFullTurnDurationInMili())));
    }
  }
}
;
_.getType_0 = function getType_4(){
  return $clinit_GameLogType() , AdminTimePlay;
}
;
_.init_16 = function init_16(){
}
;
_.toString_0 = function toString_34(){
  var str;
  str = getClassPrototype(33).toString_0.call(this);
  str += ' : Play';
  return str;
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePlay_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbAdminTimePlay', 245, Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit);
function $clinit_EbAdminTimePlay_Array_Rank_1_FieldSerializer(){
  $clinit_EbAdminTimePlay_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_56(streamReader, instance){
  $clinit_EbAdminTimePlay_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_51(streamReader){
  $clinit_EbAdminTimePlay_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdminTimePlay_2_classLit, {4:1, 1:1, 5:1}, 245, size_0, 0, 1);
}

function serialize_51(streamWriter, instance){
  $clinit_EbAdminTimePlay_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbAdminTimePlay_FieldSerializer(){
  $clinit_EbAdminTimePlay_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_57(streamReader, instance){
  $clinit_EbAdminTimePlay_FieldSerializer();
  deserialize_59(streamReader, instance);
}

function instantiate_52(streamReader){
  $clinit_EbAdminTimePlay_FieldSerializer();
  return new EbAdminTimePlay;
}

function serialize_52(streamWriter, instance){
  $clinit_EbAdminTimePlay_FieldSerializer();
  serialize_54(streamWriter, instance);
}

function $clinit_EbAdmin_Array_Rank_1_FieldSerializer(){
  $clinit_EbAdmin_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_58(streamReader, instance){
  $clinit_EbAdmin_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_53(streamReader){
  $clinit_EbAdmin_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbAdmin_2_classLit, {4:1, 1:1, 5:1}, 89, size_0, 0, 1);
}

function serialize_53(streamWriter, instance){
  $clinit_EbAdmin_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbAdmin_FieldSerializer(){
  $clinit_EbAdmin_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_59(streamReader, instance){
  $clinit_EbAdmin_FieldSerializer();
  setM_message_0(instance, streamReader.readString());
  deserialize_47(streamReader, instance);
}

function getM_message(instance){
  return instance.m_message;
}

function instantiate_54(streamReader){
  $clinit_EbAdmin_FieldSerializer();
  return new EbAdmin;
}

function serialize_54(streamWriter, instance){
  $clinit_EbAdmin_FieldSerializer();
  streamWriter.writeString(getM_message(instance));
  serialize_42(streamWriter, instance);
}

function setM_message_0(instance, value_0){
  instance.m_message = value_0;
}

function $clinit_EbEvtCancel(){
  $clinit_EbEvtCancel = emptyMethod;
  $clinit_AnEventUser();
  serialVersionUID_2 = neg_0({l:714079, m:1487110, h:355094});
}

function EbEvtCancel(){
  $clinit_EbEvtCancel();
  AnEventUser.call(this);
  this.$init_321();
  this.init_17();
}

defineClass(140, 33, {21:1, 20:1, 33:1, 140:1, 64:1, 4:1, 1:1}, EbEvtCancel);
_.$init_321 = function $init_321(){
  this.m_fromActionIndex = 0;
  this.m_toActionIndex = 0;
  this.m_eventsBackup = new ArrayList;
}
;
_.check_0 = function check_7(p_game){
}
;
_.exec_0 = function exec_6(p_game){
}
;
_.execCancel = function execCancel(p_game){
  var action, e, eventLogs, isTimeStepCanceled, timeSinceLastTimeStepChange, toActionIndex, totalEventCount;
  if (!isNotNull(p_game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!eq(p_game.getId(), this.getIdGame())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  isTimeStepCanceled = false;
  timeSinceLastTimeStepChange = sub_1(currentTimeMillis_0(), p_game.getLastTimeStepChange().getTime_1());
  if (gt(timeSinceLastTimeStepChange, p_game.getEbConfigGameTime().getTimeStepDurationInMili())) {
    timeSinceLastTimeStepChange = 0;
  }
  totalEventCount = p_game.getLogs().size_1() + p_game.getAdditionalEventCount();
  toActionIndex = this.m_toActionIndex - p_game.getAdditionalEventCount();
  if (isNotNull(this.getMyRegistration_0(p_game))) {
    totalEventCount += this.getMyRegistration_0(p_game).getTeam_1(p_game).getMyEvents().size_1();
  }
  if (this.m_fromActionIndex != totalEventCount - 1 || toActionIndex < 0) {
    throw toJs(new RpcFmpException_1("this cancel action isn't for this game state", this));
  }
  eventLogs = p_game.getLogs();
  if (isNotNull(this.getMyRegistration_0(p_game)) && toActionIndex >= p_game.getLogs().size_1()) {
    toActionIndex -= p_game.getLogs().size_1();
    eventLogs = this.getMyRegistration_0(p_game).getTeam_1(p_game).getMyEvents();
  }
  while (toActionIndex < eventLogs.size_1()) {
    action = castTo(eventLogs.get_0(eventLogs.size_1() - 1), 20);
    if (!instanceOf(action, 89)) {
      try {
        action.unexec(p_game);
        if (instanceOf(action, 296)) {
          isTimeStepCanceled = true;
        }
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 10)) {
          e = $e0;
          logError_0('error ', e);
        }
         else 
          throw toJs($e0);
      }
    }
    eventLogs.remove_2(eventLogs.size_1() - 1);
    this.m_eventsBackup.add_6(0, action);
  }
  if (p_game.isParallel() && isTimeStepCanceled) {
    p_game.setLastTimeStepChange(new Date_1(sub_1(currentTimeMillis_0(), timeSinceLastTimeStepChange)));
  }
  p_game.addEvent(this);
}
;
_.getType_0 = function getType_5(){
  return $clinit_GameLogType() , EvtCancel;
}
;
_.init_17 = function init_17(){
}
;
_.setFromActionIndex = function setFromActionIndex(p_fromActionIndex){
  this.m_fromActionIndex = p_fromActionIndex;
}
;
_.setToActionIndex = function setToActionIndex(p_toActionIndex){
  this.m_toActionIndex = p_toActionIndex;
}
;
_.unexec = function unexec_3(p_game){
}
;
_.m_fromActionIndex = 0;
_.m_toActionIndex = 0;
var serialVersionUID_2 = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtCancel_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtCancel', 140, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit);
function $clinit_EbEvtCancel_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtCancel_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_60(streamReader, instance){
  $clinit_EbEvtCancel_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_55(streamReader){
  $clinit_EbEvtCancel_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtCancel_2_classLit, {4:1, 1:1, 5:1}, 140, size_0, 0, 1);
}

function serialize_55(streamWriter, instance){
  $clinit_EbEvtCancel_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtCancel_FieldSerializer(){
  $clinit_EbEvtCancel_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_61(streamReader, instance){
  $clinit_EbEvtCancel_FieldSerializer();
  setM_eventsBackup(instance, castTo(streamReader.readObject(), 38));
  setM_fromActionIndex(instance, streamReader.readInt());
  setM_toActionIndex(instance, streamReader.readInt());
  deserialize_47(streamReader, instance);
}

function getM_eventsBackup(instance){
  return instance.m_eventsBackup;
}

function getM_fromActionIndex(instance){
  return instance.m_fromActionIndex;
}

function getM_toActionIndex(instance){
  return instance.m_toActionIndex;
}

function instantiate_56(streamReader){
  $clinit_EbEvtCancel_FieldSerializer();
  return new EbEvtCancel;
}

function serialize_56(streamWriter, instance){
  $clinit_EbEvtCancel_FieldSerializer();
  streamWriter.writeObject(getM_eventsBackup(instance));
  streamWriter.writeInt(getM_fromActionIndex(instance));
  streamWriter.writeInt(getM_toActionIndex(instance));
  serialize_42(streamWriter, instance);
}

function setM_eventsBackup(instance, value_0){
  instance.m_eventsBackup = value_0;
}

function setM_fromActionIndex(instance, value_0){
  instance.m_fromActionIndex = value_0;
}

function setM_toActionIndex(instance, value_0){
  instance.m_toActionIndex = value_0;
}

function $clinit_EbEvtChangePlayerOrder(){
  $clinit_EbEvtChangePlayerOrder = emptyMethod;
  $clinit_AnEvent();
}

function EbEvtChangePlayerOrder(){
  $clinit_EbEvtChangePlayerOrder();
  AnEvent.call(this);
  this.$init_322();
  this.init_18();
}

defineClass(295, 20, {21:1, 20:1, 295:1, 64:1, 4:1, 1:1}, EbEvtChangePlayerOrder);
_.$init_322 = function $init_322(){
  this.m_oldRegistrationOrder = null;
  this.m_newRegistrationOrder = null;
}
;
_.check_0 = function check_8(p_game){
  getClassPrototype(20).check_0.call(this, p_game);
  if (this.getNewTeamOrder().size_1() != p_game.getTeams().size_1()) {
    throw toJs(new RpcFmpException_1("EbEvtChangePlayerOrder isn't well configured.", this));
  }
}
;
_.exec_0 = function exec_7(p_game){
  var idTeam, idTeam$iterator, orderIndex, sortedTeams, team, team$iterator, team$iterator0;
  getClassPrototype(20).exec_0.call(this, p_game);
  sortedTeams = p_game.getTeamByPlayOrder();
  this.m_oldRegistrationOrder = new ArrayList;
  for (team$iterator0 = sortedTeams.iterator_0(); team$iterator0.hasNext_0();) {
    team = castTo(team$iterator0.next_1(), 43);
    this.m_oldRegistrationOrder.add_5(valueOf_40(team.getId()));
  }
  orderIndex = 0;
  for (idTeam$iterator = this.getNewTeamOrder().iterator_0(); idTeam$iterator.hasNext_0();) {
    idTeam = castTo(idTeam$iterator.next_1(), 66).longValue();
    p_game.getTeam(idTeam).setOrderIndex(orderIndex);
    orderIndex++;
  }
  p_game.getCurrentPlayerIds().clear_0();
  if (p_game.isTimeStepParallelHidden(p_game.getCurrentTimeStep())) {
    for (team$iterator = sortedTeams.iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      p_game.getCurrentPlayerIds().addAll(team.getPlayerIds());
    }
  }
   else {
    p_game.getCurrentPlayerIds().addAll(p_game.getTeamByOrderIndex(0).getPlayerIds());
  }
}
;
_.getNewTeamOrder = function getNewTeamOrder(){
  return this.m_newRegistrationOrder;
}
;
_.getType_0 = function getType_6(){
  return $clinit_GameLogType() , EvtChangePlayerOrder;
}
;
_.init_18 = function init_18(){
  this.setAuto(true);
  this.m_oldRegistrationOrder = null;
  this.m_newRegistrationOrder = new ArrayList;
}
;
_.unexec = function unexec_4(p_game){
  var idTeam, idTeam$iterator, lastPlayerId, orderIndex;
  getClassPrototype(20).unexec.call(this, p_game);
  if (!isNotNull(this.m_oldRegistrationOrder)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  orderIndex = 0;
  lastPlayerId = 0;
  for (idTeam$iterator = this.m_oldRegistrationOrder.iterator_0(); idTeam$iterator.hasNext_0();) {
    idTeam = castTo(idTeam$iterator.next_1(), 66).longValue();
    p_game.getTeam(idTeam).setOrderIndex(orderIndex);
    orderIndex++;
    lastPlayerId = idTeam;
  }
  p_game.getCurrentPlayerIds().clear_0();
  p_game.getCurrentPlayerIds().add_5(valueOf_40(lastPlayerId));
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtChangePlayerOrder_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtChangePlayerOrder', 295, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit);
function $clinit_EbEvtChangePlayerOrder_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtChangePlayerOrder_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_62(streamReader, instance){
  $clinit_EbEvtChangePlayerOrder_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_57(streamReader){
  $clinit_EbEvtChangePlayerOrder_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtChangePlayerOrder_2_classLit, {4:1, 1:1, 5:1}, 295, size_0, 0, 1);
}

function serialize_57(streamWriter, instance){
  $clinit_EbEvtChangePlayerOrder_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtChangePlayerOrder_FieldSerializer(){
  $clinit_EbEvtChangePlayerOrder_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_63(streamReader, instance){
  $clinit_EbEvtChangePlayerOrder_FieldSerializer();
  setM_newRegistrationOrder(instance, castTo(streamReader.readObject(), 12));
  setM_oldRegistrationOrder(instance, castTo(streamReader.readObject(), 12));
  deserialize_49(streamReader, instance);
}

function getM_newRegistrationOrder(instance){
  return instance.m_newRegistrationOrder;
}

function getM_oldRegistrationOrder(instance){
  return instance.m_oldRegistrationOrder;
}

function instantiate_58(streamReader){
  $clinit_EbEvtChangePlayerOrder_FieldSerializer();
  return new EbEvtChangePlayerOrder;
}

function serialize_58(streamWriter, instance){
  $clinit_EbEvtChangePlayerOrder_FieldSerializer();
  streamWriter.writeObject(getM_newRegistrationOrder(instance));
  streamWriter.writeObject(getM_oldRegistrationOrder(instance));
  serialize_44(streamWriter, instance);
}

function setM_newRegistrationOrder(instance, value_0){
  instance.m_newRegistrationOrder = value_0;
}

function setM_oldRegistrationOrder(instance, value_0){
  instance.m_oldRegistrationOrder = value_0;
}

function $clinit_EbEvtConstruct(){
  $clinit_EbEvtConstruct = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtConstruct(){
  $clinit_EbEvtConstruct();
  AnEventPlay.call(this);
  this.$init_323();
  this.init_19();
}

defineClass(83, 17, {21:1, 20:1, 17:1, 33:1, 83:1, 64:1, 4:1, 1:1}, EbEvtConstruct);
_.$init_323 = function $init_323(){
  this.m_constructType = ($clinit_TokenType() , None_0);
  this.m_oreType = ($clinit_TokenType() , Ore);
}
;
_.check_0 = function check_9(p_game){
  var event_0, myRegistration, reverseIndex;
  getClassPrototype(17).check_0.call(this, p_game);
  if (jsNotEquals(this.getTokenCarrier(p_game).getLocation(), ($clinit_Location() , Board)) && jsNotEquals(this.getTokenCarrier(p_game).getLocation(), ($clinit_Location() , Token))) {
    throw toJs(new RpcFmpException_1('token ' + this.getTokenCarrier(p_game) + ' must be on board to construct a token', this));
  }
  if (jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , WeatherHen))) {
    throw toJs(new RpcFmpException_1('only weather hen can construct units', this));
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getTokenCarrier(p_game).getColor_0()) || this.getTokenCarrier(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenCarrier(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (myRegistration.getPtAction() <= 0) {
    throw toJs(new RpcFmpException_1('player must have one more action point to unload that token', this));
  }
  if (!p_game.canConstruct(this.getToken_3(p_game).getType(), this.getConstructType())) {
    throw toJs(new RpcFmpException_1(this.getConstructType().toString_0() + ' construct reserve is empty', this));
  }
  if (this.getTokenCarrier(p_game).getBulletCount() < 1) {
    throw toJs(new RpcFmpException_1(this.errMsg().tooManyConstruction(), this));
  }
  reverseIndex = p_game.getLogs().size_1() - 1;
  while (this.getTokenCarrier(p_game).getBulletCount() < 2 && reverseIndex > 0) {
    event_0 = castTo(p_game.getLogs().get_0(reverseIndex), 20);
    if (jsEquals(event_0.getType_0(), ($clinit_GameLogType() , EvtTimeStep)) || jsEquals(event_0.getType_0(), ($clinit_GameLogType() , EvtPlayerTurn))) {
      break;
    }
    if (jsEquals(event_0.getType_0(), ($clinit_GameLogType() , EvtConstruct)) && jsNotEquals(this.getConstructType(), ($clinit_TokenType() , Tank)) && jsEquals(castTo(event_0, 83).getConstructType(), this.getConstructType()) && eq(castTo(event_0, 83).getPackedTokenCarrier().getId(), this.getPackedTokenCarrier().getId())) {
      throw toJs(new RpcFmpException_1(this.errMsg().tooManyConstruction(), this));
    }
    reverseIndex--;
  }
}
;
_.exec_0 = function exec_8(p_game){
  getClassPrototype(17).exec_0.call(this, p_game);
  this.m_oreType = this.getToken_3(p_game).getType();
  this.getTokenCarrier(p_game).setBulletCount(this.getTokenCarrier(p_game).getBulletCount() - 1);
  this.getToken_3(p_game).setType(this.getConstructType());
  if (this.getToken_3(p_game).canBeColored()) {
    this.getToken_3(p_game).setColor(this.getTokenCarrier(p_game).getColor_0());
  }
  this.getToken_3(p_game).setBulletCount(this.getToken_3(p_game).getType().getMaxBulletCount());
  p_game.decConstructQty(this.getConstructType());
}
;
_.getConstructType = function getConstructType(){
  return this.m_constructType;
}
;
_.getSelectedPosition = function getSelectedPosition_0(p_game){
  if (isNotNull(this.getTokenCarrier(p_game))) {
    return this.getTokenCarrier(p_game).getPosition();
  }
   else {
    return this.getNewPosition();
  }
}
;
_.getType_0 = function getType_7(){
  return $clinit_GameLogType() , EvtConstruct;
}
;
_.init_19 = function init_19(){
  this.setCost(0);
  this.m_constructType = ($clinit_TokenType() , None_0);
}
;
_.setConstructType = function setConstructType(p_type){
  this.m_constructType = p_type;
}
;
_.unexec = function unexec_5(p_game){
  getClassPrototype(17).unexec.call(this, p_game);
  this.getTokenCarrier(p_game).setBulletCount(this.getTokenCarrier(p_game).getBulletCount() + 1);
  if (isNull(this.m_oreType)) {
    this.m_oreType = ($clinit_TokenType() , Ore);
  }
  this.getToken_3(p_game).setType(this.m_oreType);
  this.getToken_3(p_game).setColor(0);
  this.getToken_3(p_game).setBulletCount(this.getToken_3(p_game).getType().getMaxBulletCount());
  p_game.incConstructQty(this.getConstructType());
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtConstruct_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtConstruct', 83, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtConstruct_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtConstruct_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_64(streamReader, instance){
  $clinit_EbEvtConstruct_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_59(streamReader){
  $clinit_EbEvtConstruct_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtConstruct_2_classLit, {4:1, 1:1, 5:1}, 83, size_0, 0, 1);
}

function serialize_59(streamWriter, instance){
  $clinit_EbEvtConstruct_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtConstruct_FieldSerializer(){
  $clinit_EbEvtConstruct_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_65(streamReader, instance){
  $clinit_EbEvtConstruct_FieldSerializer();
  setM_constructType(instance, castTo(streamReader.readObject(), 55));
  setM_oreType(instance, castTo(streamReader.readObject(), 55));
  deserialize_45(streamReader, instance);
}

function getM_constructType(instance){
  return instance.m_constructType;
}

function getM_oreType(instance){
  return instance.m_oreType;
}

function instantiate_60(streamReader){
  $clinit_EbEvtConstruct_FieldSerializer();
  return new EbEvtConstruct;
}

function serialize_60(streamWriter, instance){
  $clinit_EbEvtConstruct_FieldSerializer();
  streamWriter.writeObject(getM_constructType(instance));
  streamWriter.writeObject(getM_oreType(instance));
  serialize_40(streamWriter, instance);
}

function setM_constructType(instance, value_0){
  instance.m_constructType = value_0;
}

function setM_oreType(instance, value_0){
  instance.m_oreType = value_0;
}

function $clinit_EbEvtControl(){
  $clinit_EbEvtControl = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtControl(){
  $clinit_EbEvtControl();
  AnEventPlay.call(this);
  this.$init_324();
  this.init_20();
}

defineClass(97, 17, {21:1, 20:1, 17:1, 33:1, 97:1, 64:1, 4:1, 1:1}, EbEvtControl);
_.$init_324 = function $init_324(){
  this.m_oldColor = 0;
  this.m_oldBulletCount = 0;
}
;
_.check_0 = function check_10(p_game){
  var fireCover;
  getClassPrototype(17).check_0.call(this, p_game);
  if (!this.getTokenTarget(p_game).canBeColored()) {
    throw toJs(new RpcFmpException_1("Ore can't be controled", this));
  }
  if (!this.getMyRegistration_0(p_game).getEnuColor().isColored(this.getTokenDestroyer1(p_game).getColor_0()) || this.getTokenDestroyer1(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenDestroyer1(p_game).getColor_0()), getColorString(this.getAccountId(), this.getMyRegistration_0(p_game).getColor_0())), this));
  }
  if (!this.getMyRegistration_0(p_game).getEnuColor().isColored(this.getTokenDestroyer2(p_game).getColor_0()) || this.getTokenDestroyer2(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenDestroyer2(p_game).getColor_0()), getColorString(this.getAccountId(), this.getMyRegistration_0(p_game).getColor_0())), this));
  }
  if (!this.getTokenDestroyer1(p_game).getType().isDestroyer() || !this.getTokenDestroyer2(p_game).getType().isDestroyer()) {
    throw toJs(new RpcFmpException_1('Il vous faut deux destructeurs pour controler un vehicule adverse', this));
  }
  if (!p_game.isTokenTideActive(this.getTokenDestroyer1(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantFireDisableTide(getTokenString_0(this.getAccountId(), this.getTokenDestroyer1(p_game))), this));
  }
  if (!p_game.isTokenTideActive(this.getTokenDestroyer2(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantFireDisableTide(getTokenString_0(this.getAccountId(), this.getTokenDestroyer2(p_game))), this));
  }
  fireCover = p_game.getBoardFireCover().getFireCover(this.getTokenTarget(p_game).getPosition());
  fireCover.removeColor(this.getMyRegistration_0(p_game).getTeam_1(p_game).getFireColor());
  if (this.getTokenDestroyer1(p_game).isFireDisabled() || this.getTokenDestroyer2(p_game).isFireDisabled() || fireCover.getValue_1() != 0) {
    throw toJs(new RpcFmpException_1("Pour qu'un control soit possible, il faut qu'aucun des trois pions ne soit sous zone de feu adverse", this));
  }
  if (!this.getTokenDestroyer1(p_game).isNeighbor_0(p_game.getCoordinateSystem(), this.getTokenTarget(p_game))) {
    throw toJs(new RpcFmpException_1(this.getTokenDestroyer1(p_game) + " n'est pas au contact de " + this.getTokenTarget(p_game), this));
  }
  if (!this.getTokenDestroyer2(p_game).isNeighbor_0(p_game.getCoordinateSystem(), this.getTokenTarget(p_game))) {
    throw toJs(new RpcFmpException_1(this.getTokenDestroyer2(p_game) + " n'est pas au contact de " + this.getTokenTarget(p_game), this));
  }
  if (eq(this.getTokenDestroyer1(p_game).getId(), this.getTokenDestroyer2(p_game).getId())) {
    throw toJs(new RpcFmpException_1('the two destroyer must be different', this));
  }
  if (jsEquals(this.getTokenTarget(p_game).getType(), ($clinit_TokenType() , Freighter)) || jsEquals(this.getTokenTarget(p_game).getType(), ($clinit_TokenType() , Turret))) {
    throw toJs(new RpcFmpException_1('les astronefs ne peuvent etres control\xE9 de cette fa\xE7on. Vous devez d\xE9truire toute les tourelles puis entrer dedans', this));
  }
  if (p_game.isTimeStepParallelHidden(p_game.getCurrentTimeStep())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantAttackInParallelHiddenPhase(), this));
  }
}
;
_.exec_0 = function exec_9(p_game){
  var token, token$iterator;
  getClassPrototype(17).exec_0.call(this, p_game);
  this.setOldColor(this.getTokenTarget(p_game).getColor_0());
  this.m_oldBulletCount = this.getTokenTarget(p_game).getBulletCount();
  if (!p_game.getTokenTeamColors(this.getTokenTarget(p_game)).isColored(this.getTokenDestroyer1(p_game).getColor_0())) {
    this.getTokenTarget(p_game).setBulletCount(this.getTokenTarget(p_game).getType().getMaxBulletCount());
  }
  p_game.changeTokenColor(this.getTokenTarget(p_game), this.getTokenDestroyer1(p_game).getColor_0());
  if (!this.isFdComputed()) {
    this.addFdRemoved(this.getTokenTarget(p_game).getFireDisablingList());
    p_game.getBoardFireCover().removeFireDisabling_0(this.getFdRemoved());
  }
  this.getTokenTarget(p_game).incVersion();
  if (this.getTokenTarget(p_game).containToken()) {
    for (token$iterator = this.getTokenTarget(p_game).getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.canBeColored()) {
        token.incVersion();
      }
    }
  }
  this.execFireDisabling_0(p_game, this.getTokenTarget(p_game).getPosition());
}
;
_.getOldColor = function getOldColor(){
  return this.m_oldColor;
}
;
_.getSelectedPosition = function getSelectedPosition_1(p_game){
  if (isNotNull(this.getTokenDestroyer1(p_game))) {
    return this.getTokenDestroyer1(p_game).getPosition();
  }
  return null;
}
;
_.getTokenTarget = function getTokenTarget(p_game){
  return this.getToken_3(p_game);
}
;
_.getType_0 = function getType_8(){
  return $clinit_GameLogType() , EvtControl;
}
;
_.init_20 = function init_20(){
  this.setCost(1);
  this.m_oldColor = 0;
}
;
_.setOldColor = function setOldColor(p_oldColor){
  this.m_oldColor = p_oldColor;
}
;
_.setTokenTarget = function setTokenTarget(p_token){
  this.setToken(p_token);
}
;
_.unexec = function unexec_6(p_game){
  var token, token$iterator;
  getClassPrototype(17).unexec.call(this, p_game);
  this.getTokenTarget(p_game).decVersion();
  p_game.changeTokenColor(this.getTokenTarget(p_game), this.getOldColor());
  this.getTokenTarget(p_game).setBulletCount(this.m_oldBulletCount);
  if (this.getTokenTarget(p_game).containToken()) {
    for (token$iterator = this.getTokenTarget(p_game).getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.canBeColored()) {
        token.decVersion();
      }
    }
  }
  this.unexecFireDisabling(p_game);
}
;
_.m_oldBulletCount = 0;
_.m_oldColor = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControl_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtControl', 97, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtControlFreighter(){
  $clinit_EbEvtControlFreighter = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtControlFreighter(){
  $clinit_EbEvtControlFreighter();
  AnEventPlay.call(this);
  this.$init_325();
  this.init_21();
}

defineClass(167, 17, {21:1, 20:1, 17:1, 33:1, 167:1, 64:1, 4:1, 1:1}, EbEvtControlFreighter);
_.$init_325 = function $init_325(){
  this.m_packedOldRegistration = null;
  this.m_oldRegistrationSingleColor = 0;
  this.m_oldFreighterColor = 0;
  this.m_newFreighterColor = 0;
  this.m_oldTurretToRepair = 0;
  this.m_oldRegistration = null;
}
;
_.check_0 = function check_11(p_game){
  var fireCoverColor, myRegistration, position, position$iterator, turret;
  getClassPrototype(17).check_0.call(this, p_game);
  if (jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Freighter))) {
    throw toJs(new RpcFmpException_1('le pion control\xE9 doit \xEAtre un astronef', this));
  }
  if (!this.getToken_3(p_game).isNeighbor_0(p_game.getCoordinateSystem(), this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.getToken_3(p_game) + ' doit etre au contact de ' + this.getTokenCarrier(p_game) + ' pour le controler', this));
  }
  if (this.getToken_3(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1('vous ne pouvez pas d\xE9placer des pions incolores', this));
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  fireCoverColor = p_game.getOpponentFireCover(myRegistration.getTeam_1(p_game).getColors(p_game.getPreview()), this.getToken_3(p_game).getPosition());
  if (fireCoverColor.getValue_1() != 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDisableFire(getTokenString(this.getAccountId(), this.getToken_3(p_game).getType()), getColorString(this.getAccountId(), fireCoverColor.getValue_1())), this));
  }
  for (position$iterator = this.getTokenCarrier(p_game).getExtraPositions(p_game.getCoordinateSystem()).iterator_0(); position$iterator.hasNext_0();) {
    position = castTo(position$iterator.next_1(), 23);
    turret = p_game.getToken_2(position, ($clinit_TokenType() , Turret));
    if (isNotNull(turret)) {
      throw toJs(new RpcFmpException_1('You must destroy all turrets of an opponents freighter before taking control of it.', this));
    }
  }
  if (!this.getToken_3(p_game).getType().isDestroyer()) {
    throw toJs(new RpcFmpException_1(this.errMsg().OnlyDestroyerCanControl(), this));
  }
  if (p_game.getTokenTeamColors(this.getTokenCarrier(p_game)).isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1("You can't control freither in your team", this));
  }
  if (myRegistration.getPtAction() <= 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().NotEnouthActionPt(), this));
  }
  if (p_game.isTimeStepParallelHidden(p_game.getCurrentTimeStep())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantAttackInParallelHiddenPhase(), this));
  }
  if (!(this.getCost() == -1 * p_game.getEbConfigGameTime().getActionPtMaxPerExtraShip())) {
    debugger;
    throw toJs(makeAssertionError());
  }
}
;
_.exec_0 = function exec_10(p_game){
  var color_0, oldTeam, registration, registration$iterator;
  getClassPrototype(17).exec_0.call(this, p_game);
  this.m_oldFreighterColor = this.getTokenFreighter(p_game).getColor_0();
  if (this.m_oldFreighterColor == 0) {
    if (this.m_newFreighterColor == 0) {
      this.m_newFreighterColor = p_game.getUnusedColors().getSingleColor().getValue_1();
    }
    if (this.m_newFreighterColor == 0) {
      throw toJs(new RpcFmpException_1('No more color available to control freighter', this));
    }
  }
   else {
    this.m_newFreighterColor = this.m_oldFreighterColor;
    for (registration$iterator = p_game.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
      registration = castTo(registration$iterator.next_1(), 51);
      color_0 = registration.getEnuColor();
      if (color_0.isColored(this.getTokenFreighter(p_game).getColor_0())) {
        this.setOldRegistration(registration);
        this.m_oldRegistrationSingleColor = registration.getTeam_1(p_game).getFireColor();
      }
    }
  }
  if (isNotNull(this.getOldRegistration(p_game))) {
    this.getOldRegistration(p_game).setColor(removeColor_0(this.getOldRegistration(p_game).getColor_0(), this.getTokenFreighter(p_game).getColor_0()));
    oldTeam = this.getOldRegistration(p_game).getTeam_1(p_game);
    if (oldTeam.getColors(p_game.getPreview()) != 0 && !(new EnuColor_0(oldTeam.getColors(p_game.getPreview()))).isColored(oldTeam.getFireColor())) {
      oldTeam.setFireColor((new EnuColor_0(oldTeam.getColors(p_game.getPreview()))).getSingleColor().getValue_1());
    }
  }
  this.getTokenFreighter(p_game).setColor(this.m_newFreighterColor);
  this.getMyRegistration_0(p_game).setColor(addColor_0(this.getMyRegistration_0(p_game).getColor_0(), this.m_newFreighterColor));
  this.m_oldTurretToRepair = this.getTokenFreighter(p_game).getBulletCount();
  this.getTokenFreighter(p_game).setBulletCount(3);
  this.execFireDisabling(p_game);
  p_game.invalidateFireCover();
}
;
_.getOldRegistration = function getOldRegistration(p_game){
  if (isNull(this.getPackedOldRegistration())) {
    return null;
  }
  if (isNull(this.m_oldRegistration)) {
    this.m_oldRegistration = p_game.getRegistration_0(this.getPackedOldRegistration().getId());
  }
  return this.m_oldRegistration;
}
;
_.getPackedOldRegistration = function getPackedOldRegistration(){
  return this.m_packedOldRegistration;
}
;
_.getSelectedPosition = function getSelectedPosition_2(p_game){
  if (isNotNull(this.getToken_3(p_game))) {
    return this.getToken_3(p_game).getPosition();
  }
  return null;
}
;
_.getTokenCarrier = function getTokenCarrier_0(p_game){
  var token;
  token = getClassPrototype(17).getTokenCarrier.call(this, p_game);
  if (jsEquals(token.getType(), ($clinit_TokenType() , Turret))) {
    token = p_game.getToken_2(token.getPosition(), ($clinit_TokenType() , Freighter));
    this.setTokenCarrier(token);
  }
  return token;
}
;
_.getTokenFreighter = function getTokenFreighter(p_game){
  return this.getTokenCarrier(p_game);
}
;
_.getType_0 = function getType_9(){
  return $clinit_GameLogType() , EvtControlFreighter;
}
;
_.init_21 = function init_21(){
  this.setCost(0);
  this.setAuto(true);
  this.m_packedOldRegistration = null;
  this.m_oldFreighterColor = 0;
  this.m_newFreighterColor = 0;
}
;
_.setOldRegistration = function setOldRegistration(p_oldRegistration){
  if (isNull(p_oldRegistration)) {
    this.m_packedOldRegistration = null;
    this.m_oldRegistration = null;
  }
   else {
    this.m_packedOldRegistration = p_oldRegistration.createEbBase();
    this.m_oldRegistration = p_oldRegistration;
  }
}
;
_.setTokenFreighter = function setTokenFreighter(p_token){
  this.setTokenCarrier(p_token);
}
;
_.unexec = function unexec_7(p_game){
  getClassPrototype(17).unexec.call(this, p_game);
  this.getTokenFreighter(p_game).setColor(this.m_oldFreighterColor);
  this.getMyRegistration_0(p_game).setColor(removeColor_0(this.getMyRegistration_0(p_game).getColor_0(), this.m_newFreighterColor));
  if (isNotNull(this.getOldRegistration(p_game))) {
    this.getOldRegistration(p_game).setColor(addColor_0(this.getOldRegistration(p_game).getColor_0(), this.m_oldFreighterColor));
    this.getOldRegistration(p_game).getTeam_1(p_game).setFireColor(this.m_oldRegistrationSingleColor);
  }
  this.getTokenFreighter(p_game).setBulletCount(this.m_oldTurretToRepair);
  p_game.invalidateFireCover();
  this.unexecFireDisabling(p_game);
}
;
_.m_newFreighterColor = 0;
_.m_oldFreighterColor = 0;
_.m_oldRegistrationSingleColor = 0;
_.m_oldTurretToRepair = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControlFreighter_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtControlFreighter', 167, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtControlFreighter_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtControlFreighter_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_66(streamReader, instance){
  $clinit_EbEvtControlFreighter_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_61(streamReader){
  $clinit_EbEvtControlFreighter_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControlFreighter_2_classLit, {4:1, 1:1, 5:1}, 167, size_0, 0, 1);
}

function serialize_61(streamWriter, instance){
  $clinit_EbEvtControlFreighter_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtControlFreighter_FieldSerializer(){
  $clinit_EbEvtControlFreighter_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_67(streamReader, instance){
  $clinit_EbEvtControlFreighter_FieldSerializer();
  setM_newFreighterColor(instance, streamReader.readInt());
  setM_oldFreighterColor(instance, streamReader.readInt());
  setM_oldRegistrationSingleColor(instance, streamReader.readInt());
  setM_oldTurretToRepair(instance, streamReader.readFloat());
  setM_packedOldRegistration(instance, castTo(streamReader.readObject(), 21));
  deserialize_45(streamReader, instance);
}

function getM_newFreighterColor(instance){
  return instance.m_newFreighterColor;
}

function getM_oldFreighterColor(instance){
  return instance.m_oldFreighterColor;
}

function getM_oldRegistrationSingleColor(instance){
  return instance.m_oldRegistrationSingleColor;
}

function getM_oldTurretToRepair(instance){
  return instance.m_oldTurretToRepair;
}

function getM_packedOldRegistration(instance){
  return instance.m_packedOldRegistration;
}

function instantiate_62(streamReader){
  $clinit_EbEvtControlFreighter_FieldSerializer();
  return new EbEvtControlFreighter;
}

function serialize_62(streamWriter, instance){
  $clinit_EbEvtControlFreighter_FieldSerializer();
  streamWriter.writeInt(getM_newFreighterColor(instance));
  streamWriter.writeInt(getM_oldFreighterColor(instance));
  streamWriter.writeInt(getM_oldRegistrationSingleColor(instance));
  streamWriter.writeFloat(getM_oldTurretToRepair(instance));
  streamWriter.writeObject(getM_packedOldRegistration(instance));
  serialize_40(streamWriter, instance);
}

function setM_newFreighterColor(instance, value_0){
  instance.m_newFreighterColor = value_0;
}

function setM_oldFreighterColor(instance, value_0){
  instance.m_oldFreighterColor = value_0;
}

function setM_oldRegistrationSingleColor(instance, value_0){
  instance.m_oldRegistrationSingleColor = value_0;
}

function setM_oldTurretToRepair(instance, value_0){
  instance.m_oldTurretToRepair = value_0;
}

function setM_packedOldRegistration(instance, value_0){
  instance.m_packedOldRegistration = value_0;
}

function $clinit_EbEvtControl_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtControl_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_68(streamReader, instance){
  $clinit_EbEvtControl_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_63(streamReader){
  $clinit_EbEvtControl_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtControl_2_classLit, {4:1, 1:1, 5:1}, 97, size_0, 0, 1);
}

function serialize_63(streamWriter, instance){
  $clinit_EbEvtControl_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtControl_FieldSerializer(){
  $clinit_EbEvtControl_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_69(streamReader, instance){
  $clinit_EbEvtControl_FieldSerializer();
  setM_oldBulletCount(instance, streamReader.readFloat());
  setM_oldColor(instance, streamReader.readInt());
  deserialize_45(streamReader, instance);
}

function getM_oldBulletCount(instance){
  return instance.m_oldBulletCount;
}

function getM_oldColor(instance){
  return instance.m_oldColor;
}

function instantiate_64(streamReader){
  $clinit_EbEvtControl_FieldSerializer();
  return new EbEvtControl;
}

function serialize_64(streamWriter, instance){
  $clinit_EbEvtControl_FieldSerializer();
  streamWriter.writeFloat(getM_oldBulletCount(instance));
  streamWriter.writeInt(getM_oldColor(instance));
  serialize_40(streamWriter, instance);
}

function setM_oldBulletCount(instance, value_0){
  instance.m_oldBulletCount = value_0;
}

function setM_oldColor(instance, value_0){
  instance.m_oldColor = value_0;
}

function $clinit_EbEvtDeployment(){
  $clinit_EbEvtDeployment = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtDeployment(){
  $clinit_EbEvtDeployment();
  AnEventPlay.call(this);
  this.$init_326();
  this.init_22();
}

defineClass(246, 17, {21:1, 20:1, 17:1, 33:1, 246:1, 64:1, 4:1, 1:1}, EbEvtDeployment);
_.$init_326 = function $init_326(){
}
;
_.check_0 = function check_12(p_game){
  var freighter, myRegistration, tokensOnWay;
  getClassPrototype(17).check_0.call(this, p_game);
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  freighter = this.getToken_3(p_game).getCarrierToken();
  if (isNull(freighter) || jsNotEquals(freighter.getType(), ($clinit_TokenType() , Freighter)) || jsNotEquals(freighter.getLocation(), ($clinit_Location() , Board))) {
    throw toJs(new RpcFmpException_1('Your ' + this.getToken_3(p_game) + ' should be located in a landed freighter', this));
  }
  if (!p_game.isParallel() && p_game.getEbConfigGameTime().getDeploymentTimeStep() != p_game.getCurrentTimeStep()) {
    throw toJs(new RpcFmpException_1(this.errMsg().mustWaitToDeploy(p_game.getEbConfigGameTime().getDeploymentTimeStep()), this));
  }
  if (p_game.getEbConfigGameTime().getDeploymentTimeStep() < p_game.getCurrentTimeStep()) {
    throw toJs(new RpcFmpException_1('Too late to deploy your units', this));
  }
  if (!p_game.canDeployUnit(this.getMyRegistration_0(p_game))) {
    throw toJs(new RpcFmpException_1("You can't deploy your units after your first move", this));
  }
  if (this.getToken_3(p_game).getHexagonSize() == 2) {
    if (p_game.getCoordinateSystem().getDiscreteDistance(freighter.getPosition(), this.getPosition()) > 3 && p_game.getCoordinateSystem().getDiscreteDistance(freighter.getPosition(), p_game.getCoordinateSystem().getNeighbor(this.getPosition(), this.getPosition().getSector())) > 3) {
      throw toJs(new RpcFmpException_1(this.errMsg().cantDeployTooFar(3), this));
    }
  }
   else if (p_game.getCoordinateSystem().getDiscreteDistance(freighter.getPosition(), this.getPosition()) > 3) {
    throw toJs(new RpcFmpException_1(this.errMsg().cantDeployTooFar(3), this));
  }
  tokensOnWay = p_game.getToken_1(this.getPosition());
  if (isNotNull(tokensOnWay)) {
    if (!p_game.canTokenLoad(tokensOnWay, this.getToken_3(p_game))) {
      throw toJs(new RpcFmpException_1(this.errMsg().CantLoad(getTokenString_0(this.getAccountId(), tokensOnWay), getTokenString_0(this.getAccountId(), this.getToken_3(p_game))), this));
    }
  }
   else {
    if (!p_game.canTokenMoveOn(this.getToken_3(p_game), this.getPosition())) {
      throw toJs(new RpcFmpException_1(this.errMsg().CantMoveOn(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getLandString(this.getAccountId(), p_game.getLand_0(this.getPosition()))), this));
    }
    if (jsEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Pontoon)) && !p_game.isPontoonLinkToGround(this.getPosition())) {
      throw toJs(new RpcFmpException_1(this.errMsg().cantDeployPotoonInSea(), this));
    }
  }
}
;
_.exec_0 = function exec_11(p_game){
  var tokensOnWay;
  getClassPrototype(17).exec_0.call(this, p_game);
  this.setTokenCarrier(this.getToken_3(p_game).getCarrierToken());
  tokensOnWay = p_game.getToken_1(this.getPosition());
  if (isNotNull(tokensOnWay) && jsNotEquals(tokensOnWay.getType(), ($clinit_TokenType() , Pontoon)) && jsNotEquals(tokensOnWay.getType(), ($clinit_TokenType() , Sluice))) {
    p_game.moveToken_1(this.getToken_3(p_game), tokensOnWay);
    tokensOnWay.incVersion();
  }
   else {
    p_game.moveToken_0(this.getToken_3(p_game), this.getPosition());
  }
  this.getToken_3(p_game).incVersion();
  this.execFireDisabling_0(p_game, this.getPosition());
}
;
_.getSelectedPosition = function getSelectedPosition_3(p_game){
  return this.getPosition();
}
;
_.getType_0 = function getType_10(){
  return $clinit_GameLogType() , EvtDeployment;
}
;
_.init_22 = function init_22(){
  this.setCost(0);
}
;
_.toString_0 = function toString_35(){
  var str;
  str = getClassPrototype(17).toString_0.call(this);
  if (isNotNull(this.m_token)) {
    str += '' + this.m_token;
  }
  return str;
}
;
_.unexec = function unexec_8(p_game){
  if (isNull(this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1("can't cancel deployement: old carrier isn't known", this));
  }
  getClassPrototype(17).unexec.call(this, p_game);
  if (isNotNull(this.getToken_3(p_game).getCarrierToken())) {
    this.getToken_3(p_game).getCarrierToken().decVersion();
  }
  p_game.moveToken_1(this.getToken_3(p_game), this.getTokenCarrier(p_game));
  this.getToken_3(p_game).decVersion();
  p_game.updateLastTokenUpdate(null);
  this.unexecFireDisabling(p_game);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtDeployment_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtDeployment', 246, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtDeployment_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtDeployment_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_70(streamReader, instance){
  $clinit_EbEvtDeployment_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_65(streamReader){
  $clinit_EbEvtDeployment_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtDeployment_2_classLit, {4:1, 1:1, 5:1}, 246, size_0, 0, 1);
}

function serialize_65(streamWriter, instance){
  $clinit_EbEvtDeployment_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtDeployment_FieldSerializer(){
  $clinit_EbEvtDeployment_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_71(streamReader, instance){
  $clinit_EbEvtDeployment_FieldSerializer();
  deserialize_45(streamReader, instance);
}

function instantiate_66(streamReader){
  $clinit_EbEvtDeployment_FieldSerializer();
  return new EbEvtDeployment;
}

function serialize_66(streamWriter, instance){
  $clinit_EbEvtDeployment_FieldSerializer();
  serialize_40(streamWriter, instance);
}

function $clinit_EbEvtFire(){
  $clinit_EbEvtFire = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtFire(){
  $clinit_EbEvtFire();
  AnEventPlay.call(this);
  this.$init_327();
  this.init_23();
}

defineClass(60, 17, {21:1, 20:1, 17:1, 33:1, 60:1, 64:1, 4:1, 1:1}, EbEvtFire);
_.$init_327 = function $init_327(){
  this.m_TokenIds = null;
}
;
_.check_0 = function check_13(p_game){
  getClassPrototype(17).check_0.call(this, p_game);
  if (!this.getMyRegistration_0(p_game).getEnuColor().isColored(this.getTokenDestroyer1(p_game).getColor_0()) || this.getTokenDestroyer1(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenDestroyer1(p_game).getColor_0()), getColorString(this.getAccountId(), this.getMyRegistration_0(p_game).getColor_0())), this));
  }
  if (!this.getMyRegistration_0(p_game).getEnuColor().isColored(this.getTokenDestroyer2(p_game).getColor_0()) || this.getTokenDestroyer2(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenDestroyer2(p_game).getColor_0()), getColorString(this.getAccountId(), this.getMyRegistration_0(p_game).getColor_0())), this));
  }
  if (this.getTokenTarget(p_game).getColor_0() != 0 && this.getMyRegistration_0(p_game).getEnuColor().isColored(this.getTokenTarget(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().cantDestroyYourUnits(), this));
  }
  if (!p_game.isTokenTideActive(this.getTokenDestroyer1(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantFireDisableTide(getTokenString_0(this.getAccountId(), this.getTokenDestroyer1(p_game))), this));
  }
  if (!p_game.isTokenTideActive(this.getTokenDestroyer2(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantFireDisableTide(getTokenString_0(this.getAccountId(), this.getTokenDestroyer2(p_game))), this));
  }
  if ((!instanceOf(p_game.getLastLog(), 84) || jsNotEquals(castTo(p_game.getLastLog(), 84).getToken_3(p_game), this.getTokenDestroyer1(p_game))) && (!instanceOf(p_game.getLastLog(), 60) || jsNotEquals(castTo(p_game.getLastLog(), 60).getTokenDestroyer1(p_game), this.getTokenDestroyer1(p_game)))) {
    if (!p_game.isTokenFireActive(this.getTokenDestroyer1(p_game))) {
      throw toJs(new RpcFmpException_1(this.errMsg().CantFireDisableFire(getTokenString_0(this.getAccountId(), this.getTokenDestroyer1(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getTokenDestroyer1(p_game)).getValue_1())), this));
    }
  }
  if (this.getTokenDestroyer2(p_game).isFireDisabled() && jsNotEquals(this.getTokenDestroyer2(p_game), this.getTokenDestroyer1(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantFireDisableFire(getTokenString_0(this.getAccountId(), this.getTokenDestroyer2(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getTokenDestroyer2(p_game)).getValue_1())), this));
  }
  if (eq(this.getTokenDestroyer1(p_game).getId(), this.getTokenDestroyer2(p_game).getId())) {
    if (this.getTokenDestroyer1(p_game).getHexagonSize() == 1) {
      throw toJs(new RpcFmpException_1('the two destroyer must be different', this));
    }
    if (!p_game.canTokenFireOn_1(this.getTokenDestroyer1(p_game), this.getTokenDestroyer1(p_game).getPosition(), this.getTokenTarget(p_game))) {
      throw toJs(new RpcFmpException_1(this.errMsg().cantFireOn(getTokenString_0(this.getAccountId(), this.getTokenDestroyer1(p_game)), getTokenString_0(this.getAccountId(), this.getTokenTarget(p_game))), this));
    }
    if (!p_game.canTokenFireOn_1(this.getTokenDestroyer2(p_game), castTo(this.getTokenDestroyer1(p_game).getExtraPositions(p_game.getCoordinateSystem()).get_0(0), 23), this.getTokenTarget(p_game))) {
      throw toJs(new RpcFmpException_1(this.errMsg().cantFireOn(getTokenString_0(this.getAccountId(), this.getTokenDestroyer2(p_game)), getTokenString_0(this.getAccountId(), this.getTokenTarget(p_game))), this));
    }
    if (this.getTokenDestroyer1(p_game).getBulletCount() < 2) {
      throw toJs(new RpcFmpException_1(this.errMsg().noMoreAmo(getTokenString_0(this.getAccountId(), this.getTokenDestroyer1(p_game))), this));
    }
  }
   else {
    if (!p_game.canTokenFireOn_2(this.getTokenDestroyer1(p_game), this.getTokenTarget(p_game))) {
      throw toJs(new RpcFmpException_1(this.errMsg().cantFireOn(getTokenString_0(this.getAccountId(), this.getTokenDestroyer1(p_game)), getTokenString_0(this.getAccountId(), this.getTokenTarget(p_game))), this));
    }
    if (!p_game.canTokenFireOn_2(this.getTokenDestroyer2(p_game), this.getTokenTarget(p_game))) {
      throw toJs(new RpcFmpException_1(this.errMsg().cantFireOn(getTokenString_0(this.getAccountId(), this.getTokenDestroyer2(p_game)), getTokenString_0(this.getAccountId(), this.getTokenTarget(p_game))), this));
    }
    if (this.getTokenDestroyer1(p_game).getBulletCount() < 1 && jsNotEquals(this.getTokenDestroyer1(p_game).getType(), ($clinit_TokenType() , Turret))) {
      throw toJs(new RpcFmpException_1(this.errMsg().noMoreAmo(getTokenString_0(this.getAccountId(), this.getTokenDestroyer1(p_game))), this));
    }
    if (this.getTokenDestroyer2(p_game).getBulletCount() < 1 && jsNotEquals(this.getTokenDestroyer2(p_game).getType(), ($clinit_TokenType() , Turret))) {
      throw toJs(new RpcFmpException_1(this.errMsg().noMoreAmo(getTokenString_0(this.getAccountId(), this.getTokenDestroyer2(p_game))), this));
    }
  }
  if (jsEquals(this.getTokenTarget(p_game).getType(), ($clinit_TokenType() , Freighter))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantDestroyFreighter(), this));
  }
  if (jsEquals(this.getTokenTarget(p_game).getType(), ($clinit_TokenType() , Ore3Generator)) || jsEquals(this.getTokenTarget(p_game).getType(), ($clinit_TokenType() , Warp))) {
    throw toJs(new RpcFmpException_1('Vous ne pouvez pas detruire les ' + this.getTokenTarget(p_game).getType(), this));
  }
  if (p_game.isTimeStepParallelHidden(p_game.getCurrentTimeStep())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantAttackInParallelHiddenPhase(), this));
  }
}
;
_.exec_0 = function exec_12(p_game){
  var fdAdded, fdRemoved, idToken, idToken$iterator, otherPontoon, pontoon, position, sector, sector$array, sector$index, sector$max, token, wasFdComputed;
  getClassPrototype(17).exec_0.call(this, p_game);
  wasFdComputed = this.isFdComputed();
  this.setOldPosition(this.getTokenTarget(p_game).getPosition());
  this.getTokenDestroyer1(p_game).setBulletCount(this.getTokenDestroyer1(p_game).getBulletCount() - 1);
  this.getTokenDestroyer1(p_game).incVersion();
  this.getTokenDestroyer2(p_game).setBulletCount(this.getTokenDestroyer2(p_game).getBulletCount() - 1);
  this.getTokenDestroyer2(p_game).incVersion();
  position = this.getTokenTarget(p_game).getPosition();
  if (jsNotEquals(this.getTokenTarget(p_game).getType(), ($clinit_TokenType() , Pontoon))) {
    if (!this.isFdComputed()) {
      this.addFdRemoved(this.getTokenTarget(p_game).getFireDisablingList());
      p_game.getBoardFireCover().removeFireDisabling_0(this.getFdRemoved());
    }
    p_game.moveToken(this.getTokenTarget(p_game), ($clinit_Location() , Graveyard));
    this.getTokenTarget(p_game).incVersion();
    {
      this.execFireDisabling_0(p_game, position);
    }
  }
  pontoon = p_game.getToken_1(position);
  if (isNotNull(pontoon) && jsNotEquals(pontoon.getType(), ($clinit_TokenType() , Freighter))) {
    this.m_TokenIds = new ArrayList;
    this.m_TokenIds.add_5(valueOf_40(pontoon.getId()));
    p_game.moveToken(pontoon, ($clinit_Location() , Graveyard));
    pontoon.incVersion();
  }
  if (isNotNull(pontoon) && jsEquals(pontoon.getType(), ($clinit_TokenType() , Pontoon))) {
    for (sector$array = values_11() , sector$index = 0 , sector$max = sector$array.length; sector$index < sector$max; ++sector$index) {
      sector = sector$array[sector$index];
      otherPontoon = p_game.getToken_2(p_game.getCoordinateSystem().getNeighbor(this.getOldPosition(), sector), ($clinit_TokenType() , Pontoon));
      if (isNotNull(otherPontoon) && !p_game.isPontoonLinkToGround_0(otherPontoon)) {
        fdRemoved = new ArrayList;
        this.m_TokenIds.addAll(p_game.chainRemovePontoon(otherPontoon, fdRemoved));
        this.addFdRemoved(fdRemoved);
      }
    }
    if (wasFdComputed) {
    }
     else if (isNotNull(this.m_TokenIds)) {
      fdRemoved = new ArrayList;
      fdAdded = new ArrayList;
      for (idToken$iterator = this.m_TokenIds.iterator_0(); idToken$iterator.hasNext_0();) {
        idToken = castTo(idToken$iterator.next_1(), 66);
        token = p_game.getToken_0(idToken.longValue());
        if (isNotNull(token) && token.getType().isDestroyer()) {
          p_game.getBoardFireCover().checkFireDisableFlag(token.getPosition(), p_game.getTokenFireLength(token), ($clinit_BoardFireCover$FdChange() , ENABLE), fdRemoved, fdAdded);
        }
      }
      this.addFdRemoved(fdRemoved);
      this.addFdAdded(fdAdded);
      this.setFdComputed(true);
    }
     else {
      this.setFdComputed(true);
    }
  }
}
;
_.getDestroyer2Position = function getDestroyer2Position(){
  return this.getNewPosition();
}
;
_.getSelectedPosition = function getSelectedPosition_4(p_game){
  if (isNotNull(this.getTokenDestroyer1(p_game))) {
    return this.getTokenDestroyer1(p_game).getPosition();
  }
  return null;
}
;
_.getTokenIds = function getTokenIds(){
  return this.m_TokenIds;
}
;
_.getTokenTarget = function getTokenTarget_0(p_game){
  return this.getToken_3(p_game);
}
;
_.getType_0 = function getType_11(){
  return $clinit_GameLogType() , EvtFire;
}
;
_.init_23 = function init_23(){
  this.setCost(2);
  this.m_TokenIds = null;
}
;
_.setDestroyer1Position = function setDestroyer1Position(p_position){
  this.setPosition(p_position);
}
;
_.setDestroyer2Position = function setDestroyer2Position(p_position){
  this.setNewPosition(p_position);
}
;
_.setTokenTarget = function setTokenTarget_0(p_token){
  this.setToken(p_token);
}
;
_.unexec = function unexec_9(p_game){
  var id_0, id$iterator, token;
  getClassPrototype(17).unexec.call(this, p_game);
  this.getTokenDestroyer1(p_game).setBulletCount(this.getTokenDestroyer1(p_game).getBulletCount() + 1);
  this.getTokenDestroyer1(p_game).decVersion();
  this.getTokenDestroyer2(p_game).setBulletCount(this.getTokenDestroyer2(p_game).getBulletCount() + 1);
  this.getTokenDestroyer2(p_game).decVersion();
  if (isNotNull(this.getTokenIds())) {
    for (id$iterator = this.getTokenIds().iterator_0(); id$iterator.hasNext_0();) {
      id_0 = castTo(id$iterator.next_1(), 66);
      token = p_game.getToken_0(id_0.longValue());
      if (isNotNull(token) && jsEquals(token.getLocation(), ($clinit_Location() , Graveyard))) {
        p_game.moveToken_0(token, token.getPosition());
        token.decVersion();
      }
    }
  }
  if (jsNotEquals(this.getTokenTarget(p_game).getType(), ($clinit_TokenType() , Pontoon))) {
    p_game.moveToken_0(this.getTokenTarget(p_game), this.getOldPosition());
    this.getTokenTarget(p_game).decVersion();
  }
  this.unexecFireDisabling(p_game);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtFire_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtFire', 60, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtFire_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtFire_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_72(streamReader, instance){
  $clinit_EbEvtFire_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_67(streamReader){
  $clinit_EbEvtFire_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtFire_2_classLit, {4:1, 1:1, 5:1}, 60, size_0, 0, 1);
}

function serialize_67(streamWriter, instance){
  $clinit_EbEvtFire_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtFire_FieldSerializer(){
  $clinit_EbEvtFire_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_73(streamReader, instance){
  $clinit_EbEvtFire_FieldSerializer();
  setM_TokenIds(instance, castTo(streamReader.readObject(), 12));
  deserialize_45(streamReader, instance);
}

function getM_TokenIds(instance){
  return instance.m_TokenIds;
}

function instantiate_68(streamReader){
  $clinit_EbEvtFire_FieldSerializer();
  return new EbEvtFire;
}

function serialize_68(streamWriter, instance){
  $clinit_EbEvtFire_FieldSerializer();
  streamWriter.writeObject(getM_TokenIds(instance));
  serialize_40(streamWriter, instance);
}

function setM_TokenIds(instance, value_0){
  instance.m_TokenIds = value_0;
}

function $clinit_EbEvtLand(){
  $clinit_EbEvtLand = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtLand(){
  $clinit_EbEvtLand();
  AnEventPlay.call(this);
  this.$init_328();
  this.init_24();
}

defineClass(214, 17, {21:1, 20:1, 17:1, 33:1, 214:1, 64:1, 4:1, 1:1}, EbEvtLand);
_.$init_328 = function $init_328(){
  this.m_TokenIds = null;
}
;
_.canBeParallelHidden = function canBeParallelHidden_1(){
  return false;
}
;
_.check_0 = function check_14(p_game){
  var coordinateSystem, currentToken, currentToken$iterator, i, i0, i1, land, landingPosition, myRegistration;
  getClassPrototype(17).check_0.call(this, p_game);
  if (this.getPosition().getX() == -1) {
    throw toJs(new RpcFmpException_1('', this));
  }
  if (jsNotEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Freighter)) || jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Orbit))) {
    throw toJs(new RpcFmpException_1('Only Freighter in orbit can be landed.', this));
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  landingPosition = initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_AnBoardPosition_2_classLit, {4:1, 1:1, 5:1}, 23, 6, 0, 1);
  setCheck(landingPosition, 0, this.getPosition());
  switch (landingPosition[0].getSector().ordinal_0()) {
    case ($clinit_Sector() , North).ordinal_0():
    case ($clinit_Sector() , SouthEast).ordinal_0():
    case ($clinit_Sector() , SouthWest).ordinal_0():
      setCheck(landingPosition, 1, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , North)));
      setCheck(landingPosition, 2, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , SouthEast)));
      setCheck(landingPosition, 3, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , SouthWest)));
      break;
    case ($clinit_Sector() , NorthEast).ordinal_0():
    case ($clinit_Sector() , South).ordinal_0():
    case ($clinit_Sector() , NorthWest).ordinal_0():
      setCheck(landingPosition, 1, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , NorthEast)));
      setCheck(landingPosition, 2, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , South)));
      setCheck(landingPosition, 3, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , NorthWest)));
    default:break;
  }
  for (i0 = 0; i0 < 4; i0++) {
    land = p_game.getLand_0(landingPosition[i0]);
    if (jsEquals(land, ($clinit_LandType() , None)) || jsEquals(land, ($clinit_LandType() , Sea)) || jsEquals(land, ($clinit_LandType() , Reef)) || jsEquals(land, ($clinit_LandType() , Montain))) {
      throw toJs(new RpcFmpException_1(this.errMsg().CantLandOn(getLandString(this.getAccountId(), land)), this));
    }
  }
  for (currentToken$iterator = p_game.getSetToken().iterator_0(); currentToken$iterator.hasNext_0();) {
    currentToken = castTo(currentToken$iterator.next_1(), 19);
    if (jsEquals(currentToken.getType(), ($clinit_TokenType() , Freighter)) && jsEquals(currentToken.getLocation(), ($clinit_Location() , Board)) && neq(currentToken.getId(), this.getToken_3(p_game).getId()) && p_game.getCoordinateSystem().getDiscreteDistance(landingPosition[0], currentToken.getPosition()) <= 9) {
      if ((this.getMyTeam(p_game).getColors(p_game.getPreview()) & currentToken.getColor_0()) != 0) {
        if (p_game.getCoordinateSystem().getDiscreteDistance(landingPosition[0], currentToken.getPosition()) <= 7) {
          throw toJs(new RpcFmpException_1(this.errMsg().CantLandCloser(7), this));
        }
      }
       else {
        throw toJs(new RpcFmpException_1(this.errMsg().CantLandCloser(9), this));
      }
    }
    if ((jsEquals(currentToken.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(currentToken.getType(), ($clinit_TokenType() , Ore3Generator))) && jsEquals(currentToken.getLocation(), ($clinit_Location() , Board)) && p_game.getCoordinateSystem().getDiscreteDistance(landingPosition[0], currentToken.getPosition()) <= 6 && p_game.getCoordinateSystem().getDiscreteDistance(landingPosition[0], currentToken.getPosition()) > 4) {
      throw toJs(new RpcFmpException_1("Sauf \xE0 le d\xE9truire, l'astronef ne peut atterrir \xE0 moins de " + 6 + ' hexagones de tout g\xE9n\xE9rateur de minerais.', this));
    }
  }
  if (!p_game.getMapShape().isEWLinked() && (this.getPosition().getX() < 2 || this.getPosition().getX() > p_game.getLandWidth() - 3)) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantLandTooCloseBorder(), this));
  }
  if (!p_game.getMapShape().isNSLinked() && (this.getPosition().getY() < 2 || this.getPosition().getY() > p_game.getLandHeight() - 3)) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantLandTooCloseBorder(), this));
  }
  coordinateSystem = p_game.getCoordinateSystem();
  for (i1 = 0; i1 < 6; i1++) {
    setCheck(landingPosition, i1, coordinateSystem.getNeighbor(this.getPosition(), getFromOrdinal_0(i1)));
    setCheck(landingPosition, i1, coordinateSystem.getNeighbor(landingPosition[i1], getFromOrdinal_0(i1)));
  }
  for (i = 0; i < 6; i++) {
    if (jsEquals(p_game.getLand_0(landingPosition[i]), ($clinit_LandType() , None))) {
      throw toJs(new RpcFmpException_1(this.errMsg().CantLandTooCloseBorder(), this));
    }
  }
}
;
_.exec_0 = function exec_13(p_game){
  var currentToken, currentToken$iterator, forbidenColor, index_0, landingPosition, token, token$iterator;
  getClassPrototype(17).exec_0.call(this, p_game);
  p_game.moveToken_0(this.getToken_3(p_game), this.getPosition());
  this.getToken_3(p_game).incVersion();
  this.m_TokenIds = new ArrayList;
  for (currentToken$iterator = p_game.getSetToken().iterator_0(); currentToken$iterator.hasNext_0();) {
    currentToken = castTo(currentToken$iterator.next_1(), 19);
    if (currentToken.getColor_0() == 0 && jsEquals(currentToken.getLocation(), ($clinit_Location() , Board)) && p_game.getCoordinateSystem().getDiscreteDistance(this.getPosition(), currentToken.getPosition()) <= 4) {
      this.m_TokenIds.add_5(valueOf_40(currentToken.getId()));
      p_game.moveToken(currentToken, ($clinit_Location() , Graveyard));
      currentToken.incVersion();
    }
  }
  landingPosition = initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_AnBoardPosition_2_classLit, {4:1, 1:1, 5:1}, 23, 4, 0, 1);
  setCheck(landingPosition, 0, this.getPosition());
  switch (landingPosition[0].getSector().ordinal_0()) {
    default:case ($clinit_Sector() , North).ordinal_0():
    case ($clinit_Sector() , SouthEast).ordinal_0():
    case ($clinit_Sector() , SouthWest).ordinal_0():
      setCheck(landingPosition, 1, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , North)));
      setCheck(landingPosition, 2, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , SouthEast)));
      setCheck(landingPosition, 3, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , SouthWest)));
      break;
    case ($clinit_Sector() , NorthEast).ordinal_0():
    case ($clinit_Sector() , South).ordinal_0():
    case ($clinit_Sector() , NorthWest).ordinal_0():
      setCheck(landingPosition, 1, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , NorthEast)));
      setCheck(landingPosition, 2, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , South)));
      setCheck(landingPosition, 3, p_game.getCoordinateSystem().getNeighbor(landingPosition[0], ($clinit_Sector() , NorthWest)));
  }
  index_0 = 0;
  if (this.getToken_3(p_game).containToken()) {
    for (token$iterator = this.getToken_3(p_game).getCopyContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Turret)) && index_0 < 3) {
        index_0++;
        p_game.moveToken_0(token, landingPosition[index_0]);
        token.incVersion();
      }
    }
  }
  forbidenColor = p_game.getBoardFireCover().getFireCoverColor(this.getToken_3(p_game));
  p_game.getBoardFireCover().incFireCover(this.getToken_3(p_game).getPosition(), 9, forbidenColor, true);
  p_game.getBoardFireCover().incFireCover(this.getToken_3(p_game).getPosition(), 9, forbidenColor, true);
}
;
_.getSelectedPosition = function getSelectedPosition_5(p_game){
  return this.getPosition();
}
;
_.getType_0 = function getType_12(){
  return $clinit_GameLogType() , EvtLand;
}
;
_.init_24 = function init_24(){
  this.setCost(0);
  this.m_TokenIds = null;
}
;
_.unexec = function unexec_10(p_game){
  var forbidenColor, id_0, id$iterator, position, position$iterator, token;
  getClassPrototype(17).unexec.call(this, p_game);
  for (position$iterator = this.getToken_3(p_game).getExtraPositions(p_game.getCoordinateSystem()).iterator_0(); position$iterator.hasNext_0();) {
    position = castTo(position$iterator.next_1(), 23);
    token = p_game.getToken_2(position, ($clinit_TokenType() , Turret));
    if (isNotNull(token)) {
      p_game.moveToken_1(token, this.getToken_3(p_game));
      token.decVersion();
    }
  }
  p_game.moveToken(this.getToken_3(p_game), ($clinit_Location() , Orbit));
  this.getToken_3(p_game).decVersion();
  p_game.updateLastTokenUpdate(null);
  if (isNotNull(this.m_TokenIds)) {
    for (id$iterator = this.m_TokenIds.iterator_0(); id$iterator.hasNext_0();) {
      id_0 = castTo(id$iterator.next_1(), 66);
      token = p_game.getToken_0(id_0.longValue());
      if (isNotNull(token) && jsEquals(token.getLocation(), ($clinit_Location() , Graveyard))) {
        p_game.moveToken_0(token, token.getPosition());
        token.decVersion();
      }
    }
  }
  forbidenColor = p_game.getBoardFireCover().getFireCoverColor(this.getToken_3(p_game));
  p_game.getBoardFireCover().decFireCover(this.getToken_3(p_game).getPosition(), 9, forbidenColor, true);
  p_game.getBoardFireCover().decFireCover(this.getToken_3(p_game).getPosition(), 9, forbidenColor, true);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLand_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtLand', 214, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtLand_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtLand_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_74(streamReader, instance){
  $clinit_EbEvtLand_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_69(streamReader){
  $clinit_EbEvtLand_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLand_2_classLit, {4:1, 1:1, 5:1}, 214, size_0, 0, 1);
}

function serialize_69(streamWriter, instance){
  $clinit_EbEvtLand_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtLand_FieldSerializer(){
  $clinit_EbEvtLand_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_75(streamReader, instance){
  $clinit_EbEvtLand_FieldSerializer();
  setM_TokenIds_0(instance, castTo(streamReader.readObject(), 12));
  deserialize_45(streamReader, instance);
}

function getM_TokenIds_0(instance){
  return instance.m_TokenIds;
}

function instantiate_70(streamReader){
  $clinit_EbEvtLand_FieldSerializer();
  return new EbEvtLand;
}

function serialize_70(streamWriter, instance){
  $clinit_EbEvtLand_FieldSerializer();
  streamWriter.writeObject(getM_TokenIds_0(instance));
  serialize_40(streamWriter, instance);
}

function setM_TokenIds_0(instance, value_0){
  instance.m_TokenIds = value_0;
}

function $clinit_EbEvtLoad(){
  $clinit_EbEvtLoad = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtLoad(){
  $clinit_EbEvtLoad();
  AnEventPlay.call(this);
  this.$init_329();
  this.init_25();
}

defineClass(180, 17, {21:1, 20:1, 17:1, 33:1, 180:1, 64:1, 4:1, 1:1}, EbEvtLoad);
_.$init_329 = function $init_329(){
  this.m_oldColor = 0;
  this.m_TokenIds = null;
}
;
_.check_0 = function check_15(p_game){
  var freighter, myRegistration;
  getClassPrototype(17).check_0.call(this, p_game);
  if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Turret))) {
    freighter = p_game.getToken_2(this.getTokenCarrier(p_game).getPosition(), ($clinit_TokenType() , Freighter));
    if (isNotNull(freighter)) {
      this.setTokenCarrier(freighter);
    }
  }
  if (jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Board)) || jsNotEquals(this.getTokenCarrier(p_game).getLocation(), ($clinit_Location() , Board))) {
    throw toJs(new RpcFmpException_1('token ' + this.getToken_3(p_game) + " can't be moved from location " + this.getToken_3(p_game).getLocation(), this));
  }
  if (!this.getToken_3(p_game).getPosition().equals_3(this.getToken_3(p_game).getPosition())) {
    throw toJs(new RpcFmpException_1('bad action', this));
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (this.getToken_3(p_game).canBeColored() && this.getToken_3(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if ((!myRegistration.getEnuColor().isColored(this.getTokenCarrier(p_game).getColor_0()) || this.getTokenCarrier(p_game).getColor_0() == 0) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Freighter)) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenCarrier(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (this.getTokenCarrier(p_game).getColor_0() == 0 && this.getToken_3(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), 0), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (!this.getToken_3(p_game).isNeighbor_0(p_game.getCoordinateSystem(), this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1('les deux pions ne sont pas cote a cote', this));
  }
  if (!p_game.isTokenTideActive(this.getToken_3(p_game)) && (!this.getToken_3(p_game).getType().isOre() || jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Crayfish)))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveOn(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getLandString(this.getAccountId(), p_game.getLand_0(this.getToken_3(p_game).getPosition()))), this));
  }
  if (!p_game.canTokenLoad(this.getTokenCarrier(p_game), this.getToken_3(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantLoad(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game)), getTokenString_0(this.getAccountId(), this.getToken_3(p_game))), this));
  }
  if (jsEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Heap)) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Teleporter)) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp)) && jsEquals(p_game.getLand_0(this.getTokenCarrier(p_game).getPosition()), ($clinit_LandType() , Montain))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveOn(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getLandString(this.getAccountId(), p_game.getLand_0(this.getTokenCarrier(p_game).getPosition()))), this));
  }
  if (!p_game.isTokenTideActive(this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableTide(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game))), this));
  }
  if (!p_game.isTokenFireActive(this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableFire(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getTokenCarrier(p_game)).getValue_1())), this));
  }
  if (!p_game.isTokenFireActive(this.getToken_3(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableFire(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getTokenCarrier(p_game)).getValue_1())), this));
  }
  if (this.getToken_3(p_game).getColor_0() == 0 && p_game.getOpponentFireCover(this.getMyTeam(p_game).getColors(p_game.getPreview()), this.getToken_3(p_game).getPosition()).getValue_1() != 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableFire(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getTokenCarrier(p_game)).getValue_1())), this));
  }
}
;
_.checkFireDisabling = function checkFireDisabling(p_game){
  var fd, fd$iterator, fd$iterator0, fd2Remove, fdAdded, fdRemoved, fireRange, target;
  if (this.isFdComputed()) {
    p_game.getBoardFireCover().addFireDisabling_0(this.getFdAdded());
    p_game.getBoardFireCover().removeFireDisabling_0(this.getFdRemoved());
  }
   else {
    fireRange = p_game.getTokenFireLength(this.getToken_3(p_game));
    fdRemoved = new ArrayList;
    fdAdded = new ArrayList;
    if (this.getToken_3(p_game).isFireDisabling()) {
      p_game.getBoardFireCover().decFireCover_1(this.getToken_3(p_game));
      fd2Remove = new ArrayList;
      fd2Remove.addAll(this.getToken_3(p_game).getFireDisablingList());
      fdRemoved.addAll(this.getToken_3(p_game).getFireDisablingList());
      p_game.getBoardFireCover().removeFireDisabling_0(fd2Remove);
      for (fd$iterator0 = fd2Remove.iterator_0(); fd$iterator0.hasNext_0();) {
        fd = castTo(fd$iterator0.next_1(), 96);
        target = fd.getTarget(p_game);
        if (!target.isFireDisabled()) {
          p_game.getBoardFireCover().checkFireDisableFlag(target.getPosition(), p_game.getTokenFireLength(target), fromDestroyerFireDisableStatus(target.isFireDisabled()), fdRemoved, fdAdded);
        }
      }
      for (fd$iterator = fd2Remove.iterator_0(); fd$iterator.hasNext_0();) {
        fd = castTo(fd$iterator.next_1(), 96);
        target = fd.getTarget(p_game);
        if (!target.isFireDisabled()) {
          p_game.getBoardFireCover().recursiveCheckFireDisableFlag(target, ($clinit_BoardFireCover$FdChange() , DISABLE), fdRemoved, fdAdded);
        }
      }
      p_game.getBoardFireCover().incFireCover_1(this.getToken_3(p_game));
    }
     else if (this.getToken_3(p_game).isFireDisabled()) {
      fd2Remove = new ArrayList;
      fd2Remove.addAll(this.getToken_3(p_game).getFireDisablingList());
      fdRemoved.addAll(this.getToken_3(p_game).getFireDisablingList());
      p_game.getBoardFireCover().removeFireDisabling_0(fd2Remove);
    }
    p_game.getBoardFireCover().checkFireDisableFlag(this.getToken_3(p_game).getPosition(), fireRange + 1, fromDestroyerFireDisableStatus(this.getToken_3(p_game).isFireDisabled()), fdRemoved, fdAdded);
    p_game.getBoardFireCover().cleanFireDisableCollection(fdRemoved, fdAdded);
    this.addFdRemoved(fdRemoved);
    this.addFdAdded(fdAdded);
    this.setFdComputed(true);
  }
}
;
_.exec_0 = function exec_14(p_game){
  var fdAdded, fdRemoved, freighters, idToken, idToken$iterator, neighborPosition, neighborPosition$iterator, otherPontoon, token, wasFdComputed;
  getClassPrototype(17).exec_0.call(this, p_game);
  wasFdComputed = this.isFdComputed();
  this.setOldColor_0(this.getToken_3(p_game).getColor_0());
  this.setOldPosition(this.getToken_3(p_game).getPosition());
  if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Teleporter))) {
    freighters = p_game.getAllFreighter(this.getTokenCarrier(p_game).getColor_0());
    if (freighters.size_1() > 0) {
      p_game.moveToken_1(this.getToken_3(p_game), castTo(freighters.get_0(0), 19));
      castTo(freighters.get_0(0), 19).incVersion();
    }
  }
   else if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    p_game.moveToken_1(this.getToken_3(p_game), p_game.getMainWarp());
  }
   else {
    p_game.moveToken_1(this.getToken_3(p_game), this.getTokenCarrier(p_game));
  }
  this.getToken_3(p_game).incVersion();
  this.getTokenCarrier(p_game).incVersion();
  this.checkFireDisabling(p_game);
  this.m_TokenIds = null;
  if (jsEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Pontoon))) {
    for (neighborPosition$iterator = p_game.getCoordinateSystem().getAllNeighbors(this.getOldPosition()).iterator_0(); neighborPosition$iterator.hasNext_0();) {
      neighborPosition = castTo(neighborPosition$iterator.next_1(), 23);
      otherPontoon = p_game.getToken_2(neighborPosition, ($clinit_TokenType() , Pontoon));
      if (isNotNull(otherPontoon)) {
        if (!p_game.isPontoonLinkToGround_0(otherPontoon)) {
          if (isNull(this.m_TokenIds)) {
            this.m_TokenIds = p_game.chainRemovePontoon(otherPontoon, this.getFdRemoved());
          }
           else {
            this.m_TokenIds.addAll(p_game.chainRemovePontoon(otherPontoon, this.getFdRemoved()));
          }
        }
      }
    }
  }
  if (wasFdComputed) {
    p_game.getBoardFireCover().addFireDisabling_0(this.getFdAdded());
    p_game.getBoardFireCover().removeFireDisabling_0(this.getFdRemoved());
  }
   else if (isNotNull(this.m_TokenIds)) {
    fdRemoved = new ArrayList;
    fdAdded = new ArrayList;
    for (idToken$iterator = this.m_TokenIds.iterator_0(); idToken$iterator.hasNext_0();) {
      idToken = castTo(idToken$iterator.next_1(), 66);
      token = p_game.getToken_0(idToken.longValue());
      if (isNotNull(token) && token.getType().isDestroyer()) {
        p_game.getBoardFireCover().checkFireDisableFlag(token.getPosition(), p_game.getTokenFireLength(token), ($clinit_BoardFireCover$FdChange() , ENABLE), fdRemoved, fdAdded);
      }
    }
    this.addFdRemoved(fdRemoved);
    this.addFdAdded(fdAdded);
    this.setFdComputed(true);
  }
   else {
    this.setFdComputed(true);
  }
}
;
_.getOldColor_0 = function getOldColor_0(){
  return this.m_oldColor;
}
;
_.getSelectedPosition = function getSelectedPosition_6(p_game){
  if (isNotNull(this.getOldPosition())) {
    return this.getOldPosition();
  }
  return this.getToken_3(p_game).getPosition();
}
;
_.getType_0 = function getType_13(){
  return $clinit_GameLogType() , EvtLoad;
}
;
_.init_25 = function init_25(){
  this.setCost(1);
  this.m_TokenIds = null;
  this.m_oldColor = 0;
}
;
_.setOldColor_0 = function setOldColor_0(p_oldColor){
  this.m_oldColor = p_oldColor;
}
;
_.setToken = function setToken_0(p_token){
  getClassPrototype(17).setToken.call(this, p_token);
  this.setCost(1);
  if (jsEquals(p_token.getType(), ($clinit_TokenType() , Teleporter))) {
    this.setCost(4);
  }
}
;
_.unexec = function unexec_11(p_game){
  var id_0, id$iterator, token;
  getClassPrototype(17).unexec.call(this, p_game);
  p_game.moveToken_0(this.getToken_3(p_game), this.getOldPosition());
  this.getToken_3(p_game).decVersion();
  if (this.getToken_3(p_game).canBeColored()) {
    this.getToken_3(p_game).setColor(this.getOldColor_0());
  }
  this.getTokenCarrier(p_game).decVersion();
  if (isNotNull(this.m_TokenIds)) {
    for (id$iterator = this.m_TokenIds.iterator_0(); id$iterator.hasNext_0();) {
      id_0 = castTo(id$iterator.next_1(), 66);
      token = p_game.getToken_0(id_0.longValue());
      if (isNotNull(token) && jsEquals(token.getLocation(), ($clinit_Location() , Graveyard))) {
        p_game.moveToken_0(token, token.getPosition());
        token.decVersion();
      }
    }
  }
  this.unexecFireDisabling(p_game);
}
;
_.m_oldColor = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLoad_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtLoad', 180, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtLoad_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtLoad_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_76(streamReader, instance){
  $clinit_EbEvtLoad_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_71(streamReader){
  $clinit_EbEvtLoad_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtLoad_2_classLit, {4:1, 1:1, 5:1}, 180, size_0, 0, 1);
}

function serialize_71(streamWriter, instance){
  $clinit_EbEvtLoad_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtLoad_FieldSerializer(){
  $clinit_EbEvtLoad_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_77(streamReader, instance){
  $clinit_EbEvtLoad_FieldSerializer();
  setM_TokenIds_1(instance, castTo(streamReader.readObject(), 12));
  setM_oldColor_0(instance, streamReader.readInt());
  deserialize_45(streamReader, instance);
}

function getM_TokenIds_1(instance){
  return instance.m_TokenIds;
}

function getM_oldColor_0(instance){
  return instance.m_oldColor;
}

function instantiate_72(streamReader){
  $clinit_EbEvtLoad_FieldSerializer();
  return new EbEvtLoad;
}

function serialize_72(streamWriter, instance){
  $clinit_EbEvtLoad_FieldSerializer();
  streamWriter.writeObject(getM_TokenIds_1(instance));
  streamWriter.writeInt(getM_oldColor_0(instance));
  serialize_40(streamWriter, instance);
}

function setM_TokenIds_1(instance, value_0){
  instance.m_TokenIds = value_0;
}

function setM_oldColor_0(instance, value_0){
  instance.m_oldColor = value_0;
}

function $clinit_EbEvtMessage(){
  $clinit_EbEvtMessage = emptyMethod;
  $clinit_AnEventUser();
}

function EbEvtMessage(){
  $clinit_EbEvtMessage();
  AnEventUser.call(this);
  this.$init_330();
  this.init_26();
}

defineClass(137, 33, {21:1, 20:1, 33:1, 137:1, 64:1, 4:1, 1:1}, EbEvtMessage);
_.$init_330 = function $init_330(){
  this.m_message = null;
}
;
_.exec_0 = function exec_15(p_game){
  getClassPrototype(20).exec_0.call(this, p_game);
  if (jsEquals(p_game.getGameType(), ($clinit_GameType() , Puzzle_0)) && (jsEquals(p_game.getMessage(), null) || !startsWith_Ljava_lang_String__Z__devirtual$(p_game.getMessage(), '#recording'))) {
    p_game.setMessage(this.getMessage());
  }
}
;
_.getMessage = function getMessage_3(){
  return this.m_message;
}
;
_.getType_0 = function getType_14(){
  return $clinit_GameLogType() , EvtMessage;
}
;
_.init_26 = function init_26(){
  this.m_message = null;
}
;
_.setMessage = function setMessage_1(p_message){
  this.m_message = p_message;
}
;
_.unexec = function unexec_12(p_game){
  getClassPrototype(20).unexec.call(this, p_game);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMessage_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtMessage', 137, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit);
function $clinit_EbEvtMessage_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtMessage_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_78(streamReader, instance){
  $clinit_EbEvtMessage_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_73(streamReader){
  $clinit_EbEvtMessage_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMessage_2_classLit, {4:1, 1:1, 5:1}, 137, size_0, 0, 1);
}

function serialize_73(streamWriter, instance){
  $clinit_EbEvtMessage_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtMessage_FieldSerializer(){
  $clinit_EbEvtMessage_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_79(streamReader, instance){
  $clinit_EbEvtMessage_FieldSerializer();
  setM_message_1(instance, streamReader.readString());
  deserialize_47(streamReader, instance);
}

function getM_message_0(instance){
  return instance.m_message;
}

function instantiate_74(streamReader){
  $clinit_EbEvtMessage_FieldSerializer();
  return new EbEvtMessage;
}

function serialize_74(streamWriter, instance){
  $clinit_EbEvtMessage_FieldSerializer();
  streamWriter.writeString(getM_message_0(instance));
  serialize_42(streamWriter, instance);
}

function setM_message_1(instance, value_0){
  instance.m_message = value_0;
}

function $clinit_EbEvtMove(){
  $clinit_EbEvtMove = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtMove(){
  $clinit_EbEvtMove();
  AnEventPlay.call(this);
  this.$init_331();
  this.init_27();
}

defineClass(84, 17, {21:1, 20:1, 17:1, 33:1, 84:1, 64:1, 4:1, 1:1}, EbEvtMove);
_.$init_331 = function $init_331(){
}
;
_.check_0 = function check_16(p_game){
  var coord, fireCoverColorNew, fireCoverColorOld, headPosition, moveToPontoon, myRegistration, newExtraPosition, tailPosition, token, token$iterator, tokenExtraPosition, tokenPosition, tokensOnWay;
  getClassPrototype(17).check_0.call(this, p_game);
  if (this.getToken_3(p_game).getHexagonSize() == 2 && isNotNull(this.getPosition()) && this.getToken_3(p_game).isNeighbor(p_game.getCoordinateSystem(), this.getNewPosition()) && (this.getPosition().equals_3(this.getToken_3(p_game).getPosition()) || this.getPosition().equals_3(castTo(this.getToken_3(p_game).getExtraPositions(p_game.getCoordinateSystem()).get_0(0), 73)))) {
    coord = p_game.getCoordinateSystem();
    tailPosition = castTo(this.getToken_3(p_game).getExtraPositions(coord).get_0(0), 23);
    headPosition = this.getToken_3(p_game).getPosition();
    if (headPosition.equals_3(this.getPosition())) {
      if (coord.areNeighbor(this.getNewPosition(), tailPosition)) {
        this.getNewPosition().setSector(coord.getSector_0(this.getNewPosition(), tailPosition));
      }
       else {
        this.getNewPosition().setSector(coord.getSector_0(this.getNewPosition(), headPosition));
      }
    }
     else {
      if (coord.areNeighbor(this.getNewPosition(), headPosition)) {
        headPosition = new AnBoardPosition_2(headPosition);
        headPosition.setSector(coord.getSector_0(headPosition, this.getNewPosition()));
        this.setNewPosition(headPosition);
      }
       else {
        tailPosition = new AnBoardPosition_2(tailPosition);
        tailPosition.setSector(coord.getSector_0(tailPosition, this.getNewPosition()));
        this.setNewPosition(tailPosition);
      }
    }
    this.setPosition(null);
  }
  if (jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Board)) && jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Token))) {
    throw toJs(new RpcFmpException_1('token ' + this.getToken_3(p_game) + " can't be moved from location " + this.getToken_3(p_game).getLocation(), this));
  }
  if (this.getToken_3(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1('vous ne pouvez pas d\xE9placer des pions incolores', this));
  }
  if (jsEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Freighter))) {
    throw toJs(new RpcFmpException_1('vous ne pouvez pas d\xE9placer votre astronef', this));
  }
  if (jsEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Teleporter))) {
    throw toJs(new RpcFmpException_1('Le teleporter ne se deplace pas seul', this));
  }
  tokenPosition = this.getToken_3(p_game).getPosition();
  if (this.getToken_3(p_game).getHexagonSize() == 1) {
    if (!tokenPosition.equals_3(this.getNewPosition()) && !p_game.getCoordinateSystem().areNeighbor(tokenPosition, this.getNewPosition())) {
      throw toJs(new RpcFmpException_1('You must select all moving step without any gap between them.', this));
    }
  }
   else {
    tokenExtraPosition = p_game.getCoordinateSystem().getNeighbor(tokenPosition, tokenPosition.getSector());
    newExtraPosition = p_game.getCoordinateSystem().getNeighbor(this.getNewPosition(), this.getNewPosition().getSector());
    if (!tokenPosition.equals_3(this.getNewPosition()) && !tokenExtraPosition.equals_3(newExtraPosition) && !tokenPosition.equals_3(newExtraPosition) && !tokenExtraPosition.equals_3(this.getNewPosition())) {
      throw toJs(new RpcFmpException_1('You must select all moving step without any gap between them.', this));
    }
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (!p_game.isTokenTideActive(this.getToken_3(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveOn(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getLandString(this.getAccountId(), p_game.getLand_0(tokenPosition))), this));
  }
  moveToPontoon = false;
  tokensOnWay = p_game.getAllToken(this.getNewPosition());
  for (token$iterator = tokensOnWay.iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsNotEquals(token, this.getToken_3(p_game)) && jsNotEquals(token.getType(), ($clinit_TokenType() , Pontoon)) && jsNotEquals(token.getType(), ($clinit_TokenType() , Sluice))) {
      throw toJs(new RpcFmpException_1('Vous devez d\xE9placer votre pions sur une case libre', this));
    }
    if (jsEquals(token.getType(), ($clinit_TokenType() , Pontoon)) || jsEquals(token.getType(), ($clinit_TokenType() , Sluice))) {
      if (token.canLoad(this.getToken_3(p_game).getType())) {
        moveToPontoon = true;
      }
       else {
        throw toJs(new RpcFmpException_1(getTokenString_0(0, this.getToken_3(p_game)) + ' ne peut pas se deplacer sur le ' + getTokenString_0(0, token), this));
      }
    }
  }
  if (!moveToPontoon) {
    if (!p_game.canTokenMoveOn(this.getToken_3(p_game), this.getNewPosition())) {
      throw toJs(new RpcFmpException_1(this.errMsg().CantMoveOn(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getLandString(this.getAccountId(), p_game.getLand_0(this.getNewPosition()))), this));
    }
  }
  fireCoverColorNew = p_game.getOpponentFireCover(myRegistration.getTeam_1(p_game).getColors(p_game.getPreview()), this.getNewPosition());
  if (this.getToken_3(p_game).isFireDisabled() && fireCoverColorNew.getValue_1() != 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDisableFire(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getColorString(this.getAccountId(), fireCoverColorNew.getValue_1())), this));
  }
  fireCoverColorOld = p_game.getOpponentFireCover_0(this.getToken_3(p_game));
  this.exec_0(p_game);
  fireCoverColorNew = p_game.getOpponentFireCover_0(this.getToken_3(p_game));
  this.unexec(p_game);
  if (fireCoverColorOld.getValue_1() != 0 && isNotNull(p_game.getLastLog()) && jsEquals(p_game.getLastLog().getType_0(), ($clinit_GameLogType() , EvtMove)) && eq(castTo(p_game.getLastLog(), 84).getPackedToken().getId(), this.getPackedToken().getId())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDisableFire(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getColorString(this.getAccountId(), fireCoverColorOld.getValue_1())), this));
  }
  if (fireCoverColorOld.getValue_1() != 0 && fireCoverColorNew.getValue_1() != 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDisableFire(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getColorString(this.getAccountId(), fireCoverColorNew.getValue_1())), this));
  }
}
;
_.checkFireDisabling_0 = function checkFireDisabling_0(p_game){
  var fd, fd$iterator, fd$iterator0, fd$iterator1, fd2, fd2$iterator, fd2Remove, fdAdded, fdRemoved, fireRange, target;
  if (this.isFdComputed()) {
    p_game.getBoardFireCover().addFireDisabling_0(this.getFdAdded());
    p_game.getBoardFireCover().removeFireDisabling_0(this.getFdRemoved());
  }
   else {
    fireRange = p_game.getTokenFireLength(this.getToken_3(p_game));
    fdRemoved = new ArrayList;
    fdAdded = new ArrayList;
    if (this.getToken_3(p_game).isFireDisabling()) {
      p_game.getBoardFireCover().decFireCover_1(this.getToken_3(p_game));
      fd2Remove = new ArrayList;
      for (fd$iterator0 = this.getToken_3(p_game).getFireDisablingList().iterator_0(); fd$iterator0.hasNext_0();) {
        fd = castTo(fd$iterator0.next_1(), 96);
        fd2Remove.add_5(fd);
        if (neq(fd.getDestroyer1Id(), this.getToken_3(p_game).getId())) {
          for (fd2$iterator = fd.getDestroyer1(p_game).getFireDisablingList().iterator_0(); fd2$iterator.hasNext_0();) {
            fd2 = castTo(fd2$iterator.next_1(), 96);
            if (neq(fd2.getTargetId(), fd.getTargetId()) && p_game.canTokenFireOn_2(fd.getTarget(p_game), fd2.getDestroyer2(p_game))) {
              fd2Remove.add_5(fd2);
            }
          }
        }
         else if (neq(fd.getDestroyer2Id(), this.getToken_3(p_game).getId())) {
          for (fd2$iterator = fd.getDestroyer2(p_game).getFireDisablingList().iterator_0(); fd2$iterator.hasNext_0();) {
            fd2 = castTo(fd2$iterator.next_1(), 96);
            if (neq(fd2.getTargetId(), fd.getTargetId()) && p_game.canTokenFireOn_2(fd.getTarget(p_game), fd2.getDestroyer1(p_game))) {
              fd2Remove.add_5(fd2);
            }
          }
        }
      }
      fdRemoved.addAll(fd2Remove);
      p_game.getBoardFireCover().removeFireDisabling_0(fd2Remove);
      for (fd$iterator1 = fd2Remove.iterator_0(); fd$iterator1.hasNext_0();) {
        fd = castTo(fd$iterator1.next_1(), 96);
        target = fd.getTarget(p_game);
        if (!target.isFireDisabled()) {
          p_game.getBoardFireCover().checkFireDisableFlag(target.getPosition(), p_game.getTokenFireLength(target), fromDestroyerFireDisableStatus(target.isFireDisabled()), fdRemoved, fdAdded);
        }
      }
      for (fd$iterator = fd2Remove.iterator_0(); fd$iterator.hasNext_0();) {
        fd = castTo(fd$iterator.next_1(), 96);
        target = fd.getTarget(p_game);
        if (!target.isFireDisabled()) {
          p_game.getBoardFireCover().recursiveCheckFireDisableFlag(target, ($clinit_BoardFireCover$FdChange() , DISABLE), fdRemoved, fdAdded);
        }
      }
      p_game.getBoardFireCover().incFireCover_1(this.getToken_3(p_game));
    }
     else if (this.getToken_3(p_game).isFireDisabled()) {
      fd2Remove = new ArrayList;
      fd2Remove.addAll(this.getToken_3(p_game).getFireDisablingList());
      fdRemoved.addAll(this.getToken_3(p_game).getFireDisablingList());
      p_game.getBoardFireCover().removeFireDisabling_0(fd2Remove);
    }
    p_game.getBoardFireCover().checkFireDisableFlag(this.getToken_3(p_game).getPosition(), fireRange + 1, fromDestroyerFireDisableStatus(this.getToken_3(p_game).isFireDisabled()), fdRemoved, fdAdded);
    p_game.getBoardFireCover().cleanFireDisableCollection(fdRemoved, fdAdded);
    this.addFdRemoved(fdRemoved);
    this.addFdAdded(fdAdded);
    this.setFdComputed(true);
  }
}
;
_.exec_0 = function exec_16(p_game){
  getClassPrototype(17).exec_0.call(this, p_game);
  this.setOldPosition(this.getToken_3(p_game).getPosition());
  p_game.moveToken_0(this.getToken_3(p_game), this.getNewPosition());
  this.checkFireDisabling_0(p_game);
  this.getToken_3(p_game).incVersion();
}
;
_.getSelectedPosition = function getSelectedPosition_7(p_game){
  if (isNotNull(this.getOldPosition())) {
    return this.getOldPosition();
  }
  return this.getToken_3(p_game).getPosition();
}
;
_.getType_0 = function getType_15(){
  return $clinit_GameLogType() , EvtMove;
}
;
_.init_27 = function init_27(){
  this.setCost(1);
}
;
_.unexec = function unexec_13(p_game){
  getClassPrototype(17).unexec.call(this, p_game);
  p_game.moveToken_0(this.getToken_3(p_game), this.getOldPosition());
  this.getToken_3(p_game).decVersion();
  this.unexecFireDisabling(p_game);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMove_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtMove', 84, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtMove_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtMove_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_80(streamReader, instance){
  $clinit_EbEvtMove_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_75(streamReader){
  $clinit_EbEvtMove_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtMove_2_classLit, {4:1, 1:1, 5:1}, 84, size_0, 0, 1);
}

function serialize_75(streamWriter, instance){
  $clinit_EbEvtMove_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtMove_FieldSerializer(){
  $clinit_EbEvtMove_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_81(streamReader, instance){
  $clinit_EbEvtMove_FieldSerializer();
  deserialize_45(streamReader, instance);
}

function instantiate_76(streamReader){
  $clinit_EbEvtMove_FieldSerializer();
  return new EbEvtMove;
}

function serialize_76(streamWriter, instance){
  $clinit_EbEvtMove_FieldSerializer();
  serialize_40(streamWriter, instance);
}

function $clinit_EbEvtPlayerTurn(){
  $clinit_EbEvtPlayerTurn = emptyMethod;
  $clinit_AnEvent();
}

function EbEvtPlayerTurn(){
  $clinit_EbEvtPlayerTurn();
  AnEvent.call(this);
  this.$init_332();
  this.init_28();
}

defineClass(144, 20, {21:1, 20:1, 144:1, 64:1, 4:1, 1:1}, EbEvtPlayerTurn);
_.$init_332 = function $init_332(){
  this.m_accountId = 0;
  this.m_oldActionPt = 0;
  this.m_endTurnDate = null;
  this.m_oldTurn = 0;
  this.m_newTurn = 0;
  this.m_oldPlayerId = 0;
  this.m_oldCurrentPlayersCount = 0;
  this.oreToRemoveWhileUnexec = null;
}
;
_.addCurrentPlayer = function addCurrentPlayer(p_game, nextPlayerRegistration){
  var actionInc, actionPt, nextPlayerColor, token, token$iterator;
  if (isNull(nextPlayerRegistration))
    return;
  if (nextPlayerRegistration.getOnBoardFreighterCount(p_game) <= 0 || !nextPlayerRegistration.haveAccount()) {
    return;
  }
  nextPlayerColor = nextPlayerRegistration.getEnuColor();
  for (token$iterator = p_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (token.getColor_0() != 0 && jsNotEquals(token.getType(), ($clinit_TokenType() , Freighter)) && token.getBulletCount() < token.getType().getMaxBulletCount() && nextPlayerColor.isColored(token.getColor_0())) {
      token.setBulletCount(token.getBulletCount() + p_game.getEbConfigGameTime().getBulletCountIncrement());
    }
  }
  if (!p_game.isTimeStepParallelHidden(p_game.getCurrentTimeStep())) {
    actionInc = nextPlayerRegistration.getActionInc(p_game);
    actionPt = nextPlayerRegistration.getPtAction() + actionInc;
    if (actionPt > nextPlayerRegistration.getMaxActionPt(p_game)) {
      actionPt = nextPlayerRegistration.getMaxActionPt(p_game);
    }
    nextPlayerRegistration.setPtAction(actionPt);
  }
  if (p_game.getCurrentTimeStep() > 1 && p_game.getEbConfigGameTime().getTimeStepDurationInSec() != 0) {
    if (isNull(this.m_endTurnDate)) {
      this.m_endTurnDate = new Date_1(add_19(currentTimeMillis_0(), p_game.getEbConfigGameTime().getTimeStepDurationInMili()));
    }
    nextPlayerRegistration.getTeam_1(p_game).setEndTurnDate(this.m_endTurnDate);
  }
  p_game.getCurrentPlayerIds().add_5(valueOf_40(nextPlayerRegistration.getId()));
}
;
_.check_0 = function check_17(p_game){
  var freighter, myRegistration, playerColor, token, token$iterator, warp;
  getClassPrototype(20).check_0.call(this, p_game);
  if (this.isAuto()) {
    return;
  }
  if (jsNotEquals(p_game.getStatus(), ($clinit_GameStatus() , Running))) {
    throw toJs(new RpcFmpException_1(this.errMsg().gameNotStarted(), this));
  }
  if (p_game.isFinished()) {
    throw toJs(new RpcFmpException_1('This game is finished', this));
  }
  if (p_game.isParallel() && p_game.getCurrentTimeStep() > 1) {
    throw toJs(new RpcFmpException_1("You can't end your turn in parallele mode", this));
  }
  if (p_game.getCurrentPlayerIds().isEmpty()) {
    throw toJs(new RpcFmpException_1("You can't end your turn: no current player", this));
  }
  myRegistration = p_game.getRegistration_0(this.getOldPlayerId(p_game));
  if (isNull(myRegistration)) {
    throw toJs(new RpcFmpException_1('Not your turn', this));
  }
  if (p_game.getCurrentTimeStep() <= p_game.getEbConfigGameTime().getDeploymentTimeStep()) {
    freighter = p_game.getFreighter(myRegistration);
    if (isNotNull(freighter) && jsEquals(freighter.getLocation(), ($clinit_Location() , Orbit))) {
      throw toJs(new RpcFmpException_1(this.errMsg().mustLandFreighter(), this));
    }
  }
  if (!this.isAuto()) {
    playerColor = myRegistration.getEnuColor();
    for (token$iterator = p_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.getColor_0() != 0 && playerColor.isColored(token.getColor_0()) && isNotNull(p_game.getTankCheating(token))) {
        throw toJs(new RpcFmpException_1(this.errMsg().cantEndTurnTwoTankMontain(), this));
      }
    }
    warp = p_game.getMainWarp();
    if (isNotNull(warp) && warp.containToken()) {
      throw toJs(new RpcFmpException_1('Vous ne pouvez pas terminer votre tour en laissant des unit\xE9s dans le warp', this));
    }
  }
}
;
_.errMsg = function errMsg_0(){
  return getMessagesError(this.getAccountId());
}
;
_.exec_0 = function exec_17(p_game){
  var currentPlayerRegistration, game, isFirstExec, nextTeam, oreToken, registration, registration$iterator, team, team$iterator, teamOnBoard, token, token$iterator, token$iterator0;
  getClassPrototype(20).exec_0.call(this, p_game);
  game = p_game;
  if (!isNotNull(game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  currentPlayerRegistration = p_game.getRegistration_0(this.getOldPlayerId(p_game));
  if (isNull(currentPlayerRegistration)) {
    game.setCurrentTimeStep(narrow_short(game.getCurrentTimeStep()) + 1);
    return;
  }
  this.m_oldActionPt = currentPlayerRegistration.getPtAction();
  currentPlayerRegistration.setPtAction(currentPlayerRegistration.getRoundedActionPt(p_game));
  this.m_oldCurrentPlayersCount = game.getCurrentPlayerIds().size_1();
  this.m_oldTurn = narrow_short(game.getCurrentTimeStep());
  this.m_newTurn = this.m_oldTurn;
  if (game.getCurrentPlayerIds().size_1() > 1) {
    game.getCurrentPlayerIds().remove_1(castTo(valueOf_40(this.getOldPlayerId(p_game)), 66));
  }
   else {
    nextTeam = null;
    if (game.isTimeStepParallelHidden(this.m_oldTurn)) {
      nextTeam = game.getNextTeam2Play(-1);
    }
     else {
      nextTeam = game.getNextTeam2Play(currentPlayerRegistration.getTeam_1(p_game).getOrderIndex());
    }
    if (nextTeam.getOrderIndex() <= currentPlayerRegistration.getTeam_1(p_game).getOrderIndex()) {
      this.m_newTurn++;
      if (game.isTimeStepParallelHidden(this.m_oldTurn)) {
        this.playRegistrationEvents(p_game);
        while (game.isTimeStepParallelHidden(this.m_newTurn))
          this.m_newTurn++;
        nextTeam = game.getNextTeam2Play(-1);
      }
      game.setCurrentTimeStep(this.m_newTurn);
      if (game.isParallel()) {
        p_game.setLastTimeStepChange(new Date_0);
      }
    }
    for (team$iterator = game.getTeams().iterator_0(); team$iterator.hasNext_0();) {
      team = castTo(team$iterator.next_1(), 43);
      team.setEndTurnDate(null);
    }
    game.getCurrentPlayerIds().clear_0();
    if (game.isTimeStepParallelHidden(game.getCurrentTimeStep()) || game.isParallel() && game.getCurrentTimeStep() > 1) {
      for (registration$iterator = game.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
        registration = castTo(registration$iterator.next_1(), 51);
        this.addCurrentPlayer(game, registration);
      }
    }
     else {
      for (registration$iterator = nextTeam.getPlayers(p_game.getPreview()).iterator_0(); registration$iterator.hasNext_0();) {
        registration = castTo(registration$iterator.next_1(), 51);
        this.addCurrentPlayer(game, registration);
      }
    }
    teamOnBoard = game.countTeamOnBoard();
    isFirstExec = isNull(this.oreToRemoveWhileUnexec);
    if (isFirstExec) {
      this.oreToRemoveWhileUnexec = new ArrayList;
    }
    for (token$iterator0 = p_game.getSetToken().iterator_0(); token$iterator0.hasNext_0();) {
      token = castTo(token$iterator0.next_1(), 19);
      if ((jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) && jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
        if (game.getAllToken(token.getPosition()).size_1() >= 2) {
          token.setBulletCount(0);
        }
         else if (token.getBulletCount() >= teamOnBoard * 2) {
          token.setBulletCount(0);
          if (isFirstExec) {
            oreToken = new EbToken_0(($clinit_TokenType() , Ore));
            if (jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
              oreToken.setType(($clinit_TokenType() , Ore3));
            }
            oreToken.setPosition(token.getPosition());
            this.oreToRemoveWhileUnexec.add_5(oreToken);
          }
        }
         else {
          token.setBulletCount(token.getBulletCount() + 1);
        }
      }
    }
    for (token$iterator = this.oreToRemoveWhileUnexec.iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (token.isTrancient() || isNull(game.getToken_0(token.getId()))) {
        game.addToken_1(token);
      }
       else {
        token = game.getToken_0(token.getId());
      }
      p_game.moveToken(token, ($clinit_Location() , Board));
      token.incVersion();
    }
  }
}
;
_.getAccountId = function getAccountId_1(){
  return this.m_accountId;
}
;
_.getNewTurn = function getNewTurn(){
  return this.m_newTurn;
}
;
_.getOldPlayerId = function getOldPlayerId(p_game){
  var registration, registration$iterator;
  if (isNotNull(p_game) && lte(this.m_oldPlayerId, 0)) {
    for (registration$iterator = p_game.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
      registration = castTo(registration$iterator.next_1(), 51);
      if (p_game.getCurrentPlayerIds().contains_0(valueOf_40(registration.getId())) && eq(registration.getAccount_0().getId(), this.getAccountId())) {
        this.m_oldPlayerId = registration.getId();
      }
    }
  }
  return this.m_oldPlayerId;
}
;
_.getOldTurn = function getOldTurn(){
  return this.m_oldTurn;
}
;
_.getType_0 = function getType_16(){
  return $clinit_GameLogType() , EvtPlayerTurn;
}
;
_.init_28 = function init_28(){
  this.m_accountId = 0;
}
;
_.playRegistrationEvents = function playRegistrationEvents(p_game){
  var e, event_0, eventAdded, eventIndex, morePrivateEvent, playerIndex, team, team$iterator, teams;
  teams = p_game.getTeamByPlayOrder();
  eventIndex = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, teams.size_1(), 15, 1);
  morePrivateEvent = true;
  while (morePrivateEvent) {
    morePrivateEvent = false;
    for (playerIndex = 0; playerIndex < teams.size_1(); playerIndex++) {
      eventAdded = false;
      while (!eventAdded && eventIndex[playerIndex] < castTo(teams.get_0(playerIndex), 43).getMyEvents().size_1()) {
        morePrivateEvent = true;
        try {
          event_0 = castTo(castTo(teams.get_0(playerIndex), 43).getMyEvents().get_0(eventIndex[playerIndex]), 20);
          event_0.exec_0(p_game);
          p_game.addEvent(event_0);
          eventAdded = true;
        }
         catch ($e0) {
          $e0 = toJava($e0);
          if (instanceOf($e0, 10)) {
            e = $e0;
          }
           else 
            throw toJs($e0);
        }
        eventIndex[playerIndex]++;
      }
    }
  }
  for (team$iterator = teams.iterator_0(); team$iterator.hasNext_0();) {
    team = castTo(team$iterator.next_1(), 43);
    team.clearMyEvents();
  }
}
;
_.setAccountId = function setAccountId_0(p_id){
  this.m_accountId = p_id;
}
;
_.setOldPlayerId = function setOldPlayerId(p_oldPlayerId){
  this.m_oldPlayerId = p_oldPlayerId;
}
;
_.toString_0 = function toString_36(){
  var str;
  str = 'End turn [' + toString_45(this.getAccountId()) + ']: ' + this.getOldTurn();
  if (this.getOldTurn() != this.getNewTurn()) {
    str += '->' + this.getNewTurn();
  }
  return str;
}
;
_.unexec = function unexec_14(p_game){
  var actionInc, actionPt, currentPlayerId, currentPlayerId$iterator, newOreGeneratorCount, oldPlayerRegistration, ore, ore$iterator, previousPlayer, registration, token, token$iterator, token$iterator0;
  getClassPrototype(20).unexec.call(this, p_game);
  if (!isNotNull(p_game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  oldPlayerRegistration = p_game.getRegistration_0(this.getOldPlayerId(p_game));
  if (isNull(oldPlayerRegistration)) {
    p_game.setCurrentTimeStep(narrow_short(p_game.getCurrentTimeStep()) - 1);
    return;
  }
  if (this.m_oldCurrentPlayersCount > 1) {
    p_game.getCurrentPlayerIds().add_5(castTo(valueOf_40(this.getOldPlayerId(p_game)), 66));
  }
   else {
    for (currentPlayerId$iterator = p_game.getCurrentPlayerIds().iterator_0(); currentPlayerId$iterator.hasNext_0();) {
      currentPlayerId = castTo(currentPlayerId$iterator.next_1(), 66).longValue();
      registration = p_game.getRegistration_0(currentPlayerId);
      if (isNotNull(registration)) {
        actionInc = registration.getActionInc(p_game);
        actionPt = registration.getPtAction() - actionInc;
        if (actionPt < 0) {
          actionPt = 0;
        }
        registration.setPtAction(actionPt);
      }
    }
    p_game.getCurrentPlayerIds().clear_0();
    previousPlayer = p_game.getRegistration_0(this.getOldPlayerId(p_game));
    if (isNotNull(previousPlayer)) {
      previousPlayer.setPtAction(this.m_oldActionPt);
      p_game.getCurrentPlayerIds().add_5(valueOf_40(previousPlayer.getId()));
    }
    p_game.setCurrentTimeStep(this.m_oldTurn);
  }
  for (token$iterator0 = p_game.getSetToken().iterator_0(); token$iterator0.hasNext_0();) {
    token = castTo(token$iterator0.next_1(), 19);
    if (jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
      token.setBulletCount(token.getBulletCount() - 1);
    }
  }
  newOreGeneratorCount = p_game.countTeamOnBoard() * 2 - 1;
  for (ore$iterator = this.oreToRemoveWhileUnexec.iterator_0(); ore$iterator.hasNext_0();) {
    ore = castTo(ore$iterator.next_1(), 19);
    ore = p_game.getToken_0(ore.getId());
    for (token$iterator = p_game.getAllToken(ore.getPosition()).iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
        token.setBulletCount(newOreGeneratorCount);
      }
    }
    p_game.moveToken(ore, ($clinit_Location() , Graveyard));
    ore.decVersion();
  }
}
;
_.m_accountId = 0;
_.m_newTurn = 0;
_.m_oldActionPt = 0;
_.m_oldCurrentPlayersCount = 0;
_.m_oldPlayerId = 0;
_.m_oldTurn = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtPlayerTurn_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtPlayerTurn', 144, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit);
function $clinit_EbEvtPlayerTurn_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtPlayerTurn_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_82(streamReader, instance){
  $clinit_EbEvtPlayerTurn_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_77(streamReader){
  $clinit_EbEvtPlayerTurn_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtPlayerTurn_2_classLit, {4:1, 1:1, 5:1}, 144, size_0, 0, 1);
}

function serialize_77(streamWriter, instance){
  $clinit_EbEvtPlayerTurn_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtPlayerTurn_FieldSerializer(){
  $clinit_EbEvtPlayerTurn_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_83(streamReader, instance){
  $clinit_EbEvtPlayerTurn_FieldSerializer();
  setM_accountId_0(instance, streamReader.readLong());
  setM_endTurnDate_0(instance, castTo(streamReader.readObject(), 30));
  setM_newTurn(instance, streamReader.readShort());
  setM_oldActionPt(instance, streamReader.readInt());
  setM_oldCurrentPlayersCount(instance, streamReader.readInt());
  setM_oldPlayerId(instance, streamReader.readLong());
  setM_oldTurn(instance, streamReader.readShort());
  setOreToRemoveWhileUnexec(instance, castTo(streamReader.readObject(), 38));
  deserialize_49(streamReader, instance);
}

function getM_accountId_0(instance){
  return instance.m_accountId;
}

function getM_endTurnDate_0(instance){
  return instance.m_endTurnDate;
}

function getM_newTurn(instance){
  return instance.m_newTurn;
}

function getM_oldActionPt(instance){
  return instance.m_oldActionPt;
}

function getM_oldCurrentPlayersCount(instance){
  return instance.m_oldCurrentPlayersCount;
}

function getM_oldPlayerId(instance){
  return instance.m_oldPlayerId;
}

function getM_oldTurn(instance){
  return instance.m_oldTurn;
}

function getOreToRemoveWhileUnexec(instance){
  return instance.oreToRemoveWhileUnexec;
}

function instantiate_78(streamReader){
  $clinit_EbEvtPlayerTurn_FieldSerializer();
  return new EbEvtPlayerTurn;
}

function serialize_78(streamWriter, instance){
  $clinit_EbEvtPlayerTurn_FieldSerializer();
  streamWriter.writeLong(getM_accountId_0(instance));
  streamWriter.writeObject(getM_endTurnDate_0(instance));
  streamWriter.writeShort(getM_newTurn(instance));
  streamWriter.writeInt(getM_oldActionPt(instance));
  streamWriter.writeInt(getM_oldCurrentPlayersCount(instance));
  streamWriter.writeLong(getM_oldPlayerId(instance));
  streamWriter.writeShort(getM_oldTurn(instance));
  streamWriter.writeObject(getOreToRemoveWhileUnexec(instance));
  serialize_44(streamWriter, instance);
}

function setM_accountId_0(instance, value_0){
  instance.m_accountId = value_0;
}

function setM_endTurnDate_0(instance, value_0){
  instance.m_endTurnDate = value_0;
}

function setM_newTurn(instance, value_0){
  instance.m_newTurn = value_0;
}

function setM_oldActionPt(instance, value_0){
  instance.m_oldActionPt = value_0;
}

function setM_oldCurrentPlayersCount(instance, value_0){
  instance.m_oldCurrentPlayersCount = value_0;
}

function setM_oldPlayerId(instance, value_0){
  instance.m_oldPlayerId = value_0;
}

function setM_oldTurn(instance, value_0){
  instance.m_oldTurn = value_0;
}

function setOreToRemoveWhileUnexec(instance, value_0){
  instance.oreToRemoveWhileUnexec = value_0;
}

function $clinit_EbEvtRepair(){
  $clinit_EbEvtRepair = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtRepair(){
  $clinit_EbEvtRepair();
  AnEventPlay.call(this);
  this.$init_333();
  this.init_29();
}

function isRepairable(p_game, p_freighterId, position){
  var event_0, freighter, iback, maxIBack;
  freighter = p_game.getToken_0(p_freighterId);
  if (isNotNull(freighter) && freighter.getBulletCount() <= 0) {
    return false;
  }
  iback = 0;
  event_0 = p_game.getLastLog_0(iback);
  maxIBack = p_game.getLogs().size_1() - 10;
  while (isNotNull(event_0) && iback < maxIBack) {
    if (instanceOf(event_0, 167) && eq(castTo(event_0, 167).getTokenFreighter(p_game).getId(), p_freighterId)) {
      break;
    }
    if (instanceOf(event_0, 215) && castTo(event_0, 215).getPosition_0(p_game).equals_3(position)) {
      return false;
    }
    iback++;
    event_0 = p_game.getLastLog_0(iback);
  }
  return true;
}

defineClass(215, 17, {21:1, 20:1, 17:1, 33:1, 215:1, 64:1, 4:1, 1:1}, EbEvtRepair);
_.$init_333 = function $init_333(){
}
;
_.check_0 = function check_18(p_game){
  var fireCoverColor, freighter, turret;
  getClassPrototype(17).check_0.call(this, p_game);
  freighter = p_game.getToken_2(this.getPosition_0(p_game), ($clinit_TokenType() , Freighter));
  turret = p_game.getToken_2(this.getPosition_0(p_game), ($clinit_TokenType() , Turret));
  if (isNull(freighter) || isNotNull(turret)) {
    throw toJs(new RpcFmpException_1('you can repair only destroyed turret', this));
  }
  if (freighter.getPosition().equals_3(this.getPosition_0(p_game))) {
    throw toJs(new RpcFmpException_1('you can repair only destroyed turret', this));
  }
  if (freighter.getBulletCount() <= 0) {
    throw toJs(new RpcFmpException_1("you can't repair any more turrets", this));
  }
  fireCoverColor = p_game.getOpponentFireCover(this.getMyTeam(p_game).getColors(p_game.getPreview()), this.getPosition_0(p_game));
  if (fireCoverColor.getValue_1() != 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().cantRepairTurretFireCover(), this));
  }
  if (!isRepairable(p_game, freighter.getId(), this.getPosition_0(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().cantRepairTurretTwice(), this));
  }
}
;
_.exec_0 = function exec_18(p_game){
  var freighter, turret;
  getClassPrototype(17).exec_0.call(this, p_game);
  freighter = p_game.getToken_2(this.getPosition_0(p_game), ($clinit_TokenType() , Freighter));
  turret = new EbToken;
  turret.setType(($clinit_TokenType() , Turret));
  turret.setColor(freighter.getColor_0());
  if (turret.isTrancient() || isNull(p_game.getToken_0(turret.getId()))) {
    p_game.addToken_1(turret);
  }
   else {
    turret = p_game.getToken_0(turret.getId());
  }
  p_game.moveToken_0(turret, this.getPosition_0(p_game));
  turret.getPosition().setSector(p_game.getCoordinateSystem().getSector_0(freighter.getPosition(), this.getPosition_0(p_game)));
  turret.incVersion();
  freighter.setBulletCount(freighter.getBulletCount() - 1);
  this.execFireDisabling_0(p_game, this.getPosition_0(p_game));
}
;
_.getPosition_0 = function getPosition_1(p_game){
  var position, token;
  position = this.getPosition();
  if (isNull(position) || position.equals_3(new AnBoardPosition)) {
    token = this.getToken_3(p_game);
    if (isNotNull(token)) {
      position = token.getPosition();
      this.setPosition(position);
    }
  }
  return position;
}
;
_.getSelectedPosition = function getSelectedPosition_8(p_game){
  return this.getPosition_0(p_game);
}
;
_.getType_0 = function getType_17(){
  return $clinit_GameLogType() , EvtRepair;
}
;
_.init_29 = function init_29(){
  this.setCost(2);
}
;
_.unexec = function unexec_15(p_game){
  var freighter, turret;
  getClassPrototype(17).unexec.call(this, p_game);
  freighter = p_game.getToken_2(this.getPosition_0(p_game), ($clinit_TokenType() , Freighter));
  turret = p_game.getToken_2(this.getPosition_0(p_game), ($clinit_TokenType() , Turret));
  turret.setLocation(($clinit_Location() , Graveyard));
  turret.decVersion();
  freighter.setBulletCount(freighter.getBulletCount() + 1);
  this.unexecFireDisabling(p_game);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtRepair_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtRepair', 215, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtRepair_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtRepair_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_84(streamReader, instance){
  $clinit_EbEvtRepair_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_79(streamReader){
  $clinit_EbEvtRepair_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtRepair_2_classLit, {4:1, 1:1, 5:1}, 215, size_0, 0, 1);
}

function serialize_79(streamWriter, instance){
  $clinit_EbEvtRepair_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtRepair_FieldSerializer(){
  $clinit_EbEvtRepair_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_85(streamReader, instance){
  $clinit_EbEvtRepair_FieldSerializer();
  deserialize_45(streamReader, instance);
}

function instantiate_80(streamReader){
  $clinit_EbEvtRepair_FieldSerializer();
  return new EbEvtRepair;
}

function serialize_80(streamWriter, instance){
  $clinit_EbEvtRepair_FieldSerializer();
  serialize_40(streamWriter, instance);
}

function $clinit_EbEvtTakeOff(){
  $clinit_EbEvtTakeOff = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtTakeOff(){
  $clinit_EbEvtTakeOff();
  AnEventPlay.call(this);
  this.$init_334();
  this.init_30();
}

defineClass(216, 17, {21:1, 20:1, 17:1, 33:1, 216:1, 64:1, 4:1, 1:1}, EbEvtTakeOff);
_.$init_334 = function $init_334(){
  this.m_backInOrbit = false;
  this.m_TokenIds = null;
}
;
_.check_0 = function check_19(p_game){
  var myRegistration;
  getClassPrototype(17).check_0.call(this, p_game);
  if (jsNotEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Freighter))) {
    throw toJs(new RpcFmpException_1('only freighter can take off', this));
  }
  if (!p_game.getAllowedTakeOffTurns().contains_0(valueOf_37(p_game.getCurrentTimeStep()))) {
    throw toJs(new RpcFmpException_1("Take off isn't allowed this turn", this));
  }
  if (jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Board)) && jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Token))) {
    throw toJs(new RpcFmpException_1('token ' + this.getToken_3(p_game) + " can't be moved from location " + this.getToken_3(p_game).getLocation(), this));
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
}
;
_.exec_0 = function exec_19(p_game){
  var position, position$iterator, token, token$iterator;
  getClassPrototype(17).exec_0.call(this, p_game);
  this.setOldPosition(this.getToken_3(p_game).getPosition());
  for (position$iterator = this.getToken_3(p_game).getExtraPositions(p_game.getCoordinateSystem()).iterator_0(); position$iterator.hasNext_0();) {
    position = castTo(position$iterator.next_1(), 23);
    token = p_game.getToken_2(position, ($clinit_TokenType() , Turret));
    if (isNotNull(token)) {
      p_game.moveToken_1(token, this.getToken_3(p_game));
      token.incVersion();
    }
  }
  if (this.isBackInOrbit()) {
    p_game.moveToken(this.getToken_3(p_game), ($clinit_Location() , Orbit));
  }
   else {
    p_game.moveToken(this.getToken_3(p_game), ($clinit_Location() , EndGame));
  }
  this.getToken_3(p_game).incVersion();
  this.m_TokenIds = new ArrayList;
  for (token$iterator = p_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsEquals(token.getLocation(), ($clinit_Location() , Board)) && token.getColor_0() == this.getToken_3(p_game).getColor_0()) {
      this.m_TokenIds.add_5(valueOf_40(token.getId()));
      p_game.changeTokenColor(token, 0);
      token.incVersion();
    }
  }
  this.execFireDisabling(p_game);
  p_game.updateLastTokenUpdate(null);
}
;
_.getSelectedPosition = function getSelectedPosition_9(p_game){
  return null;
}
;
_.getType_0 = function getType_18(){
  return $clinit_GameLogType() , EvtTakeOff;
}
;
_.init_30 = function init_30(){
  this.setCost(0);
  this.m_backInOrbit = false;
}
;
_.isBackInOrbit = function isBackInOrbit(){
  return this.m_backInOrbit;
}
;
_.setBackInOrbit = function setBackInOrbit(p_backInOrbit){
  this.m_backInOrbit = p_backInOrbit;
}
;
_.unexec = function unexec_16(p_game){
  var freitherColor, id_0, id$iterator, index_0, token, token$iterator;
  getClassPrototype(17).unexec.call(this, p_game);
  p_game.moveToken(this.getToken_3(p_game), ($clinit_Location() , Board));
  this.getToken_3(p_game).decVersion();
  index_0 = 0;
  if (this.getToken_3(p_game).containToken()) {
    for (token$iterator = this.getToken_3(p_game).getCopyContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Turret)) && index_0 < 3) {
        p_game.moveToken_0(token, castTo(this.getToken_3(p_game).getExtraPositions(p_game.getCoordinateSystem()).get_0(index_0), 23));
        token.decVersion();
        index_0++;
      }
    }
  }
  if (isNotNull(this.m_TokenIds)) {
    freitherColor = this.getToken_3(p_game).getColor_0();
    for (id$iterator = this.m_TokenIds.iterator_0(); id$iterator.hasNext_0();) {
      id_0 = castTo(id$iterator.next_1(), 66);
      token = p_game.getToken_0(id_0.longValue());
      if (isNotNull(token)) {
        p_game.changeTokenColor(token, freitherColor);
        token.decVersion();
      }
    }
  }
  this.unexecFireDisabling(p_game);
}
;
_.m_backInOrbit = false;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTakeOff_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtTakeOff', 216, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtTakeOff_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtTakeOff_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_86(streamReader, instance){
  $clinit_EbEvtTakeOff_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_81(streamReader){
  $clinit_EbEvtTakeOff_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTakeOff_2_classLit, {4:1, 1:1, 5:1}, 216, size_0, 0, 1);
}

function serialize_81(streamWriter, instance){
  $clinit_EbEvtTakeOff_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtTakeOff_FieldSerializer(){
  $clinit_EbEvtTakeOff_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_87(streamReader, instance){
  $clinit_EbEvtTakeOff_FieldSerializer();
  setM_TokenIds_2(instance, castTo(streamReader.readObject(), 12));
  setM_backInOrbit(instance, streamReader.readBoolean());
  deserialize_45(streamReader, instance);
}

function getM_TokenIds_2(instance){
  return instance.m_TokenIds;
}

function getM_backInOrbit(instance){
  return instance.m_backInOrbit;
}

function instantiate_82(streamReader){
  $clinit_EbEvtTakeOff_FieldSerializer();
  return new EbEvtTakeOff;
}

function serialize_82(streamWriter, instance){
  $clinit_EbEvtTakeOff_FieldSerializer();
  streamWriter.writeObject(getM_TokenIds_2(instance));
  streamWriter.writeBoolean(getM_backInOrbit(instance));
  serialize_40(streamWriter, instance);
}

function setM_TokenIds_2(instance, value_0){
  instance.m_TokenIds = value_0;
}

function setM_backInOrbit(instance, value_0){
  instance.m_backInOrbit = value_0;
}

function $clinit_EbEvtTide(){
  $clinit_EbEvtTide = emptyMethod;
  $clinit_AnEvent();
}

function EbEvtTide(){
  $clinit_EbEvtTide();
  AnEvent.call(this);
  this.$init_335();
  this.init_31();
}

defineClass(247, 20, {21:1, 20:1, 247:1, 64:1, 4:1, 1:1}, EbEvtTide);
_.$init_335 = function $init_335(){
  this.m_PontoonIds = null;
  this.m_oldTide = null;
  this.m_oldTideChange = 0;
  this.m_nextTide = null;
}
;
_.check_0 = function check_20(p_game){
  getClassPrototype(20).check_0.call(this, p_game);
  if (!jsEquals(p_game.getCurrentTide(), this.getOldTide())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (jsNotEquals(p_game.getStatus(), ($clinit_GameStatus() , Running))) {
    throw toJs(new RpcFmpException_1('game not started', this));
  }
}
;
_.exec_0 = function exec_20(p_game){
  var game, registration, registration$iterator, token, token$iterator;
  getClassPrototype(20).exec_0.call(this, p_game);
  game = p_game;
  if (!isNotNull(game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.setOldTide(p_game.getCurrentTide());
  this.setOldTideChange(p_game.getLastTideChange());
  game.setCurrentTide(game.getNextTide());
  game.setNextTide(game.getNextTide2());
  game.setNextTide2(this.getNextTide());
  game.setAverageTideLevel(game.getAverageTideLevel() + this.getNextTide().getLevel());
  game.setLastTideChange(game.getCurrentTimeStep());
  this.m_PontoonIds = new ArrayList;
  if (this.getOldTide().ordinal_0() < game.getCurrentTide().ordinal_0()) {
    for (token$iterator = p_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Pontoon)) && jsEquals(token.getLocation(), ($clinit_Location() , Board)) && !p_game.isPontoonLinkToGround_0(token)) {
        this.m_PontoonIds.addAll(p_game.chainRemovePontoon(token, this.getFdRemoved()));
      }
    }
  }
  this.execFireDisabling(p_game);
  p_game.getBoardFireCover().reComputeFireCover();
  for (registration$iterator = game.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
    registration = castTo(registration$iterator.next_1(), 51);
    registration.setWorkingWeatherHenCount(p_game.countWorkingWeatherHen(registration.getEnuColor()));
  }
}
;
_.getNextTide = function getNextTide_1(){
  return this.m_nextTide;
}
;
_.getOldTide = function getOldTide(){
  return this.m_oldTide;
}
;
_.getOldTideChange = function getOldTideChange(){
  return this.m_oldTideChange;
}
;
_.getType_0 = function getType_19(){
  return $clinit_GameLogType() , EvtTide;
}
;
_.init_31 = function init_31(){
  this.setAuto(true);
  this.m_PontoonIds = null;
  this.m_oldTide = null;
  this.m_nextTide = null;
  this.m_oldTideChange = 0;
}
;
_.setNextTide = function setNextTide_1(p_nextTide){
  this.m_nextTide = p_nextTide;
}
;
_.setOldTide = function setOldTide(p_oldTide){
  this.m_oldTide = p_oldTide;
}
;
_.setOldTideChange = function setOldTideChange(p_oldTideChange){
  this.m_oldTideChange = p_oldTideChange;
}
;
_.unexec = function unexec_17(p_game){
  var game, id_0, id$iterator, token;
  getClassPrototype(20).unexec.call(this, p_game);
  game = p_game;
  if (!isNotNull(game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  game.setNextTide2(game.getNextTide());
  game.setNextTide(game.getCurrentTide());
  game.setCurrentTide(this.getOldTide());
  game.setAverageTideLevel(game.getAverageTideLevel() - this.getNextTide().getLevel());
  game.setLastTideChange(this.getOldTideChange());
  if (isNotNull(this.m_PontoonIds)) {
    for (id$iterator = this.m_PontoonIds.iterator_0(); id$iterator.hasNext_0();) {
      id_0 = castTo(id$iterator.next_1(), 66);
      token = p_game.getToken_0(id_0.longValue());
      if (isNotNull(token) && jsEquals(token.getLocation(), ($clinit_Location() , Graveyard))) {
        p_game.moveToken_0(token, token.getPosition());
        token.decVersion();
      }
    }
  }
  game.setLastTideChange(this.getOldTideChange());
  this.unexecFireDisabling(p_game);
  p_game.getBoardFireCover().reComputeFireCover();
}
;
_.m_oldTideChange = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTide_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtTide', 247, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit);
function $clinit_EbEvtTide_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtTide_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_88(streamReader, instance){
  $clinit_EbEvtTide_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_83(streamReader){
  $clinit_EbEvtTide_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTide_2_classLit, {4:1, 1:1, 5:1}, 247, size_0, 0, 1);
}

function serialize_83(streamWriter, instance){
  $clinit_EbEvtTide_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtTide_FieldSerializer(){
  $clinit_EbEvtTide_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_89(streamReader, instance){
  $clinit_EbEvtTide_FieldSerializer();
  setM_PontoonIds(instance, castTo(streamReader.readObject(), 12));
  setM_nextTide(instance, castTo(streamReader.readObject(), 139));
  setM_oldTide(instance, castTo(streamReader.readObject(), 139));
  setM_oldTideChange(instance, streamReader.readInt());
  deserialize_49(streamReader, instance);
}

function getM_PontoonIds(instance){
  return instance.m_PontoonIds;
}

function getM_nextTide(instance){
  return instance.m_nextTide;
}

function getM_oldTide(instance){
  return instance.m_oldTide;
}

function getM_oldTideChange(instance){
  return instance.m_oldTideChange;
}

function instantiate_84(streamReader){
  $clinit_EbEvtTide_FieldSerializer();
  return new EbEvtTide;
}

function serialize_84(streamWriter, instance){
  $clinit_EbEvtTide_FieldSerializer();
  streamWriter.writeObject(getM_PontoonIds(instance));
  streamWriter.writeObject(getM_nextTide(instance));
  streamWriter.writeObject(getM_oldTide(instance));
  streamWriter.writeInt(getM_oldTideChange(instance));
  serialize_44(streamWriter, instance);
}

function setM_PontoonIds(instance, value_0){
  instance.m_PontoonIds = value_0;
}

function setM_nextTide(instance, value_0){
  instance.m_nextTide = value_0;
}

function setM_oldTide(instance, value_0){
  instance.m_oldTide = value_0;
}

function setM_oldTideChange(instance, value_0){
  instance.m_oldTideChange = value_0;
}

function $clinit_EbEvtTimeStep(){
  $clinit_EbEvtTimeStep = emptyMethod;
  $clinit_AnEvent();
}

function EbEvtTimeStep(){
  $clinit_EbEvtTimeStep();
  AnEvent.call(this);
  this.$init_336();
  this.init_32();
}

defineClass(296, 20, {21:1, 20:1, 296:1, 64:1, 4:1, 1:1}, EbEvtTimeStep);
_.$init_336 = function $init_336(){
  this.m_oldTimeStepChange = null;
  this.oreToRemoveWhileUnexec = null;
}
;
_.check_0 = function check_21(p_game){
  getClassPrototype(20).check_0.call(this, p_game);
  if (!p_game.getLastTimeStepChange().equals_0(this.getOldTimeStepChange())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (jsNotEquals(p_game.getStatus(), ($clinit_GameStatus() , Running))) {
    throw toJs(new RpcFmpException_1('game not started', this));
  }
  if (p_game.isFinished()) {
    throw toJs(new RpcFmpException_1('game is finished', this));
  }
  if (isNotNull(this.getOldTimeStepChange()) && !this.getOldTimeStepChange().equals_0(p_game.getLastTimeStepChange())) {
    throw toJs(new RpcFmpException_1('EvtTimeStep have incoherant old time step change', this));
  }
}
;
_.exec_0 = function exec_21(p_game){
  var action, game, isFirstExec, multipleBulletIncrement, oreToken, registration, registration$iterator, token, token$iterator, token$iterator0;
  getClassPrototype(20).exec_0.call(this, p_game);
  game = p_game;
  if (!isNotNull(game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (isNull(this.getOldTimeStepChange())) {
    this.setOldTimeStepChange(p_game.getLastTimeStepChange());
  }
  game.setLastTimeStepChange(new Date_1(add_19(this.getOldTimeStepChange().getTime_1(), game.getEbConfigGameTime().getTimeStepDurationInMili())));
  game.setCurrentTimeStep(game.getCurrentTimeStep() + 1);
  if (p_game.isParallel()) {
    for (registration$iterator = game.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
      registration = castTo(registration$iterator.next_1(), 51);
      action = registration.getPtAction();
      action += registration.getActionInc(game);
      if (action > 10 && !game.isLanded(registration.getEnuColor())) {
        action = 10;
      }
      if (action > registration.getMaxActionPt(p_game)) {
        action = registration.getMaxActionPt(p_game);
      }
      registration.setPtAction(action);
    }
  }
  isFirstExec = isNull(this.oreToRemoveWhileUnexec);
  if (isFirstExec) {
    this.oreToRemoveWhileUnexec = new ArrayList;
  }
  for (token$iterator0 = p_game.getSetToken().iterator_0(); token$iterator0.hasNext_0();) {
    token = castTo(token$iterator0.next_1(), 19);
    if (jsNotEquals(token.getType(), ($clinit_TokenType() , Freighter)) && token.getColor_0() != 0 && token.getBulletCount() < token.getType().getMaxBulletCount()) {
      multipleBulletIncrement = 1;
      if (token.getType().getMaxBulletCount() > 2) {
        multipleBulletIncrement = narrow_int(token.getType().getMaxBulletCount() / 2);
      }
      if (jsEquals(token.getLocation(), ($clinit_Location() , Token)) && jsEquals(token.getCarrierToken().getType(), ($clinit_TokenType() , Warp))) {
        token.setBulletCount(token.getBulletCount() - multipleBulletIncrement * game.getEbConfigGameTime().getBulletCountIncrement());
      }
       else {
        token.setBulletCount(token.getBulletCount() + multipleBulletIncrement * game.getEbConfigGameTime().getBulletCountIncrement());
      }
      if (token.getBulletCount() < 0) {
        token.setBulletCount(0);
      }
      if (token.getBulletCount() > token.getType().getMaxBulletCount()) {
        token.setBulletCount(token.getType().getMaxBulletCount());
      }
    }
    if ((jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) && jsEquals(token.getLocation(), ($clinit_Location() , Board))) {
      if (game.getAllToken(token.getPosition()).size_1() >= 2) {
        token.setBulletCount(0);
      }
       else if (token.getBulletCount() >= 2 * 2) {
        token.setBulletCount(0);
        if (isFirstExec) {
          oreToken = new EbToken_0(($clinit_TokenType() , Ore));
          if (jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
            oreToken.setType(($clinit_TokenType() , Ore3));
          }
          oreToken.setPosition(token.getPosition());
          this.oreToRemoveWhileUnexec.add_5(oreToken);
        }
      }
       else {
        token.setBulletCount(token.getBulletCount() + game.getEbConfigGameTime().getBulletCountIncrement());
      }
    }
  }
  for (token$iterator = this.oreToRemoveWhileUnexec.iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (token.isTrancient() || isNull(game.getToken_0(token.getId()))) {
      game.addToken_1(token);
    }
     else {
      token = game.getToken_0(token.getId());
    }
    p_game.moveToken(token, ($clinit_Location() , Board));
    token.incVersion();
  }
}
;
_.getOldTimeStepChange = function getOldTimeStepChange(){
  return this.m_oldTimeStepChange;
}
;
_.getType_0 = function getType_20(){
  return $clinit_GameLogType() , EvtTimeStep;
}
;
_.init_32 = function init_32(){
  this.m_oldTimeStepChange = null;
}
;
_.setOldTimeStepChange = function setOldTimeStepChange(p_oldTimeStepChange){
  this.m_oldTimeStepChange = p_oldTimeStepChange;
}
;
_.unexec = function unexec_18(p_game){
  var action, game, nbColor, newOreGeneratorCount, ore, ore$iterator, registration, registration$iterator, token, token$iterator, token$iterator0;
  getClassPrototype(20).unexec.call(this, p_game);
  game = p_game;
  if (!isNotNull(game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  game.setLastTimeStepChange(this.getOldTimeStepChange());
  game.setCurrentTimeStep(game.getCurrentTimeStep() - 1);
  if (p_game.isParallel()) {
    for (registration$iterator = game.getSetRegistration().iterator_0(); registration$iterator.hasNext_0();) {
      registration = castTo(registration$iterator.next_1(), 51);
      action = registration.getPtAction();
      nbColor = registration.getEnuColor().getNbColor();
      if (nbColor >= 1) {
        action -= game.getEbConfigGameTime().getActionPtPerTimeStep_0();
        action -= (nbColor - 1) * game.getEbConfigGameTime().getActionPtPerExtraShip();
      }
      if (action < 0) {
        action = 0;
      }
      registration.setPtAction(action);
    }
  }
  for (token$iterator0 = p_game.getSetToken().iterator_0(); token$iterator0.hasNext_0();) {
    token = castTo(token$iterator0.next_1(), 19);
    if (jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
      token.setBulletCount(token.getBulletCount() - 1);
    }
  }
  newOreGeneratorCount = 2 * 2 - 1;
  for (ore$iterator = this.oreToRemoveWhileUnexec.iterator_0(); ore$iterator.hasNext_0();) {
    ore = castTo(ore$iterator.next_1(), 19);
    ore = p_game.getToken_0(ore.getId());
    for (token$iterator = p_game.getAllToken(ore.getPosition()).iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      if (jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
        token.setBulletCount(newOreGeneratorCount);
      }
    }
    p_game.moveToken(ore, ($clinit_Location() , Graveyard));
    ore.decVersion();
  }
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTimeStep_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtTimeStep', 296, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEvent_2_classLit);
function $clinit_EbEvtTimeStep_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtTimeStep_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_90(streamReader, instance){
  $clinit_EbEvtTimeStep_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_85(streamReader){
  $clinit_EbEvtTimeStep_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTimeStep_2_classLit, {4:1, 1:1, 5:1}, 296, size_0, 0, 1);
}

function serialize_85(streamWriter, instance){
  $clinit_EbEvtTimeStep_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtTimeStep_FieldSerializer(){
  $clinit_EbEvtTimeStep_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_91(streamReader, instance){
  $clinit_EbEvtTimeStep_FieldSerializer();
  setM_oldTimeStepChange(instance, castTo(streamReader.readObject(), 30));
  setOreToRemoveWhileUnexec_0(instance, castTo(streamReader.readObject(), 12));
  deserialize_49(streamReader, instance);
}

function getM_oldTimeStepChange(instance){
  return instance.m_oldTimeStepChange;
}

function getOreToRemoveWhileUnexec_0(instance){
  return instance.oreToRemoveWhileUnexec;
}

function instantiate_86(streamReader){
  $clinit_EbEvtTimeStep_FieldSerializer();
  return new EbEvtTimeStep;
}

function serialize_86(streamWriter, instance){
  $clinit_EbEvtTimeStep_FieldSerializer();
  streamWriter.writeObject(getM_oldTimeStepChange(instance));
  streamWriter.writeObject(getOreToRemoveWhileUnexec_0(instance));
  serialize_44(streamWriter, instance);
}

function setM_oldTimeStepChange(instance, value_0){
  instance.m_oldTimeStepChange = value_0;
}

function setOreToRemoveWhileUnexec_0(instance, value_0){
  instance.oreToRemoveWhileUnexec = value_0;
}

function $clinit_EbEvtTransfer(){
  $clinit_EbEvtTransfer = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtTransfer(){
  $clinit_EbEvtTransfer();
  AnEventPlay.call(this);
  this.$init_337();
  this.init_33();
}

defineClass(114, 17, {21:1, 20:1, 17:1, 33:1, 114:1, 64:1, 4:1, 1:1}, EbEvtTransfer);
_.$init_337 = function $init_337(){
}
;
_.check_0 = function check_22(p_game){
  var myRegistration;
  getClassPrototype(17).check_0.call(this, p_game);
  if (jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Token)) || jsNotEquals(this.getNewTokenCarrier(p_game).getLocation(), ($clinit_Location() , Board))) {
    throw toJs(new RpcFmpException_1('token ' + this.getToken_3(p_game) + " can't be moved from " + this.getTokenCarrier(p_game) + ' to ' + this.getNewTokenCarrier(p_game), this));
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if ((!myRegistration.getEnuColor().isColored(this.getTokenCarrier(p_game).getColor_0()) || this.getTokenCarrier(p_game).getColor_0() == 0) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Freighter)) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenCarrier(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if ((!myRegistration.getEnuColor().isColored(this.getNewTokenCarrier(p_game).getColor_0()) || this.getNewTokenCarrier(p_game).getColor_0() == 0) && jsNotEquals(this.getNewTokenCarrier(p_game).getType(), ($clinit_TokenType() , Freighter)) && jsNotEquals(this.getNewTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getNewTokenCarrier(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (jsEquals(this.getTokenCarrier(p_game).getLocation(), ($clinit_Location() , Board))) {
    if (!this.getTokenCarrier(p_game).isNeighbor_0(p_game.getCoordinateSystem(), this.getNewTokenCarrier(p_game)) && jsNotEquals(this.getTokenCarrier(p_game).getCarrierToken(), this.getNewTokenCarrier(p_game))) {
      throw toJs(new RpcFmpException_1('les deux pions ' + this.getTokenCarrier(p_game) + ' et ' + this.getNewTokenCarrier(p_game) + ' ne sont pas voisins: le transfert est impossible.', this));
    }
  }
   else {
    if (jsNotEquals(this.getTokenCarrier(p_game).getCarrierToken(), this.getNewTokenCarrier(p_game)) && jsNotEquals(this.getNewTokenCarrier(p_game).getType(), ($clinit_TokenType() , Teleporter)) && jsNotEquals(this.getNewTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
      throw toJs(new RpcFmpException_1('les deux pions ' + this.getTokenCarrier(p_game) + ' et ' + this.getNewTokenCarrier(p_game) + ' ne sont pas voisins: le transfert est impossible.', this));
    }
  }
  if (!p_game.canTokenLoad(this.getNewTokenCarrier(p_game), this.getToken_3(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantLoad(getTokenString_0(this.getAccountId(), this.getNewTokenCarrier(p_game)), getTokenString_0(this.getAccountId(), this.getToken_3(p_game))), this));
  }
  if (jsEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Heap)) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Teleporter)) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp)) && jsEquals(p_game.getLand_0(this.getNewTokenCarrier(p_game).getPosition()), ($clinit_LandType() , Montain))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveOn(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getLandString(this.getAccountId(), p_game.getLand_0(this.getNewTokenCarrier(p_game).getPosition()))), this));
  }
  if (!p_game.isTokenTideActive(this.getNewTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableTide(getTokenString_0(this.getAccountId(), this.getNewTokenCarrier(p_game))), this));
  }
  if (!p_game.isTokenFireActive(this.getNewTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableFire(getTokenString_0(this.getAccountId(), this.getNewTokenCarrier(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getNewTokenCarrier(p_game)).getValue_1())), this));
  }
  if (!p_game.isTokenTideActive(this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableTide(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game))), this));
  }
  if (!p_game.isTokenFireActive(this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableFire(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getTokenCarrier(p_game)).getValue_1())), this));
  }
}
;
_.exec_0 = function exec_22(p_game){
  var freighters;
  getClassPrototype(17).exec_0.call(this, p_game);
  if (jsEquals(this.getNewTokenCarrier(p_game).getType(), ($clinit_TokenType() , Teleporter))) {
    freighters = p_game.getAllFreighter(this.getNewTokenCarrier(p_game).getColor_0());
    if (freighters.size_1() > 0) {
      p_game.moveToken_1(this.getToken_3(p_game), castTo(freighters.get_0(0), 19));
      castTo(freighters.get_0(0), 19).incVersion();
    }
  }
   else if (jsEquals(this.getNewTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    p_game.moveToken_1(this.getToken_3(p_game), p_game.getMainWarp());
  }
   else {
    p_game.moveToken_1(this.getToken_3(p_game), this.getNewTokenCarrier(p_game));
  }
  this.getToken_3(p_game).incVersion();
  this.getTokenCarrier(p_game).incVersion();
  this.getNewTokenCarrier(p_game).incVersion();
}
;
_.getSelectedPosition = function getSelectedPosition_10(p_game){
  if (isNotNull(this.getTokenCarrier(p_game))) {
    return this.getTokenCarrier(p_game).getPosition();
  }
   else {
    return getClassPrototype(17).getSelectedPosition.call(this, p_game);
  }
}
;
_.getType_0 = function getType_21(){
  return $clinit_GameLogType() , EvtTransfer;
}
;
_.init_33 = function init_33(){
  this.setCost(1);
}
;
_.unexec = function unexec_19(p_game){
  var freighters;
  getClassPrototype(17).unexec.call(this, p_game);
  if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Teleporter))) {
    freighters = p_game.getAllFreighter(this.getTokenCarrier(p_game).getColor_0());
    if (freighters.size_1() > 0) {
      p_game.moveToken_1(this.getToken_3(p_game), castTo(freighters.get_0(0), 19));
      castTo(freighters.get_0(0), 19).incVersion();
    }
  }
   else if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    p_game.moveToken_1(this.getToken_3(p_game), p_game.getMainWarp());
  }
   else {
    p_game.moveToken_1(this.getToken_3(p_game), this.getTokenCarrier(p_game));
  }
  this.getToken_3(p_game).decVersion();
  this.getTokenCarrier(p_game).decVersion();
  this.getNewTokenCarrier(p_game).decVersion();
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTransfer_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtTransfer', 114, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtTransfer_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtTransfer_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_92(streamReader, instance){
  $clinit_EbEvtTransfer_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_87(streamReader){
  $clinit_EbEvtTransfer_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtTransfer_2_classLit, {4:1, 1:1, 5:1}, 114, size_0, 0, 1);
}

function serialize_87(streamWriter, instance){
  $clinit_EbEvtTransfer_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtTransfer_FieldSerializer(){
  $clinit_EbEvtTransfer_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_93(streamReader, instance){
  $clinit_EbEvtTransfer_FieldSerializer();
  deserialize_45(streamReader, instance);
}

function instantiate_88(streamReader){
  $clinit_EbEvtTransfer_FieldSerializer();
  return new EbEvtTransfer;
}

function serialize_88(streamWriter, instance){
  $clinit_EbEvtTransfer_FieldSerializer();
  serialize_40(streamWriter, instance);
}

function $clinit_EbEvtUnLoad(){
  $clinit_EbEvtUnLoad = emptyMethod;
  $clinit_AnEventPlay();
}

function EbEvtUnLoad(){
  $clinit_EbEvtUnLoad();
  AnEventPlay.call(this);
  this.$init_338();
  this.init_34();
}

defineClass(37, 17, {21:1, 20:1, 17:1, 33:1, 37:1, 64:1, 4:1, 1:1}, EbEvtUnLoad);
_.$init_338 = function $init_338(){
}
;
_.check_0 = function check_23(p_game){
  var fireCoverColor, moveToPontoon, myRegistration, neighborPosition, neighborPosition$iterator, token, token$iterator, tokensOnWay, turretFound;
  getClassPrototype(17).check_0.call(this, p_game);
  if (jsNotEquals(this.getToken_3(p_game).getLocation(), ($clinit_Location() , Token)) || jsNotEquals(this.getTokenCarrier(p_game).getLocation(), ($clinit_Location() , Board))) {
    throw toJs(new RpcFmpException_1('token ' + this.getToken_3(p_game) + " can't be moved from location " + this.getToken_3(p_game).getLocation(), this));
  }
  myRegistration = this.getMyRegistration_0(p_game);
  if (!isNotNull(myRegistration)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!myRegistration.getEnuColor().isColored(this.getToken_3(p_game).getColor_0())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (this.getToken_3(p_game).canBeColored() && this.getToken_3(p_game).getColor_0() == 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getToken_3(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if ((!myRegistration.getEnuColor().isColored(this.getTokenCarrier(p_game).getColor_0()) || this.getTokenCarrier(p_game).getColor_0() == 0) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Freighter)) && jsNotEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDontControl(getColorString(this.getAccountId(), this.getTokenCarrier(p_game).getColor_0()), getColorString(this.getAccountId(), myRegistration.getColor_0())), this));
  }
  if (!this.getTokenCarrier(p_game).isNeighbor(p_game.getCoordinateSystem(), this.getNewPosition())) {
    throw toJs(new RpcFmpException_1('You must select all moving step without any gap between them.', this));
  }
  if (!p_game.isTokenTideActive(this.getToken_3(p_game).getCarrierToken())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableTide(getTokenString_0(this.getAccountId(), this.getToken_3(p_game).getCarrierToken())), this));
  }
  if (!p_game.isTokenFireActive(this.getToken_3(p_game).getCarrierToken())) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableFire(getTokenString_0(this.getAccountId(), this.getToken_3(p_game).getCarrierToken()), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getToken_3(p_game).getCarrierToken()).getValue_1())), this));
  }
  moveToPontoon = false;
  tokensOnWay = p_game.getAllToken(this.getNewPosition());
  if (this.getToken_3(p_game).getHexagonSize() == 2) {
    tokensOnWay.addAll(p_game.getAllToken(p_game.getCoordinateSystem().getNeighbor(this.getNewPosition(), this.getNewPosition().getSector())));
  }
  for (token$iterator = tokensOnWay.iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    if (jsNotEquals(token, this.getToken_3(p_game))) {
      if (jsNotEquals(token.getType(), ($clinit_TokenType() , Pontoon)) && jsNotEquals(token.getType(), ($clinit_TokenType() , Sluice)) && jsNotEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) && jsNotEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) {
        throw toJs(new RpcFmpException_1('Vous devez d\xE9placer votre pions sur une case libre', this));
      }
       else {
        if (token.canLoad(this.getToken_3(p_game).getType())) {
          moveToPontoon = true;
        }
         else {
          throw toJs(new RpcFmpException_1('Cette unit\xE9 ne peut pas ce deplacer sur le ' + token.getType(), this));
        }
      }
    }
  }
  if (!moveToPontoon) {
    if (!p_game.canTokenMoveOn(this.getToken_3(p_game), this.getNewPosition())) {
      throw toJs(new RpcFmpException_1(this.errMsg().CantMoveOn(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getLandString(this.getAccountId(), p_game.getLand_0(this.getNewPosition()))), this));
    }
  }
  fireCoverColor = p_game.getOpponentFireCover(this.getMyTeam(p_game).getColors(p_game.getPreview()), this.getNewPosition());
  if (fireCoverColor.getValue_1() != 0) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantMoveDisableFire(getTokenString_0(this.getAccountId(), this.getToken_3(p_game)), getColorString(this.getAccountId(), fireCoverColor.getValue_1())), this));
  }
  if (!p_game.isTokenFireActive(this.getTokenCarrier(p_game))) {
    throw toJs(new RpcFmpException_1(this.errMsg().CantUnloadDisableFire(getTokenString_0(this.getAccountId(), this.getTokenCarrier(p_game)), getColorString(this.getAccountId(), p_game.getOpponentFireCover_0(this.getTokenCarrier(p_game)).getValue_1())), this));
  }
  if (jsEquals(this.getToken_3(p_game).getType(), ($clinit_TokenType() , Pontoon)) && !p_game.isPontoonLinkToGround(this.getNewPosition())) {
    throw toJs(new RpcFmpException_1('les pontons doivent etres relie a la terre', this));
  }
  if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Freighter))) {
    turretFound = false;
    for (neighborPosition$iterator = p_game.getCoordinateSystem().getAllNeighbors(this.getNewPosition()).iterator_0(); neighborPosition$iterator.hasNext_0();) {
      neighborPosition = castTo(neighborPosition$iterator.next_1(), 23);
      token = p_game.getToken_2(neighborPosition, ($clinit_TokenType() , Turret));
      if (isNotNull(token)) {
        turretFound = true;
      }
    }
    if (!turretFound) {
      throw toJs(new RpcFmpException_1('Vous ne pouvez pas d\xE9charger par un pod detruit.', this));
    }
  }
}
;
_.exec_0 = function exec_23(p_game){
  getClassPrototype(17).exec_0.call(this, p_game);
  p_game.moveToken_0(this.getToken_3(p_game), this.getNewPosition());
  this.getToken_3(p_game).incVersion();
  this.getTokenCarrier(p_game).incVersion();
  this.execFireDisabling_0(p_game, this.getToken_3(p_game).getPosition());
}
;
_.getSelectedPosition = function getSelectedPosition_11(p_game){
  if (isNotNull(this.getTokenCarrier(p_game))) {
    return this.getTokenCarrier(p_game).getPosition();
  }
   else {
    return this.getNewPosition();
  }
}
;
_.getType_0 = function getType_22(){
  return $clinit_GameLogType() , EvtUnLoad;
}
;
_.init_34 = function init_34(){
  this.setCost(1);
}
;
_.setToken = function setToken_1(p_token){
  getClassPrototype(17).setToken.call(this, p_token);
  this.setCost(1);
  if (jsEquals(p_token.getType(), ($clinit_TokenType() , Ore0))) {
    this.setCost(0);
  }
  if (jsEquals(p_token.getType(), ($clinit_TokenType() , Teleporter))) {
    this.setCost(4);
  }
}
;
_.unexec = function unexec_20(p_game){
  var freighters;
  getClassPrototype(17).unexec.call(this, p_game);
  if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Teleporter))) {
    freighters = p_game.getAllFreighter(this.getTokenCarrier(p_game).getColor_0());
    if (freighters.size_1() > 0) {
      p_game.moveToken_1(this.getToken_3(p_game), castTo(freighters.get_0(0), 19));
      castTo(freighters.get_0(0), 19).decVersion();
    }
  }
   else if (jsEquals(this.getTokenCarrier(p_game).getType(), ($clinit_TokenType() , Warp))) {
    p_game.moveToken_1(this.getToken_3(p_game), p_game.getMainWarp());
  }
   else {
    p_game.moveToken_1(this.getToken_3(p_game), this.getTokenCarrier(p_game));
  }
  this.getToken_3(p_game).decVersion();
  this.getTokenCarrier(p_game).decVersion();
  this.unexecFireDisabling(p_game);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtUnLoad_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbEvtUnLoad', 37, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbEvtUnLoad_Array_Rank_1_FieldSerializer(){
  $clinit_EbEvtUnLoad_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_94(streamReader, instance){
  $clinit_EbEvtUnLoad_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_89(streamReader){
  $clinit_EbEvtUnLoad_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbEvtUnLoad_2_classLit, {4:1, 1:1, 5:1}, 37, size_0, 0, 1);
}

function serialize_89(streamWriter, instance){
  $clinit_EbEvtUnLoad_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbEvtUnLoad_FieldSerializer(){
  $clinit_EbEvtUnLoad_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_95(streamReader, instance){
  $clinit_EbEvtUnLoad_FieldSerializer();
  deserialize_45(streamReader, instance);
}

function instantiate_90(streamReader){
  $clinit_EbEvtUnLoad_FieldSerializer();
  return new EbEvtUnLoad;
}

function serialize_90(streamWriter, instance){
  $clinit_EbEvtUnLoad_FieldSerializer();
  serialize_40(streamWriter, instance);
}

function $clinit_EbGameJoin(){
  $clinit_EbGameJoin = emptyMethod;
  $clinit_AnEventUser();
}

function EbGameJoin(){
  $clinit_EbGameJoin();
  AnEventUser.call(this);
  this.$init_339();
  this.init_35();
}

defineClass(157, 33, {21:1, 20:1, 33:1, 157:1, 64:1, 4:1, 1:1}, EbGameJoin);
_.$init_339 = function $init_339(){
  this.m_color = 0;
  this.m_account = null;
  this.m_company = ($clinit_Company() , Freelancer);
  this.m_actionPointBonus = 0;
}
;
_.check_0 = function check_24(p_game){
  var registration;
  getClassPrototype(33).check_0.call(this, p_game);
  if (isNotNull(this.getMyRegistration_0(p_game))) {
    throw toJs(new RpcFmpException_1("You can't join a game several times", this));
  }
  if (this.getColor_0() == 0) {
    throw toJs(new RpcFmpException_1('You have to select a color before joining a game', this));
  }
  if (jsNotEquals(p_game.getStatus(), ($clinit_GameStatus() , Open))) {
    throw toJs(new RpcFmpException_1("You can't join a game wich is started", this));
  }
  registration = p_game.getRegistrationByColor(this.getColor_0());
  if (isNotNull(registration)) {
    if (registration.haveAccount()) {
      throw toJs(new RpcFmpException_1('Color ' + this.getEnuColor() + ' was already selected in this game', this));
    }
  }
   else if (p_game.getMaxNumberOfPlayer() <= p_game.getSetRegistration().size_1()) {
    throw toJs(new RpcFmpException_1('The maximum number of player is reached for this game.', this));
  }
  if (!p_game.isTeamAllowed() && jsNotEquals(this.getCompany(), ($clinit_Company() , Freelancer)) && isNotNull(p_game.getTeam_0(this.getCompany()))) {
    throw toJs(new RpcFmpException_1("This gaame don't allow team", this));
  }
}
;
_.createRegistration = function createRegistration(p_game){
  var game, pt, registration, team;
  if (!isNotNull(p_game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  game = p_game;
  registration = new EbRegistration;
  registration.setColor(this.getColor_0());
  registration.setOriginalColor(registration.getColor_0());
  registration.setActionPointBonus(this.getActionPointBonus());
  game.addRegistration(registration);
  if (game.getCurrentTimeStep() > 1) {
    pt = registration.getActionInc(game) * (game.getCurrentTimeStep() - p_game.getEbConfigGameTime().getDeploymentTimeStep());
    if (pt > 10) {
      pt = 10;
    }
    registration.setPtAction(pt);
  }
   else {
    registration.setPtAction(0);
  }
  team = p_game.getTeam_0(this.getCompany());
  if (isNull(team) || jsEquals(this.getCompany(), ($clinit_Company() , Freelancer))) {
    team = new EbTeam;
    team.setCompany(this.getCompany());
    team.setFireColor(registration.getEnuColor().getSingleColor().getValue_1());
    team.setOrderIndex(p_game.getTeams().size_1());
    p_game.addTeam(team);
  }
  registration.setTeamId(team.getId());
  team.getPlayerIds().add_5(valueOf_40(registration.getId()));
  team.clearColorsCache();
  game.getCurrentPlayerIds().clear_0();
  game.getCurrentPlayerIds().add_5(castTo(game.getTeamByOrderIndex(0).getPlayerIds().get_0(0), 66));
  this.createTokens(p_game, registration.getColor_0());
  return registration;
}
;
_.createTokens = function createTokens(p_game, color_0){
  var $tmp, current, currentHolds, freighters, i, shipToken, token, token$iterator, type_0, type$array, type$index, type$max, typeCurrentCount, typeTargetCount;
  if (!isSingleColor_0(color_0)) {
    throw toJs(new RpcFmpException_0("can't create token with several color"));
  }
  freighters = p_game.getAllFreighter(color_0);
  shipToken = null;
  currentHolds = new HashMap;
  if (!freighters.isEmpty()) {
    shipToken = castTo(freighters.get_0(0), 19);
    for (token$iterator = shipToken.getContains().iterator_0(); token$iterator.hasNext_0();) {
      token = castTo(token$iterator.next_1(), 19);
      current = castTo(currentHolds.get_1(token.getType()), 28);
      if (isNull(current)) {
        current = valueOf_37(0);
      }
      $tmp = current , current = valueOf_37(current.intValue() + 1) , $tmp;
      currentHolds.put(token.getType(), current);
    }
  }
   else {
    shipToken = new EbToken;
    shipToken.setType(($clinit_TokenType() , Freighter));
    shipToken.setColor(color_0);
    shipToken.setLocation(($clinit_Location() , Orbit));
    if (shipToken.isTrancient() || isNull(p_game.getToken_0(shipToken.getId()))) {
      p_game.addToken_1(shipToken);
    }
     else {
      shipToken = p_game.getToken_0(shipToken.getId());
    }
  }
  for (type$array = values_13() , type$index = 0 , type$max = type$array.length; type$index < type$max; ++type$index) {
    type_0 = type$array[type$index];
    if (jsEquals(type_0, ($clinit_TokenType() , Freighter))) {
      continue;
    }
    typeCurrentCount = castTo(currentHolds.get_1(type_0), 28);
    if (isNull(typeCurrentCount)) {
      typeCurrentCount = valueOf_37(0);
    }
    typeTargetCount = castTo(p_game.getInitialHolds().get_1(type_0), 28);
    if (isNull(typeTargetCount)) {
      typeTargetCount = valueOf_37(0);
    }
    for (i = 0; i < typeTargetCount.intValue() - typeCurrentCount.intValue(); i++) {
      token = new EbToken;
      token.setType(type_0);
      token.setLocation(($clinit_Location() , Token));
      if (token.canBeColored()) {
        token.setColor(color_0);
      }
       else {
        token.setColor(0);
      }
      token.setBulletCount(token.getType().getMaxBulletCount());
      if (token.isTrancient() || isNull(p_game.getToken_0(token.getId()))) {
        p_game.addToken_1(token);
      }
       else {
        token = p_game.getToken_0(token.getId());
      }
      shipToken.loadToken(token);
    }
  }
}
;
_.exec_0 = function exec_24(p_game){
  var registration;
  getClassPrototype(20).exec_0.call(this, p_game);
  registration = p_game.getRegistrationByColor(this.getColor_0());
  if (isNull(registration)) {
    registration = this.createRegistration(p_game);
  }
   else if (p_game.getCurrentTimeStep() < p_game.getEbConfigGameTime().getDeploymentTimeStep()) {
    this.createTokens(p_game, registration.getColor_0());
  }
  if (registration.isReplacement() && eq(registration.getOriginalAccountId(), this.getAccount_0().getId())) {
    registration.setOriginalAccountId(0);
  }
  registration.setAccount(this.getAccount_0());
  if (p_game.isTimeStepParallelHidden(p_game.getCurrentTimeStep())) {
    p_game.getCurrentPlayerIds().add_5(valueOf_40(registration.getId()));
  }
  p_game.updateOpenPauseStatus();
}
;
_.getAccount_0 = function getAccount_2(){
  return this.m_account;
}
;
_.getActionPointBonus = function getActionPointBonus_0(){
  return this.m_actionPointBonus;
}
;
_.getColor_0 = function getColor_2(){
  return this.m_color;
}
;
_.getCompany = function getCompany_0(){
  return this.m_company;
}
;
_.getEnuColor = function getEnuColor_1(){
  return new EnuColor_0(this.m_color);
}
;
_.getType_0 = function getType_23(){
  return $clinit_GameLogType() , GameJoin;
}
;
_.init_35 = function init_35(){
  this.m_color = 0;
}
;
_.setAccount = function setAccount_0(p_account){
  this.m_account = p_account;
  this.setAccountId(this.m_account.getId());
}
;
_.setActionPointBonus = function setActionPointBonus_0(p_actionPointBonus){
  this.m_actionPointBonus = p_actionPointBonus;
}
;
_.setColor = function setColor_1(p_value){
  this.m_color = p_value;
}
;
_.setCompany = function setCompany_0(p_company){
  this.m_company = p_company;
}
;
_.toString_0 = function toString_37(){
  var str;
  str = getClassPrototype(33).toString_0.call(this);
  if (isNotNull(this.getAccount_0())) {
    str += '' + this.getAccount_0().getPseudo();
  }
  str += ' : Join - color ' + this.getEnuColor().toString_0();
  return str;
}
;
_.unexec = function unexec_21(p_game){
  var freighter, freighter$iterator, registration, token, token$iterator, tokenToRemove;
  getClassPrototype(20).unexec.call(this, p_game);
  registration = this.getMyRegistration_0(p_game);
  p_game.getSetRegistration().remove_1(registration);
  tokenToRemove = new HashSet;
  for (freighter$iterator = p_game.getSetToken().iterator_0(); freighter$iterator.hasNext_0();) {
    freighter = castTo(freighter$iterator.next_1(), 19);
    if (jsEquals(freighter.getType(), ($clinit_TokenType() , Freighter)) && registration.getEnuColor().isColored(freighter.getColor_0())) {
      if (freighter.containToken()) {
        for (token$iterator = freighter.getContains().iterator_0(); token$iterator.hasNext_0();) {
          token = castTo(token$iterator.next_1(), 19);
          tokenToRemove.add_5(token);
        }
      }
      tokenToRemove.add_5(freighter);
    }
  }
  p_game.getSetToken().removeAll(tokenToRemove);
}
;
_.m_actionPointBonus = 0;
_.m_color = 0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbGameJoin_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbGameJoin', 157, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventUser_2_classLit);
function $clinit_EbGameJoin_Array_Rank_1_FieldSerializer(){
  $clinit_EbGameJoin_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_96(streamReader, instance){
  $clinit_EbGameJoin_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_91(streamReader){
  $clinit_EbGameJoin_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbGameJoin_2_classLit, {4:1, 1:1, 5:1}, 157, size_0, 0, 1);
}

function serialize_91(streamWriter, instance){
  $clinit_EbGameJoin_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbGameJoin_FieldSerializer(){
  $clinit_EbGameJoin_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_97(streamReader, instance){
  $clinit_EbGameJoin_FieldSerializer();
  setM_account_1(instance, castTo(streamReader.readObject(), 131));
  setM_actionPointBonus_0(instance, streamReader.readInt());
  setM_color_1(instance, streamReader.readInt());
  setM_company_2(instance, castTo(streamReader.readObject(), 120));
  deserialize_47(streamReader, instance);
}

function getM_account_1(instance){
  return instance.m_account;
}

function getM_actionPointBonus_0(instance){
  return instance.m_actionPointBonus;
}

function getM_color_1(instance){
  return instance.m_color;
}

function getM_company_2(instance){
  return instance.m_company;
}

function instantiate_92(streamReader){
  $clinit_EbGameJoin_FieldSerializer();
  return new EbGameJoin;
}

function serialize_92(streamWriter, instance){
  $clinit_EbGameJoin_FieldSerializer();
  streamWriter.writeObject(getM_account_1(instance));
  streamWriter.writeInt(getM_actionPointBonus_0(instance));
  streamWriter.writeInt(getM_color_1(instance));
  streamWriter.writeObject(getM_company_2(instance));
  serialize_42(streamWriter, instance);
}

function setM_account_1(instance, value_0){
  instance.m_account = value_0;
}

function setM_actionPointBonus_0(instance, value_0){
  instance.m_actionPointBonus = value_0;
}

function setM_color_1(instance, value_0){
  instance.m_color = value_0;
}

function setM_company_2(instance, value_0){
  instance.m_company = value_0;
}

function $clinit_EbRemember(){
  $clinit_EbRemember = emptyMethod;
  $clinit_AnEventPlay();
}

function EbRemember(){
  $clinit_EbRemember();
  AnEventPlay.call(this);
  this.$init_340();
  this.init_36();
}

defineClass(347, 17, {21:1, 20:1, 17:1, 33:1, 347:1, 64:1, 4:1, 1:1}, EbRemember);
_.$init_340 = function $init_340(){
  this.m_toRemember = null;
  this.m_oldRemember = null;
}
;
_.exec_0 = function exec_25(p_game){
  var reg;
  getClassPrototype(17).exec_0.call(this, p_game);
  reg = p_game.getRegistration_0(this.getRegistrationId());
  this.m_oldRemember = reg.getRemember();
  reg.setRemember(this.m_toRemember);
}
;
_.getType_0 = function getType_24(){
  return $clinit_GameLogType() , EbRememeber;
}
;
_.init_36 = function init_36(){
  this.setCost(0);
}
;
_.unexec = function unexec_22(p_game){
  var reg;
  getClassPrototype(17).unexec.call(this, p_game);
  reg = p_game.getRegistration_0(this.getRegistrationId());
  reg.setRemember(this.m_oldRemember);
}
;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EbRemember_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EbRemember', 347, Lcom_fullmetalgalaxy_model_persist_gamelog_AnEventPlay_2_classLit);
function $clinit_EbRemember_Array_Rank_1_FieldSerializer(){
  $clinit_EbRemember_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_98(streamReader, instance){
  $clinit_EbRemember_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_93(streamReader){
  $clinit_EbRemember_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EbRemember_2_classLit, {4:1, 1:1, 5:1}, 347, size_0, 0, 1);
}

function serialize_93(streamWriter, instance){
  $clinit_EbRemember_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbRemember_FieldSerializer(){
  $clinit_EbRemember_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_99(streamReader, instance){
  $clinit_EbRemember_FieldSerializer();
  setM_oldRemember(instance, streamReader.readString());
  setM_toRemember(instance, streamReader.readString());
  deserialize_45(streamReader, instance);
}

function getM_oldRemember(instance){
  return instance.m_oldRemember;
}

function getM_toRemember(instance){
  return instance.m_toRemember;
}

function instantiate_94(streamReader){
  $clinit_EbRemember_FieldSerializer();
  return new EbRemember;
}

function serialize_94(streamWriter, instance){
  $clinit_EbRemember_FieldSerializer();
  streamWriter.writeString(getM_oldRemember(instance));
  streamWriter.writeString(getM_toRemember(instance));
  serialize_40(streamWriter, instance);
}

function setM_oldRemember(instance, value_0){
  instance.m_oldRemember = value_0;
}

function setM_toRemember(instance, value_0){
  instance.m_toRemember = value_0;
}

function $clinit_EventBuilderMsg(){
  $clinit_EventBuilderMsg = emptyMethod;
  $clinit_Enum();
  None_1 = new EventBuilderMsg('None', 0);
  Updated = new EventBuilderMsg('Updated', 1);
  MustRun = new EventBuilderMsg('MustRun', 2);
}

function EventBuilderMsg(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_341();
}

function valueOf_14(name_0){
  $clinit_EventBuilderMsg();
  return valueOf(($clinit_EventBuilderMsg$Map() , $MAP_13), name_0);
}

function values_15(){
  $clinit_EventBuilderMsg();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EventBuilderMsg_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 249, 0, [None_1, Updated, MustRun]);
}

defineClass(249, 7, {249:1, 4:1, 8:1, 7:1, 1:1}, EventBuilderMsg);
_.$init_341 = function $init_341(){
}
;
var MustRun, None_1, Updated;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EventBuilderMsg_2_classLit = createForEnum('com.fullmetalgalaxy.model.persist.gamelog', 'EventBuilderMsg', 249, Ljava_lang_Enum_2_classLit, values_15, valueOf_14);
function $clinit_EventBuilderMsg$Map(){
  $clinit_EventBuilderMsg$Map = emptyMethod;
  $MAP_13 = createValueOfMap(values_15());
}

var $MAP_13;
function $clinit_EventsPlayBuilder(){
  $clinit_EventsPlayBuilder = emptyMethod;
  $clinit_Object();
}

function EventsPlayBuilder(){
  $clinit_EventsPlayBuilder();
  Object_0.call(this);
  this.$init_342();
}

defineClass(710, 1, {1:1}, EventsPlayBuilder);
_.$init_342 = function $init_342(){
  this.m_actionList = new ArrayList;
  this.m_selectedAction = null;
  this.m_selectedToken = null;
  this.m_selectedPosition = null;
  this.m_extraSelectedToken = new ArrayList;
  this.m_lastClick = null;
  this.m_lastUpdate = new Date_1(currentTimeMillis_0());
  this.m_game = null;
  this.m_isRecording = false;
  this.m_myAccount = null;
  this.m_isReadOnly = false;
  this.m_isRunnable = true;
  this.m_isExecuted = false;
}
;
_.actionAdd = function actionAdd(p_action){
  if (!isNotNull(p_action)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  p_action.check_0(this.m_game);
  this.actionAddUnchecked(p_action);
}
;
_.actionAddUnchecked = function actionAddUnchecked(p_action){
  p_action.exec_0(this.m_game);
  this.getActionList().add_5(p_action);
  this.m_selectedAction = null;
  this.setLastUpdate(new Date_1(currentTimeMillis_0()));
}
;
_.actionControl = function actionControl(){
  var action;
  if (!isNotNull(this.m_selectedToken)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!jsEquals(this.m_selectedToken.getLocation(), ($clinit_Location() , Board))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!instanceOf(this.getSelectedAction(), 97)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  action = castTo(this.getSelectedAction(), 97);
  logDebug('user control with ' + action.getTokenDestroyer1(this.m_game) + ' and ' + action.getTokenDestroyer2(this.m_game) + ' onto ' + action.getTokenTarget(this.m_game) + ' ' + action.getPosition());
  this.actionAdd(action);
  this.setSelectedAction(null);
}
;
_.actionControlFreighter = function actionControlFreighter(p_token, p_tokenFreighter){
  var action;
  action = new EbEvtControlFreighter;
  action.setRegistration(this.getMyRegistration());
  action.setGame(this.getGame());
  action.setToken(p_token);
  action.setTokenFreighter(p_tokenFreighter);
  action.setCost(-1 * this.getGame().getEbConfigGameTime().getActionPtMaxPerExtraShip());
  this.actionAdd(action);
}
;
_.actionFire = function actionFire(){
  var action, actionMove, destroyer1, destroyer2, target;
  if (!isNotNull(this.m_selectedToken)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!jsEquals(this.m_selectedToken.getLocation(), ($clinit_Location() , Board))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!instanceOf(this.getSelectedAction(), 60)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  action = castTo(this.getSelectedAction(), 60);
  destroyer1 = action.getTokenDestroyer1(this.getGame());
  destroyer2 = action.getTokenDestroyer2(this.getGame());
  target = action.getTokenTarget(this.getGame());
  if (this.getGame().getOpponentFireCover_0(destroyer1).getValue_1() == 0 && this.getGame().getOpponentFireCover_0(destroyer2).getValue_1() == 0) {
    if (!this.getGame().canTokenFireOn_2(destroyer2, target) && jsNotEquals(destroyer1, destroyer2)) {
      action.setTokenDestroyer1(destroyer2);
      action.setTokenDestroyer2(destroyer1);
      destroyer1 = action.getTokenDestroyer1(this.getGame());
      destroyer2 = action.getTokenDestroyer2(this.getGame());
      this.setSelectedToken(destroyer1);
      this.setSelectedPosition(destroyer1.getPosition());
    }
    if (!this.getGame().canTokenFireOn_2(destroyer1, target)) {
      actionMove = new EbEvtMove;
      actionMove.setGame(this.getGame());
      actionMove.setRegistration(this.getMyRegistration());
      actionMove.setToken(destroyer1);
      actionMove.setNewPosition(this.getCoordinateSystem().getNeighbor(destroyer1.getPosition(), this.getCoordinateSystem().getSector_0(destroyer1.getPosition(), target.getPosition())));
      this.actionAdd(actionMove);
    }
  }
  logDebug('user fire with ' + action.getTokenDestroyer1(this.m_game) + ' and ' + action.getTokenDestroyer2(this.m_game) + ' onto ' + action.getTokenTarget(this.m_game) + ' ' + action.getPosition());
  this.actionAdd(action);
  this.setSelectedAction(null);
}
;
_.actionLoadSelected = function actionLoadSelected(p_tokenCarrier, p_position){
  var action, actionUnload, tokenContent, tokenContent$iterator, transfer, transfer$iterator, transfers;
  if (!this.isBoardTokenSelected()) {
    debugger;
    throw toJs(makeAssertionError());
  }
  logDebug('user load token ' + this.getSelectedToken() + ' from ' + this.getSelectedToken().getPosition() + ' to ' + p_tokenCarrier);
  action = new EbEvtLoad;
  action.setRegistration(this.getMyRegistration());
  action.setGame(this.getGame());
  if (p_tokenCarrier.getType().isOre()) {
    action.setTokenCarrier(this.getSelectedToken());
    action.setToken(p_tokenCarrier);
    this.actionAdd(action);
    return;
  }
  action.setTokenCarrier(p_tokenCarrier);
  action.setToken(this.getSelectedToken());
  if (jsEquals(action.getTokenCarrier(this.m_game).getType(), ($clinit_TokenType() , Freighter)) && (!action.getMyRegistration_0(this.m_game).getEnuColor().isColored(action.getTokenCarrier(this.m_game).getColor_0()) || action.getTokenCarrier(this.m_game).getColor_0() == 0)) {
    this.actionControlFreighter(action.getToken_3(this.m_game), action.getTokenCarrier(this.m_game));
  }
  this.actionAdd(action);
  if (action.getToken_3(this.m_game).containToken()) {
    transfers = new ArrayList;
    for (tokenContent$iterator = action.getToken_3(this.m_game).getContains().iterator_0(); tokenContent$iterator.hasNext_0();) {
      tokenContent = castTo(tokenContent$iterator.next_1(), 19);
      transfer = new EbEvtTransfer;
      transfer.setRegistration(this.getMyRegistration());
      transfer.setGame(this.getGame());
      transfer.setToken(tokenContent);
      transfer.setTokenCarrier(tokenContent.getCarrierToken());
      transfer.setNewTokenCarrier(p_tokenCarrier);
      transfer.setCost(0);
      transfer.setAuto(true);
      transfers.add_5(transfer);
    }
    for (transfer$iterator = transfers.iterator_0(); transfer$iterator.hasNext_0();) {
      transfer = castTo(transfer$iterator.next_1(), 114);
      this.actionAdd(transfer);
    }
  }
  this.selectBoardToken_0(p_tokenCarrier, p_position);
  actionUnload = new EbEvtUnLoad;
  actionUnload.setGame(this.getGame());
  actionUnload.setTokenCarrier(p_tokenCarrier);
  actionUnload.setToken(action.getToken_3(this.m_game));
  this.setSelectedAction(actionUnload);
}
;
_.actionMoveSelected = function actionMoveSelected(p_position){
  var action, currentPosition, freighter, freighter$iterator, isSelectedByHead, newPosition;
  logDebug('user move token ' + this.getSelectedToken() + ' to ' + p_position);
  if (!isNotNull(this.m_selectedToken)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!jsEquals(this.m_selectedToken.getLocation(), ($clinit_Location() , Board))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!this.getSelectedToken().isNeighbor(this.getCoordinateSystem(), p_position)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (this.getSelectedToken().getPosition().equals_3(p_position) || this.getSelectedToken().getExtraPositions(this.getCoordinateSystem()).contains_0(p_position)) {
    return;
  }
  if (this.getSelectedToken().getHexagonSize() == 2) {
    currentPosition = this.getSelectedToken().getPosition().newInstance();
    isSelectedByHead = true;
    this.unexec_0();
    if (this.getSelectedToken().getPosition().equals_3(this.getSelectedPosition_0())) {
      isSelectedByHead = false;
    }
    this.exec_1();
    if (isSelectedByHead) {
      if (this.getCoordinateSystem().areNeighbor(p_position, this.getSelectedToken().getPosition())) {
        currentPosition.setSector(this.getCoordinateSystem().getSector_0(currentPosition, p_position));
        p_position = currentPosition;
      }
       else {
        newPosition = this.getCoordinateSystem().getNeighbor(currentPosition, currentPosition.getSector());
        newPosition.setSector(this.getCoordinateSystem().getSector_0(newPosition, p_position));
        p_position = newPosition;
      }
    }
     else {
      if (this.getCoordinateSystem().areNeighbor(p_position, castTo(this.getSelectedToken().getExtraPositions(this.getGame().getCoordinateSystem()).get_0(0), 23))) {
        p_position.setSector(this.getCoordinateSystem().getSector_0(p_position, castTo(this.getSelectedToken().getExtraPositions(this.getGame().getCoordinateSystem()).get_0(0), 23)));
      }
       else {
        p_position.setSector(this.getCoordinateSystem().getSector_0(p_position, currentPosition));
      }
    }
  }
   else {
    p_position.setSector(this.getCoordinateSystem().getSector_0(this.getSelectedToken().getPosition(), p_position));
  }
  action = new EbEvtMove;
  if (this.getGame().getCurrentTimeStep() <= this.getGame().getEbConfigGameTime().getDeploymentTimeStep()) {
    for (freighter$iterator = this.getGame().getAllFreighter(this.getMyRegistration().getColor_0()).iterator_0(); freighter$iterator.hasNext_0();) {
      freighter = castTo(freighter$iterator.next_1(), 19);
      if (jsEquals(freighter.getLocation(), ($clinit_Location() , Board)) && this.getCoordinateSystem().getDiscreteDistance(freighter.getPosition(), p_position) <= 3) {
        if (this.getSelectedToken().getHexagonSize() == 1) {
          action.setCost(0);
        }
         else if (this.getSelectedToken().getHexagonSize() == 2 && this.getCoordinateSystem().getDiscreteDistance(freighter.getPosition(), this.getCoordinateSystem().getNeighbor(p_position, p_position.getSector())) <= 3) {
          action.setCost(0);
        }
      }
    }
  }
  action.setGame(this.getGame());
  action.setRegistration(this.getMyRegistration());
  action.setToken(this.getSelectedToken());
  action.setNewPosition(p_position);
  this.actionAdd(action);
  this.setSelectedAction(null);
}
;
_.actionTransferExtraSelected = function actionTransferExtraSelected(){
  var e, evtTransfer, extraSelectedToken, extraSelectedToken$iterator, lastEvent, unload;
  lastEvent = this.getLastAction();
  if (isNotNull(lastEvent) && (instanceOf(lastEvent, 37) || instanceOf(lastEvent, 114))) {
    unload = castTo(lastEvent, 17);
    for (extraSelectedToken$iterator = this.getExtraSelectedToken().iterator_0(); extraSelectedToken$iterator.hasNext_0();) {
      extraSelectedToken = castTo(extraSelectedToken$iterator.next_1(), 19);
      evtTransfer = new EbEvtTransfer;
      evtTransfer.setGame(this.getGame());
      evtTransfer.setRegistration(this.getMyRegistration());
      evtTransfer.setToken(extraSelectedToken);
      evtTransfer.setTokenCarrier(unload.getTokenCarrier(this.m_game));
      if (instanceOf(lastEvent, 37)) {
        evtTransfer.setNewTokenCarrier(unload.getToken_3(this.m_game));
      }
       else {
        evtTransfer.setNewTokenCarrier(unload.getNewTokenCarrier(this.m_game));
      }
      evtTransfer.setAuto(true);
      evtTransfer.setCost(0);
      try {
        this.actionAdd(evtTransfer);
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 10)) {
          e = $e0;
        }
         else 
          throw toJs($e0);
      }
    }
  }
  this.getExtraSelectedToken().clear_0();
}
;
_.actionTransferSelected = function actionTransferSelected(p_newTokenCarrier, p_position){
  var action, actionUnload, lastAction, unload;
  if (!isNotNull(this.m_selectedAction)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!instanceOf(this.m_selectedAction, 37)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  unload = castTo(this.getSelectedAction(), 37);
  if (!isNotNull(unload)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.setSelectedAction(null);
  action = new EbEvtTransfer;
  action.setGame(this.getGame());
  action.setRegistration(this.getMyRegistration());
  action.setToken(unload.getToken_3(this.m_game));
  action.setTokenCarrier(unload.getTokenCarrier(this.m_game));
  action.setNewTokenCarrier(p_newTokenCarrier);
  lastAction = this.getLastAction();
  if (isNull(lastAction) && this.getGame().getLogs().size_1() > 0) {
    lastAction = castTo(this.getGame().getLogs().get_0(this.getGame().getLogs().size_1() - 1), 20);
  }
  if (isNotNull(lastAction) && jsEquals(lastAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad)) && jsEquals(castTo(lastAction, 37).getTokenCarrier(this.m_game), action.getTokenCarrier(this.m_game)) && jsEquals(castTo(lastAction, 37).getToken_3(this.m_game), action.getNewTokenCarrier(this.m_game))) {
    action.setAuto(true);
    action.setCost(0);
  }
  if (isNotNull(lastAction) && jsEquals(lastAction.getType_0(), ($clinit_GameLogType() , EvtTransfer)) && castTo(lastAction, 114).getCost() == 0 && jsEquals(castTo(lastAction, 114).getTokenCarrier(this.m_game), action.getTokenCarrier(this.m_game)) && jsEquals(castTo(lastAction, 114).getNewTokenCarrier(this.m_game), action.getNewTokenCarrier(this.m_game))) {
    action.setAuto(true);
    action.setCost(0);
  }
  if (jsEquals(action.getNewTokenCarrier(this.m_game).getType(), ($clinit_TokenType() , Freighter)) && !action.getMyRegistration_0(this.m_game).getEnuColor().isColored(action.getNewTokenCarrier(this.m_game).getColor_0())) {
    this.actionControlFreighter(action.getToken_3(this.m_game), action.getNewTokenCarrier(this.m_game));
  }
  logDebug('user transfert token ' + action.getToken_3(this.m_game) + ' from ' + action.getTokenCarrier(this.m_game) + ' to ' + action.getTokenCarrier(this.m_game));
  this.actionAdd(action);
  this.actionTransferExtraSelected();
  this.selectBoardToken_0(p_newTokenCarrier, p_position);
  actionUnload = new EbEvtUnLoad;
  actionUnload.setGame(this.getGame());
  actionUnload.setTokenCarrier(p_newTokenCarrier);
  actionUnload.setToken(unload.getToken_3(this.m_game));
  this.setSelectedAction(actionUnload);
}
;
_.actionUnloadSelected = function actionUnloadSelected(p_position){
  var action, lastAction;
  if (!isNotNull(this.m_selectedAction)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!instanceOf(this.m_selectedAction, 37)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  action = castTo(this.getSelectedAction(), 37);
  logDebug('user unload token ' + action.getToken_3(this.m_game) + ' from ' + action.getTokenCarrier(this.m_game) + ' to ' + p_position);
  action.setRegistration(this.getMyRegistration());
  action.setGame(this.getGame());
  action.setNewPosition(p_position);
  lastAction = this.getLastAction();
  if (isNull(lastAction) && this.getGame().getLogs().size_1() > 0) {
    lastAction = castTo(this.getGame().getLogs().get_0(this.getGame().getLogs().size_1() - 1), 20);
  }
  this.actionAdd(action);
  this.actionTransferExtraSelected();
  this.setSelectedToken(action.getToken_3(this.m_game));
  this.setSelectedAction(null);
}
;
_.cancel = function cancel_3(){
  var e;
  try {
    this.userCancel();
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
    }
     else 
      throw toJs($e0);
  }
}
;
_.check_1 = function check_25(){
  var evtMove, fdBackup, fireCoverColor, tokenOwnerColor, wasExecuted;
  if (isNotNull(this.getSelectedAction()) && (jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtLand)) || jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtDeployment)))) {
    this.getSelectedAction().check_0(this.m_game);
    return;
  }
  if (this.getActionList().size_1() == 0) {
    throw toJs(new RpcFmpException);
  }
  wasExecuted = this.isExecuted();
  try {
    if (!wasExecuted) {
      this.exec_1();
    }
    if (this.getActionList().size_1() > 1 && jsEquals(this.getLastAction().getType_0(), ($clinit_GameLogType() , EvtMove))) {
      evtMove = castTo(this.getLastAction(), 84);
      tokenOwnerColor = this.getGame().getTokenTeamColors(evtMove.getToken_3(this.getGame()));
      fireCoverColor = this.getGame().getOpponentFireCover(tokenOwnerColor.getValue_1(), evtMove.getOldPosition());
      if (fireCoverColor.getValue_1() != 0) {
        this.m_isRunnable = false;
        throw toJs(new RpcFmpException_0(this.errMsg().cantEnterLeaveFireCover()));
      }
    }
    if (this.getActionList().size_1() > 1 && jsEquals(this.getLastAction().getType_0(), ($clinit_GameLogType() , EvtControl))) {
      this.m_isRunnable = false;
      throw toJs(new RpcFmpException_0(this.errMsg().cantMoveAndConvert()));
    }
    if ((jsEquals(this.getLastAction().getType_0(), ($clinit_GameLogType() , EvtMove)) || jsEquals(this.getLastAction().getType_0(), ($clinit_GameLogType() , EvtFire))) && isNotNull(this.getSelectedToken()) && jsEquals(this.getSelectedToken().getLocation(), ($clinit_Location() , Board))) {
      fdBackup = null;
      if (this.getSelectedToken().isFireDisabling()) {
        fdBackup = new ArrayList_0(this.getSelectedToken().getFireDisablingList());
        this.getGame().getBoardFireCover().removeFireDisabling_0(fdBackup);
      }
      fireCoverColor = this.getGame().getOpponentFireCover_0(this.getSelectedToken());
      if (isNotNull(fdBackup)) {
        this.getGame().getBoardFireCover().addFireDisabling_0(fdBackup);
      }
      if (fireCoverColor.getValue_1() != 0) {
        if (jsEquals(this.getLastAction().getType_0(), ($clinit_GameLogType() , EvtMove))) {
          throw toJs(new RpcFmpException_0('un mouvement ne peut se terminer dans une zone de feu adverse. Vous pouvez quand meme effectuer un tir'));
        }
         else {
          throw toJs(new RpcFmpException_0('apres ce tir le destructeur est toujours dans une zone de feu adverse. Vous pouvez selectioner une autre cible'));
        }
      }
    }
  }
   finally {
    if (!wasExecuted) {
      this.unexec_0();
    }
  }
}
;
_.clear_0 = function clear_9(){
  var e;
  logDebug('clear action ');
  if (this.m_isExecuted) {
    try {
      this.unexec_0();
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 10)) {
        e = $e0;
        logError_0('error ', e);
      }
       else 
        throw toJs($e0);
    }
  }
  this.m_actionList.clear_0();
  this.m_isRunnable = true;
  this.unselectToken();
  this.getExtraSelectedToken().clear_0();
  if (isNotNull(this.getGame().getToken_1(this.getLastUserClick()))) {
    this.setLastUserClick(null);
  }
}
;
_.containUnload = function containUnload(p_token){
  var action, action$iterator, unload;
  if (isNotNull(this.getSelectedAction())) {
    if (instanceOf(this.getSelectedAction(), 37)) {
      unload = castTo(this.getSelectedAction(), 37);
      if (jsEquals(unload.getToken_3(this.m_game), p_token)) {
        return true;
      }
      if (this.getExtraSelectedToken().contains_0(p_token)) {
        return true;
      }
    }
    if (instanceOf(this.getSelectedAction(), 83)) {
      return true;
    }
  }
  for (action$iterator = this.getActionList().iterator_0(); action$iterator.hasNext_0();) {
    action = castTo(action$iterator.next_1(), 17);
    if (jsEquals(action.getType_0(), ($clinit_GameLogType() , EvtUnLoad))) {
      unload = castTo(action, 37);
      if (jsEquals(unload.getToken_3(this.m_game), p_token)) {
        return true;
      }
    }
  }
  return false;
}
;
_.errMsg = function errMsg_1(){
  return getMessagesError(this.getAccountId_0());
}
;
_.exec_1 = function exec_26(){
  var action, action$iterator;
  if (this.m_isExecuted)
    return;
  for (action$iterator = this.getActionList().iterator_0(); action$iterator.hasNext_0();) {
    action = castTo(action$iterator.next_1(), 17);
    action.exec_0(this.m_game);
  }
  this.m_isExecuted = true;
}
;
_.getAccountId_0 = function getAccountId_2(){
  if (isNotNull(this.m_myAccount)) {
    return this.m_myAccount.getId();
  }
  return 0;
}
;
_.getAction = function getAction(p_index){
  if (p_index < 0 || p_index >= this.getActionList().size_1()) {
    return null;
  }
  return castTo(this.getActionList().get_0(p_index), 17);
}
;
_.getActionList = function getActionList_0(){
  return this.m_actionList;
}
;
_.getCoordinateSystem = function getCoordinateSystem_0(){
  if (!isNotNull(this.m_game)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return this.getGame().getCoordinateSystem();
}
;
_.getCost = function getCost_0(){
  var action, action$iterator, cost;
  cost = 0;
  for (action$iterator = this.getActionList().iterator_0(); action$iterator.hasNext_0();) {
    action = castTo(action$iterator.next_1(), 17);
    cost += action.getCost();
  }
  return cost;
}
;
_.getExtraSelectedToken = function getExtraSelectedToken(){
  return this.m_extraSelectedToken;
}
;
_.getExtraSelectedTokenLoadingSize = function getExtraSelectedTokenLoadingSize(){
  var size_0, token, token$iterator;
  size_0 = 0;
  for (token$iterator = this.getExtraSelectedToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    size_0 += token.getFullLoadingSize();
  }
  return size_0;
}
;
_.getGame = function getGame_2(){
  return this.m_game;
}
;
_.getLastAction = function getLastAction(){
  return this.getAction(this.getActionList().size_1() - 1);
}
;
_.getLastGameLog = function getLastGameLog_1(){
  return this.getLastAction();
}
;
_.getLastGameLog_0 = function getLastGameLog_2(p_count){
  if (this.getActionList().size_1() < p_count) {
    return null;
  }
  return this.getAction(this.getActionList().size_1() - (1 + p_count));
}
;
_.getLastUpdate = function getLastUpdate_0(){
  return this.m_lastUpdate;
}
;
_.getLastUserClick = function getLastUserClick(){
  return this.m_lastClick;
}
;
_.getMyRegistration = function getMyRegistration_2(){
  if (jsEquals(this.getGame().getGameType(), ($clinit_GameType() , Puzzle_0)) && !this.getGame().getCurrentPlayerIds().isEmpty()) {
    return this.getGame().getRegistration_0(castTo(this.getGame().getCurrentPlayerIds().get_0(0), 66).longValue());
  }
  return this.getGame().getRegistrationByIdAccount(this.getAccountId_0());
}
;
_.getSelectedAction = function getSelectedAction(){
  return this.m_selectedAction;
}
;
_.getSelectedPosition_0 = function getSelectedPosition_12(){
  return this.m_selectedPosition;
}
;
_.getSelectedToken = function getSelectedToken(){
  return this.m_selectedToken;
}
;
_.isActionsPending = function isActionsPending(){
  return this.getActionList().size_1() != 0;
}
;
_.isBoardTokenSelected = function isBoardTokenSelected(){
  return isNotNull(this.m_selectedToken) && jsEquals(this.m_selectedToken.getLocation(), ($clinit_Location() , Board));
}
;
_.isEmptyLandSelected = function isEmptyLandSelected(){
  return isNull(this.m_selectedToken) && isNotNull(this.m_selectedPosition);
}
;
_.isExecuted = function isExecuted(){
  return this.m_isExecuted;
}
;
_.isRunnable = function isRunnable_0(){
  var e, isRunnable;
  if (!this.m_isRunnable) {
    return false;
  }
  isRunnable = true;
  try {
    this.check_1();
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
      isRunnable = false;
    }
     else 
      throw toJs($e0);
  }
  return isRunnable;
}
;
_.isTokenSelected = function isTokenSelected(){
  return isNotNull(this.m_selectedToken);
}
;
_.moveSelectedTo = function moveSelectedTo(p_position){
  var actionPt, finder, heuristic, it, mobile, node, path, registration;
  logDebug('user move token ' + this.getSelectedToken() + ' from ' + this.getSelectedToken().getPosition() + ' to ' + p_position);
  if (!isNotNull(this.getSelectedToken())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!jsEquals(this.getSelectedToken().getLocation(), ($clinit_Location() , Board))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(this.getGame())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!(neq(this.getAccountId_0(), 0) || jsNotEquals(this.getGame().getGameType(), ($clinit_GameType() , MultiPlayer)))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (this.getSelectedToken().isNeighbor(this.getGame().getCoordinateSystem(), p_position)) {
    this.actionMoveSelected(p_position);
    return true;
  }
  registration = this.getMyRegistration();
  actionPt = registration.getPtAction() - this.getCost();
  mobile = new Mobile(registration, this.getSelectedToken());
  heuristic = this.getGame().heuristic(this.getSelectedToken().getPosition(), p_position, mobile);
  if (heuristic > actionPt || heuristic > 9 || !this.getSelectedToken().canMoveOn_0(this.getGame(), registration, p_position)) {
    return false;
  }
  this.getGame().resetPathGraph();
  finder = new SimplePathFinder(this.getGame());
  path = finder.findPath(this.getSelectedToken().getPosition(), p_position, mobile);
  if (path.isEmpty() || path.size_1() - 2 > actionPt) {
    return false;
  }
   else {
    it = path.iterator_0();
    if (it.hasNext_0()) {
      it.next_1();
    }
    while (it.hasNext_0()) {
      node = castTo(it.next_1(), 256);
      this.actionMoveSelected(castTo(node, 23));
    }
  }
  return true;
}
;
_.privateAction = function privateAction(p_type){
  var action, isUpdated, token;
  isUpdated = ($clinit_EventBuilderMsg() , None_1);
  if (jsEquals(p_type, ($clinit_GameLogType() , EvtRepair))) {
    if (!this.isBoardTokenSelected()) {
      debugger;
      throw toJs(makeAssertionError());
    }
    action = new EbEvtRepair;
    action.setGame(this.getGame());
    action.setRegistration(this.getMyRegistration());
    action.setPosition(this.getSelectedPosition_0());
    this.setSelectedAction(action);
    isUpdated = ($clinit_EventBuilderMsg() , MustRun);
  }
   else if (jsEquals(p_type, ($clinit_GameLogType() , EvtTakeOff))) {
    if (!this.isBoardTokenSelected()) {
      debugger;
      throw toJs(makeAssertionError());
    }
    action = new EbEvtTakeOff;
    action.setGame(this.getGame());
    action.setRegistration(this.getMyRegistration());
    action.setToken(this.getSelectedToken());
    this.setSelectedAction(action);
    isUpdated = ($clinit_EventBuilderMsg() , MustRun);
  }
   else if (jsEquals(p_type, ($clinit_GameLogType() , EvtFire))) {
    if (!this.isBoardTokenSelected()) {
      debugger;
      throw toJs(makeAssertionError());
    }
    action = new EbEvtFire;
    action.setGame(this.getGame());
    action.setRegistration(this.getMyRegistration());
    token = this.getSelectedToken();
    if (jsEquals(token.getType(), ($clinit_TokenType() , Freighter))) {
      token = this.getGame().getToken_2(this.getSelectedPosition_0(), ($clinit_TokenType() , Turret));
      if (isNull(token)) {
        token = this.getSelectedToken();
      }
    }
    if (this.getMyRegistration().getEnuColor().contain_1(token.getColor_0())) {
      action.setTokenDestroyer1(token);
      action.setDestroyer1Position(this.m_selectedPosition);
    }
     else {
      action.setTokenTarget(token);
    }
    this.setSelectedToken(token);
    this.setSelectedAction(action);
    isUpdated = ($clinit_EventBuilderMsg() , Updated);
  }
   else if (jsEquals(p_type, ($clinit_GameLogType() , EvtControl))) {
    if (!this.isBoardTokenSelected()) {
      debugger;
      throw toJs(makeAssertionError());
    }
    action = new EbEvtControl;
    action.setGame(this.getGame());
    action.setRegistration(this.getMyRegistration());
    token = this.getSelectedToken();
    if (jsEquals(token.getType(), ($clinit_TokenType() , Freighter))) {
      token = this.getGame().getToken_2(this.getSelectedPosition_0(), ($clinit_TokenType() , Turret));
      if (isNull(token)) {
        token = this.getSelectedToken();
      }
    }
    if (this.getMyRegistration().getEnuColor().contain_1(token.getColor_0())) {
      action.setTokenDestroyer1(token);
    }
     else {
      action.setTokenTarget(token);
    }
    this.setSelectedAction(action);
    isUpdated = ($clinit_EventBuilderMsg() , Updated);
  }
  if (jsEquals(isUpdated, ($clinit_EventBuilderMsg() , Updated))) {
    this.setLastUserClick(castTo(null, 23));
  }
  return isUpdated;
}
;
_.privateOk = function privateOk(){
  if (isNull(this.getSelectedAction()))
    return;
  if (jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtLand)) || jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtDeployment))) {
    this.actionAdd(this.getSelectedAction());
    this.m_isExecuted = true;
    this.unexec_0();
  }
   else if (jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtUnLoad))) {
    this.actionTransferExtraSelected();
  }
}
;
_.privateTokenClick = function privateTokenClick(p_token){
  var action, isUpdated, selectedPosition;
  isUpdated = false;
  this.exec_1();
  try {
    if (isNotNull(this.getSelectedAction()) && (jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtLand)) || jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtDeployment)))) {
      action = castTo(this.getSelectedAction(), 17);
      action.getPosition().setSector(action.getPosition().getSector().getNext());
      p_token.getPosition().setSector(action.getPosition().getSector());
      isUpdated = true;
    }
     else if (jsEquals(p_token.getLocation(), ($clinit_Location() , Orbit)) && jsEquals(p_token.getType(), ($clinit_TokenType() , Freighter))) {
      this.clear_0();
      action = new EbEvtLand;
      action.setGame(this.getGame());
      action.setRegistration(this.getMyRegistration());
      action.setPosition(new AnBoardPosition);
      p_token.getPosition().setSector(action.getPosition().getSector());
      action.setToken(p_token);
      this.setSelectedAction(action);
      this.setSelectedToken(p_token);
      isUpdated = true;
    }
     else if (jsEquals(p_token.getLocation(), ($clinit_Location() , Token)) && jsEquals(p_token.getCarrierToken().getType(), ($clinit_TokenType() , Freighter)) && this.getGame().canDeployUnit(this.getMyRegistration())) {
      this.clear_0();
      action = new EbEvtDeployment;
      action.setGame(this.getGame());
      action.setRegistration(this.getMyRegistration());
      action.setPosition(new AnBoardPosition_2(p_token.getCarrierToken().getPosition()));
      action.getPosition().setSector(($clinit_Sector() , North));
      p_token.getPosition().setSector(action.getPosition().getSector());
      action.setToken(p_token);
      this.setSelectedAction(action);
      this.setSelectedToken(p_token);
      isUpdated = true;
    }
     else if (jsEquals(p_token.getLocation(), ($clinit_Location() , Token))) {
      if (!this.isBoardTokenSelected()) {
        debugger;
        throw toJs(makeAssertionError());
      }
      if (isNotNull(this.getLastAction()) && (jsEquals(this.getLastAction().getType_0(), ($clinit_GameLogType() , EvtLoad)) || jsEquals(this.getLastAction().getType_0(), ($clinit_GameLogType() , EvtTransfer))) && castTo(this.getLastAction(), 17).getToken_3(this.getGame()).canBeColored()) {
        selectedPosition = this.getSelectedPosition_0();
        this.clear_0();
        this.userBoardClick(selectedPosition, ($clinit_EventsPlayBuilder$UserAction() , Primary));
      }
      if (isNotNull(this.getSelectedAction()) && instanceOf(this.getSelectedAction(), 37) && this.getExtraSelectedToken().contains_0(p_token)) {
        this.getExtraSelectedToken().remove_1(p_token);
      }
       else if (isNotNull(this.getSelectedAction()) && instanceOf(this.getSelectedAction(), 37) && this.getSelectedAction().getToken_3(this.getGame()).canLoad(p_token.getType()) && this.getExtraSelectedTokenLoadingSize() + p_token.getFullLoadingSize() <= this.getSelectedAction().getToken_3(this.getGame()).getType().getLoadingCapability()) {
        this.getExtraSelectedToken().add_5(p_token);
      }
       else {
        this.getExtraSelectedToken().clear_0();
        action = new EbEvtUnLoad;
        action.setGame(this.getGame());
        action.setTokenCarrier(this.getSelectedToken());
        action.setToken(p_token);
        this.setSelectedAction(action);
      }
      isUpdated = true;
    }
     else if (jsEquals(p_token.getLocation(), ($clinit_Location() , ToBeConstructed))) {
      if (!this.isBoardTokenSelected()) {
        debugger;
        throw toJs(makeAssertionError());
      }
      if (!jsEquals(this.getSelectedToken().getType(), ($clinit_TokenType() , WeatherHen))) {
        debugger;
        throw toJs(makeAssertionError());
      }
      action = new EbEvtConstruct;
      action.setGame(this.getGame());
      action.setTokenCarrier(this.getSelectedToken());
      if (!isNotNull(this.getGame().getToken_0(p_token.getId()))) {
        debugger;
        throw toJs(makeAssertionError());
      }
      action.setToken(this.getGame().getToken_0(p_token.getId()));
      action.setConstructType(p_token.getType());
      this.setSelectedAction(action);
      isUpdated = true;
    }
  }
   finally {
    this.unexec_0();
  }
  if (isUpdated) {
    this.setLastUpdate(new Date_1(currentTimeMillis_0()));
  }
  return isUpdated;
}
;
_.selectBoardToken = function selectBoardToken(p_position){
  var token;
  if (isNull(p_position)) {
    this.unselectToken();
  }
  token = this.getGame().getToken_1(p_position);
  if (isNull(token)) {
    this.unselectToken();
  }
   else if (jsEquals(token.getType(), ($clinit_TokenType() , Turret))) {
    token = this.getGame().getToken_2(p_position, ($clinit_TokenType() , Freighter));
    if (!isNotNull(token)) {
      debugger;
      throw toJs(makeAssertionError());
    }
  }
  this.selectBoardToken_0(token, p_position);
}
;
_.selectBoardToken_0 = function selectBoardToken_0(p_token, p_position){
  logDebug('user select board token ' + p_token + ' ' + p_position);
  if (!isNotNull(p_token)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(p_position)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!jsEquals(p_token.getLocation(), ($clinit_Location() , Board))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.setSelectedToken(p_token);
  this.setSelectedPosition(p_position);
  this.setSelectedAction(null);
  this.setLastUpdate(new Date_1(currentTimeMillis_0()));
}
;
_.setGame = function setGame_2(p_game){
  if (isNotNull(this.m_game)) {
    this.m_game.setGameEventStack(this.m_game);
  }
  this.m_game = p_game;
  this.m_game.setGameEventStack(this);
}
;
_.setLastUpdate = function setLastUpdate_0(p_lastUpdate){
  this.m_lastUpdate = p_lastUpdate;
}
;
_.setLastUserClick = function setLastUserClick(p_position){
  this.m_lastClick = p_position;
}
;
_.setMyAccount = function setMyAccount(p_myAccount){
  this.m_myAccount = p_myAccount;
}
;
_.setReadOnly = function setReadOnly_0(p_isReadOnly){
  this.m_isReadOnly = p_isReadOnly;
}
;
_.setRecordMode = function setRecordMode(p_isRecording){
  this.m_isRecording = p_isRecording;
}
;
_.setSelectedAction = function setSelectedAction(p_selectedAction){
  this.m_selectedAction = p_selectedAction;
}
;
_.setSelectedPosition = function setSelectedPosition(p_selectedPosition){
  this.m_selectedPosition = p_selectedPosition;
}
;
_.setSelectedToken = function setSelectedToken(p_selectedToken){
  this.m_selectedToken = p_selectedToken;
  this.getExtraSelectedToken().clear_0();
}
;
_.unexec_0 = function unexec_23(){
  var actionIndex;
  if (!this.m_isExecuted)
    return;
  actionIndex = this.getActionList().size_1();
  while (actionIndex > 0) {
    actionIndex--;
    this.getAction(actionIndex).unexec(this.m_game);
  }
  this.m_isExecuted = false;
}
;
_.unselectToken = function unselectToken(){
  logDebug('user unselect token ');
  this.m_selectedToken = null;
  this.m_selectedPosition = null;
  this.m_selectedAction = null;
  this.setLastUpdate(new Date_1(currentTimeMillis_0()));
}
;
_.userAction = function userAction_0(p_type){
  if (this.m_isRecording) {
    this.m_game.setMessage(this.m_game.getMessage() + 'action ' + p_type + '\n');
  }
  return this.privateAction(p_type);
}
;
_.userBoardClick = function userBoardClick(p_position, userAction){
  var action, actionConstruct, closeLoadPosition, closePosition, closePosition2, closeUnloadPosition, freighter, isPathFound, isUpdated, previousAction, previousUnload, searchPath, token, tokenOnWay, unloadAction;
  if (this.m_isRecording) {
    this.m_game.setMessage(this.m_game.getMessage() + 'board ' + p_position.getX() + ' ' + p_position.getY() + ' ' + userAction.toString_0() + '\n');
  }
  isUpdated = ($clinit_EventBuilderMsg() , None_1);
  logDebug('user click board ' + p_position);
  if (!isNotNull(p_position)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(this.getGame())) {
    debugger;
    throw toJs(makeAssertionError());
  }
  token = this.getGame().getToken_1(p_position);
  if (jsEquals(userAction, ($clinit_EventsPlayBuilder$UserAction() , Touch_0))) {
    searchPath = isNull(token) && isNull(this.getSelectedAction());
  }
   else {
    searchPath = jsEquals(userAction, ($clinit_EventsPlayBuilder$UserAction() , Secondary));
  }
  if (p_position.equals_3(this.getLastUserClick()) || !this.m_isRunnable) {
    if (this.isRunnable()) {
      this.privateOk();
      isUpdated = ($clinit_EventBuilderMsg() , MustRun);
    }
     else if (!this.isActionsPending() && isNull(token)) {
      this.clear_0();
      isUpdated = ($clinit_EventBuilderMsg() , Updated);
      this.m_selectedPosition = p_position;
    }
     else {
      this.check_1();
      this.clear_0();
      isUpdated = ($clinit_EventBuilderMsg() , Updated);
    }
    return isUpdated;
  }
  this.setLastUserClick(p_position);
  if (isNull(this.getMyRegistration()) || this.m_isReadOnly) {
    this.clear_0();
    isUpdated = ($clinit_EventBuilderMsg() , Updated);
  }
  previousAction = this.getLastAction();
  this.exec_1();
  try {
    if (!this.isBoardTokenSelected() && isNotNull(token) && isNull(this.getSelectedAction())) {
      this.selectBoardToken(p_position);
      isUpdated = ($clinit_EventBuilderMsg() , Updated);
    }
     else if (this.isBoardTokenSelected()) {
      if (isNotNull(token) && (jsEquals(token.getType(), ($clinit_TokenType() , Pontoon)) || jsEquals(token.getType(), ($clinit_TokenType() , Sluice)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore2Generator)) || jsEquals(token.getType(), ($clinit_TokenType() , Ore3Generator))) && !instanceOf(this.getSelectedAction(), 60)) {
        if (isNotNull(this.getSelectedAction()) && instanceOf(this.getSelectedAction(), 37) && token.canLoad(castTo(this.getSelectedAction(), 37).getToken_3(this.m_game).getType())) {
          token = null;
        }
         else if (token.canLoad(this.getSelectedToken().getType())) {
          token = null;
        }
      }
      if (isNotNull(token) && jsEquals(token.getType(), ($clinit_TokenType() , Turret)) && instanceOf(this.getSelectedAction(), 37)) {
        token = this.getGame().getToken_2(token.getPosition(), ($clinit_TokenType() , Freighter));
      }
      if (isNull(token)) {
        if (isNull(this.getSelectedAction())) {
          if (isNotNull(previousAction) && jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad)) && this.getSelectedToken().getHexagonSize() == 2 && this.getCoordinateSystem().areNeighbor(p_position, castTo(previousAction, 37).getNewPosition())) {
            previousUnload = castTo(previousAction, 37);
            previousUnload.unexec(this.m_game);
            previousUnload.getNewPosition().setSector(this.getCoordinateSystem().getSector_0(previousUnload.getNewPosition(), p_position));
            previousUnload.exec_0(this.m_game);
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
          if (!searchPath && !this.getSelectedToken().isNeighbor(this.getGame().getCoordinateSystem(), p_position)) {
            this.clear_0();
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
           else if (jsEquals(isUpdated, ($clinit_EventBuilderMsg() , None_1))) {
            if (this.moveSelectedTo(p_position)) {
              isUpdated = ($clinit_EventBuilderMsg() , Updated);
            }
          }
          if (isNotNull(previousAction) && jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtUnLoad)) && !this.getActionList().isEmpty()) {
            this.setSelectedPosition(this.getAction(0).getSelectedPosition(this.m_game));
          }
        }
         else if (instanceOf(this.getSelectedAction(), 83)) {
          closePosition = this.getCoordinateSystem().getNeighbor(this.getSelectedPosition_0(), this.getCoordinateSystem().getSector_0(this.getSelectedPosition_0(), p_position));
          if (!searchPath && !closePosition.equals_3(p_position)) {
            this.clear_0();
          }
           else {
            actionConstruct = castTo(this.getSelectedAction(), 83);
            actionConstruct.setGame(this.m_game);
            actionConstruct.setRegistration(this.getMyRegistration());
            this.actionAdd(actionConstruct);
            this.privateTokenClick(actionConstruct.getToken_3(this.m_game));
            this.exec_1();
            this.actionUnloadSelected(closePosition);
            if (!closePosition.equals_3(p_position)) {
              this.setSelectedAction(null);
              this.setSelectedPosition(closePosition);
              this.setSelectedToken(castTo(this.getLastAction(), 37).getToken_3(this.m_game));
              this.moveSelectedTo(p_position);
              this.setSelectedPosition(this.getAction(0).getSelectedPosition(this.m_game));
            }
          }
          isUpdated = ($clinit_EventBuilderMsg() , Updated);
        }
         else if (instanceOf(this.getSelectedAction(), 37)) {
          unloadAction = castTo(this.getSelectedAction(), 37);
          closePosition = this.getCoordinateSystem().getNeighbor(this.getSelectedPosition_0(), this.getCoordinateSystem().getSector_0(this.getSelectedPosition_0(), p_position));
          closePosition2 = null;
          if (castTo(this.getSelectedAction(), 37).getToken_3(this.m_game).getHexagonSize() == 2) {
            if (isNotNull(castTo(this.getSelectedAction(), 37).getNewPosition())) {
              closePosition = castTo(this.getSelectedAction(), 37).getNewPosition();
              closePosition.setSector(this.getCoordinateSystem().getSector_0(closePosition, p_position));
              closePosition2 = this.getCoordinateSystem().getNeighbor(closePosition, closePosition.getSector());
              this.actionUnloadSelected(closePosition);
            }
             else {
              if (!closePosition.equals_3(p_position)) {
                closePosition2 = this.getCoordinateSystem().getNeighbor(closePosition, this.getCoordinateSystem().getSector_0(closePosition, p_position));
                closePosition.setSector(this.getCoordinateSystem().getSector_0(closePosition, closePosition2));
              }
              tokenOnWay = this.getGame().getToken_1(this.getCoordinateSystem().getNeighbor(closePosition, closePosition.getSector()));
              if (isNotNull(tokenOnWay) && jsEquals(tokenOnWay.getType(), ($clinit_TokenType() , Sluice))) {
                tokenOnWay = null;
              }
              if (this.getGame().canTokenMoveOn(castTo(this.getSelectedAction(), 37).getToken_3(this.m_game), closePosition) && isNull(tokenOnWay)) {
                this.actionUnloadSelected(closePosition);
              }
               else {
                castTo(this.getSelectedAction(), 37).setNewPosition(closePosition);
              }
            }
          }
           else {
            this.actionUnloadSelected(closePosition);
          }
          if (isNotNull(previousAction) && jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtLoad))) {
            this.selectBoardToken_0(castTo(this.getLastAction(), 37).getToken_3(this.m_game), this.getAction(0).getSelectedPosition(this.m_game));
          }
          if (isNotNull(closePosition2)) {
            if (!closePosition2.equals_3(p_position)) {
              if (!searchPath || isNull(this.getLastAction())) {
                this.clear_0();
              }
               else {
                this.setSelectedAction(null);
                this.setSelectedPosition(closePosition2);
                this.setSelectedToken(unloadAction.getToken_3(this.m_game));
                this.moveSelectedTo(p_position);
                this.setSelectedPosition(this.getAction(0).getSelectedPosition(this.m_game));
              }
            }
          }
           else if (!closePosition.equals_3(p_position)) {
            if (!searchPath || isNull(this.getLastAction())) {
              this.clear_0();
            }
             else {
              this.setSelectedAction(null);
              this.setSelectedPosition(closePosition);
              this.setSelectedToken(unloadAction.getToken_3(this.m_game));
              this.moveSelectedTo(p_position);
              this.setSelectedPosition(this.getAction(0).getSelectedPosition(this.m_game));
            }
          }
          isUpdated = ($clinit_EventBuilderMsg() , Updated);
        }
        if (jsEquals(isUpdated, ($clinit_EventBuilderMsg() , None_1))) {
          this.clear_0();
          isUpdated = ($clinit_EventBuilderMsg() , Updated);
        }
      }
       else {
        if (isNull(this.getSelectedAction()) && searchPath) {
          if (token.getColor_0() != this.getSelectedToken().getColor_0() && token.isNeighbor_0(this.getCoordinateSystem(), this.getSelectedToken())) {
            this.privateAction(($clinit_GameLogType() , EvtControl));
          }
           else if (this.getSelectedToken().getType().isDestroyer() && token.getType().isDestroyer() || this.getSelectedToken().canBeATarget(this.getGame()) && token.getType().isDestroyer() && !this.getMyRegistration().getEnuColor().contain_1(this.getSelectedToken().getColor_0()) || token.canBeATarget(this.getGame()) && this.getSelectedToken().getType().isDestroyer() && !this.getMyRegistration().getEnuColor().contain_1(token.getColor_0())) {
            this.privateAction(($clinit_GameLogType() , EvtFire));
          }
        }
        if (isNull(this.getSelectedAction())) {
          if (isNotNull(previousAction) && jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtFire))) {
            this.privateAction(($clinit_GameLogType() , EvtFire));
            castTo(this.getSelectedAction(), 60).setTokenDestroyer2(castTo(previousAction, 60).getTokenDestroyer2(this.m_game));
            castTo(this.getSelectedAction(), 60).setTokenTarget(token);
            this.actionFire();
          }
           else {
            isPathFound = true;
            closePosition = this.getCoordinateSystem().getNeighbor(p_position, this.getCoordinateSystem().getSector_0(p_position, this.getSelectedPosition_0()));
            if (!searchPath && !token.isNeighbor_0(this.getGame().getCoordinateSystem(), this.getSelectedToken())) {
              this.clear_0();
              this.selectBoardToken(p_position);
            }
             else {
              if (!closePosition.equals_3(this.getSelectedPosition_0())) {
                isPathFound = this.moveSelectedTo(closePosition);
              }
              if (jsEquals(token.getType(), ($clinit_TokenType() , Turret))) {
                token = this.getGame().getToken_2(p_position, ($clinit_TokenType() , Freighter));
                if (!isNotNull(token)) {
                  debugger;
                  throw toJs(makeAssertionError());
                }
              }
              if (isPathFound) {
                this.actionLoadSelected(token, p_position);
              }
               else {
                this.clear_0();
                this.selectBoardToken(p_position);
              }
            }
          }
          isUpdated = ($clinit_EventBuilderMsg() , Updated);
        }
         else if (instanceOf(this.getSelectedAction(), 60)) {
          if (token.getColor_0() == 0 || !this.getMyRegistration().getEnuColor().isColored(token.getColor_0())) {
            castTo(this.getSelectedAction(), 60).setTokenTarget(token);
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
           else {
            if (isNull(castTo(this.getSelectedAction(), 60).getTokenDestroyer1(this.getGame()))) {
              this.setSelectedPosition(p_position);
              this.setSelectedToken(token);
              castTo(this.getSelectedAction(), 60).setTokenDestroyer1(token);
              castTo(this.getSelectedAction(), 60).setDestroyer1Position(p_position);
            }
             else if (neq(token.getId(), castTo(this.getSelectedAction(), 60).getTokenDestroyer1(this.getGame()).getId()) || token.getHexagonSize() == 2) {
              castTo(this.getSelectedAction(), 60).setTokenDestroyer2(token);
              castTo(this.getSelectedAction(), 60).setDestroyer2Position(p_position);
            }
             else if (isNotNull(previousAction) && jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtFire))) {
              castTo(this.getSelectedAction(), 60).setTokenDestroyer2(castTo(previousAction, 60).getTokenDestroyer2(this.getGame()));
              castTo(this.getSelectedAction(), 60).setDestroyer2Position(castTo(previousAction, 60).getDestroyer2Position());
            }
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
          if (isNotNull(castTo(this.getSelectedAction(), 60).getTokenDestroyer2(this.m_game)) && isNotNull(castTo(this.getSelectedAction(), 60).getTokenTarget(this.m_game))) {
            this.actionFire();
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
        }
         else if (instanceOf(this.getSelectedAction(), 97)) {
          if (token.getColor_0() == 0 || !token.getType().isDestroyer() || !this.getMyRegistration().getEnuColor().isColored(token.getColor_0()) || token.getColor_0() != this.getSelectedToken().getColor_0() && isNotNull(castTo(this.getSelectedAction(), 97).getTokenDestroyer2(this.getGame()))) {
            castTo(this.getSelectedAction(), 97).setTokenTarget(token);
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
           else {
            if (isNull(castTo(this.getSelectedAction(), 97).getTokenDestroyer1(this.getGame()))) {
              this.setSelectedPosition(p_position);
              this.setSelectedToken(token);
              castTo(this.getSelectedAction(), 97).setTokenDestroyer1(token);
            }
             else {
              castTo(this.getSelectedAction(), 97).setTokenDestroyer2(token);
            }
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
          if (isNotNull(castTo(this.getSelectedAction(), 97).getTokenDestroyer2(this.m_game)) && isNotNull(castTo(this.getSelectedAction(), 97).getTokenTarget(this.m_game))) {
            this.actionControl();
            isUpdated = ($clinit_EventBuilderMsg() , Updated);
          }
        }
         else if (instanceOf(this.getSelectedAction(), 37)) {
          if (token.isNeighbor_0(this.getGame().getCoordinateSystem(), castTo(this.getSelectedAction(), 37).getTokenCarrier(this.m_game))) {
            this.actionTransferSelected(token, p_position);
          }
           else if (!searchPath) {
            this.clear_0();
          }
           else {
            closeUnloadPosition = this.getCoordinateSystem().getNeighbor(this.getSelectedPosition_0(), this.getCoordinateSystem().getSector_0(this.getSelectedPosition_0(), p_position));
            closeLoadPosition = this.getCoordinateSystem().getNeighbor(p_position, this.getCoordinateSystem().getSector_0(p_position, this.getSelectedPosition_0()));
            this.actionUnloadSelected(closeUnloadPosition);
            if (isNotNull(previousAction) && jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtLoad))) {
              this.selectBoardToken_0(castTo(this.getLastAction(), 37).getToken_3(this.m_game), this.getAction(0).getSelectedPosition(this.m_game));
            }
            if (!closeLoadPosition.equals_3(closeUnloadPosition)) {
              this.setSelectedAction(null);
              this.setSelectedPosition(closeUnloadPosition);
              this.setSelectedToken(castTo(this.getLastAction(), 37).getToken_3(this.m_game));
              this.moveSelectedTo(closeLoadPosition);
              this.setSelectedPosition(this.getAction(0).getSelectedPosition(this.m_game));
            }
            if (jsEquals(token.getType(), ($clinit_TokenType() , Turret))) {
              token = this.getGame().getToken_2(p_position, ($clinit_TokenType() , Freighter));
              if (!isNotNull(token)) {
                debugger;
                throw toJs(makeAssertionError());
              }
            }
            this.actionLoadSelected(token, p_position);
          }
          isUpdated = ($clinit_EventBuilderMsg() , Updated);
        }
         else if (instanceOf(this.getSelectedAction(), 83)) {
          actionConstruct = castTo(this.getSelectedAction(), 83);
          actionConstruct.setGame(this.getGame());
          actionConstruct.setRegistration(this.getMyRegistration());
          this.actionAdd(actionConstruct);
          this.privateTokenClick(actionConstruct.getToken_3(this.m_game));
          this.exec_1();
          if (jsEquals(token.getType(), ($clinit_TokenType() , Turret))) {
            token = this.getGame().getToken_2(p_position, ($clinit_TokenType() , Freighter));
            if (!isNotNull(token)) {
              debugger;
              throw toJs(makeAssertionError());
            }
          }
          if (token.isNeighbor_0(this.getGame().getCoordinateSystem(), castTo(this.getSelectedAction(), 37).getTokenCarrier(this.m_game))) {
            this.actionTransferSelected(token, p_position);
          }
           else if (!searchPath) {
            this.clear_0();
          }
           else {
            closeUnloadPosition = this.getCoordinateSystem().getNeighbor(this.getSelectedPosition_0(), this.getCoordinateSystem().getSector_0(this.getSelectedPosition_0(), p_position));
            closeLoadPosition = this.getCoordinateSystem().getNeighbor(p_position, this.getCoordinateSystem().getSector_0(p_position, this.getSelectedPosition_0()));
            this.actionUnloadSelected(closeUnloadPosition);
            if (isNotNull(previousAction) && jsEquals(previousAction.getType_0(), ($clinit_GameLogType() , EvtLoad))) {
              this.selectBoardToken_0(castTo(this.getLastAction(), 37).getToken_3(this.m_game), this.getAction(0).getSelectedPosition(this.m_game));
            }
            if (!closeLoadPosition.equals_3(closeUnloadPosition)) {
              this.setSelectedAction(null);
              this.setSelectedPosition(closeUnloadPosition);
              this.setSelectedToken(castTo(this.getLastAction(), 37).getToken_3(this.m_game));
              this.moveSelectedTo(closeLoadPosition);
              this.setSelectedPosition(this.getAction(0).getSelectedPosition(this.m_game));
            }
            this.actionLoadSelected(token, p_position);
          }
          isUpdated = ($clinit_EventBuilderMsg() , Updated);
        }
      }
    }
     else if (isNotNull(this.getSelectedAction()) && (jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtLand)) || jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtDeployment)))) {
      action = castTo(this.getSelectedAction(), 17);
      action.getPosition().setX(p_position.getX());
      action.getPosition().setY(p_position.getY());
      if (jsEquals(this.getSelectedAction().getType_0(), ($clinit_GameLogType() , EvtDeployment)) && jsEquals(action.getPosition().getSector(), ($clinit_Sector() , North)) && action.getToken_3(this.m_game).getHexagonSize() == 1) {
        freighter = action.getToken_3(this.m_game).getCarrierToken();
        action.getPosition().setSector(this.getCoordinateSystem().getSector_0(freighter.getPosition(), action.getPosition()));
      }
      this.setLastUpdate(new Date_1(currentTimeMillis_0()));
      isUpdated = ($clinit_EventBuilderMsg() , Updated);
    }
     else if (this.isActionsPending() || this.isEmptyLandSelected()) {
      this.clear_0();
      isUpdated = ($clinit_EventBuilderMsg() , Updated);
    }
  }
   finally {
    this.unexec_0();
  }
  if (jsEquals(isUpdated, ($clinit_EventBuilderMsg() , Updated))) {
    this.setLastUpdate(new Date_1(currentTimeMillis_0()));
  }
  return isUpdated;
}
;
_.userCancel = function userCancel(){
  if (this.m_isRecording) {
    this.m_game.setMessage(this.m_game.getMessage() + 'cancel\n');
  }
  this.clear_0();
  this.setLastUserClick(null);
}
;
_.userOk = function userOk(){
  if (this.m_isRecording) {
    this.m_game.setMessage(this.m_game.getMessage() + 'ok\n');
  }
  this.privateOk();
}
;
_.userTokenClick = function userTokenClick(p_token){
  if (this.m_isRecording) {
    this.m_game.setMessage(this.m_game.getMessage() + 'token ' + toString_45(p_token.getId()));
    if (isNotNull(p_token.getCarrierToken()) && jsEquals(p_token.getCarrierToken().getType(), ($clinit_TokenType() , WeatherHen))) {
      this.m_game.setMessage(this.m_game.getMessage() + ' ' + p_token.getType());
    }
    this.m_game.setMessage(this.m_game.getMessage() + '\n');
  }
  logDebug('user click token ' + p_token);
  return this.privateTokenClick(p_token);
}
;
_.m_isExecuted = false;
_.m_isReadOnly = false;
_.m_isRecording = false;
_.m_isRunnable = false;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EventsPlayBuilder_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.gamelog', 'EventsPlayBuilder', 710, Ljava_lang_Object_2_classLit);
function $clinit_EventsPlayBuilder$UserAction(){
  $clinit_EventsPlayBuilder$UserAction = emptyMethod;
  $clinit_Enum();
  Primary = new EventsPlayBuilder$UserAction('Primary', 0);
  Secondary = new EventsPlayBuilder$UserAction('Secondary', 1);
  Touch_0 = new EventsPlayBuilder$UserAction('Touch', 2);
}

function EventsPlayBuilder$UserAction(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_343();
}

function valueOf_15(name_0){
  $clinit_EventsPlayBuilder$UserAction();
  return valueOf(($clinit_EventsPlayBuilder$UserAction$Map() , $MAP_14), name_0);
}

function values_16(){
  $clinit_EventsPlayBuilder$UserAction();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_EventsPlayBuilder$UserAction_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 238, 0, [Primary, Secondary, Touch_0]);
}

defineClass(238, 7, {238:1, 4:1, 8:1, 7:1, 1:1}, EventsPlayBuilder$UserAction);
_.$init_343 = function $init_343(){
}
;
var Primary, Secondary, Touch_0;
var Lcom_fullmetalgalaxy_model_persist_gamelog_EventsPlayBuilder$UserAction_2_classLit = createForEnum('com.fullmetalgalaxy.model.persist.gamelog', 'EventsPlayBuilder/UserAction', 238, Ljava_lang_Enum_2_classLit, values_16, valueOf_15);
function $clinit_EventsPlayBuilder$UserAction$Map(){
  $clinit_EventsPlayBuilder$UserAction$Map = emptyMethod;
  $MAP_14 = createValueOfMap(values_16());
}

var $MAP_14;
function $clinit_GameLogFactory(){
  $clinit_GameLogFactory = emptyMethod;
  $clinit_Object();
}

function newAdminAbort(p_accountId){
  $clinit_GameLogFactory();
  var event_0;
  event_0 = new EbAdminAbort;
  event_0.setAccountId(p_accountId);
  return event_0;
}

function newAdminTimePause(p_accountId){
  $clinit_GameLogFactory();
  var event_0;
  event_0 = new EbAdminTimePause;
  event_0.setAccountId(p_accountId);
  return event_0;
}

function newAdminTimePlay(p_accountId){
  $clinit_GameLogFactory();
  var event_0;
  event_0 = new EbAdminTimePlay;
  event_0.setAccountId(p_accountId);
  return event_0;
}

function $clinit_GameLogType(){
  $clinit_GameLogType = emptyMethod;
  $clinit_Enum();
  None_2 = new GameLogType('None', 0);
  AdminTimePause = new GameLogType('AdminTimePause', 1);
  AdminTimePlay = new GameLogType('AdminTimePlay', 2);
  EvtConstruct = new GameLogType('EvtConstruct', 3);
  EvtControl = new GameLogType('EvtControl', 4);
  EvtControlFreighter = new GameLogType('EvtControlFreighter', 5);
  EvtFire = new GameLogType('EvtFire', 6);
  EvtLand = new GameLogType('EvtLand', 7);
  EvtLoad = new GameLogType('EvtLoad', 8);
  EvtMessage = new GameLogType('EvtMessage', 9);
  EvtMove = new GameLogType('EvtMove', 10);
  EvtPlayerTurn = new GameLogType('EvtPlayerTurn', 11);
  EvtRepair = new GameLogType('EvtRepair', 12);
  EvtTakeOff = new GameLogType('EvtTakeOff', 13);
  EvtTide = new GameLogType('EvtTide', 14);
  EvtTimeStep = new GameLogType('EvtTimeStep', 15);
  EvtTransfer = new GameLogType('EvtTransfer', 16);
  EvtUnLoad = new GameLogType('EvtUnLoad', 17);
  GameJoin = new GameLogType('GameJoin', 18);
  EvtCancel = new GameLogType('EvtCancel', 19);
  EvtChangePlayerOrder = new GameLogType('EvtChangePlayerOrder', 20);
  EvtDeployment = new GameLogType('EvtDeployment', 21);
  AdminBan = new GameLogType('AdminBan', 22);
  AdminAbort = new GameLogType('AdminAbort', 23);
  EbRememeber = new GameLogType('EbRememeber', 24);
}

function GameLogType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_344();
}

function valueOf_16(name_0){
  $clinit_GameLogType();
  return valueOf(($clinit_GameLogType$Map() , $MAP_15), name_0);
}

function values_17(){
  $clinit_GameLogType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_fullmetalgalaxy_model_persist_gamelog_GameLogType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 74, 0, [None_2, AdminTimePause, AdminTimePlay, EvtConstruct, EvtControl, EvtControlFreighter, EvtFire, EvtLand, EvtLoad, EvtMessage, EvtMove, EvtPlayerTurn, EvtRepair, EvtTakeOff, EvtTide, EvtTimeStep, EvtTransfer, EvtUnLoad, GameJoin, EvtCancel, EvtChangePlayerOrder, EvtDeployment, AdminBan, AdminAbort, EbRememeber]);
}

defineClass(74, 7, {74:1, 4:1, 8:1, 7:1, 1:1}, GameLogType);
_.$init_344 = function $init_344(){
}
;
var AdminAbort, AdminBan, AdminTimePause, AdminTimePlay, EbRememeber, EvtCancel, EvtChangePlayerOrder, EvtConstruct, EvtControl, EvtControlFreighter, EvtDeployment, EvtFire, EvtLand, EvtLoad, EvtMessage, EvtMove, EvtPlayerTurn, EvtRepair, EvtTakeOff, EvtTide, EvtTimeStep, EvtTransfer, EvtUnLoad, GameJoin, None_2;
var Lcom_fullmetalgalaxy_model_persist_gamelog_GameLogType_2_classLit = createForEnum('com.fullmetalgalaxy.model.persist.gamelog', 'GameLogType', 74, Ljava_lang_Enum_2_classLit, values_17, valueOf_16);
function $clinit_GameLogType$Map(){
  $clinit_GameLogType$Map = emptyMethod;
  $MAP_15 = createValueOfMap(values_17());
}

var $MAP_15;
function $clinit_AnGameZone(){
  $clinit_AnGameZone = emptyMethod;
  $clinit_EbEmbedBase();
}

function AnGameZone(){
  $clinit_AnGameZone();
  EbEmbedBase.call(this);
  this.$init_345();
}

defineClass(201, 286, {201:1, 4:1, 1:1}, AnGameZone);
_.$init_345 = function $init_345(){
  this.m_location = ($clinit_Location() , Board);
  this.m_top = -1;
  this.m_left = -1;
  this.m_bottom = -1;
  this.m_right = -1;
  this.m_carrierToken = null;
}
;
_.contain_2 = function contain_2(p_token){
  var position;
  if (jsNotEquals(p_token.getLocation(), this.getLocation())) {
    return false;
  }
  if (jsEquals(this.getLocation(), ($clinit_Location() , Board))) {
    position = p_token.getPosition();
    if (position.getX() < this.getLeft() || position.getX() > this.getRight() || position.getY() < this.getTop() || position.getY() > this.getBottom()) {
      return false;
    }
  }
   else if (jsEquals(this.getLocation(), ($clinit_Location() , Token))) {
    if (jsNotEquals(p_token.getCarrierToken(), this.getCarrierToken())) {
      return false;
    }
  }
  return true;
}
;
_.getBottom = function getBottom(){
  return this.m_bottom;
}
;
_.getCarrierToken = function getCarrierToken_0(){
  return this.m_carrierToken;
}
;
_.getLeft = function getLeft(){
  return this.m_left;
}
;
_.getLocation = function getLocation_0(){
  return this.m_location;
}
;
_.getRight = function getRight(){
  return this.m_right;
}
;
_.getTop = function getTop(){
  return this.m_top;
}
;
_.m_bottom = 0;
_.m_left = 0;
_.m_right = 0;
_.m_top = 0;
var Lcom_fullmetalgalaxy_model_persist_triggers_AnGameZone_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers', 'AnGameZone', 201, Lcom_fullmetalgalaxy_model_persist_EbEmbedBase_2_classLit);
function $clinit_AnGameZone_FieldSerializer(){
  $clinit_AnGameZone_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_100(streamReader, instance){
  $clinit_AnGameZone_FieldSerializer();
  setM_bottom(instance, streamReader.readInt());
  setM_carrierToken_0(instance, castTo(streamReader.readObject(), 19));
  setM_left(instance, streamReader.readInt());
  setM_location_0(instance, castTo(streamReader.readObject(), 156));
  setM_right(instance, streamReader.readInt());
  setM_top(instance, streamReader.readInt());
  deserialize_28(streamReader, instance);
}

function getM_bottom(instance){
  return instance.m_bottom;
}

function getM_carrierToken_0(instance){
  return instance.m_carrierToken;
}

function getM_left(instance){
  return instance.m_left;
}

function getM_location_0(instance){
  return instance.m_location;
}

function getM_right(instance){
  return instance.m_right;
}

function getM_top(instance){
  return instance.m_top;
}

function instantiate_95(streamReader){
  $clinit_AnGameZone_FieldSerializer();
  return new AnGameZone;
}

function serialize_95(streamWriter, instance){
  $clinit_AnGameZone_FieldSerializer();
  streamWriter.writeInt(getM_bottom(instance));
  streamWriter.writeObject(getM_carrierToken_0(instance));
  streamWriter.writeInt(getM_left(instance));
  streamWriter.writeObject(getM_location_0(instance));
  streamWriter.writeInt(getM_right(instance));
  streamWriter.writeInt(getM_top(instance));
  serialize_23(streamWriter, instance);
}

function setM_bottom(instance, value_0){
  instance.m_bottom = value_0;
}

function setM_carrierToken_0(instance, value_0){
  instance.m_carrierToken = value_0;
}

function setM_left(instance, value_0){
  instance.m_left = value_0;
}

function setM_location_0(instance, value_0){
  instance.m_location = value_0;
}

function setM_right(instance, value_0){
  instance.m_right = value_0;
}

function setM_top(instance, value_0){
  instance.m_top = value_0;
}

function $clinit_EbTrigger(){
  $clinit_EbTrigger = emptyMethod;
  $clinit_EbBase();
}

function EbTrigger(){
  $clinit_EbTrigger();
  EbBase.call(this);
  this.$init_346();
  this.init_37();
}

defineClass(248, 21, {21:1, 248:1, 4:1, 1:1}, EbTrigger);
_.$init_346 = function $init_346(){
  this.m_actions = new HashSet;
  this.m_conditions = new HashSet;
  this.m_enable = true;
  this.m_autoDisable = true;
  this.m_andOperator = false;
  this.m_name = '';
}
;
_.createEvents = function createEvents(p_game){
  var action, action$iterator, condition, condition$iterator, events, isVerify, params;
  events = new ArrayList;
  params = new ArrayList;
  isVerify = false;
  if (this.isAndOperator()) {
    isVerify = true;
  }
  if (this.isEnable()) {
    for (condition$iterator = this.getConditions().iterator_0(); condition$iterator.hasNext_0();) {
      condition = castTo(condition$iterator.next_1(), 98);
      if (condition.isVerify(p_game)) {
        if (!this.isAndOperator()) {
          isVerify = true;
          break;
        }
        params.addAll(condition.getActParams(p_game));
      }
       else {
        if (this.isAndOperator()) {
          isVerify = false;
          break;
        }
      }
    }
    if (isVerify) {
      for (action$iterator = this.getActions().iterator_0(); action$iterator.hasNext_0();) {
        action = castTo(action$iterator.next_1(), 127);
        events.addAll(action.createEvents_0(p_game, params));
      }
      if (this.isAutoDisable()) {
        this.setEnable(false);
      }
      return events;
    }
  }
  return events;
}
;
_.getActions = function getActions(){
  return this.m_actions;
}
;
_.getConditions = function getConditions(){
  return this.m_conditions;
}
;
_.init_37 = function init_37(){
  this.m_actions = new HashSet;
  this.m_conditions = new HashSet;
  this.m_enable = true;
}
;
_.isAndOperator = function isAndOperator(){
  return this.m_andOperator;
}
;
_.isAutoDisable = function isAutoDisable(){
  return this.m_autoDisable;
}
;
_.isEnable = function isEnable(){
  return this.m_enable;
}
;
_.setEnable = function setEnable(p_enable){
  this.m_enable = p_enable;
}
;
_.m_andOperator = false;
_.m_autoDisable = false;
_.m_enable = false;
var Lcom_fullmetalgalaxy_model_persist_triggers_EbTrigger_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers', 'EbTrigger', 248, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_EbTrigger_Array_Rank_1_FieldSerializer(){
  $clinit_EbTrigger_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_101(streamReader, instance){
  $clinit_EbTrigger_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_96(streamReader){
  $clinit_EbTrigger_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Lcom_fullmetalgalaxy_model_persist_triggers_EbTrigger_2_classLit, {4:1, 1:1, 5:1}, 248, size_0, 0, 1);
}

function serialize_96(streamWriter, instance){
  $clinit_EbTrigger_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_EbTrigger_FieldSerializer(){
  $clinit_EbTrigger_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_102(streamReader, instance){
  $clinit_EbTrigger_FieldSerializer();
  setM_actions(instance, castTo(streamReader.readObject(), 53));
  setM_andOperator(instance, streamReader.readBoolean());
  setM_autoDisable(instance, streamReader.readBoolean());
  setM_conditions(instance, castTo(streamReader.readObject(), 53));
  setM_enable(instance, streamReader.readBoolean());
  setM_name_0(instance, streamReader.readString());
  deserialize_24(streamReader, instance);
}

function getM_actions(instance){
  return instance.m_actions;
}

function getM_andOperator(instance){
  return instance.m_andOperator;
}

function getM_autoDisable(instance){
  return instance.m_autoDisable;
}

function getM_conditions(instance){
  return instance.m_conditions;
}

function getM_enable(instance){
  return instance.m_enable;
}

function getM_name_0(instance){
  return instance.m_name;
}

function instantiate_97(streamReader){
  $clinit_EbTrigger_FieldSerializer();
  return new EbTrigger;
}

function serialize_97(streamWriter, instance){
  $clinit_EbTrigger_FieldSerializer();
  streamWriter.writeObject(getM_actions(instance));
  streamWriter.writeBoolean(getM_andOperator(instance));
  streamWriter.writeBoolean(getM_autoDisable(instance));
  streamWriter.writeObject(getM_conditions(instance));
  streamWriter.writeBoolean(getM_enable(instance));
  streamWriter.writeString(getM_name_0(instance));
  serialize_19(streamWriter, instance);
}

function setM_actions(instance, value_0){
  instance.m_actions = value_0;
}

function setM_andOperator(instance, value_0){
  instance.m_andOperator = value_0;
}

function setM_autoDisable(instance, value_0){
  instance.m_autoDisable = value_0;
}

function setM_conditions(instance, value_0){
  instance.m_conditions = value_0;
}

function setM_enable(instance, value_0){
  instance.m_enable = value_0;
}

function setM_name_0(instance, value_0){
  instance.m_name = value_0;
}

function $clinit_AnAction(){
  $clinit_AnAction = emptyMethod;
  $clinit_EbBase();
}

function AnAction(){
  $clinit_AnAction();
  EbBase.call(this);
  this.$init_347();
  this.init_38();
}

defineClass(127, 21, {21:1, 127:1, 4:1, 1:1}, AnAction);
_.$init_347 = function $init_347(){
}
;
_.createEvents_0 = function createEvents_0(p_game, p_params){
  var events;
  events = new ArrayList;
  return events;
}
;
_.init_38 = function init_38(){
}
;
var Lcom_fullmetalgalaxy_model_persist_triggers_actions_AnAction_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.actions', 'AnAction', 127, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_AnAction_FieldSerializer(){
  $clinit_AnAction_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_103(streamReader, instance){
  $clinit_AnAction_FieldSerializer();
  deserialize_24(streamReader, instance);
}

function instantiate_98(streamReader){
  $clinit_AnAction_FieldSerializer();
  return new AnAction;
}

function serialize_98(streamWriter, instance){
  $clinit_AnAction_FieldSerializer();
  serialize_19(streamWriter, instance);
}

function $clinit_EbActChangeTide(){
  $clinit_EbActChangeTide = emptyMethod;
  $clinit_AnAction();
}

function EbActChangeTide(){
  $clinit_EbActChangeTide();
  AnAction.call(this);
  this.$init_348();
  this.init_39();
}

defineClass(819, 127, {21:1, 127:1, 4:1, 1:1}, EbActChangeTide);
_.$init_348 = function $init_348(){
  this.m_nextTide = null;
}
;
_.createEvents_0 = function createEvents_1(p_game, p_params){
  var event_0, events, nextTide;
  events = new ArrayList;
  nextTide = this.getNextTide();
  if (isNull(nextTide)) {
    nextTide = getRandom_0(p_game.getAverageTideLevel());
  }
  event_0 = new EbEvtTide;
  event_0.setGame(p_game);
  event_0.setNextTide(nextTide);
  events.add_5(event_0);
  return events;
}
;
_.getNextTide = function getNextTide_2(){
  return this.m_nextTide;
}
;
_.init_39 = function init_39(){
  this.m_nextTide = null;
}
;
var Lcom_fullmetalgalaxy_model_persist_triggers_actions_EbActChangeTide_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.actions', 'EbActChangeTide', 819, Lcom_fullmetalgalaxy_model_persist_triggers_actions_AnAction_2_classLit);
function $clinit_EbActChangeTide_FieldSerializer(){
  $clinit_EbActChangeTide_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_104(streamReader, instance){
  $clinit_EbActChangeTide_FieldSerializer();
  setM_nextTide_0(instance, castTo(streamReader.readObject(), 139));
  deserialize_103(streamReader, instance);
}

function getM_nextTide_0(instance){
  return instance.m_nextTide;
}

function instantiate_99(streamReader){
  $clinit_EbActChangeTide_FieldSerializer();
  return new EbActChangeTide;
}

function serialize_99(streamWriter, instance){
  $clinit_EbActChangeTide_FieldSerializer();
  streamWriter.writeObject(getM_nextTide_0(instance));
  serialize_98(streamWriter, instance);
}

function setM_nextTide_0(instance, value_0){
  instance.m_nextTide = value_0;
}

function $clinit_EbActMessage(){
  $clinit_EbActMessage = emptyMethod;
  $clinit_AnAction();
}

function EbActMessage(){
  $clinit_EbActMessage();
  AnAction.call(this);
  this.$init_349();
  this.init_40();
}

defineClass(820, 127, {21:1, 127:1, 4:1, 1:1}, EbActMessage);
_.$init_349 = function $init_349(){
  this.m_message = '';
}
;
_.createEvents_0 = function createEvents_2(p_game, p_params){
  var events, msg;
  events = new ArrayList;
  if (!equals_Ljava_lang_Object__Z__devirtual$_2(trim__Ljava_lang_String___devirtual$(this.getMessage()), '')) {
    msg = new EbEvtMessage;
    msg.setAuto(true);
    msg.setGame(p_game);
    msg.setMessage(this.getMessage());
    events.add_5(msg);
  }
  return events;
}
;
_.getMessage = function getMessage_4(){
  return this.m_message;
}
;
_.init_40 = function init_40(){
  this.m_message = '';
}
;
var Lcom_fullmetalgalaxy_model_persist_triggers_actions_EbActMessage_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.actions', 'EbActMessage', 820, Lcom_fullmetalgalaxy_model_persist_triggers_actions_AnAction_2_classLit);
function $clinit_EbActMessage_FieldSerializer(){
  $clinit_EbActMessage_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_105(streamReader, instance){
  $clinit_EbActMessage_FieldSerializer();
  setM_message_2(instance, streamReader.readString());
  deserialize_103(streamReader, instance);
}

function getM_message_1(instance){
  return instance.m_message;
}

function instantiate_100(streamReader){
  $clinit_EbActMessage_FieldSerializer();
  return new EbActMessage;
}

function serialize_100(streamWriter, instance){
  $clinit_EbActMessage_FieldSerializer();
  streamWriter.writeString(getM_message_1(instance));
  serialize_98(streamWriter, instance);
}

function setM_message_2(instance, value_0){
  instance.m_message = value_0;
}

function $clinit_EbActTakeOff(){
  $clinit_EbActTakeOff = emptyMethod;
  $clinit_AnAction();
}

function EbActTakeOff(){
  $clinit_EbActTakeOff();
  AnAction.call(this);
  this.$init_350();
  this.init_41();
}

defineClass(821, 127, {21:1, 127:1, 4:1, 1:1}, EbActTakeOff);
_.$init_350 = function $init_350(){
}
;
_.createEvents_0 = function createEvents_3(p_game, p_params){
  var event_0, events, freighter;
  events = new ArrayList;
  freighter = null;
  if (p_params.size_1() >= 1 && instanceOf(p_params.get_0(0), 19)) {
    freighter = castTo(castTo(p_params.get_0(0), 19), 19);
    if (jsEquals(freighter.getType(), ($clinit_TokenType() , Freighter)) && jsEquals(freighter.getLocation(), ($clinit_Location() , Board))) {
      event_0 = new EbEvtTakeOff;
      event_0.setGame(p_game);
      event_0.setCost(0);
      event_0.setToken(freighter);
      event_0.setBackInOrbit(true);
      event_0.setRegistration(null);
      event_0.setAuto(true);
      events.add_5(event_0);
    }
  }
  return events;
}
;
_.init_41 = function init_41(){
}
;
var Lcom_fullmetalgalaxy_model_persist_triggers_actions_EbActTakeOff_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.actions', 'EbActTakeOff', 821, Lcom_fullmetalgalaxy_model_persist_triggers_actions_AnAction_2_classLit);
function $clinit_EbActTakeOff_FieldSerializer(){
  $clinit_EbActTakeOff_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_106(streamReader, instance){
  $clinit_EbActTakeOff_FieldSerializer();
  deserialize_103(streamReader, instance);
}

function instantiate_101(streamReader){
  $clinit_EbActTakeOff_FieldSerializer();
  return new EbActTakeOff;
}

function serialize_101(streamWriter, instance){
  $clinit_EbActTakeOff_FieldSerializer();
  serialize_98(streamWriter, instance);
}

function $clinit_AnCondition(){
  $clinit_AnCondition = emptyMethod;
  $clinit_EbBase();
}

function AnCondition(){
  $clinit_AnCondition();
  EbBase.call(this);
  this.$init_351();
  this.init_42();
}

defineClass(98, 21, {21:1, 98:1, 4:1, 1:1}, AnCondition);
_.$init_351 = function $init_351(){
  this.m_negative = false;
}
;
_.getActParams = function getActParams(p_game){
  return null;
}
;
_.init_42 = function init_42(){
}
;
_.isNegative = function isNegative_0(){
  return this.m_negative;
}
;
_.isTrue = function isTrue(p_game){
  return false;
}
;
_.isVerify = function isVerify_0(p_game){
  if (this.isNegative()) {
    return !this.isTrue(p_game);
  }
  return this.isTrue(p_game);
}
;
_.m_negative = false;
var Lcom_fullmetalgalaxy_model_persist_triggers_conditions_AnCondition_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.conditions', 'AnCondition', 98, Lcom_fullmetalgalaxy_model_persist_EbBase_2_classLit);
function $clinit_AnCondition_FieldSerializer(){
  $clinit_AnCondition_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_107(streamReader, instance){
  $clinit_AnCondition_FieldSerializer();
  setM_negative(instance, streamReader.readBoolean());
  deserialize_24(streamReader, instance);
}

function getM_negative(instance){
  return instance.m_negative;
}

function instantiate_102(streamReader){
  $clinit_AnCondition_FieldSerializer();
  return new AnCondition;
}

function serialize_102(streamWriter, instance){
  $clinit_AnCondition_FieldSerializer();
  streamWriter.writeBoolean(getM_negative(instance));
  serialize_19(streamWriter, instance);
}

function setM_negative(instance, value_0){
  instance.m_negative = value_0;
}

function $clinit_EbCndPlayerColor(){
  $clinit_EbCndPlayerColor = emptyMethod;
  $clinit_AnCondition();
}

function EbCndPlayerColor(){
  $clinit_EbCndPlayerColor();
  AnCondition.call(this);
  this.$init_352();
  this.init_43();
}

defineClass(822, 98, {21:1, 98:1, 4:1, 1:1}, EbCndPlayerColor);
_.$init_352 = function $init_352(){
  this.m_color = 0;
  this.m_player = null;
}
;
_.getColor_0 = function getColor_3(){
  return this.m_color;
}
;
_.getPlayer = function getPlayer(){
  return this.m_player;
}
;
_.init_43 = function init_43(){
  this.m_color = 0;
  this.m_player = null;
}
;
_.isTrue = function isTrue_0(p_game){
  if (isNull(this.getPlayer())) {
    return false;
  }
  return this.getPlayer().getEnuColor().isColored(this.getColor_0());
}
;
_.m_color = 0;
var Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndPlayerColor_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.conditions', 'EbCndPlayerColor', 822, Lcom_fullmetalgalaxy_model_persist_triggers_conditions_AnCondition_2_classLit);
function $clinit_EbCndPlayerColor_FieldSerializer(){
  $clinit_EbCndPlayerColor_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_108(streamReader, instance){
  $clinit_EbCndPlayerColor_FieldSerializer();
  setM_color_2(instance, streamReader.readInt());
  setM_player(instance, castTo(streamReader.readObject(), 51));
  deserialize_107(streamReader, instance);
}

function getM_color_2(instance){
  return instance.m_color;
}

function getM_player(instance){
  return instance.m_player;
}

function instantiate_103(streamReader){
  $clinit_EbCndPlayerColor_FieldSerializer();
  return new EbCndPlayerColor;
}

function serialize_103(streamWriter, instance){
  $clinit_EbCndPlayerColor_FieldSerializer();
  streamWriter.writeInt(getM_color_2(instance));
  streamWriter.writeObject(getM_player(instance));
  serialize_102(streamWriter, instance);
}

function setM_color_2(instance, value_0){
  instance.m_color = value_0;
}

function setM_player(instance, value_0){
  instance.m_player = value_0;
}

function $clinit_EbCndPuzzleLoad(){
  $clinit_EbCndPuzzleLoad = emptyMethod;
  $clinit_AnCondition();
}

function EbCndPuzzleLoad(){
  $clinit_EbCndPuzzleLoad();
  AnCondition.call(this);
  this.$init_353();
  this.init_44();
}

defineClass(348, 98, {21:1, 98:1, 348:1, 4:1, 1:1}, EbCndPuzzleLoad);
_.$init_353 = function $init_353(){
}
;
_.init_44 = function init_44(){
}
;
var Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndPuzzleLoad_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.conditions', 'EbCndPuzzleLoad', 348, Lcom_fullmetalgalaxy_model_persist_triggers_conditions_AnCondition_2_classLit);
function $clinit_EbCndPuzzleLoad_FieldSerializer(){
  $clinit_EbCndPuzzleLoad_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_109(streamReader, instance){
  $clinit_EbCndPuzzleLoad_FieldSerializer();
  deserialize_107(streamReader, instance);
}

function instantiate_104(streamReader){
  $clinit_EbCndPuzzleLoad_FieldSerializer();
  return new EbCndPuzzleLoad;
}

function serialize_104(streamWriter, instance){
  $clinit_EbCndPuzzleLoad_FieldSerializer();
  serialize_102(streamWriter, instance);
}

function $clinit_EbCndTokenColor(){
  $clinit_EbCndTokenColor = emptyMethod;
  $clinit_AnCondition();
}

function EbCndTokenColor(){
  $clinit_EbCndTokenColor();
  AnCondition.call(this);
  this.$init_354();
  this.init_45();
}

defineClass(823, 98, {21:1, 98:1, 4:1, 1:1}, EbCndTokenColor);
_.$init_354 = function $init_354(){
  this.m_color = 0;
  this.m_tokenId = 0;
}
;
_.getColor_0 = function getColor_4(){
  return this.m_color;
}
;
_.init_45 = function init_45(){
  this.m_color = 0;
  this.m_tokenId = 0;
}
;
_.isTrue = function isTrue_1(p_game){
  if (eq(this.m_tokenId, 0)) {
    return false;
  }
  return p_game.getToken_0(this.m_tokenId).getColor_0() == this.getColor_0();
}
;
_.m_color = 0;
_.m_tokenId = 0;
var Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndTokenColor_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.conditions', 'EbCndTokenColor', 823, Lcom_fullmetalgalaxy_model_persist_triggers_conditions_AnCondition_2_classLit);
function $clinit_EbCndTokenColor_FieldSerializer(){
  $clinit_EbCndTokenColor_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_110(streamReader, instance){
  $clinit_EbCndTokenColor_FieldSerializer();
  setM_color_3(instance, streamReader.readInt());
  setM_tokenId(instance, streamReader.readLong());
  deserialize_107(streamReader, instance);
}

function getM_color_3(instance){
  return instance.m_color;
}

function getM_tokenId(instance){
  return instance.m_tokenId;
}

function instantiate_105(streamReader){
  $clinit_EbCndTokenColor_FieldSerializer();
  return new EbCndTokenColor;
}

function serialize_105(streamWriter, instance){
  $clinit_EbCndTokenColor_FieldSerializer();
  streamWriter.writeInt(getM_color_3(instance));
  streamWriter.writeLong(getM_tokenId(instance));
  serialize_102(streamWriter, instance);
}

function setM_color_3(instance, value_0){
  instance.m_color = value_0;
}

function setM_tokenId(instance, value_0){
  instance.m_tokenId = value_0;
}

function $clinit_EbCndTokenTypeZone(){
  $clinit_EbCndTokenTypeZone = emptyMethod;
  $clinit_AnCondition();
}

function EbCndTokenTypeZone(){
  $clinit_EbCndTokenTypeZone();
  AnCondition.call(this);
  this.$init_355();
  this.init_46();
}

defineClass(824, 98, {21:1, 98:1, 4:1, 1:1}, EbCndTokenTypeZone);
_.$init_355 = function $init_355(){
  this.m_zone = new AnGameZone;
  this.m_tokenType = null;
  this.m_color = -1;
  this.m_player = null;
}
;
_.getActParams = function getActParams_0(p_game){
  var params;
  params = new ArrayList;
  params.add_5(this.getTheToken(p_game));
  return params;
}
;
_.getColor_0 = function getColor_5(){
  return this.m_color;
}
;
_.getPlayer = function getPlayer_0(){
  return this.m_player;
}
;
_.getTheToken = function getTheToken(p_game){
  var isTheOne, token, token$iterator;
  for (token$iterator = p_game.getSetToken().iterator_0(); token$iterator.hasNext_0();) {
    token = castTo(token$iterator.next_1(), 19);
    isTheOne = true;
    if (isNotNull(this.getTokenType()) && jsNotEquals(token.getType(), this.getTokenType())) {
      isTheOne = false;
    }
    if (isTheOne && this.getColor_0() != -1 && token.getColor_0() != this.getColor_0()) {
      isTheOne = false;
    }
    if (isTheOne && isNotNull(this.getPlayer()) && !this.getPlayer().getEnuColor().contain_1(this.getColor_0())) {
      isTheOne = false;
    }
    if (isTheOne && this.getZone().contain_2(token)) {
      return token;
    }
  }
  return null;
}
;
_.getTokenType = function getTokenType_0(){
  return this.m_tokenType;
}
;
_.getZone = function getZone(){
  return this.m_zone;
}
;
_.init_46 = function init_46(){
  this.m_zone = new AnGameZone;
  this.m_tokenType = null;
  this.m_color = -1;
  this.m_player = null;
}
;
_.isTrue = function isTrue_2(p_game){
  return isNotNull(this.getTheToken(p_game));
}
;
_.m_color = 0;
var Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndTokenTypeZone_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.conditions', 'EbCndTokenTypeZone', 824, Lcom_fullmetalgalaxy_model_persist_triggers_conditions_AnCondition_2_classLit);
function $clinit_EbCndTokenTypeZone_FieldSerializer(){
  $clinit_EbCndTokenTypeZone_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_111(streamReader, instance){
  $clinit_EbCndTokenTypeZone_FieldSerializer();
  setM_color_4(instance, streamReader.readInt());
  setM_player_0(instance, castTo(streamReader.readObject(), 51));
  setM_tokenType(instance, castTo(streamReader.readObject(), 55));
  setM_zone(instance, castTo(streamReader.readObject(), 201));
  deserialize_107(streamReader, instance);
}

function getM_color_4(instance){
  return instance.m_color;
}

function getM_player_0(instance){
  return instance.m_player;
}

function getM_tokenType(instance){
  return instance.m_tokenType;
}

function getM_zone(instance){
  return instance.m_zone;
}

function instantiate_106(streamReader){
  $clinit_EbCndTokenTypeZone_FieldSerializer();
  return new EbCndTokenTypeZone;
}

function serialize_106(streamWriter, instance){
  $clinit_EbCndTokenTypeZone_FieldSerializer();
  streamWriter.writeInt(getM_color_4(instance));
  streamWriter.writeObject(getM_player_0(instance));
  streamWriter.writeObject(getM_tokenType(instance));
  streamWriter.writeObject(getM_zone(instance));
  serialize_102(streamWriter, instance);
}

function setM_color_4(instance, value_0){
  instance.m_color = value_0;
}

function setM_player_0(instance, value_0){
  instance.m_player = value_0;
}

function setM_tokenType(instance, value_0){
  instance.m_tokenType = value_0;
}

function setM_zone(instance, value_0){
  instance.m_zone = value_0;
}

function $clinit_EbCndTokenZone(){
  $clinit_EbCndTokenZone = emptyMethod;
  $clinit_AnCondition();
}

function EbCndTokenZone(){
  $clinit_EbCndTokenZone();
  AnCondition.call(this);
  this.$init_356();
  this.init_47();
}

defineClass(825, 98, {21:1, 98:1, 4:1, 1:1}, EbCndTokenZone);
_.$init_356 = function $init_356(){
  this.m_zone = new AnGameZone;
  this.m_tokenId = 0;
}
;
_.getActParams = function getActParams_1(p_game){
  var params;
  params = new ArrayList;
  params.add_5(p_game.getToken_0(this.m_tokenId));
  return params;
}
;
_.getZone = function getZone_0(){
  return this.m_zone;
}
;
_.init_47 = function init_47(){
}
;
_.isTrue = function isTrue_3(p_game){
  if (eq(this.m_tokenId, 0) || isNull(this.getZone())) {
    return false;
  }
  return this.getZone().contain_2(p_game.getToken_0(this.m_tokenId));
}
;
_.m_tokenId = 0;
var Lcom_fullmetalgalaxy_model_persist_triggers_conditions_EbCndTokenZone_2_classLit = createForClass('com.fullmetalgalaxy.model.persist.triggers.conditions', 'EbCndTokenZone', 825, Lcom_fullmetalgalaxy_model_persist_triggers_conditions_AnCondition_2_classLit);
function $clinit_EbCndTokenZone_FieldSerializer(){
  $clinit_EbCndTokenZone_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_112(streamReader, instance){
  $clinit_EbCndTokenZone_FieldSerializer();
  setM_tokenId_0(instance, streamReader.readLong());
  setM_zone_0(instance, castTo(streamReader.readObject(), 201));
  deserialize_107(streamReader, instance);
}

function getM_tokenId_0(instance){
  return instance.m_tokenId;
}

function getM_zone_0(instance){
  return instance.m_zone;
}

function instantiate_107(streamReader){
  $clinit_EbCndTokenZone_FieldSerializer();
  return new EbCndTokenZone;
}

function serialize_107(streamWriter, instance){
  $clinit_EbCndTokenZone_FieldSerializer();
  streamWriter.writeLong(getM_tokenId_0(instance));
  streamWriter.writeObject(getM_zone_0(instance));
  serialize_102(streamWriter, instance);
}

function setM_tokenId_0(instance, value_0){
  instance.m_tokenId = value_0;
}

function setM_zone_0(instance, value_0){
  instance.m_zone = value_0;
}

function $clinit_Messages(){
  $clinit_Messages = emptyMethod;
  $clinit_Object();
}

function getColorString(p_accountId, p_colorValue){
  $clinit_Messages();
  var color_0, iColor, str;
  if (p_colorValue == -1) {
    return getSingleColorString(p_accountId, -1);
  }
  str = '';
  color_0 = new EnuColor_0(p_colorValue);
  for (iColor = 1; iColor < getMaxColorValue(); iColor *= 2) {
    if (color_0.isColored(iColor)) {
      if (!isEmpty__Z__devirtual$(str))
        str += ' & ';
      str += '' + getSingleColorString(p_accountId, iColor);
    }
  }
  if (isEmpty__Z__devirtual$(str)) {
    str = getSingleColorString(p_accountId, 0);
  }
  return str;
}

function getGameStatusString(p_accountId, p_status){
  $clinit_Messages();
  switch (p_status.ordinal_0()) {
    case ($clinit_GameStatus() , Open).ordinal_0():
      return getMessages(p_accountId).open_1();
    case ($clinit_GameStatus() , Aborted).ordinal_0():
      return getMessages(p_accountId).aborted();
    case ($clinit_GameStatus() , Pause).ordinal_0():
      return getMessages(p_accountId).pause();
    case ($clinit_GameStatus() , History_0).ordinal_0():
      return getMessages(p_accountId).history_0();
    case ($clinit_GameStatus() , Puzzle).ordinal_0():
      return getMessages(p_accountId).puzzle();
    case ($clinit_GameStatus() , Running).ordinal_0():
      return getMessages(p_accountId).running();
    case ($clinit_GameStatus() , Scenario).ordinal_0():
      return getMessages(p_accountId).scenario();
    case ($clinit_GameStatus() , Practice).ordinal_0():
      return getMessages(p_accountId).practice();
    case ($clinit_GameStatus() , Unknown_0).ordinal_0():
    default:return getMessages(p_accountId).unknown();
  }
}

function getLandString(p_accountId, p_landValue){
  $clinit_Messages();
  switch (p_landValue.ordinal_0()) {
    default:case ($clinit_LandType() , None).ordinal_0():
      return getMessages(p_accountId).none();
    case ($clinit_LandType() , Sea).ordinal_0():
      return getMessages(p_accountId).sea();
    case ($clinit_LandType() , Reef).ordinal_0():
      return getMessages(p_accountId).reef();
    case ($clinit_LandType() , Marsh).ordinal_0():
      return getMessages(p_accountId).marsh();
    case ($clinit_LandType() , Plain).ordinal_0():
      return getMessages(p_accountId).plain();
    case ($clinit_LandType() , Montain).ordinal_0():
      return getMessages(p_accountId).montain();
  }
}

function getSingleColorString(p_accountId, p_colorValue){
  $clinit_Messages();
  switch (p_colorValue) {
    case 1:
      return getMessages(p_accountId).blue();
    case 2:
      return getMessages(p_accountId).cyan();
    case 256:
      return getMessages(p_accountId).grey();
    case 128:
      return getMessages(p_accountId).yellow();
    case 4:
      return getMessages(p_accountId).olive();
    case 16:
      return getMessages(p_accountId).red();
    case 8:
      return getMessages(p_accountId).orange();
    case 32:
      return getMessages(p_accountId).green();
    case 64:
      return getMessages(p_accountId).purple();
    case 512:
      return getMessages(p_accountId).brown();
    case 1024:
      return getMessages(p_accountId).white();
    case 2048:
      return getMessages(p_accountId).pink();
    case 4096:
      return getMessages(p_accountId).camouflage();
    case 8192:
      return getMessages(p_accountId).zebra();
    case 16384:
      return getMessages(p_accountId).pantera();
    case 32768:
      return getMessages(p_accountId).lightning();
    case 0:
      return getMessages(p_accountId).colorless();
    case -1:
    default:return 'Unknown';
  }
}

function getTideString(p_accountId, p_tideValue){
  $clinit_Messages();
  switch (p_tideValue.ordinal_0()) {
    case ($clinit_Tide() , Low).ordinal_0():
      return getMessages(p_accountId).low();
    case ($clinit_Tide() , Medium_0).ordinal_0():
      return getMessages(p_accountId).medium();
    case ($clinit_Tide() , Hight).ordinal_0():
      return getMessages(p_accountId).hight();
    default:return p_tideValue.toString_0();
  }
}

function getTokenString(p_accountId, p_tokenValue){
  $clinit_Messages();
  switch (p_tokenValue.ordinal_0()) {
    case ($clinit_TokenType() , Barge).ordinal_0():
      return getMessages(p_accountId).barge();
    case ($clinit_TokenType() , Freighter).ordinal_0():
      return getMessages(p_accountId).freighter();
    case ($clinit_TokenType() , Tank).ordinal_0():
      return getMessages(p_accountId).tank();
    case ($clinit_TokenType() , Crab).ordinal_0():
      return getMessages(p_accountId).crab();
    case ($clinit_TokenType() , Heap).ordinal_0():
      return getMessages(p_accountId).heap();
    case ($clinit_TokenType() , WeatherHen).ordinal_0():
      return getMessages(p_accountId).weatherHen();
    case ($clinit_TokenType() , Turret).ordinal_0():
      return getMessages(p_accountId).turret();
    case ($clinit_TokenType() , Speedboat).ordinal_0():
      return getMessages(p_accountId).speedboat();
    case ($clinit_TokenType() , Tarask).ordinal_0():
      return getMessages(p_accountId).tarask();
    case ($clinit_TokenType() , Hovertank).ordinal_0():
      return getMessages(p_accountId).hovertank();
    case ($clinit_TokenType() , Crayfish).ordinal_0():
      return getMessages(p_accountId).crayfish();
    case ($clinit_TokenType() , Ore0).ordinal_0():
      return getMessages(p_accountId).ore0();
    case ($clinit_TokenType() , Ore).ordinal_0():
      return getMessages(p_accountId).ore();
    case ($clinit_TokenType() , Ore3).ordinal_0():
      return getMessages(p_accountId).ore3();
    case ($clinit_TokenType() , Ore5).ordinal_0():
      return getMessages(p_accountId).ore5();
    case ($clinit_TokenType() , Pontoon).ordinal_0():
      return getMessages(p_accountId).pontoon();
    case ($clinit_TokenType() , Sluice).ordinal_0():
      return getMessages(p_accountId).sluice();
    case ($clinit_TokenType() , None_0).ordinal_0():
    default:return p_tokenValue.toString_0();
  }
}

function getTokenString_0(p_accountId, p_token){
  $clinit_Messages();
  if (p_token.getColor_0() > 0) {
    return getMessages(p_accountId).tokenDescription(getColorString(p_accountId, p_token.getColor_0()), getTokenString(p_accountId, p_token.getType()));
  }
   else {
    return getTokenString(p_accountId, p_token.getType());
  }
}

function $clinit_MessagesRpc(){
  $clinit_MessagesRpc = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_ressources_MessagesRpc_2_classLit = createForInterface('com.fullmetalgalaxy.model.ressources', 'MessagesRpc');
function $clinit_MessagesRpcException(){
  $clinit_MessagesRpcException = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_ressources_MessagesRpcException_2_classLit = createForInterface('com.fullmetalgalaxy.model.ressources', 'MessagesRpcException');
function $clinit_MessagesRpcException_(){
  $clinit_MessagesRpcException_ = emptyMethod;
  $clinit_Object();
}

function MessagesRpcException_(){
  $clinit_MessagesRpcException_();
  Object_0.call(this);
  this.$init_357();
}

defineClass(1000, 1, {4425:1, 1:1}, MessagesRpcException_);
_.$init_357 = function $init_357(){
}
;
_.CantAttackInParallelHiddenPhase = function CantAttackInParallelHiddenPhase(){
  return "You can't attack during take off turn.";
}
;
_.CantDestroyFreighter = function CantDestroyFreighter(){
  return "Sorry you can't destroy any freighter. You can control it instead.";
}
;
_.CantFireDisableFire = function CantFireDisableFire(arg0, arg1){
  return "You can't fire with " + arg0 + ' as it is currently disabled due to an opponent ' + arg1 + ' fire cover.';
}
;
_.CantFireDisableTide = function CantFireDisableTide(arg0){
  return "You can't fire with " + arg0 + ' as it is currently disabled due to current tide.';
}
;
_.CantLandCloser = function CantLandCloser(arg0){
  return "You can't land your freighter closer than " + arg0 + ' hexagons of any other freighter                                    ';
}
;
_.CantLandOn = function CantLandOn(arg0){
  return "You can't land your freighter on " + arg0;
}
;
_.CantLandTooCloseBorder = function CantLandTooCloseBorder(){
  return "You can't land your freighter closer than 2 hexagons of map border";
}
;
_.CantLoad = function CantLoad(arg0, arg1){
  return 'token ' + arg0 + " can't load " + arg1;
}
;
_.CantMoveDisableFire = function CantMoveDisableFire(arg0, arg1){
  return "You can't move " + arg0 + ' to an opponent ' + arg1 + ' fire cover.';
}
;
_.CantMoveDontControl = function CantMoveDontControl(arg0, arg1){
  return "You can't move " + arg0 + ' token: you control only the ' + arg1 + ' tokens';
}
;
_.CantMoveOn = function CantMoveOn(arg0, arg1){
  return 'token ' + arg0 + " can't be moved on " + arg1 + ' ';
}
;
_.CantUnloadDisableFire = function CantUnloadDisableFire(arg0, arg1){
  return "You can't load/unload to/from " + arg0 + ' as it is currently disabled due to an opponent ' + arg1 + ' fire cover.';
}
;
_.CantUnloadDisableTide = function CantUnloadDisableTide(arg0){
  return "You can't load/unload to/from " + arg0 + ' as it is currently disabled due to current tide.';
}
;
_.MustBeLogged = function MustBeLogged(){
  return 'You must be logged to perform this action';
}
;
_.NotEnouthActionPt = function NotEnouthActionPt(){
  return 'Not enough action point';
}
;
_.NotYourTurn = function NotYourTurn(){
  return 'This game isnt parallel (turn by turn game), and its not your turn.\nYou have to wait for other player';
}
;
_.OnlyDestroyerCanControl = function OnlyDestroyerCanControl(){
  return 'Only destroyer can control unit';
}
;
_.boardLocked = function boardLocked(){
  return 'This board area is locked by another player.';
}
;
_.cantBanPlayerNoFreighter = function cantBanPlayerNoFreighter(){
  return "You can't ban player with no more freighter";
}
;
_.cantDeployPotoonInSea = function cantDeployPotoonInSea(){
  return "Pontoon can't be surrounded by sea";
}
;
_.cantDeployTooFar = function cantDeployTooFar(arg0){
  return "You can't deploy units at more than " + arg0 + ' hexagon from your freighter';
}
;
_.cantDestroyYourUnits = function cantDestroyYourUnits(){
  return "You can't destroy your units";
}
;
_.cantEndTurnTwoTankMontain = function cantEndTurnTwoTankMontain(){
  return "You can't end your turn with two neighbor tank on same mountain";
}
;
_.cantEnterLeaveFireCover = function cantEnterLeaveFireCover(){
  return "Units can't enter and leave an opponent fire cover in same movement";
}
;
_.cantFireOn = function cantFireOn(arg0, arg1){
  return arg0 + " can't fire on " + arg1 + ' ';
}
;
_.cantMoveAndConvert = function cantMoveAndConvert(){
  return "Destroyer can't move and convert unit in same movement";
}
;
_.cantRepairTurretFireCover = function cantRepairTurretFireCover(){
  return "you can't repair turrets under opponent fire cover";
}
;
_.cantRepairTurretTwice = function cantRepairTurretTwice(){
  return "you can't repair a turret twice";
}
;
_.gameNotStarted = function gameNotStarted(){
  return "This game isn't started yet or is paused.";
}
;
_.mustHaveTwoPlayerToStart = function mustHaveTwoPlayerToStart(){
  return 'The game must have at least two player to start';
}
;
_.mustLandFreighter = function mustLandFreighter_0(){
  return 'You must land your freighter before.';
}
;
_.mustWaitToDeploy = function mustWaitToDeploy(arg0){
  return 'You have to wait turn ' + arg0 + ' to deploy units';
}
;
_.noMoreAmo = function noMoreAmo(arg0){
  return arg0 + ' have no more ammo';
}
;
_.tooManyConstruction = function tooManyConstruction(){
  return 'In a single turn, a wheather hen can construct up to 2 different units (or 2 tank)';
}
;
var Lcom_fullmetalgalaxy_model_ressources_MessagesRpcException_1_2_classLit = createForClass('com.fullmetalgalaxy.model.ressources', 'MessagesRpcException_', 1000, Ljava_lang_Object_2_classLit);
function $clinit_MessagesRpc_(){
  $clinit_MessagesRpc_ = emptyMethod;
  $clinit_Object();
}

function MessagesRpc_(){
  $clinit_MessagesRpc_();
  Object_0.call(this);
  this.$init_358();
}

defineClass(894, 1, {4426:1, 1:1}, MessagesRpc_);
_.$init_358 = function $init_358(){
}
;
_.aborted = function aborted(){
  return 'Aborted game';
}
;
_.barge = function barge(){
  return 'barge';
}
;
_.blue = function blue(){
  return 'blue';
}
;
_.brown = function brown(){
  return 'brown';
}
;
_.camouflage = function camouflage(){
  return 'camouflage';
}
;
_.colorless = function colorless(){
  return 'colorless';
}
;
_.crab = function crab(){
  return 'crab';
}
;
_.crayfish = function crayfish(){
  return 'crayfish';
}
;
_.cyan = function cyan(){
  return 'cyan';
}
;
_.freighter = function freighter_0(){
  return 'freighter';
}
;
_.green = function green(){
  return 'green';
}
;
_.grey = function grey(){
  return 'grey';
}
;
_.heap = function heap(){
  return 'heap';
}
;
_.hight = function hight(){
  return 'high';
}
;
_.history_0 = function history_0(){
  return 'Archived game';
}
;
_.hovertank = function hovertank(){
  return 'hovertank';
}
;
_.lightning = function lightning(){
  return 'lightning';
}
;
_.low = function low_0(){
  return 'low';
}
;
_.marsh = function marsh(){
  return 'marsh';
}
;
_.medium = function medium(){
  return 'medium';
}
;
_.montain = function montain(){
  return 'montain';
}
;
_.none = function none(){
  return 'none';
}
;
_.olive = function olive(){
  return 'olive';
}
;
_.open_1 = function open_1(){
  return 'Paused game open to new players';
}
;
_.orange = function orange(){
  return 'orange';
}
;
_.ore = function ore_0(){
  return 'ore';
}
;
_.ore0 = function ore0(){
  return 'rock';
}
;
_.ore3 = function ore3(){
  return 'pur ore';
}
;
_.ore5 = function ore5(){
  return 'rare ore';
}
;
_.pantera = function pantera(){
  return 'pantera';
}
;
_.pause = function pause(){
  return 'Paused game';
}
;
_.pink = function pink(){
  return 'pink';
}
;
_.plain = function plain(){
  return 'plain';
}
;
_.pontoon = function pontoon_0(){
  return 'pontoon';
}
;
_.practice = function practice(){
  return 'Puzzle game';
}
;
_.purple = function purple(){
  return 'purple';
}
;
_.puzzle = function puzzle(){
  return 'Puzzle game';
}
;
_.red = function red(){
  return 'red';
}
;
_.reef = function reef(){
  return 'reef';
}
;
_.running = function running(){
  return 'Game in progress';
}
;
_.scenario = function scenario(){
  return 'Puzzle game';
}
;
_.sea = function sea(){
  return 'sea';
}
;
_.sluice = function sluice(){
  return 'sluice';
}
;
_.speedboat = function speedboat(){
  return 'speed boat';
}
;
_.tank = function tank(){
  return 'tank';
}
;
_.tarask = function tarask(){
  return 'tarask';
}
;
_.tokenDescription = function tokenDescription(arg0, arg1){
  return arg0 + ' ' + arg1;
}
;
_.turret = function turret_0(){
  return 'turret';
}
;
_.unknown = function unknown(){
  return 'unknown state';
}
;
_.weatherHen = function weatherHen(){
  return 'weather hen';
}
;
_.white = function white(){
  return 'white';
}
;
_.yellow = function yellow(){
  return 'yellow';
}
;
_.zebra = function zebra(){
  return 'zebra';
}
;
var Lcom_fullmetalgalaxy_model_ressources_MessagesRpc_1_2_classLit = createForClass('com.fullmetalgalaxy.model.ressources', 'MessagesRpc_', 894, Ljava_lang_Object_2_classLit);
function $clinit_Misc(){
  $clinit_Misc = emptyMethod;
}

var Lcom_fullmetalgalaxy_model_ressources_Misc_2_classLit = createForInterface('com.fullmetalgalaxy.model.ressources', 'Misc');
function $clinit_Misc_(){
  $clinit_Misc_ = emptyMethod;
  $clinit_Object();
}

function Misc_(){
  $clinit_Misc_();
  Object_0.call(this);
  this.$init_359();
}

defineClass(610, 1, {4424:1, 1:1}, Misc_);
_.$init_359 = function $init_359(){
}
;
_.dateTimeFormat = function dateTimeFormat(){
  return 'dd/MM/yy kk:mm';
}
;
_.shortDateFormat = function shortDateFormat(){
  return 'dd/MM';
}
;
_.timeFormat = function timeFormat(){
  return 'kk:mm';
}
;
var Lcom_fullmetalgalaxy_model_ressources_Misc_1_2_classLit = createForClass('com.fullmetalgalaxy.model.ressources', 'Misc_', 610, Ljava_lang_Object_2_classLit);
function $clinit_SharedI18n(){
  $clinit_SharedI18n = emptyMethod;
  $clinit_Object();
}

function getMessages(p_accountId){
  $clinit_SharedI18n();
  if (isNull(s_msg)) {
    s_msg = castTo(new MessagesRpc_, 4426);
  }
  return s_msg;
}

function getMessagesError(p_accountId){
  $clinit_SharedI18n();
  if (isNull(s_msgError)) {
    s_msgError = castTo(new MessagesRpcException_, 4425);
  }
  return s_msgError;
}

function getMisc(p_accountId){
  $clinit_SharedI18n();
  if (isNull(s_misc)) {
    s_misc = castTo(new Misc_, 4424);
  }
  return s_misc;
}

var s_misc = null, s_msg = null, s_msgError = null;
function $clinit_Key(){
  $clinit_Key = emptyMethod;
  $clinit_Object();
  serialVersionUID_3 = neg_0({l:3865139, m:1623846, h:25474});
}

function Key(kind, parentKey, id_0){
  $clinit_Key();
  Key_0.call(this, kind, parentKey, id_0, null);
}

function Key_0(kind, parentKey, id_0, name_0){
  Object_0.call(this);
  this.$init_360();
  if (jsEquals(kind, null) || length__I__devirtual$(kind) == 0)
    throw toJs(new IllegalArgumentException_0('No kind specified.'));
  if (jsNotEquals(name_0, null)) {
    if (length__I__devirtual$(name_0) == 0)
      throw toJs(new IllegalArgumentException_0('Name may not be empty.'));
    if (neq(id_0, 0))
      throw toJs(new IllegalArgumentException_0('Id and name may not both be specified at once.'));
  }
  this.name_0 = name_0;
  this.id_0 = id_0;
  this.parentKey = parentKey;
  this.kind = kind;
}

function Key_1(kind, parentKey, name_0){
  $clinit_Key();
  Key_0.call(this, kind, parentKey, 0, name_0);
}

function compareToInternal(thisKey, otherKey){
  var result;
  if (jsEquals(thisKey, otherKey))
    return 0;
  result = compareTo_Ljava_lang_String__I__devirtual$(thisKey.getKind(), otherKey.getKind());
  if (result != 0)
    return result;
  if (neq(thisKey.getId(), 0))
    if (eq(otherKey.getId(), 0))
      return -1;
    else 
      return valueOf_40(thisKey.getId()).compareTo_9(valueOf_40(otherKey.getId()));
  if (neq(otherKey.getId(), 0))
    return 1;
  else 
    return compareTo_Ljava_lang_String__I__devirtual$(thisKey.getName(), otherKey.getName());
}

function getPathIterator(key){
  var stack_0;
  stack_0 = new LinkedList;
  do {
    stack_0.addFirst(key);
    key = key.getParent_0();
  }
   while (isNotNull(key));
  return stack_0.iterator_0();
}

defineClass(128, 1, {128:1, 4:1, 8:1, 1:1}, Key, Key_1);
_.$init_360 = function $init_360(){
}
;
_.compareTo_0 = function compareTo_4(other){
  return this.compareTo_2(castTo(other, 128));
}
;
_.appendToString = function appendToString(buffer){
  if (isNotNull(this.parentKey)) {
    this.parentKey.appendToString(buffer);
    buffer.append_9('/');
  }
  buffer.append_9(this.kind);
  buffer.append_9('(');
  if (jsNotEquals(this.name_0, null))
    buffer.append_4(34).append_9(this.name_0).append_4(34);
  else 
    buffer.append_6(this.id_0);
  buffer.append_9(')');
}
;
_.compareTo_2 = function compareTo_3(other){
  var otherKey, otherPath, result, thisKey, thisPath;
  if (jsEquals(this, other))
    return 0;
  thisPath = getPathIterator(this);
  otherPath = getPathIterator(other);
  while (thisPath.hasNext_0()) {
    thisKey = castTo(castTo(thisPath.next_1(), 128), 128);
    if (otherPath.hasNext_0()) {
      otherKey = castTo(castTo(otherPath.next_1(), 128), 128);
      result = compareToInternal(thisKey, otherKey);
      if (result != 0)
        return result;
    }
     else {
      return 1;
    }
  }
  return otherPath.hasNext_0()?-1:0;
}
;
_.equals_0 = function equals_12(o){
  var key;
  if (maskUndefined(this) === maskUndefined(o))
    return true;
  if (jsEquals(o, null) || jsNotEquals(getClass__Ljava_lang_Class___devirtual$(this), getClass__Ljava_lang_Class___devirtual$(o)))
    return false;
  key = castTo(o, 128);
  if (neq(this.id_0, key.id_0))
    return false;
  if (!equals_Ljava_lang_Object__Z__devirtual$_2(this.kind, key.kind))
    return false;
  if (jsNotEquals(this.name_0, null)?!equals_Ljava_lang_Object__Z__devirtual$_2(this.name_0, key.name_0):jsNotEquals(key.name_0, null))
    return false;
  if (isNotNull(this.parentKey)?!this.parentKey.equals_0(key.parentKey):isNotNull(key.parentKey))
    return false;
  return true;
}
;
_.getId = function getId_2(){
  return this.id_0;
}
;
_.getKind = function getKind(){
  return this.kind;
}
;
_.getName = function getName_1(){
  return this.name_0;
}
;
_.getParent_0 = function getParent_0(){
  return this.parentKey;
}
;
_.hashCode_1 = function hashCode_10(){
  var result;
  result = isNotNull(this.parentKey)?this.parentKey.hashCode_1():0;
  result = 31 * result + hashCode__I__devirtual$_0(this.kind);
  result = 31 * result + toInt_0(xor_0(this.id_0, shru_0(this.id_0, 32)));
  result = 31 * result + (jsNotEquals(this.name_0, null)?hashCode__I__devirtual$_0(this.name_0):0);
  return result;
}
;
_.toString_0 = function toString_38(){
  var buffer;
  buffer = new StringBuilder;
  this.appendToString(buffer);
  return buffer.toString_0();
}
;
_.id_0 = 0;
var serialVersionUID_3 = 0;
var Lcom_google_appengine_api_datastore_Key_2_classLit = createForClass('com.google.appengine.api.datastore', 'Key', 128, Ljava_lang_Object_2_classLit);
function $clinit_KeyFactory(){
  $clinit_KeyFactory = emptyMethod;
  $clinit_Object();
}

function createKey(parent_0, kind, id_0){
  $clinit_KeyFactory();
  if (eq(id_0, 0))
    throw toJs(new IllegalArgumentException_0('id cannot be zero'));
  else 
    return new Key(kind, parent_0, id_0);
}

function createKey_0(parent_0, kind, name_0){
  $clinit_KeyFactory();
  if (jsEquals(name_0, null) || length__I__devirtual$(name_0) == 0)
    throw toJs(new IllegalArgumentException_0('name cannot be null or empty'));
  else 
    return new Key_1(kind, parent_0, name_0);
}

function $clinit_Key_CustomFieldSerializer(){
  $clinit_Key_CustomFieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_113(streamReader, instance){
  $clinit_Key_CustomFieldSerializer();
}

function instantiate_108(streamReader){
  $clinit_Key_CustomFieldSerializer();
  var id_0, kind, name_0, parent_0;
  parent_0 = castTo(streamReader.readObject(), 128);
  kind = streamReader.readString();
  id_0 = streamReader.readLong();
  name_0 = streamReader.readString();
  if (jsEquals(name_0, null))
    return createKey(parent_0, kind, id_0);
  else 
    return createKey_0(parent_0, kind, name_0);
}

function serialize_108(streamWriter, instance){
  $clinit_Key_CustomFieldSerializer();
  streamWriter.writeObject(instance.getParent_0());
  streamWriter.writeString(instance.getKind());
  streamWriter.writeLong(instance.getId());
  streamWriter.writeString(instance.getName());
}

function $clinit_AnimationScheduler$AnimationCallback(){
  $clinit_AnimationScheduler$AnimationCallback = emptyMethod;
}

var Lcom_google_gwt_animation_client_AnimationScheduler$AnimationCallback_2_classLit = createForInterface('com.google.gwt.animation.client', 'AnimationScheduler/AnimationCallback');
function $clinit_Animation$1(){
  $clinit_Animation$1 = emptyMethod;
  $clinit_Object();
}

function Animation$1(this$0){
  $clinit_Animation$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_361();
}

defineClass(587, 1, {1:1}, Animation$1);
_.$init_361 = function $init_361(){
}
;
_.execute_0 = function execute_0(timestamp){
  if (this.this$01.update(timestamp)) {
    this.this$01.requestHandle = this.this$01.scheduler.requestAnimationFrame_0(this.this$01.callback, this.this$01.element);
  }
   else {
    this.this$01.requestHandle = null;
  }
}
;
var Lcom_google_gwt_animation_client_Animation$1_2_classLit = createForClass('com.google.gwt.animation.client', 'Animation/1', 587, Ljava_lang_Object_2_classLit);
function $clinit_AnimationScheduler(){
  $clinit_AnimationScheduler = emptyMethod;
  $clinit_Object();
}

function AnimationScheduler(){
  $clinit_AnimationScheduler();
  Object_0.call(this);
  this.$init_362();
}

function get_2652(){
  $clinit_AnimationScheduler();
  var supportDetector;
  if (isNull(instance_6)) {
    supportDetector = castTo(new AnimationScheduler$AnimationSupportDetector, 326);
    instance_6 = isNotNull(supportDetector) && supportDetector.isNativelySupported()?new AnimationSchedulerImplStandard:new AnimationSchedulerImplTimer;
  }
  return instance_6;
}

defineClass(379, 1, {1:1});
_.$init_362 = function $init_362(){
}
;
var instance_6;
var Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationScheduler', 379, Ljava_lang_Object_2_classLit);
function $clinit_AnimationScheduler$AnimationHandle(){
  $clinit_AnimationScheduler$AnimationHandle = emptyMethod;
  $clinit_Object();
}

function AnimationScheduler$AnimationHandle(){
  $clinit_AnimationScheduler$AnimationHandle();
  Object_0.call(this);
  this.$init_363();
}

defineClass(380, 1, {1:1});
_.$init_363 = function $init_363(){
}
;
var Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationScheduler/AnimationHandle', 380, Ljava_lang_Object_2_classLit);
function $clinit_AnimationScheduler$AnimationSupportDetector(){
  $clinit_AnimationScheduler$AnimationSupportDetector = emptyMethod;
  $clinit_Object();
}

function AnimationScheduler$AnimationSupportDetector(){
  $clinit_AnimationScheduler$AnimationSupportDetector();
  Object_0.call(this);
  this.$init_364();
}

defineClass(326, 1, {326:1, 1:1}, AnimationScheduler$AnimationSupportDetector);
_.$init_364 = function $init_364(){
}
;
_.isNativelySupported = function isNativelySupported(){
  return !!$wnd.requestAnimationFrame && !!$wnd.cancelAnimationFrame;
}
;
var Lcom_google_gwt_animation_client_AnimationScheduler$AnimationSupportDetector_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationScheduler/AnimationSupportDetector', 326, Ljava_lang_Object_2_classLit);
function $clinit_AnimationSchedulerImplStandard(){
  $clinit_AnimationSchedulerImplStandard = emptyMethod;
  $clinit_AnimationScheduler();
}

function AnimationSchedulerImplStandard(){
  $clinit_AnimationSchedulerImplStandard();
  AnimationScheduler.call(this);
  this.$init_365();
}

function cancelImpl(holder){
  $clinit_AnimationSchedulerImplStandard();
  $wnd.cancelAnimationFrame(holder.id);
}

function requestImpl(cb, element){
  var callback = $entry(function(){
    var time = currentTimeMillis_1();
    cb.execute_0(time);
  }
  );
  var handle = $wnd.requestAnimationFrame(callback, element);
  return {id:handle};
}

defineClass(1001, 379, {1:1}, AnimationSchedulerImplStandard);
_.$init_365 = function $init_365(){
}
;
_.requestAnimationFrame_0 = function requestAnimationFrame_0(callback, element){
  var handle;
  handle = requestImpl(callback, element);
  return new AnimationSchedulerImplStandard$1(this, handle);
}
;
var Lcom_google_gwt_animation_client_AnimationSchedulerImplStandard_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationSchedulerImplStandard', 1001, Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit);
function $clinit_AnimationSchedulerImplStandard$1(){
  $clinit_AnimationSchedulerImplStandard$1 = emptyMethod;
  $clinit_AnimationScheduler$AnimationHandle();
}

function AnimationSchedulerImplStandard$1(this$0, val$handle){
  $clinit_AnimationSchedulerImplStandard$1();
  this.this$01 = this$0;
  this.val$handle2 = val$handle;
  AnimationScheduler$AnimationHandle.call(this);
  this.$init_366();
}

defineClass(1002, 380, {1:1}, AnimationSchedulerImplStandard$1);
_.$init_366 = function $init_366(){
}
;
_.cancel = function cancel_4(){
  cancelImpl(this.val$handle2);
}
;
var Lcom_google_gwt_animation_client_AnimationSchedulerImplStandard$1_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationSchedulerImplStandard/1', 1002, Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit);
function $clinit_AnimationSchedulerImplTimer(){
  $clinit_AnimationSchedulerImplTimer = emptyMethod;
  $clinit_AnimationScheduler();
}

function AnimationSchedulerImplTimer(){
  $clinit_AnimationSchedulerImplTimer();
  AnimationScheduler.call(this);
  this.$init_367();
}

defineClass(1003, 379, {1:1}, AnimationSchedulerImplTimer);
_.$init_367 = function $init_367(){
  this.animationRequests = new ArrayList;
  this.timer = new AnimationSchedulerImplTimer$1(this);
}
;
_.cancelAnimationFrame_0 = function cancelAnimationFrame_0(requestId){
  $clinit_AnimationSchedulerImplTimer();
  this.animationRequests.remove_1(requestId);
  if (this.animationRequests.size_1() == 0) {
    this.timer.cancel();
  }
}
;
_.requestAnimationFrame_0 = function requestAnimationFrame_1(callback, element){
  var requestId;
  requestId = new AnimationSchedulerImplTimer$AnimationHandleImpl(this, callback);
  this.animationRequests.add_5(requestId);
  if (this.animationRequests.size_1() == 1) {
    this.timer.schedule(16);
  }
  return requestId;
}
;
_.updateAnimations = function updateAnimations(){
  $clinit_AnimationSchedulerImplTimer();
  var curAnimations, duration, requestId, requestId$array, requestId$index, requestId$max;
  curAnimations = initUnidimensionalArray(Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit, {4439:1, 4:1, 1:1, 5:1}, 356, this.animationRequests.size_1(), 0, 1);
  curAnimations = castTo(this.animationRequests.toArray_0(curAnimations), 4439);
  duration = new Duration;
  for (requestId$array = curAnimations , requestId$index = 0 , requestId$max = requestId$array.length; requestId$index < requestId$max; ++requestId$index) {
    requestId = requestId$array[requestId$index];
    this.animationRequests.remove_1(requestId);
    requestId.getCallback().execute_0(duration.getStartMillis());
  }
  if (this.animationRequests.size_1() > 0) {
    this.timer.schedule($wnd.Math.max(5, 16 - duration.elapsedMillis_0()));
  }
}
;
var Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationSchedulerImplTimer', 1003, Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit);
function $clinit_AnimationSchedulerImplTimer$1(){
  $clinit_AnimationSchedulerImplTimer$1 = emptyMethod;
  $clinit_Timer();
}

function AnimationSchedulerImplTimer$1(this$0){
  $clinit_AnimationSchedulerImplTimer$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_368();
}

defineClass(1004, 93, {1:1}, AnimationSchedulerImplTimer$1);
_.$init_368 = function $init_368(){
}
;
_.run = function run_16(){
  this.this$01.updateAnimations();
}
;
var Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationSchedulerImplTimer/1', 1004, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_AnimationSchedulerImplTimer$AnimationHandleImpl(){
  $clinit_AnimationSchedulerImplTimer$AnimationHandleImpl = emptyMethod;
  $clinit_AnimationScheduler$AnimationHandle();
}

function AnimationSchedulerImplTimer$AnimationHandleImpl(this$0, callback){
  $clinit_AnimationSchedulerImplTimer$AnimationHandleImpl();
  this.this$01 = this$0;
  AnimationScheduler$AnimationHandle.call(this);
  this.$init_369();
  this.callback = callback;
}

defineClass(356, 380, {356:1, 1:1}, AnimationSchedulerImplTimer$AnimationHandleImpl);
_.$init_369 = function $init_369(){
}
;
_.cancel = function cancel_5(){
  this.this$01.cancelAnimationFrame_0(this);
}
;
_.getCallback = function getCallback(){
  return this.callback;
}
;
var Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client', 'AnimationSchedulerImplTimer/AnimationHandleImpl', 356, Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit);
function $clinit_Channel(){
  $clinit_Channel = emptyMethod;
  $clinit_JavaScriptObject();
}

function $open(this$static, listener){
  $clinit_Channel();
  var socket = this$static.open();
  socket.onopen = function(event_0){
    listener.onOpen();
  }
  ;
  socket.onmessage = function(event_0){
    listener.onMessage(event_0.data);
  }
  ;
  socket.onerror = function(error){
    listener.onError(event.data);
  }
  ;
  socket.onclose = function(event_0){
    listener.onClose_0();
  }
  ;
  return socket;
}

function $clinit_ChannelFactory(){
  $clinit_ChannelFactory = emptyMethod;
  $clinit_Object();
}

function createChannel(clientId, callback){
  $clinit_ChannelFactory();
  var script;
  if (isNull(channel_0)) {
    script = $createScriptElement(get_2654());
    $setSrc_1(script, '/_ah/channel/jsapi');
    $appendChild($getItem($getElementsByTagName(get_2654(), 'head'), 0), script);
    (new ChannelFactory$1(clientId, callback)).scheduleRepeating(100);
  }
   else {
    callback.onChannelCreated(channel_0);
  }
}

function createChannelImpl(clientId){
  $clinit_ChannelFactory();
  return new $wnd.goog.appengine.Channel(clientId);
}

function scriptLoaded(){
  $clinit_ChannelFactory();
  return !!$wnd.goog && (!!$wnd.goog.appengine && !!$wnd.goog.appengine.Channel);
}

var channel_0;
function $clinit_ChannelFactory$1(){
  $clinit_ChannelFactory$1 = emptyMethod;
  $clinit_Timer();
}

function ChannelFactory$1(val$clientId, val$callback){
  $clinit_ChannelFactory$1();
  this.val$clientId1 = val$clientId;
  this.val$callback2 = val$callback;
  Timer.call(this);
  this.$init_370();
}

defineClass(534, 93, {1:1}, ChannelFactory$1);
_.$init_370 = function $init_370(){
}
;
_.run = function run_17(){
  if (scriptLoaded()) {
    $clinit_ChannelFactory() , channel_0 = createChannelImpl(this.val$clientId1);
    this.val$callback2.onChannelCreated(($clinit_ChannelFactory() , channel_0));
    this.cancel();
  }
}
;
var Lcom_google_gwt_appengine_channel_client_ChannelFactory$1_2_classLit = createForClass('com.google.gwt.appengine.channel.client', 'ChannelFactory/1', 534, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_Socket(){
  $clinit_Socket = emptyMethod;
  $clinit_JavaScriptObject();
}

function $clinit_SocketError(){
  $clinit_SocketError = emptyMethod;
  $clinit_JavaScriptObject();
}

function $getDescription(this$static){
  $clinit_SocketError();
  return this$static.description;
}

function $clinit_Role(){
  $clinit_Role = emptyMethod;
}

var Lcom_google_gwt_aria_client_Role_2_classLit = createForInterface('com.google.gwt.aria.client', 'Role');
function $clinit_StructureRole(){
  $clinit_StructureRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_StructureRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'StructureRole');
function $clinit_SectionRole(){
  $clinit_SectionRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_SectionRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'SectionRole');
function $clinit_RegionRole(){
  $clinit_RegionRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_RegionRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'RegionRole');
function $clinit_AlertRole(){
  $clinit_AlertRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_AlertRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'AlertRole');
function $clinit_RoleImpl(){
  $clinit_RoleImpl = emptyMethod;
  $clinit_Object();
}

function RoleImpl(roleName){
  $clinit_RoleImpl();
  Object_0.call(this);
  this.$init_371();
  if (!jsNotEquals(roleName, null)) {
    debugger;
    throw toJs(makeAssertionError_Object('Role name cannot be null'));
  }
  this.roleName = roleName;
}

defineClass(32, 1, {1:1});
_.$init_371 = function $init_371(){
}
;
_.set_3 = function set_5(element){
  if (!isNotNull(element)) {
    debugger;
    throw toJs(makeAssertionError_Object('Element cannot be null.'));
  }
  $setAttribute(element, 'role', this.roleName);
}
;
var Lcom_google_gwt_aria_client_RoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'RoleImpl', 32, Ljava_lang_Object_2_classLit);
function $clinit_AlertRoleImpl(){
  $clinit_AlertRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function AlertRoleImpl(roleName){
  $clinit_AlertRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_372();
}

defineClass(898, 32, {1:1}, AlertRoleImpl);
_.$init_372 = function $init_372(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_AlertRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'AlertRoleImpl', 898, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_WindowRole(){
  $clinit_WindowRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_WindowRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'WindowRole');
function $clinit_DialogRole(){
  $clinit_DialogRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_DialogRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'DialogRole');
function $clinit_AlertdialogRole(){
  $clinit_AlertdialogRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_AlertdialogRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'AlertdialogRole');
function $clinit_AlertdialogRoleImpl(){
  $clinit_AlertdialogRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function AlertdialogRoleImpl(roleName){
  $clinit_AlertdialogRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_373();
}

defineClass(897, 32, {1:1}, AlertdialogRoleImpl);
_.$init_373 = function $init_373(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_0(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_0(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_AlertdialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'AlertdialogRoleImpl', 897, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_LandmarkRole(){
  $clinit_LandmarkRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_LandmarkRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'LandmarkRole');
function $clinit_ApplicationRole(){
  $clinit_ApplicationRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ApplicationRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ApplicationRole');
function $clinit_ApplicationRoleImpl(){
  $clinit_ApplicationRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ApplicationRoleImpl(roleName){
  $clinit_ApplicationRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_374();
}

defineClass(899, 32, {1:1}, ApplicationRoleImpl);
_.$init_374 = function $init_374(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_1(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_1(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ApplicationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ApplicationRoleImpl', 899, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_AriaAttributeType(){
  $clinit_AriaAttributeType = emptyMethod;
}

var Lcom_google_gwt_aria_client_AriaAttributeType_2_classLit = createForInterface('com.google.gwt.aria.client', 'AriaAttributeType');
function $clinit_Attribute(){
  $clinit_Attribute = emptyMethod;
  $clinit_Object();
}

function Attribute(name_0, defaultValue){
  $clinit_Attribute();
  Object_0.call(this);
  this.$init_375();
  if (!jsNotEquals(name_0, null)) {
    debugger;
    throw toJs(makeAssertionError_Object('Name cannot be null'));
  }
  this.name_0 = name_0;
  this.defaultValue = defaultValue;
}

defineClass(424, 1, {1:1});
_.$init_375 = function $init_375(){
}
;
_.getAriaValue_0 = function getAriaValue(value_0){
  var buf, item_0, item$array, item$index, item$max;
  buf = new StringBuilder;
  for (item$array = value_0 , item$index = 0 , item$max = item$array.length; item$index < item$max; ++item$index) {
    item_0 = item$array[item$index];
    buf.append_9(this.getSingleValue(item_0)).append_9(' ');
  }
  return trim__Ljava_lang_String___devirtual$(buf.toString_0());
}
;
_.remove_6 = function remove_14(element){
  if (!isNotNull(element)) {
    debugger;
    throw toJs(makeAssertionError_Object('Element cannot be null.'));
  }
  $removeAttribute(element, this.name_0);
}
;
_.set_4 = function set_6(element, values){
  if (!isNotNull(element)) {
    debugger;
    throw toJs(makeAssertionError_Object('Element cannot be null.'));
  }
  if (!(values.length > 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  $setAttribute(element, this.name_0, this.getAriaValue_0(values));
}
;
var Lcom_google_gwt_aria_client_Attribute_2_classLit = createForClass('com.google.gwt.aria.client', 'Attribute', 424, Ljava_lang_Object_2_classLit);
function $clinit_AriaValueAttribute(){
  $clinit_AriaValueAttribute = emptyMethod;
  $clinit_Attribute();
}

function AriaValueAttribute(name_0, defaultValue){
  $clinit_AriaValueAttribute();
  Attribute.call(this, name_0, defaultValue);
  this.$init_376();
}

defineClass(100, 424, {1:1}, AriaValueAttribute);
_.$init_376 = function $init_376(){
}
;
_.getSingleValue = function getSingleValue_0(value_0){
  return this.getSingleValue_0(castTo(value_0, 359));
}
;
_.getSingleValue_0 = function getSingleValue(value_0){
  return value_0.getAriaValue();
}
;
var Lcom_google_gwt_aria_client_AriaValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client', 'AriaValueAttribute', 100, Lcom_google_gwt_aria_client_Attribute_2_classLit);
function $clinit_DocumentRole(){
  $clinit_DocumentRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_DocumentRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'DocumentRole');
function $clinit_ArticleRole(){
  $clinit_ArticleRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ArticleRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ArticleRole');
function $clinit_ArticleRoleImpl(){
  $clinit_ArticleRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ArticleRoleImpl(roleName){
  $clinit_ArticleRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_377();
}

defineClass(900, 32, {1:1}, ArticleRoleImpl);
_.$init_377 = function $init_377(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_2(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_2(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ArticleRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ArticleRoleImpl', 900, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_BannerRole(){
  $clinit_BannerRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_BannerRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'BannerRole');
function $clinit_BannerRoleImpl(){
  $clinit_BannerRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function BannerRoleImpl(roleName){
  $clinit_BannerRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_378();
}

defineClass(901, 32, {1:1}, BannerRoleImpl);
_.$init_378 = function $init_378(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_3(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_3(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_BannerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'BannerRoleImpl', 901, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_WidgetRole(){
  $clinit_WidgetRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_WidgetRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'WidgetRole');
function $clinit_CommandRole(){
  $clinit_CommandRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_CommandRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'CommandRole');
function $clinit_ButtonRole(){
  $clinit_ButtonRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ButtonRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ButtonRole');
function $clinit_ButtonRoleImpl(){
  $clinit_ButtonRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ButtonRoleImpl(roleName){
  $clinit_ButtonRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_379();
}

defineClass(902, 32, {1:1}, ButtonRoleImpl);
_.$init_379 = function $init_379(){
}
;
_.removeAriaPressedState = function removeAriaPressedState(element){
  ($clinit_State() , PRESSED).remove_6(element);
}
;
_.setAriaPressedState = function setAriaPressedState(element, value_0){
  ($clinit_State() , PRESSED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_PressedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 204, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ButtonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ButtonRoleImpl', 902, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_InputRole(){
  $clinit_InputRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_InputRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'InputRole');
function $clinit_CheckboxRole(){
  $clinit_CheckboxRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_CheckboxRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'CheckboxRole');
function $clinit_CheckboxRoleImpl(){
  $clinit_CheckboxRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function CheckboxRoleImpl(roleName){
  $clinit_CheckboxRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_380();
}

defineClass(903, 32, {1:1}, CheckboxRoleImpl);
_.$init_380 = function $init_380(){
}
;
var Lcom_google_gwt_aria_client_CheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'CheckboxRoleImpl', 903, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_GridcellRole(){
  $clinit_GridcellRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_GridcellRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'GridcellRole');
function $clinit_SectionheadRole(){
  $clinit_SectionheadRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_SectionheadRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'SectionheadRole');
function $clinit_ColumnheaderRole(){
  $clinit_ColumnheaderRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ColumnheaderRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ColumnheaderRole');
function $clinit_ColumnheaderRoleImpl(){
  $clinit_ColumnheaderRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ColumnheaderRoleImpl(roleName){
  $clinit_ColumnheaderRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_381();
}

defineClass(904, 32, {1:1}, ColumnheaderRoleImpl);
_.$init_381 = function $init_381(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_4(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_4(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ColumnheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ColumnheaderRoleImpl', 904, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_CompositeRole(){
  $clinit_CompositeRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_CompositeRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'CompositeRole');
function $clinit_GroupRole(){
  $clinit_GroupRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_GroupRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'GroupRole');
function $clinit_SelectRole(){
  $clinit_SelectRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_SelectRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'SelectRole');
function $clinit_ComboboxRole(){
  $clinit_ComboboxRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ComboboxRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ComboboxRole');
function $clinit_ComboboxRoleImpl(){
  $clinit_ComboboxRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ComboboxRoleImpl(roleName){
  $clinit_ComboboxRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_382();
}

defineClass(905, 32, {1:1}, ComboboxRoleImpl);
_.$init_382 = function $init_382(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_5(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_5(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ComboboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ComboboxRoleImpl', 905, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ComplementaryRole(){
  $clinit_ComplementaryRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ComplementaryRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ComplementaryRole');
function $clinit_ComplementaryRoleImpl(){
  $clinit_ComplementaryRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ComplementaryRoleImpl(roleName){
  $clinit_ComplementaryRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_383();
}

defineClass(906, 32, {1:1}, ComplementaryRoleImpl);
_.$init_383 = function $init_383(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_6(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_6(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ComplementaryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ComplementaryRoleImpl', 906, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ContentinfoRole(){
  $clinit_ContentinfoRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ContentinfoRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ContentinfoRole');
function $clinit_ContentinfoRoleImpl(){
  $clinit_ContentinfoRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ContentinfoRoleImpl(roleName){
  $clinit_ContentinfoRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_384();
}

defineClass(907, 32, {1:1}, ContentinfoRoleImpl);
_.$init_384 = function $init_384(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_7(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_7(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ContentinfoRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ContentinfoRoleImpl', 907, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_DefinitionRole(){
  $clinit_DefinitionRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_DefinitionRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'DefinitionRole');
function $clinit_DefinitionRoleImpl(){
  $clinit_DefinitionRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function DefinitionRoleImpl(roleName){
  $clinit_DefinitionRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_385();
}

defineClass(908, 32, {1:1}, DefinitionRoleImpl);
_.$init_385 = function $init_385(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_8(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_8(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_DefinitionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'DefinitionRoleImpl', 908, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_DialogRoleImpl(){
  $clinit_DialogRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function DialogRoleImpl(roleName){
  $clinit_DialogRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_386();
}

defineClass(909, 32, {1:1}, DialogRoleImpl);
_.$init_386 = function $init_386(){
}
;
var Lcom_google_gwt_aria_client_DialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'DialogRoleImpl', 909, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ListRole(){
  $clinit_ListRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ListRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ListRole');
function $clinit_DirectoryRole(){
  $clinit_DirectoryRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_DirectoryRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'DirectoryRole');
function $clinit_DirectoryRoleImpl(){
  $clinit_DirectoryRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function DirectoryRoleImpl(roleName){
  $clinit_DirectoryRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_387();
}

defineClass(910, 32, {1:1}, DirectoryRoleImpl);
_.$init_387 = function $init_387(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_9(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_9(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_DirectoryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'DirectoryRoleImpl', 910, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_DocumentRoleImpl(){
  $clinit_DocumentRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function DocumentRoleImpl(roleName){
  $clinit_DocumentRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_388();
}

defineClass(911, 32, {1:1}, DocumentRoleImpl);
_.$init_388 = function $init_388(){
}
;
var Lcom_google_gwt_aria_client_DocumentRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'DocumentRoleImpl', 911, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ExpandedValue(){
  $clinit_ExpandedValue = emptyMethod;
  $clinit_Enum();
  TRUE = new ExpandedValue('TRUE', 0);
  FALSE = new ExpandedValue('FALSE', 1);
  UNDEFINED = new ExpandedValue('UNDEFINED', 2);
}

function ExpandedValue(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_389();
}

function of(value_0){
  $clinit_ExpandedValue();
  return value_0?TRUE:FALSE;
}

function valueOf_17(name_0){
  $clinit_ExpandedValue();
  return valueOf(($clinit_ExpandedValue$Map() , $MAP_16), name_0);
}

function values_18(){
  $clinit_ExpandedValue();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [TRUE, FALSE, UNDEFINED]);
}

defineClass(36, 7, {359:1, 36:1, 4:1, 8:1, 7:1, 1:1}, ExpandedValue);
_.$init_389 = function $init_389(){
}
;
_.getAriaValue = function getAriaValue_0(){
  switch (this.ordinal_0()) {
    case TRUE.ordinal_0():
      return 'true';
    case FALSE.ordinal_0():
      return 'false';
    case UNDEFINED.ordinal_0():
      return 'undefined';
  }
  return null;
}
;
var FALSE, TRUE, UNDEFINED;
var Lcom_google_gwt_aria_client_ExpandedValue_2_classLit = createForEnum('com.google.gwt.aria.client', 'ExpandedValue', 36, Ljava_lang_Enum_2_classLit, values_18, valueOf_17);
function $clinit_ExpandedValue$Map(){
  $clinit_ExpandedValue$Map = emptyMethod;
  $MAP_16 = createValueOfMap(values_18());
}

var $MAP_16;
function $clinit_FormRole(){
  $clinit_FormRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_FormRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'FormRole');
function $clinit_FormRoleImpl(){
  $clinit_FormRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function FormRoleImpl(roleName){
  $clinit_FormRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_390();
}

defineClass(912, 32, {1:1}, FormRoleImpl);
_.$init_390 = function $init_390(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_10(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_10(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_FormRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'FormRoleImpl', 912, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_GridRole(){
  $clinit_GridRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_GridRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'GridRole');
function $clinit_GridRoleImpl(){
  $clinit_GridRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function GridRoleImpl(roleName){
  $clinit_GridRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_391();
}

defineClass(914, 32, {1:1}, GridRoleImpl);
_.$init_391 = function $init_391(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_11(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_0(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_11(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_GridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'GridRoleImpl', 914, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_GridcellRoleImpl(){
  $clinit_GridcellRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function GridcellRoleImpl(roleName){
  $clinit_GridcellRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_392();
}

defineClass(913, 32, {1:1}, GridcellRoleImpl);
_.$init_392 = function $init_392(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_12(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_12(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_GridcellRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'GridcellRoleImpl', 913, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_GroupRoleImpl(){
  $clinit_GroupRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function GroupRoleImpl(roleName){
  $clinit_GroupRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_393();
}

defineClass(915, 32, {1:1}, GroupRoleImpl);
_.$init_393 = function $init_393(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_13(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_13(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_GroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'GroupRoleImpl', 915, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_HeadingRole(){
  $clinit_HeadingRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_HeadingRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'HeadingRole');
function $clinit_HeadingRoleImpl(){
  $clinit_HeadingRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function HeadingRoleImpl(roleName){
  $clinit_HeadingRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_394();
}

defineClass(916, 32, {1:1}, HeadingRoleImpl);
_.$init_394 = function $init_394(){
}
;
var Lcom_google_gwt_aria_client_HeadingRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'HeadingRoleImpl', 916, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_Id(){
  $clinit_Id = emptyMethod;
  $clinit_Object();
}

function Id(element){
  Object_0.call(this);
  this.$init_395();
  if (!isNotNull(element)) {
    debugger;
    throw toJs(makeAssertionError_Object('Element cannot be null'));
  }
  this.init_48($getId(element));
}

function of_0(element){
  $clinit_Id();
  return new Id(element);
}

defineClass(106, 1, {359:1, 106:1, 1:1}, Id);
_.$init_395 = function $init_395(){
}
;
_.getAriaValue = function getAriaValue_1(){
  return this.id_0;
}
;
_.init_48 = function init_48(elementId){
  if (!(jsNotEquals(elementId, null) || equals_Ljava_lang_Object__Z__devirtual$_2(elementId, ''))) {
    debugger;
    throw toJs(makeAssertionError_Object('Invalid elementId: cannot be null or empty.'));
  }
  this.id_0 = elementId;
}
;
var Lcom_google_gwt_aria_client_Id_2_classLit = createForClass('com.google.gwt.aria.client', 'Id', 106, Ljava_lang_Object_2_classLit);
function $clinit_ImgRole(){
  $clinit_ImgRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ImgRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ImgRole');
function $clinit_ImgRoleImpl(){
  $clinit_ImgRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ImgRoleImpl(roleName){
  $clinit_ImgRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_396();
}

defineClass(917, 32, {1:1}, ImgRoleImpl);
_.$init_396 = function $init_396(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_14(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_14(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ImgRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ImgRoleImpl', 917, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_LinkRole(){
  $clinit_LinkRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_LinkRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'LinkRole');
function $clinit_LinkRoleImpl(){
  $clinit_LinkRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function LinkRoleImpl(roleName){
  $clinit_LinkRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_397();
}

defineClass(918, 32, {1:1}, LinkRoleImpl);
_.$init_397 = function $init_397(){
}
;
var Lcom_google_gwt_aria_client_LinkRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'LinkRoleImpl', 918, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ListRoleImpl(){
  $clinit_ListRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ListRoleImpl(roleName){
  $clinit_ListRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_398();
}

defineClass(921, 32, {1:1}, ListRoleImpl);
_.$init_398 = function $init_398(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_15(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_15(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ListRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ListRoleImpl', 921, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ListboxRole(){
  $clinit_ListboxRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ListboxRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ListboxRole');
function $clinit_ListboxRoleImpl(){
  $clinit_ListboxRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ListboxRoleImpl(roleName){
  $clinit_ListboxRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_399();
}

defineClass(919, 32, {1:1}, ListboxRoleImpl);
_.$init_399 = function $init_399(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_16(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_1(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_16(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ListboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ListboxRoleImpl', 919, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ListitemRole(){
  $clinit_ListitemRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ListitemRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ListitemRole');
function $clinit_ListitemRoleImpl(){
  $clinit_ListitemRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ListitemRoleImpl(roleName){
  $clinit_ListitemRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_400();
}

defineClass(920, 32, {1:1}, ListitemRoleImpl);
_.$init_400 = function $init_400(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_17(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_17(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
_.setAriaLevelProperty = function setAriaLevelProperty(element, value_0){
  ($clinit_Property() , LEVEL).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), {4:1, 1:1, 5:1}, 28, 0, [valueOf_37(value_0)]));
}
;
_.setAriaPosinsetProperty = function setAriaPosinsetProperty(element, value_0){
  ($clinit_Property() , POSINSET).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), {4:1, 1:1, 5:1}, 28, 0, [valueOf_37(value_0)]));
}
;
_.setAriaSetsizeProperty = function setAriaSetsizeProperty(element, value_0){
  ($clinit_Property() , SETSIZE).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), {4:1, 1:1, 5:1}, 28, 0, [valueOf_37(value_0)]));
}
;
var Lcom_google_gwt_aria_client_ListitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ListitemRoleImpl', 920, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_LogRole(){
  $clinit_LogRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_LogRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'LogRole');
function $clinit_LogRoleImpl(){
  $clinit_LogRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function LogRoleImpl(roleName){
  $clinit_LogRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_401();
}

defineClass(922, 32, {1:1}, LogRoleImpl);
_.$init_401 = function $init_401(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_18(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_18(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_LogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'LogRoleImpl', 922, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_MainRole(){
  $clinit_MainRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MainRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MainRole');
function $clinit_MainRoleImpl(){
  $clinit_MainRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MainRoleImpl(roleName){
  $clinit_MainRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_402();
}

defineClass(923, 32, {1:1}, MainRoleImpl);
_.$init_402 = function $init_402(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_19(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_19(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_MainRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MainRoleImpl', 923, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_MarqueeRole(){
  $clinit_MarqueeRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MarqueeRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MarqueeRole');
function $clinit_MarqueeRoleImpl(){
  $clinit_MarqueeRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MarqueeRoleImpl(roleName){
  $clinit_MarqueeRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_403();
}

defineClass(924, 32, {1:1}, MarqueeRoleImpl);
_.$init_403 = function $init_403(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_20(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_20(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_MarqueeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MarqueeRoleImpl', 924, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_MathRole(){
  $clinit_MathRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MathRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MathRole');
function $clinit_MathRoleImpl(){
  $clinit_MathRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MathRoleImpl(roleName){
  $clinit_MathRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_404();
}

defineClass(925, 32, {1:1}, MathRoleImpl);
_.$init_404 = function $init_404(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_21(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_21(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_MathRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MathRoleImpl', 925, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_MenuRole(){
  $clinit_MenuRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MenuRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MenuRole');
function $clinit_MenuRoleImpl(){
  $clinit_MenuRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MenuRoleImpl(roleName){
  $clinit_MenuRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_405();
}

defineClass(930, 32, {1:1}, MenuRoleImpl);
_.$init_405 = function $init_405(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_22(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_2(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_22(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_MenuRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MenuRoleImpl', 930, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_MenubarRole(){
  $clinit_MenubarRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MenubarRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MenubarRole');
function $clinit_MenubarRoleImpl(){
  $clinit_MenubarRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MenubarRoleImpl(roleName){
  $clinit_MenubarRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_406();
}

defineClass(926, 32, {1:1}, MenubarRoleImpl);
_.$init_406 = function $init_406(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_23(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_3(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_23(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_MenubarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MenubarRoleImpl', 926, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_MenuitemRole(){
  $clinit_MenuitemRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MenuitemRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MenuitemRole');
function $clinit_MenuitemRoleImpl(){
  $clinit_MenuitemRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MenuitemRoleImpl(roleName){
  $clinit_MenuitemRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_407();
}

defineClass(929, 32, {1:1}, MenuitemRoleImpl);
_.$init_407 = function $init_407(){
}
;
var Lcom_google_gwt_aria_client_MenuitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MenuitemRoleImpl', 929, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_MenuitemcheckboxRole(){
  $clinit_MenuitemcheckboxRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MenuitemcheckboxRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MenuitemcheckboxRole');
function $clinit_MenuitemcheckboxRoleImpl(){
  $clinit_MenuitemcheckboxRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MenuitemcheckboxRoleImpl(roleName){
  $clinit_MenuitemcheckboxRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_408();
}

defineClass(927, 32, {1:1}, MenuitemcheckboxRoleImpl);
_.$init_408 = function $init_408(){
}
;
var Lcom_google_gwt_aria_client_MenuitemcheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MenuitemcheckboxRoleImpl', 927, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_OptionRole(){
  $clinit_OptionRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_OptionRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'OptionRole');
function $clinit_RadioRole(){
  $clinit_RadioRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_RadioRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'RadioRole');
function $clinit_MenuitemradioRole(){
  $clinit_MenuitemradioRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_MenuitemradioRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'MenuitemradioRole');
function $clinit_MenuitemradioRoleImpl(){
  $clinit_MenuitemradioRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function MenuitemradioRoleImpl(roleName){
  $clinit_MenuitemradioRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_409();
}

defineClass(928, 32, {1:1}, MenuitemradioRoleImpl);
_.$init_409 = function $init_409(){
}
;
_.setAriaSelectedState = function setAriaSelectedState(element, value_0){
  ($clinit_State() , SELECTED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_SelectedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 123, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_MenuitemradioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'MenuitemradioRoleImpl', 928, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_NavigationRole(){
  $clinit_NavigationRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_NavigationRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'NavigationRole');
function $clinit_NavigationRoleImpl(){
  $clinit_NavigationRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function NavigationRoleImpl(roleName){
  $clinit_NavigationRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_410();
}

defineClass(931, 32, {1:1}, NavigationRoleImpl);
_.$init_410 = function $init_410(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_24(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_24(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_NavigationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'NavigationRoleImpl', 931, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_NoteRole(){
  $clinit_NoteRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_NoteRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'NoteRole');
function $clinit_NoteRoleImpl(){
  $clinit_NoteRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function NoteRoleImpl(roleName){
  $clinit_NoteRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_411();
}

defineClass(932, 32, {1:1}, NoteRoleImpl);
_.$init_411 = function $init_411(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_25(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_25(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_NoteRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'NoteRoleImpl', 932, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_OptionRoleImpl(){
  $clinit_OptionRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function OptionRoleImpl(roleName){
  $clinit_OptionRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_412();
}

defineClass(933, 32, {1:1}, OptionRoleImpl);
_.$init_412 = function $init_412(){
}
;
_.setAriaSelectedState = function setAriaSelectedState_0(element, value_0){
  ($clinit_State() , SELECTED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_SelectedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 123, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_OptionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'OptionRoleImpl', 933, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_PresentationRole(){
  $clinit_PresentationRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_PresentationRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'PresentationRole');
function $clinit_PresentationRoleImpl(){
  $clinit_PresentationRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function PresentationRoleImpl(roleName){
  $clinit_PresentationRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_413();
}

defineClass(934, 32, {1:1}, PresentationRoleImpl);
_.$init_413 = function $init_413(){
}
;
var Lcom_google_gwt_aria_client_PresentationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'PresentationRoleImpl', 934, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_PressedValue(){
  $clinit_PressedValue = emptyMethod;
  $clinit_Enum();
  TRUE_0 = new PressedValue('TRUE', 0);
  FALSE_0 = new PressedValue('FALSE', 1);
  MIXED = new PressedValue('MIXED', 2);
  UNDEFINED_0 = new PressedValue('UNDEFINED', 3);
}

function PressedValue(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_414();
}

function of_1(value_0){
  $clinit_PressedValue();
  return value_0?TRUE_0:FALSE_0;
}

function valueOf_18(name_0){
  $clinit_PressedValue();
  return valueOf(($clinit_PressedValue$Map() , $MAP_17), name_0);
}

function values_19(){
  $clinit_PressedValue();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_PressedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 204, 0, [TRUE_0, FALSE_0, MIXED, UNDEFINED_0]);
}

defineClass(204, 7, {359:1, 204:1, 4:1, 8:1, 7:1, 1:1}, PressedValue);
_.$init_414 = function $init_414(){
}
;
_.getAriaValue = function getAriaValue_2(){
  switch (this.ordinal_0()) {
    case TRUE_0.ordinal_0():
      return 'true';
    case FALSE_0.ordinal_0():
      return 'false';
    case MIXED.ordinal_0():
      return 'mixed';
    case UNDEFINED_0.ordinal_0():
      return 'undefined';
  }
  return null;
}
;
var FALSE_0, MIXED, TRUE_0, UNDEFINED_0;
var Lcom_google_gwt_aria_client_PressedValue_2_classLit = createForEnum('com.google.gwt.aria.client', 'PressedValue', 204, Ljava_lang_Enum_2_classLit, values_19, valueOf_18);
function $clinit_PressedValue$Map(){
  $clinit_PressedValue$Map = emptyMethod;
  $MAP_17 = createValueOfMap(values_19());
}

var $MAP_17;
function $clinit_PrimitiveValueAttribute(){
  $clinit_PrimitiveValueAttribute = emptyMethod;
  $clinit_Attribute();
}

function PrimitiveValueAttribute(name_0, defaultValue){
  $clinit_PrimitiveValueAttribute();
  Attribute.call(this, name_0, defaultValue);
  this.$init_415();
}

defineClass(101, 424, {1:1}, PrimitiveValueAttribute);
_.$init_415 = function $init_415(){
}
;
_.getSingleValue = function getSingleValue_1(value_0){
  return valueOf_47(value_0);
}
;
var Lcom_google_gwt_aria_client_PrimitiveValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client', 'PrimitiveValueAttribute', 101, Lcom_google_gwt_aria_client_Attribute_2_classLit);
function $clinit_RangeRole(){
  $clinit_RangeRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_RangeRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'RangeRole');
function $clinit_ProgressbarRole(){
  $clinit_ProgressbarRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ProgressbarRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ProgressbarRole');
function $clinit_ProgressbarRoleImpl(){
  $clinit_ProgressbarRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ProgressbarRoleImpl(roleName){
  $clinit_ProgressbarRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_416();
}

defineClass(935, 32, {1:1}, ProgressbarRoleImpl);
_.$init_416 = function $init_416(){
}
;
var Lcom_google_gwt_aria_client_ProgressbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ProgressbarRoleImpl', 935, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_Property(){
  $clinit_Property = emptyMethod;
  $clinit_Object();
  ACTIVEDESCENDANT = new AriaValueAttribute('aria-activedescendant', '');
  ATOMIC = new PrimitiveValueAttribute('aria-atomic', 'false');
  AUTOCOMPLETE = new AriaValueAttribute('aria-autocomplete', 'none');
  CONTROLS = new AriaValueAttribute('aria-controls', '');
  DESCRIBEDBY = new AriaValueAttribute('aria-describedby', '');
  DROPEFFECT = new AriaValueAttribute('aria-dropeffect', 'none');
  FLOWTO = new AriaValueAttribute('aria-flowto', '');
  HASPOPUP = new PrimitiveValueAttribute('aria-haspopup', 'false');
  LABEL = new PrimitiveValueAttribute('aria-label', '');
  LABELLEDBY = new AriaValueAttribute('aria-labelledby', '');
  LEVEL = new PrimitiveValueAttribute('aria-level', '');
  LIVE = new AriaValueAttribute('aria-live', 'off');
  MULTILINE = new PrimitiveValueAttribute('aria-multiline', 'false');
  MULTISELECTABLE = new PrimitiveValueAttribute('aria-multiselectable', 'false');
  ORIENTATION = new AriaValueAttribute('aria-orientation', 'vertical');
  OWNS = new AriaValueAttribute('aria-owns', '');
  POSINSET = new PrimitiveValueAttribute('aria-posinset', '');
  READONLY = new PrimitiveValueAttribute('aria-readonly', 'false');
  RELEVANT = new AriaValueAttribute('aria-relevant', 'additions text');
  REQUIRED = new PrimitiveValueAttribute('aria-required', 'false');
  SETSIZE = new PrimitiveValueAttribute('aria-setsize', '');
  SORT = new AriaValueAttribute('aria-sort', 'none');
  VALUEMAX = new PrimitiveValueAttribute('aria-valuemax', '');
  VALUEMIN = new PrimitiveValueAttribute('aria-valuemin', '');
  VALUENOW = new PrimitiveValueAttribute('aria-valuenow', '');
  VALUETEXT = new PrimitiveValueAttribute('aria-valuetext', '');
}

var ACTIVEDESCENDANT, ATOMIC, AUTOCOMPLETE, CONTROLS, DESCRIBEDBY, DROPEFFECT, FLOWTO, HASPOPUP, LABEL, LABELLEDBY, LEVEL, LIVE, MULTILINE, MULTISELECTABLE, ORIENTATION, OWNS, POSINSET, READONLY, RELEVANT, REQUIRED, SETSIZE, SORT, VALUEMAX, VALUEMIN, VALUENOW, VALUETEXT;
function $clinit_RadioRoleImpl(){
  $clinit_RadioRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function RadioRoleImpl(roleName){
  $clinit_RadioRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_417();
}

defineClass(937, 32, {1:1}, RadioRoleImpl);
_.$init_417 = function $init_417(){
}
;
_.setAriaSelectedState = function setAriaSelectedState_1(element, value_0){
  ($clinit_State() , SELECTED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_SelectedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 123, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_RadioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'RadioRoleImpl', 937, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_RadiogroupRole(){
  $clinit_RadiogroupRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_RadiogroupRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'RadiogroupRole');
function $clinit_RadiogroupRoleImpl(){
  $clinit_RadiogroupRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function RadiogroupRoleImpl(roleName){
  $clinit_RadiogroupRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_418();
}

defineClass(936, 32, {1:1}, RadiogroupRoleImpl);
_.$init_418 = function $init_418(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_26(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_4(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_26(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_RadiogroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'RadiogroupRoleImpl', 936, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_RegionRoleImpl(){
  $clinit_RegionRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function RegionRoleImpl(roleName){
  $clinit_RegionRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_419();
}

defineClass(938, 32, {1:1}, RegionRoleImpl);
_.$init_419 = function $init_419(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_27(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_27(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_RegionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'RegionRoleImpl', 938, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_Roles(){
  $clinit_Roles = emptyMethod;
  $clinit_Object();
  ALERTDIALOG = new AlertdialogRoleImpl('alertdialog');
  ALERT = new AlertRoleImpl('alert');
  APPLICATION = new ApplicationRoleImpl('application');
  ARTICLE = new ArticleRoleImpl('article');
  BANNER = new BannerRoleImpl('banner');
  BUTTON = new ButtonRoleImpl('button');
  CHECKBOX = new CheckboxRoleImpl('checkbox');
  COLUMNHEADER = new ColumnheaderRoleImpl('columnheader');
  COMBOBOX = new ComboboxRoleImpl('combobox');
  COMPLEMENTARY = new ComplementaryRoleImpl('complementary');
  CONTENTINFO = new ContentinfoRoleImpl('contentinfo');
  DEFINITION = new DefinitionRoleImpl('definition');
  DIALOG = new DialogRoleImpl('dialog');
  DIRECTORY = new DirectoryRoleImpl('directory');
  DOCUMENT = new DocumentRoleImpl('document');
  FORM = new FormRoleImpl('form');
  GRIDCELL = new GridcellRoleImpl('gridcell');
  GRID = new GridRoleImpl('grid');
  GROUP = new GroupRoleImpl('group');
  HEADING = new HeadingRoleImpl('heading');
  IMG = new ImgRoleImpl('img');
  LINK = new LinkRoleImpl('link');
  LISTBOX = new ListboxRoleImpl('listbox');
  LISTITEM = new ListitemRoleImpl('listitem');
  LIST = new ListRoleImpl('list');
  LOG = new LogRoleImpl('log');
  MAIN = new MainRoleImpl('main');
  MARQUEE = new MarqueeRoleImpl('marquee');
  MATH = new MathRoleImpl('math');
  MENUBAR = new MenubarRoleImpl('menubar');
  MENUITEMCHECKBOX = new MenuitemcheckboxRoleImpl('menuitemcheckbox');
  MENUITEMRADIO = new MenuitemradioRoleImpl('menuitemradio');
  MENUITEM = new MenuitemRoleImpl('menuitem');
  MENU = new MenuRoleImpl('menu');
  NAVIGATION = new NavigationRoleImpl('navigation');
  NOTE = new NoteRoleImpl('note');
  OPTION = new OptionRoleImpl('option');
  PRESENTATION = new PresentationRoleImpl('presentation');
  PROGRESSBAR = new ProgressbarRoleImpl('progressbar');
  RADIOGROUP = new RadiogroupRoleImpl('radiogroup');
  RADIO = new RadioRoleImpl('radio');
  REGION = new RegionRoleImpl('region');
  ROWGROUP = new RowgroupRoleImpl('rowgroup');
  ROWHEADER = new RowheaderRoleImpl('rowheader');
  ROW = new RowRoleImpl('row');
  SCROLLBAR = new ScrollbarRoleImpl('scrollbar');
  SEARCH = new SearchRoleImpl('search');
  SEPARATOR = new SeparatorRoleImpl('separator');
  SLIDER = new SliderRoleImpl('slider');
  SPINBUTTON = new SpinbuttonRoleImpl('spinbutton');
  STATUS = new StatusRoleImpl('status');
  TABLIST = new TablistRoleImpl('tablist');
  TABPANEL = new TabpanelRoleImpl('tabpanel');
  TAB = new TabRoleImpl('tab');
  TEXTBOX = new TextboxRoleImpl('textbox');
  TIMER = new TimerRoleImpl('timer');
  TOOLBAR = new ToolbarRoleImpl('toolbar');
  TOOLTIP = new TooltipRoleImpl('tooltip');
  TREEGRID = new TreegridRoleImpl('treegrid');
  TREEITEM = new TreeitemRoleImpl('treeitem');
  TREE = new TreeRoleImpl('tree');
  ROLES_MAP = new HashMap;
  {
    ROLES_MAP.put('region', REGION);
    ROLES_MAP.put('alert', ALERT);
    ROLES_MAP.put('dialog', DIALOG);
    ROLES_MAP.put('alertdialog', ALERTDIALOG);
    ROLES_MAP.put('application', APPLICATION);
    ROLES_MAP.put('document', DOCUMENT);
    ROLES_MAP.put('article', ARTICLE);
    ROLES_MAP.put('banner', BANNER);
    ROLES_MAP.put('button', BUTTON);
    ROLES_MAP.put('checkbox', CHECKBOX);
    ROLES_MAP.put('gridcell', GRIDCELL);
    ROLES_MAP.put('columnheader', COLUMNHEADER);
    ROLES_MAP.put('group', GROUP);
    ROLES_MAP.put('combobox', COMBOBOX);
    ROLES_MAP.put('complementary', COMPLEMENTARY);
    ROLES_MAP.put('contentinfo', CONTENTINFO);
    ROLES_MAP.put('definition', DEFINITION);
    ROLES_MAP.put('list', LIST);
    ROLES_MAP.put('directory', DIRECTORY);
    ROLES_MAP.put('form', FORM);
    ROLES_MAP.put('grid', GRID);
    ROLES_MAP.put('heading', HEADING);
    ROLES_MAP.put('img', IMG);
    ROLES_MAP.put('link', LINK);
    ROLES_MAP.put('listbox', LISTBOX);
    ROLES_MAP.put('listitem', LISTITEM);
    ROLES_MAP.put('log', LOG);
    ROLES_MAP.put('main', MAIN);
    ROLES_MAP.put('marquee', MARQUEE);
    ROLES_MAP.put('math', MATH);
    ROLES_MAP.put('menu', MENU);
    ROLES_MAP.put('menubar', MENUBAR);
    ROLES_MAP.put('menuitem', MENUITEM);
    ROLES_MAP.put('menuitemcheckbox', MENUITEMCHECKBOX);
    ROLES_MAP.put('option', OPTION);
    ROLES_MAP.put('radio', RADIO);
    ROLES_MAP.put('menuitemradio', MENUITEMRADIO);
    ROLES_MAP.put('navigation', NAVIGATION);
    ROLES_MAP.put('note', NOTE);
    ROLES_MAP.put('presentation', PRESENTATION);
    ROLES_MAP.put('progressbar', PROGRESSBAR);
    ROLES_MAP.put('radiogroup', RADIOGROUP);
    ROLES_MAP.put('row', ROW);
    ROLES_MAP.put('rowgroup', ROWGROUP);
    ROLES_MAP.put('rowheader', ROWHEADER);
    ROLES_MAP.put('search', SEARCH);
    ROLES_MAP.put('separator', SEPARATOR);
    ROLES_MAP.put('scrollbar', SCROLLBAR);
    ROLES_MAP.put('slider', SLIDER);
    ROLES_MAP.put('spinbutton', SPINBUTTON);
    ROLES_MAP.put('status', STATUS);
    ROLES_MAP.put('tab', TAB);
    ROLES_MAP.put('tablist', TABLIST);
    ROLES_MAP.put('tabpanel', TABPANEL);
    ROLES_MAP.put('textbox', TEXTBOX);
    ROLES_MAP.put('timer', TIMER);
    ROLES_MAP.put('toolbar', TOOLBAR);
    ROLES_MAP.put('tooltip', TOOLTIP);
    ROLES_MAP.put('tree', TREE);
    ROLES_MAP.put('treegrid', TREEGRID);
    ROLES_MAP.put('treeitem', TREEITEM);
  }
}

function getButtonRole(){
  $clinit_Roles();
  return BUTTON;
}

function getTreeRole(){
  $clinit_Roles();
  return TREE;
}

function getTreeitemRole(){
  $clinit_Roles();
  return TREEITEM;
}

var ALERT, ALERTDIALOG, APPLICATION, ARTICLE, BANNER, BUTTON, CHECKBOX, COLUMNHEADER, COMBOBOX, COMPLEMENTARY, CONTENTINFO, DEFINITION, DIALOG, DIRECTORY, DOCUMENT, FORM, GRID, GRIDCELL, GROUP, HEADING, IMG, LINK, LIST, LISTBOX, LISTITEM, LOG, MAIN, MARQUEE, MATH, MENU, MENUBAR, MENUITEM, MENUITEMCHECKBOX, MENUITEMRADIO, NAVIGATION, NOTE, OPTION, PRESENTATION, PROGRESSBAR, RADIO, RADIOGROUP, REGION, ROLES_MAP, ROW, ROWGROUP, ROWHEADER, SCROLLBAR, SEARCH, SEPARATOR, SLIDER, SPINBUTTON, STATUS, TAB, TABLIST, TABPANEL, TEXTBOX, TIMER, TOOLBAR, TOOLTIP, TREE, TREEGRID, TREEITEM;
function $clinit_RowRole(){
  $clinit_RowRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_RowRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'RowRole');
function $clinit_RowRoleImpl(){
  $clinit_RowRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function RowRoleImpl(roleName){
  $clinit_RowRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_420();
}

defineClass(941, 32, {1:1}, RowRoleImpl);
_.$init_420 = function $init_420(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_28(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_28(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_RowRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'RowRoleImpl', 941, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_RowgroupRole(){
  $clinit_RowgroupRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_RowgroupRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'RowgroupRole');
function $clinit_RowgroupRoleImpl(){
  $clinit_RowgroupRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function RowgroupRoleImpl(roleName){
  $clinit_RowgroupRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_421();
}

defineClass(939, 32, {1:1}, RowgroupRoleImpl);
_.$init_421 = function $init_421(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_29(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_29(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_RowgroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'RowgroupRoleImpl', 939, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_RowheaderRole(){
  $clinit_RowheaderRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_RowheaderRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'RowheaderRole');
function $clinit_RowheaderRoleImpl(){
  $clinit_RowheaderRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function RowheaderRoleImpl(roleName){
  $clinit_RowheaderRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_422();
}

defineClass(940, 32, {1:1}, RowheaderRoleImpl);
_.$init_422 = function $init_422(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_30(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_30(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_RowheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'RowheaderRoleImpl', 940, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ScrollbarRole(){
  $clinit_ScrollbarRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ScrollbarRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ScrollbarRole');
function $clinit_ScrollbarRoleImpl(){
  $clinit_ScrollbarRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ScrollbarRoleImpl(roleName){
  $clinit_ScrollbarRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_423();
}

defineClass(942, 32, {1:1}, ScrollbarRoleImpl);
_.$init_423 = function $init_423(){
}
;
var Lcom_google_gwt_aria_client_ScrollbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ScrollbarRoleImpl', 942, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_SearchRole(){
  $clinit_SearchRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_SearchRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'SearchRole');
function $clinit_SearchRoleImpl(){
  $clinit_SearchRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function SearchRoleImpl(roleName){
  $clinit_SearchRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_424();
}

defineClass(943, 32, {1:1}, SearchRoleImpl);
_.$init_424 = function $init_424(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_31(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_31(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_SearchRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'SearchRoleImpl', 943, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_SelectedValue(){
  $clinit_SelectedValue = emptyMethod;
  $clinit_Enum();
  TRUE_1 = new SelectedValue('TRUE', 0);
  FALSE_1 = new SelectedValue('FALSE', 1);
  UNDEFINED_1 = new SelectedValue('UNDEFINED', 2);
}

function SelectedValue(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_425();
}

function of_2(value_0){
  $clinit_SelectedValue();
  return value_0?TRUE_1:FALSE_1;
}

function valueOf_19(name_0){
  $clinit_SelectedValue();
  return valueOf(($clinit_SelectedValue$Map() , $MAP_18), name_0);
}

function values_20(){
  $clinit_SelectedValue();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_SelectedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 123, 0, [TRUE_1, FALSE_1, UNDEFINED_1]);
}

defineClass(123, 7, {359:1, 123:1, 4:1, 8:1, 7:1, 1:1}, SelectedValue);
_.$init_425 = function $init_425(){
}
;
_.getAriaValue = function getAriaValue_3(){
  switch (this.ordinal_0()) {
    case TRUE_1.ordinal_0():
      return 'true';
    case FALSE_1.ordinal_0():
      return 'false';
    case UNDEFINED_1.ordinal_0():
      return 'undefined';
  }
  return null;
}
;
var FALSE_1, TRUE_1, UNDEFINED_1;
var Lcom_google_gwt_aria_client_SelectedValue_2_classLit = createForEnum('com.google.gwt.aria.client', 'SelectedValue', 123, Ljava_lang_Enum_2_classLit, values_20, valueOf_19);
function $clinit_SelectedValue$Map(){
  $clinit_SelectedValue$Map = emptyMethod;
  $MAP_18 = createValueOfMap(values_20());
}

var $MAP_18;
function $clinit_SeparatorRole(){
  $clinit_SeparatorRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_SeparatorRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'SeparatorRole');
function $clinit_SeparatorRoleImpl(){
  $clinit_SeparatorRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function SeparatorRoleImpl(roleName){
  $clinit_SeparatorRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_426();
}

defineClass(944, 32, {1:1}, SeparatorRoleImpl);
_.$init_426 = function $init_426(){
}
;
var Lcom_google_gwt_aria_client_SeparatorRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'SeparatorRoleImpl', 944, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_SliderRole(){
  $clinit_SliderRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_SliderRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'SliderRole');
function $clinit_SliderRoleImpl(){
  $clinit_SliderRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function SliderRoleImpl(roleName){
  $clinit_SliderRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_427();
}

defineClass(945, 32, {1:1}, SliderRoleImpl);
_.$init_427 = function $init_427(){
}
;
var Lcom_google_gwt_aria_client_SliderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'SliderRoleImpl', 945, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_SpinbuttonRole(){
  $clinit_SpinbuttonRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_SpinbuttonRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'SpinbuttonRole');
function $clinit_SpinbuttonRoleImpl(){
  $clinit_SpinbuttonRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function SpinbuttonRoleImpl(roleName){
  $clinit_SpinbuttonRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_428();
}

defineClass(946, 32, {1:1}, SpinbuttonRoleImpl);
_.$init_428 = function $init_428(){
}
;
var Lcom_google_gwt_aria_client_SpinbuttonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'SpinbuttonRoleImpl', 946, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_State(){
  $clinit_State = emptyMethod;
  $clinit_Object();
  BUSY = new PrimitiveValueAttribute('aria-busy', 'false');
  CHECKED = new AriaValueAttribute('aria-checked', 'undefined');
  DISABLED = new PrimitiveValueAttribute('aria-disabled', 'false');
  EXPANDED = new AriaValueAttribute('aria-expanded', 'undefined');
  GRABBED = new AriaValueAttribute('aria-grabbed', 'undefined');
  HIDDEN = new PrimitiveValueAttribute('aria-hidden', 'false');
  INVALID = new AriaValueAttribute('aria-invalid', 'false');
  PRESSED = new AriaValueAttribute('aria-pressed', 'undefined');
  SELECTED = new AriaValueAttribute('aria-selected', 'undefined');
}

var BUSY, CHECKED, DISABLED, EXPANDED, GRABBED, HIDDEN, INVALID, PRESSED, SELECTED;
function $clinit_StatusRole(){
  $clinit_StatusRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_StatusRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'StatusRole');
function $clinit_StatusRoleImpl(){
  $clinit_StatusRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function StatusRoleImpl(roleName){
  $clinit_StatusRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_429();
}

defineClass(947, 32, {1:1}, StatusRoleImpl);
_.$init_429 = function $init_429(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_32(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_32(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_StatusRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'StatusRoleImpl', 947, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TabRole(){
  $clinit_TabRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TabRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TabRole');
function $clinit_TabRoleImpl(){
  $clinit_TabRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TabRoleImpl(roleName){
  $clinit_TabRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_430();
}

defineClass(950, 32, {1:1}, TabRoleImpl);
_.$init_430 = function $init_430(){
}
;
var Lcom_google_gwt_aria_client_TabRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TabRoleImpl', 950, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TablistRole(){
  $clinit_TablistRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TablistRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TablistRole');
function $clinit_TablistRoleImpl(){
  $clinit_TablistRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TablistRoleImpl(roleName){
  $clinit_TablistRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_431();
}

defineClass(948, 32, {1:1}, TablistRoleImpl);
_.$init_431 = function $init_431(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_33(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_5(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_33(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_TablistRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TablistRoleImpl', 948, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TabpanelRole(){
  $clinit_TabpanelRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TabpanelRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TabpanelRole');
function $clinit_TabpanelRoleImpl(){
  $clinit_TabpanelRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TabpanelRoleImpl(roleName){
  $clinit_TabpanelRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_432();
}

defineClass(949, 32, {1:1}, TabpanelRoleImpl);
_.$init_432 = function $init_432(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_34(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_34(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_TabpanelRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TabpanelRoleImpl', 949, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TextboxRole(){
  $clinit_TextboxRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TextboxRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TextboxRole');
function $clinit_TextboxRoleImpl(){
  $clinit_TextboxRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TextboxRoleImpl(roleName){
  $clinit_TextboxRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_433();
}

defineClass(951, 32, {1:1}, TextboxRoleImpl);
_.$init_433 = function $init_433(){
}
;
var Lcom_google_gwt_aria_client_TextboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TextboxRoleImpl', 951, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TimerRole(){
  $clinit_TimerRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TimerRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TimerRole');
function $clinit_TimerRoleImpl(){
  $clinit_TimerRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TimerRoleImpl(roleName){
  $clinit_TimerRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_434();
}

defineClass(952, 32, {1:1}, TimerRoleImpl);
_.$init_434 = function $init_434(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_35(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_35(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_TimerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TimerRoleImpl', 952, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_ToolbarRole(){
  $clinit_ToolbarRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_ToolbarRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'ToolbarRole');
function $clinit_ToolbarRoleImpl(){
  $clinit_ToolbarRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function ToolbarRoleImpl(roleName){
  $clinit_ToolbarRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_435();
}

defineClass(953, 32, {1:1}, ToolbarRoleImpl);
_.$init_435 = function $init_435(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_36(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_36(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_ToolbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'ToolbarRoleImpl', 953, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TooltipRole(){
  $clinit_TooltipRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TooltipRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TooltipRole');
function $clinit_TooltipRoleImpl(){
  $clinit_TooltipRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TooltipRoleImpl(roleName){
  $clinit_TooltipRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_436();
}

defineClass(954, 32, {1:1}, TooltipRoleImpl);
_.$init_436 = function $init_436(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_37(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_37(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_TooltipRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TooltipRoleImpl', 954, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TreeRole(){
  $clinit_TreeRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TreeRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TreeRole');
function $clinit_TreeRoleImpl(){
  $clinit_TreeRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TreeRoleImpl(roleName){
  $clinit_TreeRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_437();
}

defineClass(957, 32, {1:1}, TreeRoleImpl);
_.$init_437 = function $init_437(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_38(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_6(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_38(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_TreeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TreeRoleImpl', 957, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TreegridRole(){
  $clinit_TreegridRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TreegridRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TreegridRole');
function $clinit_TreegridRoleImpl(){
  $clinit_TreegridRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TreegridRoleImpl(roleName){
  $clinit_TreegridRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_438();
}

defineClass(955, 32, {1:1}, TreegridRoleImpl);
_.$init_438 = function $init_438(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_39(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_7(element, value_0){
  ($clinit_Property() , ACTIVEDESCENDANT).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_Id_2_classLit, 1), {4:1, 1:1, 5:1}, 106, 0, [value_0]));
}
;
_.setAriaExpandedState = function setAriaExpandedState_39(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
var Lcom_google_gwt_aria_client_TreegridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TreegridRoleImpl', 955, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_TreeitemRole(){
  $clinit_TreeitemRole = emptyMethod;
}

var Lcom_google_gwt_aria_client_TreeitemRole_2_classLit = createForInterface('com.google.gwt.aria.client', 'TreeitemRole');
function $clinit_TreeitemRoleImpl(){
  $clinit_TreeitemRoleImpl = emptyMethod;
  $clinit_RoleImpl();
}

function TreeitemRoleImpl(roleName){
  $clinit_TreeitemRoleImpl();
  RoleImpl.call(this, roleName);
  this.$init_439();
}

defineClass(956, 32, {1:1}, TreeitemRoleImpl);
_.$init_439 = function $init_439(){
}
;
_.removeAriaExpandedState = function removeAriaExpandedState_40(element){
  ($clinit_State() , EXPANDED).remove_6(element);
}
;
_.setAriaExpandedState = function setAriaExpandedState_40(element, value_0){
  ($clinit_State() , EXPANDED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_ExpandedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 36, 0, [value_0]));
}
;
_.setAriaLevelProperty = function setAriaLevelProperty_0(element, value_0){
  ($clinit_Property() , LEVEL).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), {4:1, 1:1, 5:1}, 28, 0, [valueOf_37(value_0)]));
}
;
_.setAriaPosinsetProperty = function setAriaPosinsetProperty_0(element, value_0){
  ($clinit_Property() , POSINSET).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), {4:1, 1:1, 5:1}, 28, 0, [valueOf_37(value_0)]));
}
;
_.setAriaSelectedState = function setAriaSelectedState_2(element, value_0){
  ($clinit_State() , SELECTED).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_aria_client_SelectedValue_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 123, 0, [value_0]));
}
;
_.setAriaSetsizeProperty = function setAriaSetsizeProperty_0(element, value_0){
  ($clinit_Property() , SETSIZE).set_4(element, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), {4:1, 1:1, 5:1}, 28, 0, [valueOf_37(value_0)]));
}
;
var Lcom_google_gwt_aria_client_TreeitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client', 'TreeitemRoleImpl', 956, Lcom_google_gwt_aria_client_RoleImpl_2_classLit);
function $clinit_HasEnabled(){
  $clinit_HasEnabled = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasEnabled_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasEnabled');
function $clinit_FocusWidget(){
  $clinit_FocusWidget = emptyMethod;
  $clinit_Widget();
  impl_3 = getFocusImplForWidget();
}

function FocusWidget(){
  $clinit_FocusWidget();
  Widget.call(this);
  this.$init_440();
}

function FocusWidget_0(elem){
  $clinit_FocusWidget();
  Widget.call(this);
  this.$init_440();
  this.setElement(elem);
}

defineClass(208, 11, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1});
_.$init_440 = function $init_440(){
}
;
_.addBlurHandler = function addBlurHandler(handler){
  return this.addDomHandler(handler, getType_34());
}
;
_.addClickHandler = function addClickHandler_0(handler){
  return this.addDomHandler(handler, getType_36());
}
;
_.addKeyDownHandler = function addKeyDownHandler(handler){
  return this.addDomHandler(handler, getType_37());
}
;
_.addKeyUpHandler = function addKeyUpHandler_1(handler){
  return this.addDomHandler(handler, getType_38());
}
;
_.addMouseUpHandler = function addMouseUpHandler_1(handler){
  return this.addDomHandler(handler, getType_44());
}
;
_.addMouseWheelHandler = function addMouseWheelHandler(handler){
  return this.addDomHandler(handler, getType_45());
}
;
_.getTabIndex = function getTabIndex(){
  return impl_3.getTabIndex_0(this.getElement());
}
;
_.isEnabled = function isEnabled(){
  return !$getPropertyBoolean(this.getElement(), 'disabled');
}
;
_.onAttach = function onAttach_1(){
  var tabIndex;
  getClassPrototype(11).onAttach.call(this);
  tabIndex = this.getTabIndex();
  if (-1 == tabIndex) {
    this.setTabIndex(0);
  }
}
;
_.setEnabled = function setEnabled_1(enabled){
  $setPropertyBoolean(this.getElement(), 'disabled', !enabled);
}
;
_.setFocus = function setFocus_1(focused){
  if (focused) {
    impl_3.focus_0(this.getElement());
  }
   else {
    impl_3.blur_1(this.getElement());
  }
}
;
_.setTabIndex = function setTabIndex(index_0){
  impl_3.setTabIndex_0(this.getElement(), index_0);
}
;
var impl_3;
var Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui', 'FocusWidget', 208, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $clinit_Canvas(){
  $clinit_Canvas = emptyMethod;
  $clinit_FocusWidget();
}

function Canvas_0(element){
  FocusWidget.call(this);
  this.$init_441();
  this.setElement(element);
}

function createIfSupported(){
  $clinit_Canvas();
  var element;
  if (isNull(detector)) {
    detector = castTo(new Canvas$CanvasElementSupportDetectedMaybe, 337);
  }
  if (!detector.isSupportedCompileTime()) {
    return null;
  }
  element = $createCanvasElement(get_2654());
  if (!(detector , isSupportedRunTime(element))) {
    return null;
  }
  return new Canvas_0(element);
}

defineClass(756, 208, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, Canvas_0);
_.$init_441 = function $init_441(){
}
;
_.getCanvasElement = function getCanvasElement(){
  return $cast(this.getElement());
}
;
_.getContext2d = function getContext2d(){
  return $getContext2d(this.getCanvasElement());
}
;
_.setCoordinateSpaceHeight = function setCoordinateSpaceHeight(height){
  $setHeight(this.getCanvasElement(), height);
}
;
_.setCoordinateSpaceWidth = function setCoordinateSpaceWidth(width_0){
  $setWidth(this.getCanvasElement(), width_0);
}
;
var detector;
var Lcom_google_gwt_canvas_client_Canvas_2_classLit = createForClass('com.google.gwt.canvas.client', 'Canvas', 756, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit);
function $clinit_Canvas$CanvasElementSupportDetector(){
  $clinit_Canvas$CanvasElementSupportDetector = emptyMethod;
  $clinit_Object();
}

function Canvas$CanvasElementSupportDetector(){
  $clinit_Canvas$CanvasElementSupportDetector();
  Object_0.call(this);
  this.$init_442();
}

function isSupportedRunTime(element){
  $clinit_Canvas$CanvasElementSupportDetector();
  return !!element.getContext;
}

defineClass(337, 1, {1:1});
_.$init_442 = function $init_442(){
}
;
_.isSupportedCompileTime = function isSupportedCompileTime(){
  return false;
}
;
var Lcom_google_gwt_canvas_client_Canvas$CanvasElementSupportDetector_2_classLit = createForClass('com.google.gwt.canvas.client', 'Canvas/CanvasElementSupportDetector', 337, Ljava_lang_Object_2_classLit);
function $clinit_Canvas$CanvasElementSupportDetectedMaybe(){
  $clinit_Canvas$CanvasElementSupportDetectedMaybe = emptyMethod;
  $clinit_Canvas$CanvasElementSupportDetector();
}

function Canvas$CanvasElementSupportDetectedMaybe(){
  $clinit_Canvas$CanvasElementSupportDetectedMaybe();
  Canvas$CanvasElementSupportDetector.call(this);
  this.$init_443();
}

defineClass(757, 337, {337:1, 1:1}, Canvas$CanvasElementSupportDetectedMaybe);
_.$init_443 = function $init_443(){
}
;
_.isSupportedCompileTime = function isSupportedCompileTime_0(){
  return true;
}
;
var Lcom_google_gwt_canvas_client_Canvas$CanvasElementSupportDetectedMaybe_2_classLit = createForClass('com.google.gwt.canvas.client', 'Canvas/CanvasElementSupportDetectedMaybe', 757, Lcom_google_gwt_canvas_client_Canvas$CanvasElementSupportDetector_2_classLit);
function $clinit_Context(){
  $clinit_Context = emptyMethod;
}

var Lcom_google_gwt_canvas_dom_client_Context_2_classLit = createForInterface('com.google.gwt.canvas.dom.client', 'Context');
function $clinit_Context2d(){
  $clinit_Context2d = emptyMethod;
  $clinit_JavaScriptObject();
}

function $clearRect(this$static, x_0, y_0, w, h){
  $clinit_Context2d();
  this$static.clearRect(x_0, y_0, w, h);
}

function $drawImage(this$static, image, dx, dy, dw, dh){
  $clinit_Context2d();
  this$static.drawImage(image, dx, dy, dw, dh);
}

function $clinit_Callback(){
  $clinit_Callback = emptyMethod;
}

var Lcom_google_gwt_core_client_Callback_2_classLit = createForInterface('com.google.gwt.core.client', 'Callback');
function $clinit_RuntimeException(){
  $clinit_RuntimeException = emptyMethod;
  $clinit_Exception();
}

function RuntimeException(){
  $clinit_RuntimeException();
  Exception.call(this);
  this.$init_444();
}

function RuntimeException_0(backingJsObject){
  $clinit_RuntimeException();
  Exception_0.call(this, backingJsObject);
  this.$init_444();
}

function RuntimeException_1(message){
  $clinit_RuntimeException();
  Exception_1.call(this, message);
  this.$init_444();
}

function RuntimeException_2(message, cause){
  $clinit_RuntimeException();
  Exception_2.call(this, message, cause);
  this.$init_444();
}

defineClass(27, 25, {4:1, 25:1, 1:1, 27:1, 24:1}, RuntimeException_1);
_.$init_444 = function $init_444(){
}
;
var Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang', 'RuntimeException', 27, Ljava_lang_Exception_2_classLit);
function $clinit_CodeDownloadException(){
  $clinit_CodeDownloadException = emptyMethod;
  $clinit_RuntimeException();
}

function CodeDownloadException(message){
  $clinit_CodeDownloadException();
  RuntimeException_1.call(this, message);
  this.$init_445();
  this.reason = ($clinit_CodeDownloadException$Reason() , TERMINATED);
}

defineClass(1812, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, CodeDownloadException);
_.$init_445 = function $init_445(){
}
;
var Lcom_google_gwt_core_client_CodeDownloadException_2_classLit = createForClass('com.google.gwt.core.client', 'CodeDownloadException', 1812, Ljava_lang_RuntimeException_2_classLit);
function $clinit_CodeDownloadException$Reason(){
  $clinit_CodeDownloadException$Reason = emptyMethod;
  $clinit_Enum();
  TERMINATED = new CodeDownloadException$Reason('TERMINATED', 0);
}

function CodeDownloadException$Reason(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_446();
}

function valueOf_20(name_0){
  $clinit_CodeDownloadException$Reason();
  return valueOf(($clinit_CodeDownloadException$Reason$Map() , $MAP_19), name_0);
}

function values_21(){
  $clinit_CodeDownloadException$Reason();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_core_client_CodeDownloadException$Reason_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 355, 0, [TERMINATED]);
}

defineClass(355, 7, {355:1, 4:1, 8:1, 7:1, 1:1}, CodeDownloadException$Reason);
_.$init_446 = function $init_446(){
}
;
var TERMINATED;
var Lcom_google_gwt_core_client_CodeDownloadException$Reason_2_classLit = createForEnum('com.google.gwt.core.client', 'CodeDownloadException/Reason', 355, Ljava_lang_Enum_2_classLit, values_21, valueOf_20);
function $clinit_CodeDownloadException$Reason$Map(){
  $clinit_CodeDownloadException$Reason$Map = emptyMethod;
  $MAP_19 = createValueOfMap(values_21());
}

var $MAP_19;
function $clinit_Duration(){
  $clinit_Duration = emptyMethod;
  $clinit_Object();
}

function Duration(){
  $clinit_Duration();
  Object_0.call(this);
  this.$init_447();
}

function currentTimeMillis_1(){
  $clinit_Duration();
  return now_1();
}

function uncheckedConversion(elapsed){
  return elapsed;
}

defineClass(335, 1, {1:1}, Duration);
_.$init_447 = function $init_447(){
  this.start_0 = currentTimeMillis_1();
}
;
_.elapsedMillis_0 = function elapsedMillis_0(){
  return uncheckedConversion(currentTimeMillis_1() - this.start_0);
}
;
_.getStartMillis = function getStartMillis(){
  return this.start_0;
}
;
_.start_0 = 0;
var Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client', 'Duration', 335, Ljava_lang_Object_2_classLit);
function $clinit_GWT(){
  $clinit_GWT = emptyMethod;
  $clinit_Object();
}

function getModuleBaseForStaticFiles(){
  $clinit_GWT();
  return getModuleBaseURLForStaticFiles();
}

function getModuleBaseURL(){
  $clinit_GWT();
  return getModuleBaseURL_0();
}

function getModuleName(){
  $clinit_GWT();
  return getModuleName_0();
}

function getPermutationStrongName(){
  $clinit_GWT();
  if (isScript()) {
    return getPermutationStrongName_0();
  }
   else {
    return 'HostedMode';
  }
}

function getUncaughtExceptionHandler(){
  $clinit_GWT();
  return uncaughtExceptionHandler;
}

function isClient(){
  $clinit_GWT();
  return true;
}

function isProdMode(){
  $clinit_GWT();
  return true;
}

function isScript(){
  $clinit_GWT();
  return true;
}

function log_0(message){
  $clinit_GWT();
  log_2(message);
}

function log_1(message, e){
  $clinit_GWT();
  log_3(message, e);
}

function reportUncaughtException(e){
  $clinit_GWT();
  reportUncaughtException_0(e);
}

var uncaughtExceptionHandler = null;
function $clinit_JsException(){
  $clinit_JsException = emptyMethod;
  $clinit_RuntimeException();
}

function JsException(){
  $clinit_JsException();
  RuntimeException.call(this);
  this.$init_448();
}

function JsException_0(backingJsObject){
  $clinit_JsException();
  RuntimeException_0.call(this, backingJsObject);
  this.$init_448();
  this.backingJsObject = backingJsObject;
}

function JsException_1(msg){
  $clinit_JsException();
  RuntimeException_1.call(this, msg);
  this.$init_448();
}

defineClass(316, 27, {4:1, 25:1, 1:1, 27:1, 24:1});
_.$init_448 = function $init_448(){
  this.backingJsObject = UNINITIALIZED_0;
}
;
var UNINITIALIZED_0 = '__noinit__';
var Ljava_lang_JsException_2_classLit = createForClass('java.lang', 'JsException', 316, Ljava_lang_RuntimeException_2_classLit);
function $clinit_JavaScriptExceptionBase(){
  $clinit_JavaScriptExceptionBase = emptyMethod;
  $clinit_JsException();
}

function JavaScriptExceptionBase(e){
  $clinit_JavaScriptExceptionBase();
  JsException_0.call(this, e);
  this.$init_449();
}

defineClass(552, 316, {4:1, 25:1, 1:1, 27:1, 24:1});
_.$init_449 = function $init_449(){
}
;
var Lcom_google_gwt_core_client_impl_JavaScriptExceptionBase_2_classLit = createForClass('com.google.gwt.core.client.impl', 'JavaScriptExceptionBase', 552, Ljava_lang_JsException_2_classLit);
function $clinit_JavaScriptException(){
  $clinit_JavaScriptException = emptyMethod;
  $clinit_JavaScriptExceptionBase();
  NOT_SET = new Object_0;
}

function JavaScriptException(e){
  $clinit_JavaScriptException();
  JavaScriptException_0.call(this, e, '');
}

function JavaScriptException_0(e, description){
  JavaScriptExceptionBase.call(this, e);
  this.$init_450();
  this.e = e;
  this.description_0 = description;
}

function getExceptionDescription(e){
  if (instanceOfJso(e)) {
    return getExceptionDescription0(castToJso(e));
  }
   else {
    return e + '';
  }
}

function getExceptionDescription0(e){
  return e == null?null:e.message;
}

function getExceptionName(e){
  if (jsEquals(e, null)) {
    return 'null';
  }
   else if (instanceOfJso(e)) {
    return getExceptionName0(castToJso(e));
  }
   else if (instanceOfString(e)) {
    return 'String';
  }
   else {
    return getClass__Ljava_lang_Class___devirtual$(e).getName();
  }
}

function getExceptionName0(e){
  return e == null?null:e.name;
}

defineClass(175, 552, {175:1, 4:1, 25:1, 1:1, 27:1, 24:1}, JavaScriptException);
_.$init_450 = function $init_450(){
  this.description_0 = '';
}
;
_.ensureInit = function ensureInit(){
  var exception;
  if (jsEquals(this.message_0, null)) {
    exception = this.getThrown();
    this.name_0 = getExceptionName(exception);
    this.description_0 = this.description_0 + ': ' + getExceptionDescription(exception);
    this.message_0 = '(' + this.name_0 + ') ' + this.description_0;
  }
}
;
_.getMessage = function getMessage_5(){
  this.ensureInit();
  return this.message_0;
}
;
_.getThrown = function getThrown(){
  return maskUndefined(this.e) === maskUndefined(NOT_SET)?null:this.e;
}
;
var NOT_SET;
var Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client', 'JavaScriptException', 175, Lcom_google_gwt_core_client_impl_JavaScriptExceptionBase_2_classLit);
function $clinit_JsArray(){
  $clinit_JsArray = emptyMethod;
  $clinit_JavaScriptObject();
}

function $get(this$static, index_0){
  $clinit_JsArray();
  return this$static[index_0];
}

function $length(this$static){
  $clinit_JsArray();
  return this$static.length;
}

function $push(this$static, value_0){
  $clinit_JsArray();
  this$static[this$static.length] = value_0;
}

function $set(this$static, index_0, value_0){
  $clinit_JsArray();
  this$static[index_0] = value_0;
}

function $clinit_JsArrayString(){
  $clinit_JsArrayString = emptyMethod;
  $clinit_JavaScriptObject();
}

function $get_0(this$static, index_0){
  $clinit_JsArrayString();
  return this$static[index_0];
}

function $length_0(this$static){
  $clinit_JsArrayString();
  return this$static.length;
}

function $clinit_JsDate(){
  $clinit_JsDate = emptyMethod;
  $clinit_JavaScriptObject();
}

function now_1(){
  $clinit_JsDate();
  if (Date.now) {
    return Date.now();
  }
  return (new Date).getTime();
}

function $clinit_JsonUtils(){
  $clinit_JsonUtils = emptyMethod;
  $clinit_Object();
}

function safeEval(json){
  $clinit_JsonUtils();
  try {
    return JSON.parse(json);
  }
   catch (e) {
    return throwIllegalArgumentException('Error parsing JSON: ' + e, json);
  }
}

function throwIllegalArgumentException(message, data_0){
  throw toJs(new IllegalArgumentException_0(message + '\n' + data_0));
}

function $clinit_Scheduler(){
  $clinit_Scheduler = emptyMethod;
  $clinit_Object();
}

function Scheduler(){
  $clinit_Scheduler();
  Object_0.call(this);
  this.$init_451();
}

function get_2653(){
  $clinit_Scheduler();
  return $clinit_SchedulerImpl() , INSTANCE_1;
}

defineClass(496, 1, {1:1});
_.$init_451 = function $init_451(){
}
;
var Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client', 'Scheduler', 496, Ljava_lang_Object_2_classLit);
function $clinit_Scheduler$RepeatingCommand(){
  $clinit_Scheduler$RepeatingCommand = emptyMethod;
}

var Lcom_google_gwt_core_client_Scheduler$RepeatingCommand_2_classLit = createForInterface('com.google.gwt.core.client', 'Scheduler/RepeatingCommand');
function $clinit_ScriptInjector(){
  $clinit_ScriptInjector = emptyMethod;
  $clinit_Object();
  TOP_WINDOW = nativeTopWindow();
}

function attachListeners(scriptElement, callback, removeTag){
  $clinit_ScriptInjector();
  function clearCallbacks(){
    scriptElement.onerror = scriptElement.onreadystatechange = scriptElement.onload = null;
    if (removeTag) {
      nativeRemove(scriptElement);
    }
  }

  scriptElement.onload = $entry(function(){
    clearCallbacks();
    if (callback) {
      callback.onSuccess(null);
    }
  }
  );
  scriptElement.onerror = $entry(function(){
    clearCallbacks();
    if (callback) {
      var ex = new CodeDownloadException('onerror() called.');
      callback.onFailure_0(ex);
    }
  }
  );
  scriptElement.onreadystatechange = $entry(function(){
    if (/loaded|complete/.test(scriptElement.readyState)) {
      scriptElement.onload();
    }
  }
  );
}

function fromUrl(scriptUrl){
  $clinit_ScriptInjector();
  return new ScriptInjector$FromUrl(scriptUrl);
}

function nativeAttachToHead(doc, scriptElement){
  $clinit_ScriptInjector();
  (doc.head || doc.getElementsByTagName('head')[0]).appendChild(scriptElement);
}

function nativeDefaultWindow(){
  $clinit_ScriptInjector();
  return window;
}

function nativeGetDocument(wnd){
  $clinit_ScriptInjector();
  return wnd.document;
}

function nativeMakeScriptElement(doc){
  $clinit_ScriptInjector();
  return doc.createElement('script');
}

function nativePropagateScriptNonceIfPossible(doc, element){
  $clinit_ScriptInjector();
  if (doc.querySelector && doc.querySelector('script[nonce]')) {
    var firstNoncedScript = doc.querySelector('script[nonce]');
    var nonce = firstNoncedScript['nonce'] || firstNoncedScript.getAttribute('nonce');
    element.setAttribute('nonce', nonce);
  }
}

function nativeRemove(scriptElement){
  scriptElement.parentNode.removeChild(scriptElement);
}

function nativeSetSrc(element, url_0){
  $clinit_ScriptInjector();
  element.src = url_0;
}

function nativeTopWindow(){
  return $wnd;
}

var TOP_WINDOW;
function $clinit_ScriptInjector$FromUrl(){
  $clinit_ScriptInjector$FromUrl = emptyMethod;
  $clinit_Object();
}

function ScriptInjector$FromUrl(scriptUrl){
  $clinit_ScriptInjector$FromUrl();
  Object_0.call(this);
  this.$init_452();
  this.scriptUrl = scriptUrl;
}

defineClass(980, 1, {1:1}, ScriptInjector$FromUrl);
_.$init_452 = function $init_452(){
  this.removeTag = false;
}
;
_.inject = function inject(){
  var doc, scriptElement, wnd;
  wnd = isNull(this.window_0)?nativeDefaultWindow():this.window_0;
  if (!isNotNull(wnd)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  doc = nativeGetDocument(wnd);
  if (!isNotNull(doc)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  scriptElement = nativeMakeScriptElement(doc);
  if (!isNotNull(scriptElement)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (isNotNull(this.callback) || this.removeTag) {
    attachListeners(scriptElement, this.callback, this.removeTag);
  }
  nativeSetSrc(scriptElement, this.scriptUrl);
  nativePropagateScriptNonceIfPossible(doc, scriptElement);
  nativeAttachToHead(doc, scriptElement);
  return scriptElement;
}
;
_.setCallback = function setCallback(callback){
  this.callback = callback;
  return this;
}
;
_.setRemoveTag = function setRemoveTag(removeTag){
  this.removeTag = removeTag;
  return this;
}
;
_.removeTag = false;
var Lcom_google_gwt_core_client_ScriptInjector$FromUrl_2_classLit = createForClass('com.google.gwt.core.client', 'ScriptInjector/FromUrl', 980, Ljava_lang_Object_2_classLit);
function $clinit_AsyncFragmentLoader(){
  $clinit_AsyncFragmentLoader = emptyMethod;
  $clinit_Object();
  BROWSER_LOADER = makeBrowserLoader(3, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, []));
}

function AsyncFragmentLoader(numEntries, initialLoadSequence, loadingStrategy, logger, executor){
  var numEntriesPlusOne;
  Object_0.call(this);
  this.$init_453();
  this.numEntries = numEntries;
  this.initialLoadSequence = initialLoadSequence;
  this.loadingStrategy = loadingStrategy;
  this.logger = logger;
  this.onSuccessExecutor = executor;
  numEntriesPlusOne = numEntries + 1;
  this.allCallbacks = initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 5, numEntriesPlusOne, 3, 2);
  this.requestedExclusives = new AsyncFragmentLoader$BoundedIntQueue(numEntriesPlusOne);
  this.isLoaded = initUnidimensionalArray(Z_classLit, {4:1, 1:1}, 29, numEntriesPlusOne, 16, 1);
  this.pendingDownloadErrorHandlers = initUnidimensionalArray(Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$LoadTerminatedHandler_2_classLit, {4:1, 1:1, 5:1}, 368, numEntriesPlusOne, 0, 1);
}

function makeBrowserLoader(numFragments, initialLoad){
  if (isClient()) {
    return new AsyncFragmentLoader(numFragments, initialLoad, castTo(castTo(new ScriptTagLoadingStrategy, 366), 366), castTo(castTo(new AsyncFragmentLoader$StandardLogger, 537), 537), castTo(castTo(new OnSuccessExecutor, 261), 261));
  }
   else {
    return null;
  }
}

function onLoad_7(fragment){
  $clinit_AsyncFragmentLoader();
  BROWSER_LOADER.onLoadImpl(fragment);
}

function runAsync(fragment, callback){
  $clinit_AsyncFragmentLoader();
  BROWSER_LOADER.runAsyncImpl(fragment, callback);
}

defineClass(538, 1, {1:1}, AsyncFragmentLoader);
_.$init_453 = function $init_453(){
  this.fragmentLoading = -1;
  this.prefetching = false;
  this.prefetchQueue = null;
  this.remainingInitialFragments = null;
}
;
_.anyPrefetchesRequested = function anyPrefetchesRequested(){
  return this.prefetching && isNotNull(this.prefetchQueue) && this.prefetchQueue.size_1() > 0;
}
;
_.clearRequestsAlreadyLoaded = function clearRequestsAlreadyLoaded(){
  var offset;
  while (this.requestedExclusives.size_1() > 0 && this.isLoaded[this.requestedExclusives.peek()]) {
    offset = this.requestedExclusives.remove_7();
    if (offset < this.pendingDownloadErrorHandlers.length) {
      setCheck(this.pendingDownloadErrorHandlers, offset, null);
    }
  }
  if (isNotNull(this.prefetchQueue)) {
    while (this.prefetchQueue.size_1() > 0 && this.isLoaded[this.prefetchQueue.peek()]) {
      this.prefetchQueue.remove_7();
    }
  }
}
;
_.downloadGroup = function downloadGroup(fragment){
  return fragment == this.leftoversFragment()?'leftoversDownload':downloadGroupForExclusive(fragment);
}
;
_.executeOnSuccess0 = function executeOnSuccess0(callback){
  callback.onSuccess_2();
}
;
_.fragmentHasLoaded = function fragmentHasLoaded(fragment){
  this.logFragmentLoaded(fragment);
  if (fragment < this.pendingDownloadErrorHandlers.length) {
    setCheck(this.pendingDownloadErrorHandlers, fragment, null);
  }
  if (this.isInitial(fragment) && isNotNull(this.remainingInitialFragments)) {
    if (!(fragment == this.remainingInitialFragments.peek())) {
      debugger;
      throw toJs(makeAssertionError());
    }
    this.remainingInitialFragments.remove_7();
  }
  if (!(fragment == this.fragmentLoading)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.fragmentLoading = -1;
  if (!!this.isLoaded[fragment]) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.isLoaded[fragment] = true;
  this.startLoadingNextFragment();
}
;
_.haveInitialFragmentsLoaded = function haveInitialFragmentsLoaded(){
  return isNotNull(this.remainingInitialFragments) && this.remainingInitialFragments.size_1() == 0;
}
;
_.initializeRemainingInitialFragments = function initializeRemainingInitialFragments(){
  var sp, sp$array, sp$index, sp$max;
  if (isNull(this.remainingInitialFragments)) {
    this.remainingInitialFragments = new AsyncFragmentLoader$BoundedIntQueue(this.initialLoadSequence.length + 1);
    for (sp$array = this.initialLoadSequence , sp$index = 0 , sp$max = sp$array.length; sp$index < sp$max; ++sp$index) {
      sp = sp$array[sp$index];
      this.remainingInitialFragments.add_9(sp);
    }
    this.remainingInitialFragments.add_9(this.leftoversFragment());
  }
}
;
_.inject_0 = function inject_0(splitPoint, loadErrorHandler){
  setCheck(this.pendingDownloadErrorHandlers, splitPoint, loadErrorHandler);
  if (!this.isInitial(splitPoint)) {
    this.requestedExclusives.add_9(splitPoint);
  }
  this.startLoadingNextFragment();
}
;
_.isEmpty_0 = function isEmpty_5(array){
  var i;
  for (i = 0; i < array.length; i++) {
    if (jsNotEquals(array[i], null)) {
      return false;
    }
  }
  return true;
}
;
_.isInitial = function isInitial(splitPoint){
  var sp, sp$array, sp$index, sp$max;
  if (splitPoint == this.leftoversFragment()) {
    return true;
  }
  for (sp$array = this.initialLoadSequence , sp$index = 0 , sp$max = sp$array.length; sp$index < sp$max; ++sp$index) {
    sp = sp$array[sp$index];
    if (sp == splitPoint) {
      return true;
    }
  }
  return false;
}
;
_.isLoading_0 = function isLoading_0(splitPoint){
  return isNotNull(this.pendingDownloadErrorHandlers[splitPoint]);
}
;
_.leftoversFragment = function leftoversFragment(){
  return this.numEntries;
}
;
_.logDownloadStart = function logDownloadStart(fragment){
  this.logEventProgress_0(this.downloadGroup(fragment), 'begin', fragment, -1);
}
;
_.logEventProgress = function logEventProgress(eventGroup, type_0){
  this.logEventProgress_0(eventGroup, type_0, -1, -1);
}
;
_.logEventProgress_0 = function logEventProgress_0(eventGroup, type_0, fragment, size_0){
  this.logger.logEventProgress_1(eventGroup, type_0, fragment, size_0);
}
;
_.logFragmentLoaded = function logFragmentLoaded(fragment){
  var logGroup;
  logGroup = this.downloadGroup(fragment);
  this.logEventProgress_0(logGroup, 'end', fragment, -1);
}
;
_.onLoadImpl = function onLoadImpl(fragment){
  var callback, callback$array, callback$index, callback$max, callbacks, t;
  this.fragmentHasLoaded(fragment);
  callbacks = this.allCallbacks[fragment];
  if (jsNotEquals(callbacks, null)) {
    this.logEventProgress('runCallbacks' + fragment, 'begin');
    setCheck(this.allCallbacks, fragment, null);
    for (callback$array = callbacks , callback$index = 0 , callback$max = callback$array.length; callback$index < callback$max; ++callback$index) {
      callback = callback$array[callback$index];
      try {
        castTo(callback, 315).onSuccess_2();
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 24)) {
          t = $e0;
          reportUncaughtException(t);
        }
         else 
          throw toJs($e0);
      }
    }
    this.logEventProgress('runCallbacks' + fragment, 'end');
  }
}
;
_.runAsyncImpl = function runAsyncImpl(fragment, callback){
  var callbacks;
  if (this.isLoaded[fragment]) {
    if (!jsEquals(this.allCallbacks[fragment], null)) {
      debugger;
      throw toJs(makeAssertionError());
    }
    this.onSuccessExecutor.execute_2(this, callback);
    return;
  }
  callbacks = this.allCallbacks[fragment];
  if (jsEquals(callbacks, null)) {
    callbacks = setCheck(this.allCallbacks, fragment, initUnidimensionalArray(Lcom_google_gwt_core_client_RunAsyncCallback_2_classLit, {4:1, 1:1, 5:1}, 315, 0, 0, 1));
  }
  if (!isScript()) {
    debugger;
    throw toJs(makeAssertionError());
  }
  setCheck(callbacks, callbacks.length, callback);
  if (!this.isLoading_0(fragment)) {
    this.inject_0(fragment, new AsyncFragmentLoader$1(this, fragment));
  }
}
;
_.startLoadingFragment = function startLoadingFragment(fragment){
  if (!(this.fragmentLoading < 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.fragmentLoading = fragment;
  this.logDownloadStart(fragment);
  this.loadingStrategy.startLoadingFragment_0(fragment, new AsyncFragmentLoader$ResetAfterDownloadFailure(this, fragment));
}
;
_.startLoadingNextFragment = function startLoadingNextFragment(){
  if (this.fragmentLoading >= 0) {
    return;
  }
  this.initializeRemainingInitialFragments();
  this.clearRequestsAlreadyLoaded();
  if (this.isEmpty_0(this.pendingDownloadErrorHandlers) && !this.anyPrefetchesRequested()) {
    return;
  }
  if (this.remainingInitialFragments.size_1() > 0) {
    this.startLoadingFragment(this.remainingInitialFragments.peek());
    return;
  }
  if (!this.haveInitialFragmentsLoaded()) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (this.requestedExclusives.size_1() > 0) {
    this.startLoadingFragment(this.requestedExclusives.remove_7());
    return;
  }
  if (this.anyPrefetchesRequested()) {
    this.startLoadingFragment(this.prefetchQueue.remove_7());
    return;
  }
  if (!false) {
    debugger;
    throw toJs(makeAssertionError());
  }
}
;
_.fragmentLoading = 0;
_.numEntries = 0;
_.prefetching = false;
var BROWSER_LOADER;
var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader_2_classLit = createForClass('com.google.gwt.core.client.impl', 'AsyncFragmentLoader', 538, Ljava_lang_Object_2_classLit);
function $clinit_AsyncFragmentLoader$LoadTerminatedHandler(){
  $clinit_AsyncFragmentLoader$LoadTerminatedHandler = emptyMethod;
}

var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$LoadTerminatedHandler_2_classLit = createForInterface('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/LoadTerminatedHandler');
function $clinit_AsyncFragmentLoader$1(){
  $clinit_AsyncFragmentLoader$1 = emptyMethod;
  $clinit_Object();
}

function AsyncFragmentLoader$1(this$0, val$fragment){
  $clinit_AsyncFragmentLoader$1();
  this.this$01 = this$0;
  this.val$fragment2 = val$fragment;
  Object_0.call(this);
  this.$init_454();
}

defineClass(539, 1, {368:1, 1:1}, AsyncFragmentLoader$1);
_.$init_454 = function $init_454(){
}
;
_.loadTerminated = function loadTerminated(reason){
  var callback, callback$array, callback$index, callback$max, callbacks;
  callbacks = this.this$01.allCallbacks[this.val$fragment2];
  if (jsNotEquals(callbacks, null)) {
    setCheck(this.this$01.allCallbacks, this.val$fragment2, null);
    for (callback$array = callbacks , callback$index = 0 , callback$max = callback$array.length; callback$index < callback$max; ++callback$index) {
      callback = callback$array[callback$index];
      castTo(callback, 315).onFailure(reason);
    }
  }
}
;
_.val$fragment2 = 0;
var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$1_2_classLit = createForClass('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/1', 539, Ljava_lang_Object_2_classLit);
function $clinit_AsyncFragmentLoader$BoundedIntQueue(){
  $clinit_AsyncFragmentLoader$BoundedIntQueue = emptyMethod;
  $clinit_Object();
}

function AsyncFragmentLoader$BoundedIntQueue(maxPuts){
  $clinit_AsyncFragmentLoader$BoundedIntQueue();
  Object_0.call(this);
  this.$init_455();
  this.array = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, maxPuts, 15, 1);
}

defineClass(367, 1, {1:1}, AsyncFragmentLoader$BoundedIntQueue);
_.$init_455 = function $init_455(){
  this.read = 0;
  this.write_0 = 0;
}
;
_.add_9 = function add_17(x_0){
  if (!(this.write_0 < this.array.length)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.array[this.write_0++] = x_0;
}
;
_.clear_0 = function clear_10(){
  this.read = 0;
  this.write_0 = 0;
}
;
_.peek = function peek(){
  if (!(this.read < this.write_0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return this.array[this.read];
}
;
_.remove_7 = function remove_15(){
  if (!(this.read < this.write_0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return this.array[this.read++];
}
;
_.size_1 = function size_5(){
  return this.write_0 - this.read;
}
;
_.read = 0;
_.write_0 = 0;
var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$BoundedIntQueue_2_classLit = createForClass('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/BoundedIntQueue', 367, Ljava_lang_Object_2_classLit);
function $clinit_AsyncFragmentLoader$HttpDownloadFailure(){
  $clinit_AsyncFragmentLoader$HttpDownloadFailure = emptyMethod;
  $clinit_RuntimeException();
}

function AsyncFragmentLoader$HttpDownloadFailure(url_0, statusCode, statusText){
  $clinit_AsyncFragmentLoader$HttpDownloadFailure();
  RuntimeException_1.call(this, 'Download of ' + url_0 + ' failed with status ' + statusCode + '(' + statusText + ')');
  this.$init_456();
  this.statusCode = statusCode;
}

defineClass(541, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, AsyncFragmentLoader$HttpDownloadFailure);
_.$init_456 = function $init_456(){
}
;
_.statusCode = 0;
var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$HttpDownloadFailure_2_classLit = createForClass('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/HttpDownloadFailure', 541, Ljava_lang_RuntimeException_2_classLit);
function $clinit_AsyncFragmentLoader$HttpInstallFailure(){
  $clinit_AsyncFragmentLoader$HttpInstallFailure = emptyMethod;
  $clinit_RuntimeException();
}

function AsyncFragmentLoader$HttpInstallFailure(url_0, text_0, rootCause){
  $clinit_AsyncFragmentLoader$HttpInstallFailure();
  RuntimeException_2.call(this, 'Install of ' + url_0 + ' failed with text ' + text_0, rootCause);
  this.$init_457();
}

defineClass(542, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, AsyncFragmentLoader$HttpInstallFailure);
_.$init_457 = function $init_457(){
}
;
var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$HttpInstallFailure_2_classLit = createForClass('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/HttpInstallFailure', 542, Ljava_lang_RuntimeException_2_classLit);
function $clinit_AsyncFragmentLoader$LoadingStrategy(){
  $clinit_AsyncFragmentLoader$LoadingStrategy = emptyMethod;
}

var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$LoadingStrategy_2_classLit = createForInterface('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/LoadingStrategy');
function $clinit_AsyncFragmentLoader$Logger(){
  $clinit_AsyncFragmentLoader$Logger = emptyMethod;
}

var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$Logger_2_classLit = createForInterface('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/Logger');
function $clinit_AsyncFragmentLoader$LwmLabels(){
  $clinit_AsyncFragmentLoader$LwmLabels = emptyMethod;
  $clinit_Object();
}

function downloadGroupForExclusive(splitPoint){
  $clinit_AsyncFragmentLoader$LwmLabels();
  return 'download' + splitPoint;
}

function $clinit_AsyncFragmentLoader$ResetAfterDownloadFailure(){
  $clinit_AsyncFragmentLoader$ResetAfterDownloadFailure = emptyMethod;
  $clinit_Object();
}

function AsyncFragmentLoader$ResetAfterDownloadFailure(this$0, myFragment){
  $clinit_AsyncFragmentLoader$ResetAfterDownloadFailure();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_458();
  this.fragment_0 = myFragment;
}

defineClass(540, 1, {368:1, 1:1}, AsyncFragmentLoader$ResetAfterDownloadFailure);
_.$init_458 = function $init_458(){
}
;
_.loadTerminated = function loadTerminated_0(reason){
  var e, handler, handler$array, handler$index, handler$max, handlersToRun, lastException;
  if (this.this$01.fragmentLoading != this.fragment_0) {
    return;
  }
  handlersToRun = this.this$01.pendingDownloadErrorHandlers;
  this.this$01.pendingDownloadErrorHandlers = initUnidimensionalArray(Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$LoadTerminatedHandler_2_classLit, {4:1, 1:1, 5:1}, 368, this.this$01.numEntries + 1, 0, 1);
  this.this$01.requestedExclusives.clear_0();
  this.this$01.fragmentLoading = -1;
  lastException = null;
  for (handler$array = handlersToRun , handler$index = 0 , handler$max = handler$array.length; handler$index < handler$max; ++handler$index) {
    handler = handler$array[handler$index];
    if (isNotNull(handler)) {
      try {
        handler.loadTerminated(reason);
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 27)) {
          e = $e0;
          lastException = e;
        }
         else 
          throw toJs($e0);
      }
    }
  }
  if (isNotNull(lastException)) {
    throw toJs(lastException);
  }
}
;
_.fragment_0 = 0;
var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$ResetAfterDownloadFailure_2_classLit = createForClass('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/ResetAfterDownloadFailure', 540, Ljava_lang_Object_2_classLit);
function $clinit_AsyncFragmentLoader$StandardLogger(){
  $clinit_AsyncFragmentLoader$StandardLogger = emptyMethod;
  $clinit_Object();
}

function AsyncFragmentLoader$StandardLogger(){
  $clinit_AsyncFragmentLoader$StandardLogger();
  Object_0.call(this);
  this.$init_459();
}

function stats(data_0){
  return $stats(data_0);
}

defineClass(536, 1, {537:1, 1:1}, AsyncFragmentLoader$StandardLogger);
_.$init_459 = function $init_459(){
}
;
_.createStatsEvent = function createStatsEvent(eventGroup, type_0, fragment, size_0){
  var evt = {moduleName:getModuleName(), sessionId:$sessionId, subSystem:'runAsync', evtGroup:eventGroup, millis:(new Date).getTime(), type:type_0};
  if (fragment >= 0) {
    evt.fragment = fragment;
  }
  if (size_0 >= 0) {
    evt.size = size_0;
  }
  return evt;
}
;
_.isStatsAvailable = function isStatsAvailable(){
  return !!$stats;
}
;
_.logEventProgress_1 = function logEventProgress_1(eventGroup, type_0, fragment, size_0){
  var toss;
  toss = this.isStatsAvailable() && stats(this.createStatsEvent(eventGroup, type_0, fragment, size_0));
}
;
var Lcom_google_gwt_core_client_impl_AsyncFragmentLoader$StandardLogger_2_classLit = createForClass('com.google.gwt.core.client.impl', 'AsyncFragmentLoader/StandardLogger', 536, Ljava_lang_Object_2_classLit);
function $clinit_Impl(){
  $clinit_Impl = emptyMethod;
  $clinit_Object();
  {
    if (isScript() && isNotNull(($clinit_StackTraceCreator() , collector_1))) {
    }
  }
  watchdogEntryDepthTimerId = -1;
}

function apply_0(jsFunction, thisObj, args){
  if (isScript()) {
    return jsFunction.apply(thisObj, args);
  }
   else {
    var __0 = jsFunction.apply(thisObj, args);
    if (__0 != null) {
      __0 = {val:__0};
    }
    return __0;
  }
}

function enter(){
  var now_0;
  if (!(entryDepth >= 0)) {
    debugger;
    throw toJs(makeAssertionError_Object('Negative entryDepth value at entry ' + entryDepth));
  }
  if (isScript() && entryDepth != 0) {
    now_0 = currentTimeMillis_1();
    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {
      watchdogEntryDepthLastScheduled = now_0;
      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();
    }
  }
  if (entryDepth++ == 0) {
    ($clinit_SchedulerImpl() , INSTANCE_1).flushEntryCommands();
    return true;
  }
  return false;
}

function entry_0(jsFunction){
  $clinit_Impl();
  return function(){
    if (isScript()) {
      return entry0(jsFunction, this, arguments);
    }
     else {
      var __0 = entry0(jsFunction, this, arguments);
      if (__0 != null) {
        __0 = __0.val;
      }
      return __0;
    }
  }
  ;
}

function entry0(jsFunction, thisObj, args){
  var initialEntry, t;
  initialEntry = enter();
  try {
    if (isNotNull(getUncaughtExceptionHandler())) {
      try {
        return apply_0(jsFunction, thisObj, args);
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 24)) {
          t = $e0;
          reportUncaughtException_0(t);
          return undefined_0();
        }
         else 
          throw toJs($e0);
      }
    }
     else {
      return apply_0(jsFunction, thisObj, args);
    }
  }
   finally {
    exit(initialEntry);
  }
}

function exit(initialEntry){
  if (initialEntry) {
    ($clinit_SchedulerImpl() , INSTANCE_1).flushFinallyCommands();
  }
  entryDepth--;
  if (!(entryDepth >= 0)) {
    debugger;
    throw toJs(makeAssertionError_Object('Negative entryDepth value at exit ' + entryDepth));
  }
  if (initialEntry) {
    if (!(entryDepth == 0)) {
      debugger;
      throw toJs(makeAssertionError_Object('Depth not 0' + entryDepth));
    }
    if (isScript() && watchdogEntryDepthTimerId != -1) {
      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);
      watchdogEntryDepthTimerId = -1;
    }
  }
}

function getModuleBaseURL_0(){
  $clinit_Impl();
  var key = '__gwtDevModeHook:' + $moduleName + ':moduleBase';
  var global_0 = $wnd || self;
  return global_0[key] || $moduleBase;
}

function getModuleBaseURLForStaticFiles(){
  $clinit_Impl();
  return $moduleBase;
}

function getModuleName_0(){
  $clinit_Impl();
  return $moduleName;
}

function getPermutationStrongName_0(){
  $clinit_Impl();
  return $strongName;
}

function registerEntry(){
  $clinit_Impl();
  if (isScript()) {
    return entry_0;
  }
   else {
    return $entry = entry_0;
  }
}

function reportToBrowser(e){
  $wnd.setTimeout(function(){
    throw e;
  }
  , 0);
}

function reportToBrowser_0(e){
  reportToBrowser(instanceOf(e, 175)?castTo(e, 175).getThrown():e);
}

function reportUncaughtException_0(e){
  $clinit_Impl();
  reportUncaughtException_1(e, true);
}

function reportUncaughtException_1(e, reportSwallowedExceptionToBrowser){
  var handler;
  if (isNotNull(uncaughtExceptionHandlerForTest)) {
    uncaughtExceptionHandlerForTest.onUncaughtException(e);
  }
  handler = getUncaughtExceptionHandler();
  if (isNotNull(handler)) {
    if (jsEquals(handler, uncaughtExceptionHandlerForTest)) {
      return;
    }
    handler.onUncaughtException(e);
    return;
  }
  if (isClient() && reportSwallowedExceptionToBrowser) {
    reportToBrowser_0(e);
  }
   else {
    ($clinit_System() , err).print_0('Uncaught exception ');
    e.printStackTrace_0(($clinit_System() , err));
  }
}

function undefined_0(){
  return;
}

function watchdogEntryDepthCancel(timerId){
  $wnd.clearTimeout(timerId);
}

function watchdogEntryDepthRun(){
  if (isScript() && entryDepth != 0) {
    entryDepth = 0;
  }
  watchdogEntryDepthTimerId = -1;
}

function watchdogEntryDepthSchedule(){
  return $wnd.setTimeout(watchdogEntryDepthRun, 10);
}

var entryDepth = 0, uncaughtExceptionHandlerForTest, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = 0;
function $clinit_LoadingStrategyBase(){
  $clinit_LoadingStrategyBase = emptyMethod;
  $clinit_Object();
}

function LoadingStrategyBase(downloadStrategy){
  $clinit_LoadingStrategyBase();
  Object_0.call(this);
  this.$init_460();
  this.downloadStrategy = downloadStrategy;
}

function gwtInstallCode(text_0){
  $clinit_LoadingStrategyBase();
  __gwtInstallCode(text_0);
}

function gwtStartLoadingFragment(fragment, loadErrorHandler){
  function loadFailed(e){
    loadErrorHandler.loadTerminated(e);
  }

  return __gwtStartLoadingFragment(fragment, $entry(loadFailed));
}

defineClass(564, 1, {366:1, 1:1});
_.$init_460 = function $init_460(){
  this.manualRetryNumbers = create();
}
;
_.getManualRetryNum = function getManualRetryNum(fragment){
  var ser;
  ser = $get_1(this.manualRetryNumbers, fragment);
  $put(this.manualRetryNumbers, fragment, ser + 1);
  return ser;
}
;
_.getMaxAutoRetryCount = function getMaxAutoRetryCount(){
  return MAX_AUTO_RETRY_COUNT;
}
;
_.startLoadingFragment_0 = function startLoadingFragment_0(fragment, loadErrorHandler){
  var connector, manualRetry, request, url_0;
  url_0 = gwtStartLoadingFragment(fragment, loadErrorHandler);
  if (jsEquals(url_0, null)) {
    return;
  }
  manualRetry = this.getManualRetryNum(fragment);
  if (manualRetry > 0) {
    connector = contains_Ljava_lang_CharSequence__Z__devirtual$(url_0, '?')?38:63;
    url_0 += charToString(connector) + 'manualRetry=' + manualRetry;
  }
  request = new LoadingStrategyBase$RequestData(url_0, loadErrorHandler, fragment, this.downloadStrategy, this.getMaxAutoRetryCount());
  request.tryDownload_0();
}
;
var MAX_AUTO_RETRY_COUNT = 3;
var Lcom_google_gwt_core_client_impl_LoadingStrategyBase_2_classLit = createForClass('com.google.gwt.core.client.impl', 'LoadingStrategyBase', 564, Ljava_lang_Object_2_classLit);
function $clinit_LoadingStrategyBase$DownloadStrategy(){
  $clinit_LoadingStrategyBase$DownloadStrategy = emptyMethod;
}

var Lcom_google_gwt_core_client_impl_LoadingStrategyBase$DownloadStrategy_2_classLit = createForInterface('com.google.gwt.core.client.impl', 'LoadingStrategyBase/DownloadStrategy');
function $clinit_LoadingStrategyBase$FragmentReloadTracker(){
  $clinit_LoadingStrategyBase$FragmentReloadTracker = emptyMethod;
  $clinit_JavaScriptObject();
}

function $get_1(this$static, x_0){
  $clinit_LoadingStrategyBase$FragmentReloadTracker();
  return this$static[x_0]?this$static[x_0]:0;
}

function $put(this$static, x_0, y_0){
  $clinit_LoadingStrategyBase$FragmentReloadTracker();
  this$static[x_0] = y_0;
}

function create(){
  $clinit_LoadingStrategyBase$FragmentReloadTracker();
  return createArray();
}

function $clinit_LoadingStrategyBase$RequestData(){
  $clinit_LoadingStrategyBase$RequestData = emptyMethod;
  $clinit_Object();
}

function LoadingStrategyBase$RequestData(url_0, errorHandler, fragment, downloadStrategy, maxRetryCount){
  $clinit_LoadingStrategyBase$RequestData();
  Object_0.call(this);
  this.$init_461();
  this.url_0 = url_0;
  this.originalUrl = url_0;
  this.errorHandler = errorHandler;
  this.maxRetryCount = maxRetryCount;
  this.retryCount = 0;
  this.fragment_0 = fragment;
  this.downloadStrategy = downloadStrategy;
}

defineClass(567, 1, {1:1}, LoadingStrategyBase$RequestData);
_.$init_461 = function $init_461(){
  this.errorHandler = null;
}
;
_.getFragment = function getFragment(){
  return this.fragment_0;
}
;
_.getUrl = function getUrl_0(){
  return this.url_0;
}
;
_.onLoadError = function onLoadError(e, mayRetry){
  var connector;
  if (mayRetry) {
    this.retryCount++;
    if (this.retryCount <= this.maxRetryCount) {
      connector = contains_Ljava_lang_CharSequence__Z__devirtual$(this.originalUrl, '?')?38:63;
      this.url_0 = this.originalUrl + charToString(connector) + 'autoRetry=' + this.retryCount;
      this.downloadStrategy.tryDownload(this);
      return;
    }
  }
  this.errorHandler.loadTerminated(e);
}
;
_.tryDownload_0 = function tryDownload(){
  this.downloadStrategy.tryDownload(this);
}
;
_.tryInstall = function tryInstall(code_0){
  var e, textIntro;
  try {
    gwtInstallCode(code_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 27)) {
      e = $e0;
      textIntro = code_0;
      if (jsNotEquals(textIntro, null) && length__I__devirtual$(textIntro) > 200) {
        textIntro = substring_II_Ljava_lang_String___devirtual$(textIntro, 0, 200) + '...';
      }
      this.onLoadError(new AsyncFragmentLoader$HttpInstallFailure(this.url_0, textIntro, e), false);
    }
     else 
      throw toJs($e0);
  }
}
;
_.fragment_0 = 0;
_.maxRetryCount = 0;
_.retryCount = 0;
var Lcom_google_gwt_core_client_impl_LoadingStrategyBase$RequestData_2_classLit = createForClass('com.google.gwt.core.client.impl', 'LoadingStrategyBase/RequestData', 567, Ljava_lang_Object_2_classLit);
function $clinit_OnSuccessExecutor(){
  $clinit_OnSuccessExecutor = emptyMethod;
  $clinit_Object();
}

function OnSuccessExecutor(){
  $clinit_OnSuccessExecutor();
  Object_0.call(this);
  this.$init_462();
}

defineClass(261, 1, {261:1, 1:1}, OnSuccessExecutor);
_.$init_462 = function $init_462(){
}
;
_.execute_2 = function execute_1(fragmentLoader, callback){
  get_2653().scheduleDeferred(new OnSuccessExecutor$1(this, fragmentLoader, callback));
}
;
var Lcom_google_gwt_core_client_impl_OnSuccessExecutor_2_classLit = createForClass('com.google.gwt.core.client.impl', 'OnSuccessExecutor', 261, Ljava_lang_Object_2_classLit);
function $clinit_OnSuccessExecutor$1(){
  $clinit_OnSuccessExecutor$1 = emptyMethod;
  $clinit_Object();
}

function OnSuccessExecutor$1(this$0, val$fragmentLoader, val$callback){
  $clinit_OnSuccessExecutor$1();
  this.this$01 = this$0;
  this.val$fragmentLoader2 = val$fragmentLoader;
  this.val$callback3 = val$callback;
  Object_0.call(this);
  this.$init_463();
}

defineClass(568, 1, {1:1}, OnSuccessExecutor$1);
_.$init_463 = function $init_463(){
}
;
_.execute = function execute_2(){
  this.val$fragmentLoader2.executeOnSuccess0(this.val$callback3);
}
;
var Lcom_google_gwt_core_client_impl_OnSuccessExecutor$1_2_classLit = createForClass('com.google.gwt.core.client.impl', 'OnSuccessExecutor/1', 568, Ljava_lang_Object_2_classLit);
function $clinit_SchedulerImpl(){
  $clinit_SchedulerImpl = emptyMethod;
  $clinit_Scheduler();
  INSTANCE_1 = castTo(new SchedulerImpl, 331);
}

function SchedulerImpl(){
  Scheduler.call(this);
  this.$init_464();
}

function createQueue(){
  return $cast(createArray());
}

function execute_3(cmd){
  return cmd.execute_1();
}

function push_0(queue, task){
  if (isNull(queue)) {
    queue = createQueue();
  }
  $push(queue, task);
  return queue;
}

function runScheduledTasks(tasks, rescheduled){
  var e, i, j, t;
  if (!isNotNull(tasks)) {
    debugger;
    throw toJs(makeAssertionError_Object('tasks'));
  }
  for (i = 0 , j = $length(tasks); i < j; i++) {
    if (!($length(tasks) == j)) {
      debugger;
      throw toJs(makeAssertionError_Object('Working array length changed ' + $length(tasks) + ' != ' + j));
    }
    t = $get(tasks, i);
    try {
      if ($isRepeating(t)) {
        if ($executeRepeating(t)) {
          rescheduled = push_0(rescheduled, t);
        }
      }
       else {
        $executeScheduled(t);
      }
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 24)) {
        e = $e0;
        reportUncaughtException(e);
      }
       else 
        throw toJs($e0);
    }
  }
  return rescheduled;
}

function scheduleFixedDelayImpl(cmd, delayMs){
  function callback(){
    var ret = $entry(execute_3)(cmd);
    if (!isScript()) {
      ret = ret == true;
    }
    if (ret) {
      $wnd.setTimeout(callback, delayMs);
    }
  }

  $wnd.setTimeout(callback, delayMs);
}

defineClass(331, 496, {331:1, 1:1}, SchedulerImpl);
_.$init_464 = function $init_464(){
  this.flushRunning = false;
  this.shouldBeRunning = false;
}
;
_.createDuration = function createDuration(){
  return new Duration;
}
;
_.flushEntryCommands = function flushEntryCommands(){
  var oldQueue, rescheduled;
  if (isNotNull(this.entryCommands)) {
    rescheduled = null;
    do {
      oldQueue = this.entryCommands;
      this.entryCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (isNotNull(this.entryCommands));
    this.entryCommands = rescheduled;
  }
}
;
_.flushFinallyCommands = function flushFinallyCommands(){
  var oldQueue, rescheduled;
  if (isNotNull(this.finallyCommands)) {
    rescheduled = null;
    do {
      oldQueue = this.finallyCommands;
      this.finallyCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (isNotNull(this.finallyCommands));
    this.finallyCommands = rescheduled;
  }
}
;
_.flushPostEventPumpCommands = function flushPostEventPumpCommands(){
  var oldDeferred;
  if (isNotNull(this.deferredCommands)) {
    oldDeferred = this.deferredCommands;
    this.deferredCommands = null;
    if (isNull(this.incrementalCommands)) {
      this.incrementalCommands = createQueue();
    }
    runScheduledTasks(oldDeferred, this.incrementalCommands);
  }
  if (isNotNull(this.incrementalCommands)) {
    this.incrementalCommands = this.runRepeatingTasks(this.incrementalCommands);
  }
}
;
_.isWorkQueued = function isWorkQueued(){
  return isNotNull(this.deferredCommands) || isNotNull(this.incrementalCommands);
}
;
_.maybeSchedulePostEventPumpCommands = function maybeSchedulePostEventPumpCommands(){
  if (!this.shouldBeRunning) {
    this.shouldBeRunning = true;
    if (isNull(this.flusher)) {
      this.flusher = new SchedulerImpl$Flusher(this);
    }
    scheduleFixedDelayImpl(this.flusher, 1);
    if (isNull(this.rescue)) {
      this.rescue = new SchedulerImpl$Rescuer(this);
    }
    scheduleFixedDelayImpl(this.rescue, 50);
  }
}
;
_.runRepeatingTasks = function runRepeatingTasks(tasks){
  var canceledSomeTasks, duration, executedSomeTask, i, length_0, newTasks, t;
  if (!isNotNull(tasks)) {
    debugger;
    throw toJs(makeAssertionError_Object('tasks'));
  }
  length_0 = $length(tasks);
  if (length_0 == 0) {
    return null;
  }
  canceledSomeTasks = false;
  duration = this.createDuration();
  while (duration.elapsedMillis_0() < 16) {
    executedSomeTask = false;
    for (i = 0; i < length_0; i++) {
      if (!($length(tasks) == length_0)) {
        debugger;
        throw toJs(makeAssertionError_Object('Working array length changed ' + $length(tasks) + ' != ' + length_0));
      }
      t = $get(tasks, i);
      if (isNull(t)) {
        continue;
      }
      executedSomeTask = true;
      if (!$isRepeating(t)) {
        debugger;
        throw toJs(makeAssertionError_Object('Found a non-repeating Task'));
      }
      if (!$executeRepeating(t)) {
        $set(tasks, i, null);
        canceledSomeTasks = true;
      }
    }
    if (!executedSomeTask) {
      break;
    }
  }
  if (canceledSomeTasks) {
    newTasks = createQueue();
    for (i = 0; i < length_0; i++) {
      if (isNotNull($get(tasks, i))) {
        $push(newTasks, $get(tasks, i));
      }
    }
    if (!($length(newTasks) < length_0)) {
      debugger;
      throw toJs(makeAssertionError());
    }
    return $length(newTasks) == 0?null:newTasks;
  }
   else {
    return tasks;
  }
}
;
_.scheduleDeferred = function scheduleDeferred(cmd){
  this.deferredCommands = push_0(this.deferredCommands, create_0(cmd));
  this.maybeSchedulePostEventPumpCommands();
}
;
_.scheduleFixedDelay = function scheduleFixedDelay(cmd, delayMs){
  scheduleFixedDelayImpl(cmd, delayMs);
}
;
_.flushRunning = false;
_.shouldBeRunning = false;
var INSTANCE_1;
var Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl', 'SchedulerImpl', 331, Lcom_google_gwt_core_client_Scheduler_2_classLit);
function $clinit_SchedulerImpl$Flusher(){
  $clinit_SchedulerImpl$Flusher = emptyMethod;
  $clinit_Object();
}

function SchedulerImpl$Flusher(this$0){
  $clinit_SchedulerImpl$Flusher();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_465();
}

defineClass(685, 1, {1:1}, SchedulerImpl$Flusher);
_.$init_465 = function $init_465(){
}
;
_.execute_1 = function execute_4(){
  this.this$01.flushRunning = true;
  this.this$01.flushPostEventPumpCommands();
  this.this$01.flushRunning = false;
  return this.this$01.shouldBeRunning = this.this$01.isWorkQueued();
}
;
var Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl', 'SchedulerImpl/Flusher', 685, Ljava_lang_Object_2_classLit);
function $clinit_SchedulerImpl$Rescuer(){
  $clinit_SchedulerImpl$Rescuer = emptyMethod;
  $clinit_Object();
}

function SchedulerImpl$Rescuer(this$0){
  $clinit_SchedulerImpl$Rescuer();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_466();
}

defineClass(686, 1, {1:1}, SchedulerImpl$Rescuer);
_.$init_466 = function $init_466(){
}
;
_.execute_1 = function execute_5(){
  if (this.this$01.flushRunning) {
    this.this$01.scheduleFixedDelay(this.this$01.flusher, 1);
  }
  return this.this$01.shouldBeRunning;
}
;
var Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl', 'SchedulerImpl/Rescuer', 686, Ljava_lang_Object_2_classLit);
function $clinit_SchedulerImpl$Task(){
  $clinit_SchedulerImpl$Task = emptyMethod;
  $clinit_JavaScriptObject();
}

function $executeRepeating(this$static){
  $clinit_SchedulerImpl$Task();
  return $getRepeating(this$static).execute_1();
}

function $executeScheduled(this$static){
  $clinit_SchedulerImpl$Task();
  $getScheduled(this$static).execute();
}

function $getRepeating(this$static){
  return this$static[0];
}

function $getScheduled(this$static){
  return this$static[0];
}

function $isRepeating(this$static){
  $clinit_SchedulerImpl$Task();
  return this$static[1];
}

function create_0(cmd){
  $clinit_SchedulerImpl$Task();
  return [cmd, false];
}

function $clinit_ScriptTagLoadingStrategy(){
  $clinit_ScriptTagLoadingStrategy = emptyMethod;
  $clinit_LoadingStrategyBase();
}

function ScriptTagLoadingStrategy(){
  $clinit_ScriptTagLoadingStrategy();
  LoadingStrategyBase.call(this, new ScriptTagLoadingStrategy$ScriptTagDownloadStrategy);
  this.$init_467();
}

function asyncCallback(request, code_0){
  var firstTimeCalled;
  firstTimeCalled = clearAsyncCallback(request.getFragment());
  if (firstTimeCalled) {
    request.tryInstall(code_0);
  }
}

function cleanup(request){
  $clinit_ScriptTagLoadingStrategy();
  var neverCalled;
  neverCalled = clearAsyncCallback(request.getFragment());
  if (neverCalled) {
    request.onLoadError(new AsyncFragmentLoader$HttpDownloadFailure(request.getUrl(), 404, 'Script Tag Failure - no status available'), true);
  }
}

function clearAsyncCallback(fragment){
  if (!__gwtModuleFunction['runAsyncCallback' + fragment]) {
    return false;
  }
  delete __gwtModuleFunction['runAsyncCallback' + fragment];
  return true;
}

function setAsyncCallback(fragment, request){
  $clinit_ScriptTagLoadingStrategy();
  __gwtModuleFunction['runAsyncCallback' + fragment] = $entry(function(code_0, instance){
    asyncCallback(request, code_0);
  }
  );
}

defineClass(535, 564, {366:1, 1:1}, ScriptTagLoadingStrategy);
_.$init_467 = function $init_467(){
}
;
var Lcom_google_gwt_core_client_impl_ScriptTagLoadingStrategy_2_classLit = createForClass('com.google.gwt.core.client.impl', 'ScriptTagLoadingStrategy', 535, Lcom_google_gwt_core_client_impl_LoadingStrategyBase_2_classLit);
function $clinit_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy(){
  $clinit_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy = emptyMethod;
  $clinit_Object();
}

function ScriptTagLoadingStrategy$ScriptTagDownloadStrategy(){
  $clinit_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy();
  Object_0.call(this);
  this.$init_468();
}

defineClass(565, 1, {1:1}, ScriptTagLoadingStrategy$ScriptTagDownloadStrategy);
_.$init_468 = function $init_468(){
}
;
_.tryDownload = function tryDownload_0(request){
  setAsyncCallback(request.getFragment(), request);
  fromUrl(request.getUrl()).setRemoveTag(true).setCallback(new ScriptTagLoadingStrategy$ScriptTagDownloadStrategy$1(this, request)).inject();
}
;
var Lcom_google_gwt_core_client_impl_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy_2_classLit = createForClass('com.google.gwt.core.client.impl', 'ScriptTagLoadingStrategy/ScriptTagDownloadStrategy', 565, Ljava_lang_Object_2_classLit);
function $clinit_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy$1(){
  $clinit_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy$1 = emptyMethod;
  $clinit_Object();
}

function ScriptTagLoadingStrategy$ScriptTagDownloadStrategy$1(this$1, val$request){
  $clinit_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy$1();
  this.this$11 = this$1;
  this.val$request2 = val$request;
  Object_0.call(this);
  this.$init_469();
}

defineClass(566, 1, {1:1}, ScriptTagLoadingStrategy$ScriptTagDownloadStrategy$1);
_.$init_469 = function $init_469(){
}
;
_.onFailure_0 = function onFailure_11(reason){
  this.onFailure_1(castTo(reason, 25));
}
;
_.onSuccess = function onSuccess_24(result){
  this.onSuccess_0(castTo(result, 205));
}
;
_.onFailure_1 = function onFailure_10(reason){
  cleanup(this.val$request2);
}
;
_.onSuccess_0 = function onSuccess_25(result){
  cleanup(this.val$request2);
}
;
var Lcom_google_gwt_core_client_impl_ScriptTagLoadingStrategy$ScriptTagDownloadStrategy$1_2_classLit = createForClass('com.google.gwt.core.client.impl', 'ScriptTagLoadingStrategy/ScriptTagDownloadStrategy/1', 566, Ljava_lang_Object_2_classLit);
function $clinit_StackTraceCreator(){
  $clinit_StackTraceCreator = emptyMethod;
  var c, enforceLegacy;
  $clinit_Object();
  LINE_NUMBER_UNKNOWN = -1;
  {
    enforceLegacy = !supportsErrorStack();
    c = castTo(new StackTraceCreator$CollectorModernNoSourceMap, 264);
    collector_1 = instanceOf(c, 265) && enforceLegacy?new StackTraceCreator$CollectorLegacy:c;
  }
}

function captureStackTrace_0(error){
  $clinit_StackTraceCreator();
  collector_1.collect(error);
}

function constructJavaStackTrace_0(thrown){
  $clinit_StackTraceCreator();
  var stackTrace;
  stackTrace = collector_1.getStackTrace_0(thrown);
  return dropInternalFrames(stackTrace);
}

function dropInternalFrames(stackTrace){
  var dropFrameUntilFnName, dropFrameUntilFnName2, i, numberOfFramesToSearch;
  dropFrameUntilFnName = 'captureStackTrace_0';
  dropFrameUntilFnName2 = 'initializeBackingError';
  numberOfFramesToSearch = $wnd.Math.min(stackTrace.length, 5);
  for (i = numberOfFramesToSearch - 1; i >= 0; i--) {
    if (equals_Ljava_lang_Object__Z__devirtual$_2(stackTrace[i].getMethodName(), dropFrameUntilFnName) || equals_Ljava_lang_Object__Z__devirtual$_2(stackTrace[i].getMethodName(), dropFrameUntilFnName2)) {
      splice(stackTrace, i + 1);
      break;
    }
  }
  return stackTrace;
}

function extractFunctionName(fnName){
  var fnRE = /function(?:\s+([\w$]+))?\s*\(/;
  var match_0 = fnRE.exec(fnName);
  return match_0 && match_0[1] || 'anonymous';
}

function getFnStack(e){
  $clinit_StackTraceCreator();
  return e && e['fnStack']?e['fnStack']:[];
}

function getFunctionName(fn){
  $clinit_StackTraceCreator();
  return fn.name || (fn.name = extractFunctionName(fn.toString()));
}

function parseInt_0(number){
  $clinit_StackTraceCreator();
  return parseInt(number) || -1;
}

function splice(arr, length_0){
  if (arr.length >= length_0) {
    removeFrom(arr, 0, length_0);
  }
}

function split_0(t){
  $clinit_StackTraceCreator();
  var e = t.backingJsObject_0;
  if (e && e.stack) {
    var stack_0 = e.stack;
    var toString_0 = e + '\n';
    if (stack_0.substring(0, toString_0.length) == toString_0) {
      stack_0 = stack_0.substring(toString_0.length);
    }
    return stack_0.split('\n');
  }
  return [];
}

function supportsErrorStack(){
  if (Error.stackTraceLimit > 0) {
    $wnd.Error.stackTraceLimit = Error.stackTraceLimit = 64;
    return true;
  }
  return 'stack' in new Error;
}

var LINE_NUMBER_UNKNOWN = 0, collector_1;
function $clinit_StackTraceCreator$Collector(){
  $clinit_StackTraceCreator$Collector = emptyMethod;
  $clinit_Object();
}

function StackTraceCreator$Collector(){
  $clinit_StackTraceCreator$Collector();
  Object_0.call(this);
  this.$init_470();
}

defineClass(264, 1, {1:1});
_.$init_470 = function $init_470(){
}
;
var Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/Collector', 264, Ljava_lang_Object_2_classLit);
function $clinit_StackTraceCreator$CollectorLegacy(){
  $clinit_StackTraceCreator$CollectorLegacy = emptyMethod;
  $clinit_StackTraceCreator$Collector();
}

function StackTraceCreator$CollectorLegacy(){
  $clinit_StackTraceCreator$CollectorLegacy();
  StackTraceCreator$Collector.call(this);
  this.$init_471();
}

defineClass(553, 264, {1:1}, StackTraceCreator$CollectorLegacy);
_.$init_471 = function $init_471(){
}
;
_.collect = function collect(error){
  var seen = {};
  var fnStack = [];
  error['fnStack'] = fnStack;
  var callee = arguments.callee.caller;
  while (callee) {
    var name_0 = getFunctionName(callee);
    fnStack.push(name_0);
    var keyName = ':' + name_0;
    var withThisName = seen[keyName];
    if (withThisName) {
      var i, j;
      for (i = 0 , j = withThisName.length; i < j; i++) {
        if (withThisName[i] === callee) {
          return;
        }
      }
    }
    (withThisName || (seen[keyName] = [])).push(callee);
    callee = callee.caller;
  }
}
;
_.getStackTrace_0 = function getStackTrace_0(t){
  var i, length_0, stack_0, stackTrace;
  stack_0 = getFnStack(t);
  length_0 = $length_0(stack_0);
  stackTrace = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, {4:1, 1:1, 5:1}, 159, length_0, 0, 1);
  for (i = 0; i < length_0; i++) {
    stackTrace[i] = new StackTraceElement('Unknown', $get_0(stack_0, i), null, -1);
  }
  return stackTrace;
}
;
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorLegacy_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorLegacy', 553, Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit);
function $clinit_StackTraceCreator$CollectorModern(){
  $clinit_StackTraceCreator$CollectorModern = emptyMethod;
  $clinit_StackTraceCreator$Collector();
}

function StackTraceCreator$CollectorModern(){
  $clinit_StackTraceCreator$CollectorModern();
  StackTraceCreator$Collector.call(this);
  this.$init_472();
}

defineClass(265, 264, {265:1, 1:1});
_.$init_472 = function $init_472(){
}
;
_.collect = function collect_0(error){
}
;
_.createSte = function createSte(fileName, method, line, col){
  return new StackTraceElement('Unknown', method, fileName + '@' + col, line < 0?-1:line);
}
;
_.getStackTrace_0 = function getStackTrace_1(t){
  var addIndex, i, length_0, stack_0, stackTrace, ste;
  stack_0 = split_0(t);
  stackTrace = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, {4:1, 1:1, 5:1}, 159, 0, 0, 1);
  addIndex = 0;
  length_0 = $length_0(stack_0);
  if (length_0 == 0) {
    return stackTrace;
  }
  ste = this.parse_0($get_0(stack_0, 0));
  if (!equals_Ljava_lang_Object__Z__devirtual$_2(ste.getMethodName(), 'anonymous')) {
    stackTrace[addIndex++] = ste;
  }
  for (i = 1; i < length_0; i++) {
    stackTrace[addIndex++] = this.parse_0($get_0(stack_0, i));
  }
  return stackTrace;
}
;
_.parse_0 = function parse_0(stString){
  var closeParen, col, endFileUrlIndex, fileName, ieAnonymousFunctionName, index_0, lastColonIndex, line, location_0, toReturn;
  location_0 = '';
  if (isEmpty__Z__devirtual$(stString)) {
    return this.createSte('Unknown', 'anonymous', -1, -1);
  }
  toReturn = trim__Ljava_lang_String___devirtual$(stString);
  if (startsWith_Ljava_lang_String__Z__devirtual$(toReturn, 'at ')) {
    toReturn = substring_I_Ljava_lang_String___devirtual$(toReturn, 3);
  }
  toReturn = this.stripSquareBrackets(toReturn);
  index_0 = indexOf_Ljava_lang_String__I__devirtual$(toReturn, '(');
  if (index_0 == -1) {
    index_0 = indexOf_Ljava_lang_String__I__devirtual$(toReturn, '@');
    if (index_0 == -1) {
      location_0 = toReturn;
      toReturn = '';
    }
     else {
      location_0 = trim__Ljava_lang_String___devirtual$(substring_I_Ljava_lang_String___devirtual$(toReturn, index_0 + 1));
      toReturn = trim__Ljava_lang_String___devirtual$(substring_II_Ljava_lang_String___devirtual$(toReturn, 0, index_0));
    }
  }
   else {
    closeParen = indexOf_Ljava_lang_String_I_I__devirtual$(toReturn, ')', index_0);
    location_0 = substring_II_Ljava_lang_String___devirtual$(toReturn, index_0 + 1, closeParen);
    toReturn = trim__Ljava_lang_String___devirtual$(substring_II_Ljava_lang_String___devirtual$(toReturn, 0, index_0));
  }
  index_0 = indexOf_I_I__devirtual$(toReturn, 46);
  if (index_0 != -1) {
    toReturn = substring_I_Ljava_lang_String___devirtual$(toReturn, index_0 + 1);
  }
  ieAnonymousFunctionName = 'Anonymous function';
  if (isEmpty__Z__devirtual$(toReturn) || equals_Ljava_lang_Object__Z__devirtual$_2(toReturn, 'Anonymous function')) {
    toReturn = 'anonymous';
  }
  lastColonIndex = lastIndexOf_I_I__devirtual$(location_0, 58);
  endFileUrlIndex = lastIndexOf_II_I__devirtual$(location_0, 58, lastColonIndex - 1);
  line = -1;
  col = -1;
  fileName = 'Unknown';
  if (lastColonIndex != -1 && endFileUrlIndex != -1) {
    fileName = substring_II_Ljava_lang_String___devirtual$(location_0, 0, endFileUrlIndex);
    line = parseInt_0(substring_II_Ljava_lang_String___devirtual$(location_0, endFileUrlIndex + 1, lastColonIndex));
    col = parseInt_0(substring_I_Ljava_lang_String___devirtual$(location_0, lastColonIndex + 1));
  }
  return this.createSte(fileName, toReturn, line, col);
}
;
_.stripSquareBrackets = function stripSquareBrackets(toReturn){
  return toReturn.replace(/\[.*?\]/g, '');
}
;
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModern_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorModern', 265, Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit);
function $clinit_StackTraceCreator$CollectorModernNoSourceMap(){
  $clinit_StackTraceCreator$CollectorModernNoSourceMap = emptyMethod;
  $clinit_StackTraceCreator$CollectorModern();
}

function StackTraceCreator$CollectorModernNoSourceMap(){
  $clinit_StackTraceCreator$CollectorModernNoSourceMap();
  StackTraceCreator$CollectorModern.call(this);
  this.$init_473();
}

defineClass(554, 265, {264:1, 265:1, 1:1}, StackTraceCreator$CollectorModernNoSourceMap);
_.$init_473 = function $init_473(){
}
;
_.createSte = function createSte_0(fileName, method, line, col){
  return new StackTraceElement('Unknown', method, fileName, -1);
}
;
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModernNoSourceMap_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorModernNoSourceMap', 554, Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModern_2_classLit);
function $clinit_GWT_0(){
  $clinit_GWT_0 = emptyMethod;
  $clinit_Object();
  {
    if (isScript_0()) {
      logger_2 = castTo(new JsLogger, 322);
    }
     else {
      logger_2 = null;
    }
  }
}

function isScript_0(){
  $clinit_GWT_0();
  return true;
}

function log_2(message){
  $clinit_GWT_0();
  log_3(message, null);
}

function log_3(message, e){
  $clinit_GWT_0();
  if (isNotNull(sGWTBridge)) {
    sGWTBridge.log_0(message, e);
  }
   else if (isNotNull(logger_2)) {
    logger_2.log_0(message, e);
  }
}

var logger_2, sGWTBridge = null;
function $clinit_JsLogger(){
  $clinit_JsLogger = emptyMethod;
  $clinit_Object();
}

function JsLogger(){
  $clinit_JsLogger();
  Object_0.call(this);
  this.$init_474();
}

defineClass(322, 1, {322:1, 1:1}, JsLogger);
_.$init_474 = function $init_474(){
}
;
_.log_0 = function log_4(message, e){
}
;
var Lcom_google_gwt_core_shared_impl_JsLogger_2_classLit = createForClass('com.google.gwt.core.shared.impl', 'JsLogger', 322, Ljava_lang_Object_2_classLit);
function $clinit_Node(){
  $clinit_Node = emptyMethod;
  $clinit_JavaScriptObject();
}

function $appendChild(this$static, newChild){
  $clinit_Node();
  return this$static.appendChild(newChild);
}

function $cloneNode(this$static, deep){
  $clinit_Node();
  return this$static.cloneNode(deep);
}

function $getChildCount(this$static){
  $clinit_Node();
  return $getLength($getChildNodes(this$static));
}

function $getChildNodes(this$static){
  return this$static.childNodes;
}

function $getLastChild(this$static){
  $clinit_Node();
  return this$static.lastChild;
}

function $getNextSibling(this$static){
  $clinit_Node();
  return this$static.nextSibling;
}

function $getNodeName(this$static){
  $clinit_Node();
  return this$static.nodeName;
}

function $getNodeType(this$static){
  $clinit_Node();
  return this$static.nodeType;
}

function $getOwnerDocument(this$static){
  $clinit_Node();
  return this$static.ownerDocument;
}

function $getParentElement(this$static){
  $clinit_Node();
  return ($clinit_DOMImpl() , impl_4).getParentElement(this$static);
}

function $getParentNode(this$static){
  $clinit_Node();
  return this$static.parentNode;
}

function $insertBefore(this$static, newChild, refChild){
  $clinit_Node();
  return this$static.insertBefore(newChild, refChild);
}

function $isOrHasChild(this$static, child){
  $clinit_Node();
  if (!isNotNull(child)) {
    debugger;
    throw toJs(makeAssertionError_Object('Child cannot be null'));
  }
  return ($clinit_DOMImpl() , impl_4).isOrHasChild(this$static, child);
}

function $removeAllChildren(this$static){
  $clinit_Node();
  while (this$static.lastChild) {
    this$static.removeChild(this$static.lastChild);
  }
}

function $removeChild(this$static, oldChild){
  $clinit_Node();
  return this$static.removeChild(oldChild);
}

function is(o){
  $clinit_Node();
  try {
    return !!o && !!o.nodeType;
  }
   catch (e) {
    return false;
  }
}

function $clinit_Element(){
  $clinit_Element = emptyMethod;
  $clinit_Node();
}

function $addClassName(this$static, className){
  $clinit_Element();
  var idx, oldClassName;
  className = trimClassName(className);
  oldClassName = $getClassName(this$static);
  idx = indexOfName(oldClassName, className);
  if (idx == -1) {
    if (length__I__devirtual$(oldClassName) > 0) {
      $setClassName(this$static, oldClassName + ' ' + className);
    }
     else {
      $setClassName(this$static, className);
    }
    return true;
  }
  return false;
}

function $blur(this$static){
  $clinit_Element();
  this$static.blur();
}

function $dispatchEvent(this$static, evt){
  $clinit_Element();
  ($clinit_DOMImpl() , impl_4).dispatchEvent_0(this$static, evt);
}

function $focus(this$static){
  $clinit_Element();
  this$static.focus();
}

function $getAbsoluteLeft(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getAbsoluteLeft_0(this$static);
}

function $getAbsoluteTop(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getAbsoluteTop_0(this$static);
}

function $getAttribute(this$static, name_0){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getAttribute_0(this$static, name_0);
}

function $getClassName(this$static){
  $clinit_Element();
  return this$static.className || '';
}

function $getClientHeight(this$static){
  $clinit_Element();
  return toInt32($getSubPixelClientHeight(this$static));
}

function $getClientWidth(this$static){
  $clinit_Element();
  return toInt32($getSubPixelClientWidth(this$static));
}

function $getFirstChildElement(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getFirstChildElement(this$static);
}

function $getId(this$static){
  $clinit_Element();
  return this$static.id;
}

function $getInnerHTML(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getInnerHTML(this$static);
}

function $getInnerText(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getInnerText(this$static);
}

function $getOffsetLeft(this$static){
  $clinit_Element();
  return toInt32($getSubPixelOffsetLeft(this$static));
}

function $getOffsetParent(this$static){
  $clinit_Element();
  return this$static.offsetParent;
}

function $getOffsetTop(this$static){
  $clinit_Element();
  return toInt32($getSubPixelOffsetTop(this$static));
}

function $getPropertyBoolean(this$static, name_0){
  $clinit_Element();
  return !!this$static[name_0];
}

function $getPropertyInt(this$static, name_0){
  $clinit_Element();
  return parseInt(this$static[name_0]) | 0;
}

function $getPropertyString(this$static, name_0){
  $clinit_Element();
  return this$static[name_0] == null?null:String(this$static[name_0]);
}

function $getScrollHeight(this$static){
  $clinit_Element();
  return toInt32($getSubPixelScrollHeight(this$static));
}

function $getScrollLeft(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getScrollLeft_0(this$static);
}

function $getScrollTop(this$static){
  $clinit_Element();
  return toInt32($getSubPixelScrollTop(this$static));
}

function $getScrollWidth(this$static){
  $clinit_Element();
  return toInt32($getSubPixelScrollWidth(this$static));
}

function $getString(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).toString_4(this$static);
}

function $getStyle(this$static){
  $clinit_Element();
  return this$static.style;
}

function $getSubPixelClientHeight(this$static){
  return this$static.clientHeight;
}

function $getSubPixelClientWidth(this$static){
  return this$static.clientWidth;
}

function $getSubPixelOffsetLeft(this$static){
  return this$static.offsetLeft || 0;
}

function $getSubPixelOffsetTop(this$static){
  return this$static.offsetTop || 0;
}

function $getSubPixelScrollHeight(this$static){
  return this$static.scrollHeight || 0;
}

function $getSubPixelScrollTop(this$static){
  return this$static.scrollTop || 0;
}

function $getSubPixelScrollWidth(this$static){
  return this$static.scrollWidth || 0;
}

function $getTabIndex(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getTabIndex_0(this$static);
}

function $getTagName(this$static){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).getTagName(this$static);
}

function $getTitle(this$static){
  $clinit_Element();
  return this$static.title;
}

function $hasAttribute(this$static, name_0){
  $clinit_Element();
  return ($clinit_DOMImpl() , impl_4).hasAttribute_0(this$static, name_0);
}

function $hasTagName(this$static, tagName){
  $clinit_Element();
  if (!jsNotEquals(tagName, null)) {
    debugger;
    throw toJs(makeAssertionError_Object('tagName must not be null'));
  }
  return equalsIgnoreCase_Ljava_lang_String__Z__devirtual$(tagName, $getTagName(this$static));
}

function $removeAttribute(this$static, name_0){
  $clinit_Element();
  this$static.removeAttribute(name_0);
}

function $removeClassName(this$static, className){
  $clinit_Element();
  var begin, end, idx, newClassName, oldStyle;
  className = trimClassName(className);
  oldStyle = $getClassName(this$static);
  idx = indexOfName(oldStyle, className);
  if (idx != -1) {
    begin = trim__Ljava_lang_String___devirtual$(substring_II_Ljava_lang_String___devirtual$(oldStyle, 0, idx));
    end = trim__Ljava_lang_String___devirtual$(substring_I_Ljava_lang_String___devirtual$(oldStyle, idx + length__I__devirtual$(className)));
    if (length__I__devirtual$(begin) == 0) {
      newClassName = end;
    }
     else if (length__I__devirtual$(end) == 0) {
      newClassName = begin;
    }
     else {
      newClassName = begin + ' ' + end;
    }
    $setClassName(this$static, newClassName);
    return true;
  }
  return false;
}

function $scrollIntoView(this$static){
  $clinit_Element();
  ($clinit_DOMImpl() , impl_4).scrollIntoView(this$static);
}

function $setAttribute(this$static, name_0, value_0){
  $clinit_Element();
  this$static.setAttribute(name_0, value_0);
}

function $setClassName(this$static, className){
  $clinit_Element();
  this$static.className = className || '';
}

function $setInnerHTML(this$static, html){
  $clinit_Element();
  this$static.innerHTML = html || '';
}

function $setInnerSafeHtml(this$static, html){
  $clinit_Element();
  $setInnerHTML(this$static, html.asString());
}

function $setInnerText(this$static, text_0){
  $clinit_Element();
  ($clinit_DOMImpl() , impl_4).setInnerText(this$static, text_0);
}

function $setPropertyBoolean(this$static, name_0, value_0){
  $clinit_Element();
  this$static[name_0] = value_0;
}

function $setPropertyInt(this$static, name_0, value_0){
  $clinit_Element();
  this$static[name_0] = value_0;
}

function $setPropertyJSO(this$static, name_0, value_0){
  $clinit_Element();
  this$static[name_0] = value_0;
}

function $setPropertyString(this$static, name_0, value_0){
  $clinit_Element();
  this$static[name_0] = value_0;
}

function $setScrollLeft(this$static, scrollLeft){
  $clinit_Element();
  ($clinit_DOMImpl() , impl_4).setScrollLeft(this$static, scrollLeft);
}

function $setScrollTop(this$static, scrollTop){
  $clinit_Element();
  this$static.scrollTop = scrollTop;
}

function $setTabIndex(this$static, tabIndex){
  $clinit_Element();
  this$static.tabIndex = tabIndex;
}

function $setTitle(this$static, title_0){
  $clinit_Element();
  this$static.title = title_0 || '';
}

function as(o){
  $clinit_Element();
  if (!is_0(o)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return o;
}

function indexOfName(nameList, name_0){
  var idx, last, lastPos;
  idx = indexOf_Ljava_lang_String__I__devirtual$(nameList, name_0);
  while (idx != -1) {
    if (idx == 0 || charAt_I_C__devirtual$(nameList, idx - 1) == 32) {
      last = idx + length__I__devirtual$(name_0);
      lastPos = length__I__devirtual$(nameList);
      if (last == lastPos || last < lastPos && charAt_I_C__devirtual$(nameList, last) == 32) {
        break;
      }
    }
    idx = indexOf_Ljava_lang_String_I_I__devirtual$(nameList, name_0, idx + 1);
  }
  return idx;
}

function is_0(o){
  $clinit_Element();
  if (is(o)) {
    return is_1(o);
  }
  return false;
}

function is_1(node){
  return isNotNull(node) && $getNodeType(node) == 1;
}

function toInt32(val){
  return val | 0;
}

function trimClassName(className){
  if (!jsNotEquals(className, null)) {
    debugger;
    throw toJs(makeAssertionError_Object('Unexpectedly null class name'));
  }
  className = trim__Ljava_lang_String___devirtual$(className);
  if (!!isEmpty__Z__devirtual$(className)) {
    debugger;
    throw toJs(makeAssertionError_Object('Unexpectedly empty class name'));
  }
  return className;
}

function $clinit_BodyElement(){
  $clinit_BodyElement = emptyMethod;
  $clinit_Element();
}

function $clinit_ButtonElement(){
  $clinit_ButtonElement = emptyMethod;
  $clinit_Element();
}

function $clinit_CanvasElement(){
  $clinit_CanvasElement = emptyMethod;
  $clinit_Element();
}

function $getContext2d(this$static){
  $clinit_CanvasElement();
  return this$static.getContext('2d');
}

function $setHeight(this$static, height){
  $clinit_CanvasElement();
  this$static.height = height;
}

function $setWidth(this$static, width_0){
  $clinit_CanvasElement();
  this$static.width = width_0;
}

function $clinit_DOMImpl(){
  $clinit_DOMImpl = emptyMethod;
  $clinit_Object();
  impl_4 = castTo(new DOMImplWebkit, 209);
}

function DOMImpl(){
  $clinit_DOMImpl();
  Object_0.call(this);
  this.$init_475();
}

function toInt32_0(val){
  $clinit_DOMImpl();
  return val | 0;
}

defineClass(209, 1, {1:1});
_.$init_475 = function $init_475(){
}
;
_.createButtonElement = function createButtonElement(doc, type_0){
  var e = doc.createElement('BUTTON');
  e.type = type_0;
  return e;
}
;
_.createElement_0 = function createElement(doc, tag){
  return doc.createElement(tag);
}
;
_.createInputElement = function createInputElement(doc, type_0){
  var e = doc.createElement('INPUT');
  e.type = type_0;
  return e;
}
;
_.ensureDocumentScrollingElement = function ensureDocumentScrollingElement(document_0){
  var scrollingElement;
  scrollingElement = this.getDocumentScrollingElement(document_0);
  return isNotNull(scrollingElement)?scrollingElement:$getDocumentElement(document_0);
}
;
_.eventGetAltKey = function eventGetAltKey(evt){
  return !!evt.altKey;
}
;
_.eventGetButton = function eventGetButton(evt){
  return evt.button | 0;
}
;
_.eventGetClientX = function eventGetClientX(evt){
  return toInt32_0(this.eventGetSubPixelClientX(evt));
}
;
_.eventGetClientY = function eventGetClientY(evt){
  return toInt32_0(this.eventGetSubPixelClientY(evt));
}
;
_.eventGetCtrlKey = function eventGetCtrlKey(evt){
  return !!evt.ctrlKey;
}
;
_.eventGetCurrentTarget = function eventGetCurrentTarget(event_0){
  return event_0.currentTarget;
}
;
_.eventGetKeyCode = function eventGetKeyCode(evt){
  return evt.keyCode | 0;
}
;
_.eventGetMetaKey = function eventGetMetaKey(evt){
  return !!evt.metaKey;
}
;
_.eventGetShiftKey = function eventGetShiftKey(evt){
  return !!evt.shiftKey;
}
;
_.eventGetSubPixelClientX = function eventGetSubPixelClientX(evt){
  return evt.clientX || 0;
}
;
_.eventGetSubPixelClientY = function eventGetSubPixelClientY(evt){
  return evt.clientY || 0;
}
;
_.eventGetType = function eventGetType(evt){
  return evt.type;
}
;
_.eventStopPropagation = function eventStopPropagation(evt){
  evt.stopPropagation();
}
;
_.getAbsoluteLeft_0 = function getAbsoluteLeft_0(elem){
  return toInt32_0(this.getSubPixelAbsoluteLeft(elem));
}
;
_.getAbsoluteTop_0 = function getAbsoluteTop_0(elem){
  return toInt32_0(this.getSubPixelAbsoluteTop(elem));
}
;
_.getAttribute_0 = function getAttribute(elem, name_0){
  return elem.getAttribute(name_0) || '';
}
;
_.getBodyOffsetLeft = function getBodyOffsetLeft(doc){
  return 0;
}
;
_.getBodyOffsetTop = function getBodyOffsetTop(doc){
  return 0;
}
;
_.getChangedTouches = function getChangedTouches(evt){
  return evt.changedTouches;
}
;
_.getDocumentScrollingElement = function getDocumentScrollingElement(doc){
  return $getViewportElement(doc);
}
;
_.getFirstChildElement = function getFirstChildElement(elem){
  var child = elem.firstChild;
  while (child && child.nodeType != 1)
    child = child.nextSibling;
  return child;
}
;
_.getInnerHTML = function getInnerHTML(elem){
  return elem.innerHTML;
}
;
_.getInnerText = function getInnerText(node){
  var text_0 = '', child = node.firstChild;
  while (child) {
    if (child.nodeType == 1) {
      text_0 += this.getInnerText(child);
    }
     else if (child.nodeValue) {
      text_0 += child.nodeValue;
    }
    child = child.nextSibling;
  }
  return text_0;
}
;
_.getParentElement = function getParentElement(node){
  var parent_0 = node.parentNode;
  if (!parent_0 || parent_0.nodeType != 1) {
    parent_0 = null;
  }
  return parent_0;
}
;
_.getScrollLeft = function getScrollLeft(doc){
  return $getScrollLeft(this.ensureDocumentScrollingElement(doc));
}
;
_.getScrollLeft_0 = function getScrollLeft_0(elem){
  return toInt32_0(this.getSubPixelScrollLeft(elem));
}
;
_.getScrollTop = function getScrollTop(doc){
  return $getScrollTop(this.ensureDocumentScrollingElement(doc));
}
;
_.getStyleProperty = function getStyleProperty(style, name_0){
  return style[name_0];
}
;
_.getSubPixelAbsoluteLeft = function getSubPixelAbsoluteLeft(elem){
  var left = 0;
  var curr = elem;
  while (curr.offsetParent) {
    left -= curr.scrollLeft;
    curr = curr.parentNode;
  }
  while (elem) {
    left += elem.offsetLeft;
    elem = elem.offsetParent;
  }
  return left;
}
;
_.getSubPixelAbsoluteTop = function getSubPixelAbsoluteTop(elem){
  var top_0 = 0;
  var curr = elem;
  while (curr.offsetParent) {
    top_0 -= curr.scrollTop;
    curr = curr.parentNode;
  }
  while (elem) {
    top_0 += elem.offsetTop;
    elem = elem.offsetParent;
  }
  return top_0;
}
;
_.getSubPixelScrollLeft = function getSubPixelScrollLeft(elem){
  return elem.scrollLeft || 0;
}
;
_.getTabIndex_0 = function getTabIndex_0(elem){
  return elem.tabIndex;
}
;
_.getTagName = function getTagName(elem){
  return elem.tagName;
}
;
_.getTouches = function getTouches(evt){
  return evt.touches;
}
;
_.hasAttribute_0 = function hasAttribute(elem, name_0){
  return elem.hasAttribute(name_0);
}
;
_.scrollIntoView = function scrollIntoView(elem){
  var left = elem.offsetLeft, top_0 = elem.offsetTop;
  var width_0 = elem.offsetWidth, height = elem.offsetHeight;
  if (elem.parentNode != elem.offsetParent) {
    left -= elem.parentNode.offsetLeft;
    top_0 -= elem.parentNode.offsetTop;
  }
  var cur = elem.parentNode;
  while (cur && cur.nodeType == 1) {
    if (left < cur.scrollLeft) {
      cur.scrollLeft = left;
    }
    if (left + width_0 > cur.scrollLeft + cur.clientWidth) {
      cur.scrollLeft = left + width_0 - cur.clientWidth;
    }
    if (top_0 < cur.scrollTop) {
      cur.scrollTop = top_0;
    }
    if (top_0 + height > cur.scrollTop + cur.clientHeight) {
      cur.scrollTop = top_0 + height - cur.clientHeight;
    }
    var offsetLeft = cur.offsetLeft, offsetTop = cur.offsetTop;
    if (cur.parentNode != cur.offsetParent) {
      offsetLeft -= cur.parentNode.offsetLeft;
      offsetTop -= cur.parentNode.offsetTop;
    }
    left += offsetLeft - cur.scrollLeft;
    top_0 += offsetTop - cur.scrollTop;
    cur = cur.parentNode;
  }
}
;
_.selectAdd = function selectAdd(select, option, before){
  select.add(option, before);
}
;
_.selectGetLength = function selectGetLength(select){
  return select.options.length;
}
;
_.selectGetOptions = function selectGetOptions(select){
  return select.options;
}
;
_.setInnerText = function setInnerText(elem, text_0){
  while (elem.firstChild) {
    elem.removeChild(elem.firstChild);
  }
  if (text_0 != null) {
    elem.appendChild(elem.ownerDocument.createTextNode(text_0));
  }
}
;
_.setScrollLeft = function setScrollLeft(elem, left){
  elem.scrollLeft = left;
}
;
_.toString_4 = function toString_39(elem){
  return elem.outerHTML;
}
;
_.touchGetClientX = function touchGetClientX(touch){
  return toInt32_0(this.touchGetSubPixelClientX(touch));
}
;
_.touchGetClientY = function touchGetClientY(touch){
  return toInt32_0(this.touchGetSubPixelClientY(touch));
}
;
_.touchGetIdentifier = function touchGetIdentifier(touch){
  return touch.identifier;
}
;
_.touchGetPageX = function touchGetPageX(touch){
  return toInt32_0(this.touchGetSubPixelPageX(touch));
}
;
_.touchGetPageY = function touchGetPageY(touch){
  return toInt32_0(this.touchGetSubPixelPageY(touch));
}
;
_.touchGetSubPixelClientX = function touchGetSubPixelClientX(touch){
  return touch.clientX || 0;
}
;
_.touchGetSubPixelClientY = function touchGetSubPixelClientY(touch){
  return touch.clientY || 0;
}
;
_.touchGetSubPixelPageX = function touchGetSubPixelPageX(touch){
  return touch.pageX || 0;
}
;
_.touchGetSubPixelPageY = function touchGetSubPixelPageY(touch){
  return touch.pageY || 0;
}
;
_.touchGetTarget = function touchGetTarget(touch){
  return touch.target;
}
;
var impl_4;
var Lcom_google_gwt_dom_client_DOMImpl_2_classLit = createForClass('com.google.gwt.dom.client', 'DOMImpl', 209, Ljava_lang_Object_2_classLit);
function $clinit_DOMImplStandard(){
  $clinit_DOMImplStandard = emptyMethod;
  $clinit_DOMImpl();
}

function DOMImplStandard(){
  $clinit_DOMImplStandard();
  DOMImpl.call(this);
  this.$init_476();
}

defineClass(751, 209, {1:1});
_.$init_476 = function $init_476(){
}
;
_.createHtmlEvent = function createHtmlEvent(doc, type_0, canBubble, cancelable){
  var evt = doc.createEvent('HTMLEvents');
  evt.initEvent(type_0, canBubble, cancelable);
  return evt;
}
;
_.createInputRadioElement = function createInputRadioElement(doc, name_0){
  var elem = doc.createElement('INPUT');
  elem.type = 'radio';
  elem.name = name_0;
  elem.value = 'on';
  return elem;
}
;
_.createMouseEvent = function createMouseEvent(doc, type_0, canBubble, cancelable, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget){
  if (button == 1) {
    button = 0;
  }
   else if (button == 4) {
    button = 1;
  }
   else {
    button = 2;
  }
  var evt = doc.createEvent('MouseEvents');
  evt.initMouseEvent(type_0, canBubble, cancelable, null, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget);
  return evt;
}
;
_.dispatchEvent_0 = function dispatchEvent_0(target, evt){
  target.dispatchEvent(evt);
}
;
_.eventGetButton = function eventGetButton_0(evt){
  var button = evt.button;
  if (button == 1) {
    return 4;
  }
   else if (button == 2) {
    return 2;
  }
  return 1;
}
;
_.eventGetRelatedTarget = function eventGetRelatedTarget(evt){
  return evt.relatedTarget;
}
;
_.eventGetTarget = function eventGetTarget(evt){
  return evt.target;
}
;
_.eventPreventDefault = function eventPreventDefault(evt){
  evt.preventDefault();
}
;
_.getDocumentScrollingElement = function getDocumentScrollingElement_0(doc){
  if (isNotNull(this.getNativeDocumentScrollingElement(doc))) {
    return this.getNativeDocumentScrollingElement(doc);
  }
  return this.getLegacyDocumentScrollingElement(doc);
}
;
_.getInnerText = function getInnerText_0(elem){
  return elem.textContent;
}
;
_.getLegacyDocumentScrollingElement = function getLegacyDocumentScrollingElement(doc){
  return $getViewportElement(doc);
}
;
_.getNativeDocumentScrollingElement = function getNativeDocumentScrollingElement(doc){
  return doc.scrollingElement;
}
;
_.isOrHasChild = function isOrHasChild(parent_0, child){
  return parent_0.contains(child);
}
;
_.setInnerText = function setInnerText_0(elem, text_0){
  elem.textContent = text_0 || '';
}
;
var Lcom_google_gwt_dom_client_DOMImplStandard_2_classLit = createForClass('com.google.gwt.dom.client', 'DOMImplStandard', 751, Lcom_google_gwt_dom_client_DOMImpl_2_classLit);
function $clinit_DOMImplStandardBase(){
  $clinit_DOMImplStandardBase = emptyMethod;
  $clinit_DOMImplStandard();
}

function DOMImplStandardBase(){
  $clinit_DOMImplStandardBase();
  DOMImplStandard.call(this);
  this.$init_477();
}

function getAbsoluteLeftUsingOffsets(elem){
  if (elem.offsetLeft == null) {
    return 0;
  }
  var left = 0;
  var doc = elem.ownerDocument;
  var curr = elem.parentNode;
  if (curr) {
    while (curr.offsetParent) {
      left -= curr.scrollLeft;
      if (doc.defaultView.getComputedStyle(curr, '').getPropertyValue('direction') == 'rtl') {
        left += curr.scrollWidth - curr.clientWidth;
      }
      curr = curr.parentNode;
    }
  }
  while (elem) {
    left += elem.offsetLeft;
    if (doc.defaultView.getComputedStyle(elem, '')['position'] == 'fixed') {
      left += doc.body.scrollLeft;
      return left;
    }
    var parent_0 = elem.offsetParent;
    if (parent_0 && $wnd.devicePixelRatio) {
      left += parseInt(doc.defaultView.getComputedStyle(parent_0, '').getPropertyValue('border-left-width'));
    }
    if (parent_0 && (parent_0.tagName == 'BODY' && elem.style.position == 'absolute')) {
      break;
    }
    elem = parent_0;
  }
  return left;
}

function getAbsoluteTopUsingOffsets(elem){
  if (elem.offsetTop == null) {
    return 0;
  }
  var top_0 = 0;
  var doc = elem.ownerDocument;
  var curr = elem.parentNode;
  if (curr) {
    while (curr.offsetParent) {
      top_0 -= curr.scrollTop;
      curr = curr.parentNode;
    }
  }
  while (elem) {
    top_0 += elem.offsetTop;
    if (doc.defaultView.getComputedStyle(elem, '')['position'] == 'fixed') {
      top_0 += doc.body.scrollTop;
      return top_0;
    }
    var parent_0 = elem.offsetParent;
    if (parent_0 && $wnd.devicePixelRatio) {
      top_0 += parseInt(doc.defaultView.getComputedStyle(parent_0, '').getPropertyValue('border-top-width'));
    }
    if (parent_0 && (parent_0.tagName == 'BODY' && elem.style.position == 'absolute')) {
      break;
    }
    elem = parent_0;
  }
  return top_0;
}

function getBoundingClientRect(element){
  return element.getBoundingClientRect && element.getBoundingClientRect();
}

defineClass(752, 751, {1:1});
_.$init_477 = function $init_477(){
}
;
_.createButtonElement = function createButtonElement_0(doc, type_0){
  var e = doc.createElement('BUTTON');
  e.setAttribute('type', type_0);
  return e;
}
;
_.eventGetCurrentTarget = function eventGetCurrentTarget_0(event_0){
  return event_0.currentTarget || $wnd;
}
;
_.eventGetMouseWheelVelocityY = function eventGetMouseWheelVelocityY(evt){
  return Math.round(-evt.wheelDelta / 40) || 0;
}
;
_.getAbsoluteLeft_0 = function getAbsoluteLeft_1(elem){
  var left, rect;
  rect = getBoundingClientRect(elem);
  left = isNotNull(rect)?$getSubPixelLeft(rect) + this.getScrollLeft($getOwnerDocument(elem)):getAbsoluteLeftUsingOffsets(elem);
  return toInt32_0(left);
}
;
_.getAbsoluteTop_0 = function getAbsoluteTop_1(elem){
  var rect, top_0;
  rect = getBoundingClientRect(elem);
  top_0 = isNotNull(rect)?$getSubPixelTop(rect) + this.getScrollTop($getOwnerDocument(elem)):getAbsoluteTopUsingOffsets(elem);
  return toInt32_0(top_0);
}
;
_.getScrollLeft_0 = function getScrollLeft_1(elem){
  if (!$hasTagName(elem, 'body') && this.isRTL(elem)) {
    return getClassPrototype(209).getScrollLeft_0.call(this, elem) - ($getScrollWidth(elem) - $getClientWidth(elem));
  }
  return getClassPrototype(209).getScrollLeft_0.call(this, elem);
}
;
_.getTabIndex_0 = function getTabIndex_1(elem){
  return typeof elem.tabIndex != 'undefined'?elem.tabIndex:-1;
}
;
_.isRTL = function isRTL(elem){
  return elem.ownerDocument.defaultView.getComputedStyle(elem, '').direction == 'rtl';
}
;
_.setScrollLeft = function setScrollLeft_0(elem, left){
  if (!$hasTagName(elem, 'body') && this.isRTL(elem)) {
    left += $getScrollWidth(elem) - $getClientWidth(elem);
  }
  getClassPrototype(209).setScrollLeft.call(this, elem, left);
}
;
var Lcom_google_gwt_dom_client_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.dom.client', 'DOMImplStandardBase', 752, Lcom_google_gwt_dom_client_DOMImplStandard_2_classLit);
function $clinit_DOMImplStandardBase$ClientRect(){
  $clinit_DOMImplStandardBase$ClientRect = emptyMethod;
  $clinit_JavaScriptObject();
}

function $getSubPixelLeft(this$static){
  $clinit_DOMImplStandardBase$ClientRect();
  return this$static.left;
}

function $getSubPixelTop(this$static){
  $clinit_DOMImplStandardBase$ClientRect();
  return this$static.top;
}

function $clinit_DOMImplWebkit(){
  $clinit_DOMImplWebkit = emptyMethod;
  $clinit_DOMImplStandardBase();
}

function DOMImplWebkit(){
  $clinit_DOMImplWebkit();
  DOMImplStandardBase.call(this);
  this.$init_478();
}

defineClass(753, 752, {209:1, 1:1}, DOMImplWebkit);
_.$init_478 = function $init_478(){
}
;
_.eventGetTarget = function eventGetTarget_0(evt){
  var target = evt.target;
  if (target && target.nodeType == 3) {
    target = target.parentNode;
  }
  return target;
}
;
_.getLegacyDocumentScrollingElement = function getLegacyDocumentScrollingElement_0(doc){
  return $getBody(doc);
}
;
var Lcom_google_gwt_dom_client_DOMImplWebkit_2_classLit = createForClass('com.google.gwt.dom.client', 'DOMImplWebkit', 753, Lcom_google_gwt_dom_client_DOMImplStandardBase_2_classLit);
function $clinit_DivElement(){
  $clinit_DivElement = emptyMethod;
  $clinit_Element();
}

function $clinit_Document(){
  $clinit_Document = emptyMethod;
  $clinit_Node();
}

function $createCanvasElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'canvas');
}

function $createClickEvent(this$static, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey){
  $clinit_Document();
  return $createMouseEvent(this$static, 'click', true, true, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, 1, null);
}

function $createColElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'col');
}

function $createDivElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'div');
}

function $createElement(this$static, tagName){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, tagName);
}

function $createHtmlEvent(this$static, type_0, canBubble, cancelable){
  return ($clinit_DOMImpl() , impl_4).createHtmlEvent(this$static, type_0, canBubble, cancelable);
}

function $createIFrameElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'iframe');
}

function $createImageElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'img');
}

function $createLabelElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'label');
}

function $createLoadEvent(this$static){
  $clinit_Document();
  return $createHtmlEvent(this$static, 'load', false, false);
}

function $createMouseEvent(this$static, type_0, canBubble, cancelable, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget){
  return ($clinit_DOMImpl() , impl_4).createMouseEvent(this$static, type_0, canBubble, cancelable, detail, screenX_0, screenY_0, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget);
}

function $createOptionElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'option');
}

function $createPushButtonElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createButtonElement(this$static, 'button');
}

function $createRadioInputElement(this$static, name_0){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createInputRadioElement(this$static, name_0);
}

function $createScriptElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'script');
}

function $createSelectElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'select');
}

function $createSpanElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'span');
}

function $createTBodyElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'tbody');
}

function $createTDElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'td');
}

function $createTRElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'tr');
}

function $createTableElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'table');
}

function $createTextAreaElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createElement_0(this$static, 'textarea');
}

function $createTextInputElement(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).createInputElement(this$static, 'text');
}

function $createUniqueId(this$static){
  $clinit_Document();
  if (!this$static.gwt_uid) {
    this$static.gwt_uid = 1;
  }
  return 'gwt-uid-' + this$static.gwt_uid++;
}

function $getBody(this$static){
  $clinit_Document();
  return this$static.body;
}

function $getBodyOffsetLeft(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).getBodyOffsetLeft(this$static);
}

function $getBodyOffsetTop(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).getBodyOffsetTop(this$static);
}

function $getClientHeight_0(this$static){
  $clinit_Document();
  return $getClientHeight($getViewportElement(this$static));
}

function $getClientWidth_0(this$static){
  $clinit_Document();
  return $getClientWidth($getViewportElement(this$static));
}

function $getCompatMode(this$static){
  $clinit_Document();
  return this$static.compatMode;
}

function $getDocumentElement(this$static){
  $clinit_Document();
  return this$static.documentElement;
}

function $getElementById(this$static, elementId){
  $clinit_Document();
  return this$static.getElementById(elementId);
}

function $getElementsByTagName(this$static, tagName){
  $clinit_Document();
  return this$static.getElementsByTagName(tagName);
}

function $getScrollHeight_0(this$static){
  $clinit_Document();
  return $getScrollHeight($getViewportElement(this$static));
}

function $getScrollLeft_0(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).getScrollLeft(this$static);
}

function $getScrollTop_0(this$static){
  $clinit_Document();
  return ($clinit_DOMImpl() , impl_4).getScrollTop(this$static);
}

function $getScrollWidth_0(this$static){
  $clinit_Document();
  return $getScrollWidth($getViewportElement(this$static));
}

function $getViewportElement(this$static){
  $clinit_Document();
  return $isCSS1Compat(this$static)?$getDocumentElement(this$static):$getBody(this$static);
}

function $isCSS1Compat(this$static){
  return equals_Ljava_lang_Object__Z__devirtual$_2($getCompatMode(this$static), 'CSS1Compat');
}

function get_2654(){
  $clinit_Document();
  if (isScript()) {
    return nativeGet();
  }
  if (isNull(doc_0)) {
    doc_0 = nativeGet();
  }
  return doc_0;
}

function nativeGet(){
  return $doc;
}

var doc_0;
function $clinit_EventTarget(){
  $clinit_EventTarget = emptyMethod;
  $clinit_JavaScriptObject();
}

function $clinit_FrameElement(){
  $clinit_FrameElement = emptyMethod;
  $clinit_Element();
}

function $setSrc(this$static, src_0){
  $clinit_FrameElement();
  this$static.src = src_0;
}

function $clinit_IFrameElement(){
  $clinit_IFrameElement = emptyMethod;
  $clinit_Element();
}

function $clinit_ImageElement(){
  $clinit_ImageElement = emptyMethod;
  $clinit_Element();
}

function $getHeight(this$static){
  $clinit_ImageElement();
  return this$static.height;
}

function $getSrc(this$static){
  $clinit_ImageElement();
  return this$static.src;
}

function $getWidth(this$static){
  $clinit_ImageElement();
  return this$static.width;
}

function $setAlt(this$static, alt_0){
  $clinit_ImageElement();
  this$static.alt = alt_0;
}

function $setHeight_0(this$static, height){
  $clinit_ImageElement();
  this$static.height = height;
}

function $setSrc_0(this$static, src_0){
  $clinit_ImageElement();
  this$static.src = src_0;
}

function $setWidth_0(this$static, width_0){
  $clinit_ImageElement();
  this$static.width = width_0;
}

function as_0(elem){
  $clinit_ImageElement();
  if (!is_2(elem)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return elem;
}

function is_2(elem){
  return isNotNull(elem) && $hasTagName(elem, 'img');
}

function $clinit_InputElement(){
  $clinit_InputElement = emptyMethod;
  $clinit_Element();
}

function $getType(this$static){
  $clinit_InputElement();
  return this$static.type;
}

function $isChecked(this$static){
  $clinit_InputElement();
  return !!this$static.checked;
}

function $isDefaultChecked(this$static){
  $clinit_InputElement();
  return !!this$static.defaultChecked;
}

function $isDisabled(this$static){
  $clinit_InputElement();
  return !!this$static.disabled;
}

function $setChecked(this$static, checked){
  $clinit_InputElement();
  this$static.checked = checked;
}

function $setDefaultChecked(this$static, defaultChecked){
  $clinit_InputElement();
  this$static.defaultChecked = defaultChecked;
}

function $setDisabled(this$static, disabled){
  $clinit_InputElement();
  this$static.disabled = disabled;
}

function as_1(elem){
  $clinit_InputElement();
  if (!is_3(elem)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return elem;
}

function is_3(elem){
  return isNotNull(elem) && $hasTagName(elem, 'input');
}

function $clinit_LabelElement(){
  $clinit_LabelElement = emptyMethod;
  $clinit_Element();
}

function $setHtmlFor(this$static, htmlFor){
  $clinit_LabelElement();
  this$static.htmlFor = htmlFor;
}

function $clinit_NativeEvent(){
  $clinit_NativeEvent = emptyMethod;
  $clinit_JavaScriptObject();
}

function $getAltKey(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetAltKey(this$static);
}

function $getButton(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetButton(this$static);
}

function $getChangedTouches(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).getChangedTouches(this$static);
}

function $getClientX(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetClientX(this$static);
}

function $getClientY(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetClientY(this$static);
}

function $getCtrlKey(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetCtrlKey(this$static);
}

function $getCurrentEventTarget(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetCurrentTarget(this$static);
}

function $getEventTarget(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetTarget(this$static);
}

function $getKeyCode(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetKeyCode(this$static);
}

function $getMetaKey(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetMetaKey(this$static);
}

function $getMouseWheelVelocityY(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetMouseWheelVelocityY(this$static);
}

function $getRelatedEventTarget(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetRelatedTarget(this$static);
}

function $getShiftKey(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetShiftKey(this$static);
}

function $getTouches(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).getTouches(this$static);
}

function $getType_0(this$static){
  $clinit_NativeEvent();
  return ($clinit_DOMImpl() , impl_4).eventGetType(this$static);
}

function $preventDefault(this$static){
  $clinit_NativeEvent();
  ($clinit_DOMImpl() , impl_4).eventPreventDefault(this$static);
}

function $stopPropagation(this$static){
  $clinit_NativeEvent();
  ($clinit_DOMImpl() , impl_4).eventStopPropagation(this$static);
}

function $clinit_NodeList(){
  $clinit_NodeList = emptyMethod;
  $clinit_JavaScriptObject();
}

function $getItem(this$static, index_0){
  $clinit_NodeList();
  return this$static[index_0];
}

function $getLength(this$static){
  $clinit_NodeList();
  return this$static.length;
}

function $clinit_OptionElement(){
  $clinit_OptionElement = emptyMethod;
  $clinit_Element();
}

function $getText(this$static){
  $clinit_OptionElement();
  return this$static.text;
}

function $getValue(this$static){
  $clinit_OptionElement();
  return this$static.value;
}

function $setSelected(this$static, selected){
  $clinit_OptionElement();
  this$static.selected = selected;
}

function $setText(this$static, text_0){
  $clinit_OptionElement();
  this$static.text = text_0;
}

function $setValue(this$static, value_0){
  $clinit_OptionElement();
  this$static.value = value_0;
}

function $clinit_ScriptElement(){
  $clinit_ScriptElement = emptyMethod;
  $clinit_Element();
}

function $setSrc_1(this$static, src_0){
  $clinit_ScriptElement();
  this$static.src = src_0;
}

function $clinit_SelectElement(){
  $clinit_SelectElement = emptyMethod;
  $clinit_Element();
}

function $add(this$static, option, before){
  $clinit_SelectElement();
  ($clinit_DOMImpl() , impl_4).selectAdd(this$static, option, before);
}

function $getLength_0(this$static){
  $clinit_SelectElement();
  return ($clinit_DOMImpl() , impl_4).selectGetLength(this$static);
}

function $getOptions(this$static){
  $clinit_SelectElement();
  return ($clinit_DOMImpl() , impl_4).selectGetOptions(this$static);
}

function $getSelectedIndex(this$static){
  $clinit_SelectElement();
  return this$static.selectedIndex;
}

function $setSelectedIndex(this$static, index_0){
  $clinit_SelectElement();
  this$static.selectedIndex = index_0;
}

function $setSize(this$static, size_0){
  $clinit_SelectElement();
  this$static.size = size_0;
}

function $clinit_SpanElement(){
  $clinit_SpanElement = emptyMethod;
  $clinit_Element();
}

function $clinit_Style(){
  $clinit_Style = emptyMethod;
  $clinit_JavaScriptObject();
}

function $assertCamelCase(this$static, name_0){
  if (!!contains_Ljava_lang_CharSequence__Z__devirtual$(name_0, '-')) {
    debugger;
    throw toJs(makeAssertionError_Object("The style name '" + name_0 + "' should be in camelCase format"));
  }
}

function $getProperty(this$static, name_0){
  $clinit_Style();
  $assertCamelCase(this$static, name_0);
  return $getPropertyImpl(this$static, name_0);
}

function $getPropertyImpl(this$static, name_0){
  return ($clinit_DOMImpl() , impl_4).getStyleProperty(this$static, name_0);
}

function $setDisplay(this$static, value_0){
  $clinit_Style();
  $setProperty_0(this$static, 'display', value_0.getCssName());
}

function $setHeight_1(this$static, value_0, unit){
  $clinit_Style();
  $setProperty(this$static, 'height', value_0, unit);
}

function $setMarginLeft(this$static, value_0, unit){
  $clinit_Style();
  $setProperty(this$static, 'marginLeft', value_0, unit);
}

function $setMarginRight(this$static, value_0, unit){
  $clinit_Style();
  $setProperty(this$static, 'marginRight', value_0, unit);
}

function $setOverflow(this$static, value_0){
  $clinit_Style();
  $setProperty_0(this$static, 'overflow', value_0.getCssName());
}

function $setPosition(this$static, value_0){
  $clinit_Style();
  $setProperty_0(this$static, 'position', value_0.getCssName());
}

function $setProperty(this$static, name_0, value_0, unit){
  $assertCamelCase(this$static, name_0);
  $setPropertyImpl(this$static, name_0, value_0 + unit.getType_1());
}

function $setProperty_0(this$static, name_0, value_0){
  $clinit_Style();
  $assertCamelCase(this$static, name_0);
  $setPropertyImpl(this$static, name_0, value_0);
}

function $setPropertyImpl(this$static, name_0, value_0){
  this$static[name_0] = value_0;
}

function $setPropertyPx(this$static, name_0, value_0){
  $clinit_Style();
  $setProperty(this$static, name_0, value_0, ($clinit_Style$Unit() , PX));
}

function $setWidth_1(this$static, value_0, unit){
  $clinit_Style();
  $setProperty(this$static, 'width', value_0, unit);
}

function $clinit_Style$HasCssName(){
  $clinit_Style$HasCssName = emptyMethod;
}

var Lcom_google_gwt_dom_client_Style$HasCssName_2_classLit = createForInterface('com.google.gwt.dom.client', 'Style/HasCssName');
function $clinit_Style$Display(){
  $clinit_Style$Display = emptyMethod;
  $clinit_Enum();
  NONE = new Style$Display$1('NONE', 0);
  BLOCK = new Style$Display$2('BLOCK', 1);
  INLINE = new Style$Display$3('INLINE', 2);
  INLINE_BLOCK = new Style$Display$4('INLINE_BLOCK', 3);
  INLINE_TABLE = new Style$Display$5('INLINE_TABLE', 4);
  LIST_ITEM = new Style$Display$6('LIST_ITEM', 5);
  RUN_IN = new Style$Display$7('RUN_IN', 6);
  TABLE = new Style$Display$8('TABLE', 7);
  TABLE_CAPTION = new Style$Display$9('TABLE_CAPTION', 8);
  TABLE_COLUMN_GROUP = new Style$Display$10('TABLE_COLUMN_GROUP', 9);
  TABLE_HEADER_GROUP = new Style$Display$11('TABLE_HEADER_GROUP', 10);
  TABLE_FOOTER_GROUP = new Style$Display$12('TABLE_FOOTER_GROUP', 11);
  TABLE_ROW_GROUP = new Style$Display$13('TABLE_ROW_GROUP', 12);
  TABLE_CELL = new Style$Display$14('TABLE_CELL', 13);
  TABLE_COLUMN = new Style$Display$15('TABLE_COLUMN', 14);
  TABLE_ROW = new Style$Display$16('TABLE_ROW', 15);
  INITIAL = new Style$Display$17('INITIAL', 16);
  FLEX = new Style$Display$18('FLEX', 17);
  INLINE_FLEX = new Style$Display$19('INLINE_FLEX', 18);
}

function Style$Display(enum$name, enum$ordinal){
  $clinit_Style$Display();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_479();
}

function valueOf_21(name_0){
  $clinit_Style$Display();
  return valueOf(($clinit_Style$Display$Map() , $MAP_20), name_0);
}

function values_22(){
  $clinit_Style$Display();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Display_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 50, 0, [NONE, BLOCK, INLINE, INLINE_BLOCK, INLINE_TABLE, LIST_ITEM, RUN_IN, TABLE, TABLE_CAPTION, TABLE_COLUMN_GROUP, TABLE_HEADER_GROUP, TABLE_FOOTER_GROUP, TABLE_ROW_GROUP, TABLE_CELL, TABLE_COLUMN, TABLE_ROW, INITIAL, FLEX, INLINE_FLEX]);
}

defineClass(50, 7, {50:1, 4:1, 8:1, 7:1, 1:1});
_.$init_479 = function $init_479(){
}
;
var BLOCK, FLEX, INITIAL, INLINE, INLINE_BLOCK, INLINE_FLEX, INLINE_TABLE, LIST_ITEM, NONE, RUN_IN, TABLE, TABLE_CAPTION, TABLE_CELL, TABLE_COLUMN, TABLE_COLUMN_GROUP, TABLE_FOOTER_GROUP, TABLE_HEADER_GROUP, TABLE_ROW, TABLE_ROW_GROUP;
var Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display', 50, Ljava_lang_Enum_2_classLit, values_22, valueOf_21);
function $clinit_Style$Display$1(){
  $clinit_Style$Display$1 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$1(enum$name, enum$ordinal){
  $clinit_Style$Display$1();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_480();
}

defineClass(624, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$1);
_.$init_480 = function $init_480(){
}
;
_.getCssName = function getCssName(){
  return 'none';
}
;
var Lcom_google_gwt_dom_client_Style$Display$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/1', 624, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$10(){
  $clinit_Style$Display$10 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$10(enum$name, enum$ordinal){
  $clinit_Style$Display$10();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_481();
}

defineClass(633, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$10);
_.$init_481 = function $init_481(){
}
;
_.getCssName = function getCssName_0(){
  return 'table-column-group';
}
;
var Lcom_google_gwt_dom_client_Style$Display$10_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/10', 633, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$11(){
  $clinit_Style$Display$11 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$11(enum$name, enum$ordinal){
  $clinit_Style$Display$11();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_482();
}

defineClass(634, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$11);
_.$init_482 = function $init_482(){
}
;
_.getCssName = function getCssName_1(){
  return 'table-header-group';
}
;
var Lcom_google_gwt_dom_client_Style$Display$11_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/11', 634, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$12(){
  $clinit_Style$Display$12 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$12(enum$name, enum$ordinal){
  $clinit_Style$Display$12();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_483();
}

defineClass(635, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$12);
_.$init_483 = function $init_483(){
}
;
_.getCssName = function getCssName_2(){
  return 'table-footer-group';
}
;
var Lcom_google_gwt_dom_client_Style$Display$12_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/12', 635, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$13(){
  $clinit_Style$Display$13 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$13(enum$name, enum$ordinal){
  $clinit_Style$Display$13();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_484();
}

defineClass(636, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$13);
_.$init_484 = function $init_484(){
}
;
_.getCssName = function getCssName_3(){
  return 'table-row-group';
}
;
var Lcom_google_gwt_dom_client_Style$Display$13_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/13', 636, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$14(){
  $clinit_Style$Display$14 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$14(enum$name, enum$ordinal){
  $clinit_Style$Display$14();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_485();
}

defineClass(637, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$14);
_.$init_485 = function $init_485(){
}
;
_.getCssName = function getCssName_4(){
  return 'table-cell';
}
;
var Lcom_google_gwt_dom_client_Style$Display$14_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/14', 637, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$15(){
  $clinit_Style$Display$15 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$15(enum$name, enum$ordinal){
  $clinit_Style$Display$15();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_486();
}

defineClass(638, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$15);
_.$init_486 = function $init_486(){
}
;
_.getCssName = function getCssName_5(){
  return 'table-column';
}
;
var Lcom_google_gwt_dom_client_Style$Display$15_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/15', 638, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$16(){
  $clinit_Style$Display$16 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$16(enum$name, enum$ordinal){
  $clinit_Style$Display$16();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_487();
}

defineClass(639, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$16);
_.$init_487 = function $init_487(){
}
;
_.getCssName = function getCssName_6(){
  return 'table-row';
}
;
var Lcom_google_gwt_dom_client_Style$Display$16_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/16', 639, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$17(){
  $clinit_Style$Display$17 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$17(enum$name, enum$ordinal){
  $clinit_Style$Display$17();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_488();
}

defineClass(640, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$17);
_.$init_488 = function $init_488(){
}
;
_.getCssName = function getCssName_7(){
  return 'initial';
}
;
var Lcom_google_gwt_dom_client_Style$Display$17_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/17', 640, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$18(){
  $clinit_Style$Display$18 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$18(enum$name, enum$ordinal){
  $clinit_Style$Display$18();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_489();
}

defineClass(641, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$18);
_.$init_489 = function $init_489(){
}
;
_.getCssName = function getCssName_8(){
  return 'flex';
}
;
var Lcom_google_gwt_dom_client_Style$Display$18_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/18', 641, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$19(){
  $clinit_Style$Display$19 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$19(enum$name, enum$ordinal){
  $clinit_Style$Display$19();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_490();
}

defineClass(642, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$19);
_.$init_490 = function $init_490(){
}
;
_.getCssName = function getCssName_9(){
  return 'inline-flex';
}
;
var Lcom_google_gwt_dom_client_Style$Display$19_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/19', 642, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$2(){
  $clinit_Style$Display$2 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$2(enum$name, enum$ordinal){
  $clinit_Style$Display$2();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_491();
}

defineClass(625, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$2);
_.$init_491 = function $init_491(){
}
;
_.getCssName = function getCssName_10(){
  return 'block';
}
;
var Lcom_google_gwt_dom_client_Style$Display$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/2', 625, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$3(){
  $clinit_Style$Display$3 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$3(enum$name, enum$ordinal){
  $clinit_Style$Display$3();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_492();
}

defineClass(626, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$3);
_.$init_492 = function $init_492(){
}
;
_.getCssName = function getCssName_11(){
  return 'inline';
}
;
var Lcom_google_gwt_dom_client_Style$Display$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/3', 626, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$4(){
  $clinit_Style$Display$4 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$4(enum$name, enum$ordinal){
  $clinit_Style$Display$4();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_493();
}

defineClass(627, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$4);
_.$init_493 = function $init_493(){
}
;
_.getCssName = function getCssName_12(){
  return 'inline-block';
}
;
var Lcom_google_gwt_dom_client_Style$Display$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/4', 627, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$5(){
  $clinit_Style$Display$5 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$5(enum$name, enum$ordinal){
  $clinit_Style$Display$5();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_494();
}

defineClass(628, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$5);
_.$init_494 = function $init_494(){
}
;
_.getCssName = function getCssName_13(){
  return 'inline-table';
}
;
var Lcom_google_gwt_dom_client_Style$Display$5_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/5', 628, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$6(){
  $clinit_Style$Display$6 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$6(enum$name, enum$ordinal){
  $clinit_Style$Display$6();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_495();
}

defineClass(629, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$6);
_.$init_495 = function $init_495(){
}
;
_.getCssName = function getCssName_14(){
  return 'list-item';
}
;
var Lcom_google_gwt_dom_client_Style$Display$6_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/6', 629, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$7(){
  $clinit_Style$Display$7 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$7(enum$name, enum$ordinal){
  $clinit_Style$Display$7();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_496();
}

defineClass(630, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$7);
_.$init_496 = function $init_496(){
}
;
_.getCssName = function getCssName_15(){
  return 'run-in';
}
;
var Lcom_google_gwt_dom_client_Style$Display$7_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/7', 630, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$8(){
  $clinit_Style$Display$8 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$8(enum$name, enum$ordinal){
  $clinit_Style$Display$8();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_497();
}

defineClass(631, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$8);
_.$init_497 = function $init_497(){
}
;
_.getCssName = function getCssName_16(){
  return 'table';
}
;
var Lcom_google_gwt_dom_client_Style$Display$8_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/8', 631, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$9(){
  $clinit_Style$Display$9 = emptyMethod;
  $clinit_Style$Display();
}

function Style$Display$9(enum$name, enum$ordinal){
  $clinit_Style$Display$9();
  Style$Display.call(this, enum$name, enum$ordinal);
  this.$init_498();
}

defineClass(632, 50, {50:1, 4:1, 8:1, 7:1, 1:1}, Style$Display$9);
_.$init_498 = function $init_498(){
}
;
_.getCssName = function getCssName_17(){
  return 'table-caption';
}
;
var Lcom_google_gwt_dom_client_Style$Display$9_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Display/9', 632, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null);
function $clinit_Style$Display$Map(){
  $clinit_Style$Display$Map = emptyMethod;
  $MAP_20 = createValueOfMap(values_22());
}

var $MAP_20;
function $clinit_Style$Overflow(){
  $clinit_Style$Overflow = emptyMethod;
  $clinit_Enum();
  VISIBLE = new Style$Overflow$1('VISIBLE', 0);
  HIDDEN_0 = new Style$Overflow$2('HIDDEN', 1);
  SCROLL = new Style$Overflow$3('SCROLL', 2);
  AUTO = new Style$Overflow$4('AUTO', 3);
}

function Style$Overflow(enum$name, enum$ordinal){
  $clinit_Style$Overflow();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_499();
}

function valueOf_22(name_0){
  $clinit_Style$Overflow();
  return valueOf(($clinit_Style$Overflow$Map() , $MAP_21), name_0);
}

function values_23(){
  $clinit_Style$Overflow();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 150, 0, [VISIBLE, HIDDEN_0, SCROLL, AUTO]);
}

defineClass(150, 7, {150:1, 4:1, 8:1, 7:1, 1:1});
_.$init_499 = function $init_499(){
}
;
var AUTO, HIDDEN_0, SCROLL, VISIBLE;
var Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow', 150, Ljava_lang_Enum_2_classLit, values_23, valueOf_22);
function $clinit_Style$Overflow$1(){
  $clinit_Style$Overflow$1 = emptyMethod;
  $clinit_Style$Overflow();
}

function Style$Overflow$1(enum$name, enum$ordinal){
  $clinit_Style$Overflow$1();
  Style$Overflow.call(this, enum$name, enum$ordinal);
  this.$init_500();
}

defineClass(643, 150, {150:1, 4:1, 8:1, 7:1, 1:1}, Style$Overflow$1);
_.$init_500 = function $init_500(){
}
;
_.getCssName = function getCssName_18(){
  return 'visible';
}
;
var Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/1', 643, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null);
function $clinit_Style$Overflow$2(){
  $clinit_Style$Overflow$2 = emptyMethod;
  $clinit_Style$Overflow();
}

function Style$Overflow$2(enum$name, enum$ordinal){
  $clinit_Style$Overflow$2();
  Style$Overflow.call(this, enum$name, enum$ordinal);
  this.$init_501();
}

defineClass(644, 150, {150:1, 4:1, 8:1, 7:1, 1:1}, Style$Overflow$2);
_.$init_501 = function $init_501(){
}
;
_.getCssName = function getCssName_19(){
  return 'hidden';
}
;
var Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/2', 644, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null);
function $clinit_Style$Overflow$3(){
  $clinit_Style$Overflow$3 = emptyMethod;
  $clinit_Style$Overflow();
}

function Style$Overflow$3(enum$name, enum$ordinal){
  $clinit_Style$Overflow$3();
  Style$Overflow.call(this, enum$name, enum$ordinal);
  this.$init_502();
}

defineClass(645, 150, {150:1, 4:1, 8:1, 7:1, 1:1}, Style$Overflow$3);
_.$init_502 = function $init_502(){
}
;
_.getCssName = function getCssName_20(){
  return 'scroll';
}
;
var Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/3', 645, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null);
function $clinit_Style$Overflow$4(){
  $clinit_Style$Overflow$4 = emptyMethod;
  $clinit_Style$Overflow();
}

function Style$Overflow$4(enum$name, enum$ordinal){
  $clinit_Style$Overflow$4();
  Style$Overflow.call(this, enum$name, enum$ordinal);
  this.$init_503();
}

defineClass(646, 150, {150:1, 4:1, 8:1, 7:1, 1:1}, Style$Overflow$4);
_.$init_503 = function $init_503(){
}
;
_.getCssName = function getCssName_21(){
  return 'auto';
}
;
var Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/4', 646, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null);
function $clinit_Style$Overflow$Map(){
  $clinit_Style$Overflow$Map = emptyMethod;
  $MAP_21 = createValueOfMap(values_23());
}

var $MAP_21;
function $clinit_Style$Position(){
  $clinit_Style$Position = emptyMethod;
  $clinit_Enum();
  STATIC = new Style$Position$1('STATIC', 0);
  RELATIVE = new Style$Position$2('RELATIVE', 1);
  ABSOLUTE = new Style$Position$3('ABSOLUTE', 2);
  FIXED = new Style$Position$4('FIXED', 3);
}

function Style$Position(enum$name, enum$ordinal){
  $clinit_Style$Position();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_504();
}

function valueOf_23(name_0){
  $clinit_Style$Position();
  return valueOf(($clinit_Style$Position$Map() , $MAP_22), name_0);
}

function values_24(){
  $clinit_Style$Position();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Position_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 151, 0, [STATIC, RELATIVE, ABSOLUTE, FIXED]);
}

defineClass(151, 7, {151:1, 4:1, 8:1, 7:1, 1:1});
_.$init_504 = function $init_504(){
}
;
var ABSOLUTE, FIXED, RELATIVE, STATIC;
var Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position', 151, Ljava_lang_Enum_2_classLit, values_24, valueOf_23);
function $clinit_Style$Position$1(){
  $clinit_Style$Position$1 = emptyMethod;
  $clinit_Style$Position();
}

function Style$Position$1(enum$name, enum$ordinal){
  $clinit_Style$Position$1();
  Style$Position.call(this, enum$name, enum$ordinal);
  this.$init_505();
}

defineClass(647, 151, {151:1, 4:1, 8:1, 7:1, 1:1}, Style$Position$1);
_.$init_505 = function $init_505(){
}
;
_.getCssName = function getCssName_22(){
  return 'static';
}
;
var Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/1', 647, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null);
function $clinit_Style$Position$2(){
  $clinit_Style$Position$2 = emptyMethod;
  $clinit_Style$Position();
}

function Style$Position$2(enum$name, enum$ordinal){
  $clinit_Style$Position$2();
  Style$Position.call(this, enum$name, enum$ordinal);
  this.$init_506();
}

defineClass(648, 151, {151:1, 4:1, 8:1, 7:1, 1:1}, Style$Position$2);
_.$init_506 = function $init_506(){
}
;
_.getCssName = function getCssName_23(){
  return 'relative';
}
;
var Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/2', 648, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null);
function $clinit_Style$Position$3(){
  $clinit_Style$Position$3 = emptyMethod;
  $clinit_Style$Position();
}

function Style$Position$3(enum$name, enum$ordinal){
  $clinit_Style$Position$3();
  Style$Position.call(this, enum$name, enum$ordinal);
  this.$init_507();
}

defineClass(649, 151, {151:1, 4:1, 8:1, 7:1, 1:1}, Style$Position$3);
_.$init_507 = function $init_507(){
}
;
_.getCssName = function getCssName_24(){
  return 'absolute';
}
;
var Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/3', 649, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null);
function $clinit_Style$Position$4(){
  $clinit_Style$Position$4 = emptyMethod;
  $clinit_Style$Position();
}

function Style$Position$4(enum$name, enum$ordinal){
  $clinit_Style$Position$4();
  Style$Position.call(this, enum$name, enum$ordinal);
  this.$init_508();
}

defineClass(650, 151, {151:1, 4:1, 8:1, 7:1, 1:1}, Style$Position$4);
_.$init_508 = function $init_508(){
}
;
_.getCssName = function getCssName_25(){
  return 'fixed';
}
;
var Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/4', 650, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null);
function $clinit_Style$Position$Map(){
  $clinit_Style$Position$Map = emptyMethod;
  $MAP_22 = createValueOfMap(values_24());
}

var $MAP_22;
function $clinit_Style$TextAlign(){
  $clinit_Style$TextAlign = emptyMethod;
  $clinit_Enum();
  CENTER = new Style$TextAlign$1('CENTER', 0);
  JUSTIFY = new Style$TextAlign$2('JUSTIFY', 1);
  LEFT = new Style$TextAlign$3('LEFT', 2);
  RIGHT = new Style$TextAlign$4('RIGHT', 3);
}

function Style$TextAlign(enum$name, enum$ordinal){
  $clinit_Style$TextAlign();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_509();
}

function valueOf_24(name_0){
  $clinit_Style$TextAlign();
  return valueOf(($clinit_Style$TextAlign$Map() , $MAP_23), name_0);
}

function values_25(){
  $clinit_Style$TextAlign();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 152, 0, [CENTER, JUSTIFY, LEFT, RIGHT]);
}

defineClass(152, 7, {152:1, 4:1, 8:1, 7:1, 1:1});
_.$init_509 = function $init_509(){
}
;
var CENTER, JUSTIFY, LEFT, RIGHT;
var Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextAlign', 152, Ljava_lang_Enum_2_classLit, values_25, valueOf_24);
function $clinit_Style$TextAlign$1(){
  $clinit_Style$TextAlign$1 = emptyMethod;
  $clinit_Style$TextAlign();
}

function Style$TextAlign$1(enum$name, enum$ordinal){
  $clinit_Style$TextAlign$1();
  Style$TextAlign.call(this, enum$name, enum$ordinal);
  this.$init_510();
}

defineClass(651, 152, {152:1, 4:1, 8:1, 7:1, 1:1}, Style$TextAlign$1);
_.$init_510 = function $init_510(){
}
;
_.getCssName = function getCssName_26(){
  return 'center';
}
;
var Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextAlign/1', 651, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null);
function $clinit_Style$TextAlign$2(){
  $clinit_Style$TextAlign$2 = emptyMethod;
  $clinit_Style$TextAlign();
}

function Style$TextAlign$2(enum$name, enum$ordinal){
  $clinit_Style$TextAlign$2();
  Style$TextAlign.call(this, enum$name, enum$ordinal);
  this.$init_511();
}

defineClass(652, 152, {152:1, 4:1, 8:1, 7:1, 1:1}, Style$TextAlign$2);
_.$init_511 = function $init_511(){
}
;
_.getCssName = function getCssName_27(){
  return 'justify';
}
;
var Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextAlign/2', 652, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null);
function $clinit_Style$TextAlign$3(){
  $clinit_Style$TextAlign$3 = emptyMethod;
  $clinit_Style$TextAlign();
}

function Style$TextAlign$3(enum$name, enum$ordinal){
  $clinit_Style$TextAlign$3();
  Style$TextAlign.call(this, enum$name, enum$ordinal);
  this.$init_512();
}

defineClass(653, 152, {152:1, 4:1, 8:1, 7:1, 1:1}, Style$TextAlign$3);
_.$init_512 = function $init_512(){
}
;
_.getCssName = function getCssName_28(){
  return 'left';
}
;
var Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextAlign/3', 653, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null);
function $clinit_Style$TextAlign$4(){
  $clinit_Style$TextAlign$4 = emptyMethod;
  $clinit_Style$TextAlign();
}

function Style$TextAlign$4(enum$name, enum$ordinal){
  $clinit_Style$TextAlign$4();
  Style$TextAlign.call(this, enum$name, enum$ordinal);
  this.$init_513();
}

defineClass(654, 152, {152:1, 4:1, 8:1, 7:1, 1:1}, Style$TextAlign$4);
_.$init_513 = function $init_513(){
}
;
_.getCssName = function getCssName_29(){
  return 'right';
}
;
var Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextAlign/4', 654, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null);
function $clinit_Style$TextAlign$Map(){
  $clinit_Style$TextAlign$Map = emptyMethod;
  $MAP_23 = createValueOfMap(values_25());
}

var $MAP_23;
function $clinit_Style$Unit(){
  $clinit_Style$Unit = emptyMethod;
  $clinit_Enum();
  PX = new Style$Unit$1('PX', 0);
  PCT = new Style$Unit$2('PCT', 1);
  EM = new Style$Unit$3('EM', 2);
  EX = new Style$Unit$4('EX', 3);
  PT = new Style$Unit$5('PT', 4);
  PC = new Style$Unit$6('PC', 5);
  IN = new Style$Unit$7('IN', 6);
  CM = new Style$Unit$8('CM', 7);
  MM = new Style$Unit$9('MM', 8);
}

function Style$Unit(enum$name, enum$ordinal){
  $clinit_Style$Unit();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_514();
}

function valueOf_25(name_0){
  $clinit_Style$Unit();
  return valueOf(($clinit_Style$Unit$Map() , $MAP_24), name_0);
}

function values_26(){
  $clinit_Style$Unit();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Unit_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 91, 0, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);
}

defineClass(91, 7, {91:1, 4:1, 8:1, 7:1, 1:1});
_.$init_514 = function $init_514(){
}
;
var CM, EM, EX, IN, MM, PC, PCT, PT, PX;
var Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit', 91, Ljava_lang_Enum_2_classLit, values_26, valueOf_25);
function $clinit_Style$Unit$1(){
  $clinit_Style$Unit$1 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$1(enum$name, enum$ordinal){
  $clinit_Style$Unit$1();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_515();
}

defineClass(615, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$1);
_.$init_515 = function $init_515(){
}
;
_.getType_1 = function getType_25(){
  return 'px';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/1', 615, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$2(){
  $clinit_Style$Unit$2 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$2(enum$name, enum$ordinal){
  $clinit_Style$Unit$2();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_516();
}

defineClass(616, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$2);
_.$init_516 = function $init_516(){
}
;
_.getType_1 = function getType_26(){
  return '%';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/2', 616, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$3(){
  $clinit_Style$Unit$3 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$3(enum$name, enum$ordinal){
  $clinit_Style$Unit$3();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_517();
}

defineClass(617, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$3);
_.$init_517 = function $init_517(){
}
;
_.getType_1 = function getType_27(){
  return 'em';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/3', 617, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$4(){
  $clinit_Style$Unit$4 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$4(enum$name, enum$ordinal){
  $clinit_Style$Unit$4();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_518();
}

defineClass(618, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$4);
_.$init_518 = function $init_518(){
}
;
_.getType_1 = function getType_28(){
  return 'ex';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/4', 618, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$5(){
  $clinit_Style$Unit$5 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$5(enum$name, enum$ordinal){
  $clinit_Style$Unit$5();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_519();
}

defineClass(619, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$5);
_.$init_519 = function $init_519(){
}
;
_.getType_1 = function getType_29(){
  return 'pt';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/5', 619, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$6(){
  $clinit_Style$Unit$6 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$6(enum$name, enum$ordinal){
  $clinit_Style$Unit$6();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_520();
}

defineClass(620, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$6);
_.$init_520 = function $init_520(){
}
;
_.getType_1 = function getType_30(){
  return 'pc';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/6', 620, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$7(){
  $clinit_Style$Unit$7 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$7(enum$name, enum$ordinal){
  $clinit_Style$Unit$7();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_521();
}

defineClass(621, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$7);
_.$init_521 = function $init_521(){
}
;
_.getType_1 = function getType_31(){
  return 'in';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/7', 621, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$8(){
  $clinit_Style$Unit$8 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$8(enum$name, enum$ordinal){
  $clinit_Style$Unit$8();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_522();
}

defineClass(622, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$8);
_.$init_522 = function $init_522(){
}
;
_.getType_1 = function getType_32(){
  return 'cm';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/8', 622, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$9(){
  $clinit_Style$Unit$9 = emptyMethod;
  $clinit_Style$Unit();
}

function Style$Unit$9(enum$name, enum$ordinal){
  $clinit_Style$Unit$9();
  Style$Unit.call(this, enum$name, enum$ordinal);
  this.$init_523();
}

defineClass(623, 91, {91:1, 4:1, 8:1, 7:1, 1:1}, Style$Unit$9);
_.$init_523 = function $init_523(){
}
;
_.getType_1 = function getType_33(){
  return 'mm';
}
;
var Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/9', 623, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null);
function $clinit_Style$Unit$Map(){
  $clinit_Style$Unit$Map = emptyMethod;
  $MAP_24 = createValueOfMap(values_26());
}

var $MAP_24;
function $clinit_TableCellElement(){
  $clinit_TableCellElement = emptyMethod;
  $clinit_Element();
}

function $clinit_TableColElement(){
  $clinit_TableColElement = emptyMethod;
  $clinit_Element();
}

function $clinit_TableElement(){
  $clinit_TableElement = emptyMethod;
  $clinit_Element();
}

function $clinit_TableRowElement(){
  $clinit_TableRowElement = emptyMethod;
  $clinit_Element();
}

function $clinit_TableSectionElement(){
  $clinit_TableSectionElement = emptyMethod;
  $clinit_Element();
  TAGS = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['tbody', 'tfoot', 'thead']);
}

var TAGS;
function $clinit_TextAreaElement(){
  $clinit_TextAreaElement = emptyMethod;
  $clinit_Element();
}

function $clinit_Touch(){
  $clinit_Touch = emptyMethod;
  $clinit_JavaScriptObject();
}

function $getClientX_0(this$static){
  $clinit_Touch();
  return ($clinit_DOMImpl() , impl_4).touchGetClientX(this$static);
}

function $getClientY_0(this$static){
  $clinit_Touch();
  return ($clinit_DOMImpl() , impl_4).touchGetClientY(this$static);
}

function $getIdentifier(this$static){
  $clinit_Touch();
  return ($clinit_DOMImpl() , impl_4).touchGetIdentifier(this$static);
}

function $getPageX(this$static){
  $clinit_Touch();
  return ($clinit_DOMImpl() , impl_4).touchGetPageX(this$static);
}

function $getPageY(this$static){
  $clinit_Touch();
  return ($clinit_DOMImpl() , impl_4).touchGetPageY(this$static);
}

function $getTarget(this$static){
  $clinit_Touch();
  return ($clinit_DOMImpl() , impl_4).touchGetTarget(this$static);
}

function $clinit_HasNativeEvent(){
  $clinit_HasNativeEvent = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasNativeEvent_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasNativeEvent');
function $clinit_DomEvent(){
  $clinit_DomEvent = emptyMethod;
  $clinit_GwtEvent();
}

function DomEvent(){
  $clinit_DomEvent();
  GwtEvent.call(this);
  this.$init_530();
}

function fireNativeEvent(nativeEvent, handlerSource, relativeElem){
  $clinit_DomEvent();
  var currentNative, currentRelativeElem, type_0, type$iterator, types;
  if (!isNotNull(nativeEvent)) {
    debugger;
    throw toJs(makeAssertionError_Object('nativeEvent must not be null'));
  }
  if (isNotNull(registered)) {
    types = castTo(registered.unsafeGet($getType_0(nativeEvent)), 38);
    if (isNotNull(types)) {
      for (type$iterator = types.iterator_0(); type$iterator.hasNext_0();) {
        type_0 = castTo(type$iterator.next_1(), 88);
        currentNative = type_0.flyweight.nativeEvent;
        currentRelativeElem = type_0.flyweight.relativeElem;
        type_0.flyweight.setNativeEvent(nativeEvent);
        type_0.flyweight.setRelativeElement(relativeElem);
        handlerSource.fireEvent(type_0.flyweight);
        type_0.flyweight.setNativeEvent(currentNative);
        type_0.flyweight.setRelativeElement(currentRelativeElem);
      }
    }
  }
}

function init_49(){
  $clinit_DomEvent();
  registered = new PrivateMap;
}

defineClass(194, 110, {46:1, 1:1});
_.$init_530 = function $init_530(){
}
;
_.getAssociatedType_0 = function getAssociatedType_6(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_7(){
  return this.getAssociatedType_1();
}
;
_.getNativeEvent = function getNativeEvent(){
  this.assertLive();
  return this.nativeEvent;
}
;
_.getRelativeElement = function getRelativeElement(){
  this.assertLive();
  return this.relativeElem;
}
;
_.preventDefault_0 = function preventDefault(){
  this.assertLive();
  if (isNotNull(this.nativeEvent)) {
    $preventDefault(this.nativeEvent);
  }
}
;
_.setNativeEvent = function setNativeEvent(nativeEvent){
  this.nativeEvent = nativeEvent;
}
;
_.setRelativeElement = function setRelativeElement(relativeElem){
  this.relativeElem = relativeElem;
}
;
_.stopPropagation_0 = function stopPropagation(){
  this.assertLive();
  $stopPropagation(this.nativeEvent);
}
;
var registered;
var Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'DomEvent', 194, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_BlurEvent(){
  $clinit_BlurEvent = emptyMethod;
  $clinit_DomEvent();
  TYPE_2 = new DomEvent$Type('blur', new BlurEvent);
}

function BlurEvent(){
  DomEvent.call(this);
  this.$init_531();
}

function getType_34(){
  $clinit_BlurEvent();
  return TYPE_2;
}

defineClass(959, 194, {46:1, 1:1}, BlurEvent);
_.$init_531 = function $init_531(){
}
;
_.dispatch_0 = function dispatch_7(handler){
  this.dispatch_4(castTo(handler, 1062));
}
;
_.getAssociatedType_0 = function getAssociatedType_9(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_10(){
  return this.getAssociatedType_1();
}
;
_.dispatch_4 = function dispatch_6(handler){
  handler.onBlur(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_8(){
  return TYPE_2;
}
;
var TYPE_2;
var Lcom_google_gwt_event_dom_client_BlurEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'BlurEvent', 959, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit);
function $clinit_ChangeEvent(){
  $clinit_ChangeEvent = emptyMethod;
  $clinit_DomEvent();
  TYPE_3 = new DomEvent$Type('change', new ChangeEvent);
}

function ChangeEvent(){
  DomEvent.call(this);
  this.$init_532();
}

function getType_35(){
  $clinit_ChangeEvent();
  return TYPE_3;
}

defineClass(967, 194, {46:1, 1:1}, ChangeEvent);
_.$init_532 = function $init_532(){
}
;
_.dispatch_0 = function dispatch_9(handler){
  this.dispatch_5(castTo(handler, 116));
}
;
_.getAssociatedType_0 = function getAssociatedType_12(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_13(){
  return this.getAssociatedType_1();
}
;
_.dispatch_5 = function dispatch_8(handler){
  handler.onChange(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_11(){
  return TYPE_3;
}
;
var TYPE_3;
var Lcom_google_gwt_event_dom_client_ChangeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'ChangeEvent', 967, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit);
function $clinit_HumanInputEvent(){
  $clinit_HumanInputEvent = emptyMethod;
  $clinit_DomEvent();
}

function HumanInputEvent(){
  $clinit_HumanInputEvent();
  DomEvent.call(this);
  this.$init_533();
}

defineClass(384, 194, {46:1, 1:1});
_.$init_533 = function $init_533(){
}
;
_.isControlKeyDown = function isControlKeyDown(){
  return $getCtrlKey(this.getNativeEvent());
}
;
var Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'HumanInputEvent', 384, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit);
function $clinit_MouseEvent(){
  $clinit_MouseEvent = emptyMethod;
  $clinit_HumanInputEvent();
}

function MouseEvent_0(){
  $clinit_MouseEvent();
  HumanInputEvent.call(this);
  this.$init_534();
}

defineClass(195, 384, {46:1, 1:1});
_.$init_534 = function $init_534(){
}
;
_.getClientX = function getClientX(){
  return $getClientX(this.getNativeEvent());
}
;
_.getClientY = function getClientY(){
  return $getClientY(this.getNativeEvent());
}
;
_.getNativeButton = function getNativeButton(){
  return $getButton(this.getNativeEvent());
}
;
_.getRelativeX = function getRelativeX(target){
  var e;
  e = this.getNativeEvent();
  return $getClientX(e) - $getAbsoluteLeft(target) + $getScrollLeft(target) + $getScrollLeft_0($getOwnerDocument(target));
}
;
_.getRelativeY = function getRelativeY(target){
  var e;
  e = this.getNativeEvent();
  return $getClientY(e) - $getAbsoluteTop(target) + $getScrollTop(target) + $getScrollTop_0($getOwnerDocument(target));
}
;
_.getX = function getX_1(){
  var relativeElem;
  relativeElem = this.getRelativeElement();
  if (isNotNull(relativeElem)) {
    return this.getRelativeX(relativeElem);
  }
  return this.getClientX();
}
;
_.getY = function getY_1(){
  var relativeElem;
  relativeElem = this.getRelativeElement();
  if (isNotNull(relativeElem)) {
    return this.getRelativeY(relativeElem);
  }
  return this.getClientY();
}
;
var Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'MouseEvent', 195, Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit);
function $clinit_ClickEvent(){
  $clinit_ClickEvent = emptyMethod;
  $clinit_MouseEvent();
  TYPE_4 = new DomEvent$Type('click', new ClickEvent);
}

function ClickEvent(){
  MouseEvent_0.call(this);
  this.$init_535();
}

function getType_36(){
  $clinit_ClickEvent();
  return TYPE_4;
}

defineClass(677, 195, {46:1, 1:1}, ClickEvent);
_.$init_535 = function $init_535(){
}
;
_.dispatch_0 = function dispatch_11(handler){
  this.dispatch_6(castTo(handler, 72));
}
;
_.getAssociatedType_0 = function getAssociatedType_15(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_16(){
  return this.getAssociatedType_1();
}
;
_.dispatch_6 = function dispatch_10(handler){
  handler.onClick(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_14(){
  return TYPE_4;
}
;
var TYPE_4;
var Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'ClickEvent', 677, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit);
function $clinit_Event$Type(){
  $clinit_Event$Type = emptyMethod;
  $clinit_Object();
}

function Event$Type(){
  $clinit_Event$Type();
  Object_0.call(this);
  this.$init_536();
  this.index_0 = ++nextHashCode;
}

defineClass(260, 1, {1:1});
_.$init_536 = function $init_536(){
}
;
_.hashCode_1 = function hashCode_11(){
  return this.index_0;
}
;
_.toString_0 = function toString_40(){
  return 'Event type';
}
;
_.index_0 = 0;
var nextHashCode = 0;
var Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared', 'Event/Type', 260, Ljava_lang_Object_2_classLit);
function $clinit_GwtEvent$Type(){
  $clinit_GwtEvent$Type = emptyMethod;
  $clinit_Event$Type();
}

function GwtEvent$Type(){
  $clinit_GwtEvent$Type();
  Event$Type.call(this);
  this.$init_537();
}

defineClass(87, 260, {87:1, 260:1, 1:1}, GwtEvent$Type);
_.$init_537 = function $init_537(){
}
;
var Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared', 'GwtEvent/Type', 87, Lcom_google_web_bindery_event_shared_Event$Type_2_classLit);
function $clinit_DomEvent$Type(){
  $clinit_DomEvent$Type = emptyMethod;
  $clinit_GwtEvent$Type();
}

function DomEvent$Type(eventName, flyweight){
  $clinit_DomEvent$Type();
  var types;
  GwtEvent$Type.call(this);
  this.$init_538();
  this.flyweight = flyweight;
  if (isNull(($clinit_DomEvent() , registered))) {
    init_49();
  }
  types = castTo(($clinit_DomEvent() , registered).unsafeGet(eventName), 38);
  if (isNull(types)) {
    types = new ArrayList;
    ($clinit_DomEvent() , registered).unsafePut(eventName, types);
  }
  types.add_5(this);
  this.name_0 = eventName;
}

defineClass(88, 87, {88:1, 87:1, 260:1, 1:1}, DomEvent$Type);
_.$init_538 = function $init_538(){
}
;
_.getName = function getName_2(){
  return this.name_0;
}
;
var Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client', 'DomEvent/Type', 88, Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit);
function $clinit_HasChangeHandlers(){
  $clinit_HasChangeHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasChangeHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasChangeHandlers');
function $clinit_HasErrorHandlers(){
  $clinit_HasErrorHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasErrorHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasErrorHandlers');
function $clinit_HasLoadHandlers(){
  $clinit_HasLoadHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasLoadHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasLoadHandlers');
function $clinit_HasScrollHandlers(){
  $clinit_HasScrollHandlers = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_HasScrollHandlers_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'HasScrollHandlers');
function $clinit_KeyEvent(){
  $clinit_KeyEvent = emptyMethod;
  $clinit_DomEvent();
}

function KeyEvent_0(){
  $clinit_KeyEvent();
  DomEvent.call(this);
  this.$init_539();
}

defineClass(748, 194, {46:1, 1:1});
_.$init_539 = function $init_539(){
}
;
var Lcom_google_gwt_event_dom_client_KeyEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'KeyEvent', 748, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit);
function $clinit_KeyCodeEvent(){
  $clinit_KeyCodeEvent = emptyMethod;
  $clinit_KeyEvent();
}

function KeyCodeEvent(){
  $clinit_KeyCodeEvent();
  KeyEvent_0.call(this);
  this.$init_540();
}

defineClass(393, 748, {46:1, 1:1});
_.$init_540 = function $init_540(){
}
;
_.getNativeKeyCode = function getNativeKeyCode(){
  return $getKeyCode(this.getNativeEvent());
}
;
var Lcom_google_gwt_event_dom_client_KeyCodeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'KeyCodeEvent', 393, Lcom_google_gwt_event_dom_client_KeyEvent_2_classLit);
function $clinit_KeyCodes(){
  $clinit_KeyCodes = emptyMethod;
  $clinit_Object();
}

function isArrowKey(code_0){
  $clinit_KeyCodes();
  switch (code_0) {
    case 40:
    case 39:
    case 38:
    case 37:
      return true;
    default:return false;
  }
}

function maybeSwapArrowKeysForRtl(code_0, isRtl){
  $clinit_KeyCodes();
  if (isRtl) {
    if (code_0 == 39) {
      code_0 = 37;
    }
     else if (code_0 == 37) {
      code_0 = 39;
    }
  }
  return code_0;
}

function $clinit_KeyDownEvent(){
  $clinit_KeyDownEvent = emptyMethod;
  $clinit_KeyCodeEvent();
  TYPE_5 = new DomEvent$Type('keydown', new KeyDownEvent);
}

function KeyDownEvent(){
  KeyCodeEvent.call(this);
  this.$init_541();
}

function getType_37(){
  $clinit_KeyDownEvent();
  return TYPE_5;
}

defineClass(749, 393, {46:1, 1:1}, KeyDownEvent);
_.$init_541 = function $init_541(){
}
;
_.dispatch_0 = function dispatch_13(handler){
  this.dispatch_7(castTo(handler, 485));
}
;
_.getAssociatedType_0 = function getAssociatedType_18(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_19(){
  return this.getAssociatedType_1();
}
;
_.dispatch_7 = function dispatch_12(handler){
  handler.onKeyDown(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_17(){
  return TYPE_5;
}
;
var TYPE_5;
var Lcom_google_gwt_event_dom_client_KeyDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'KeyDownEvent', 749, Lcom_google_gwt_event_dom_client_KeyCodeEvent_2_classLit);
function $clinit_KeyUpEvent(){
  $clinit_KeyUpEvent = emptyMethod;
  $clinit_KeyCodeEvent();
  TYPE_6 = new DomEvent$Type('keyup', new KeyUpEvent);
}

function KeyUpEvent(){
  KeyCodeEvent.call(this);
  this.$init_542();
}

function getType_38(){
  $clinit_KeyUpEvent();
  return TYPE_6;
}

defineClass(1037, 393, {46:1, 1:1}, KeyUpEvent);
_.$init_542 = function $init_542(){
}
;
_.dispatch_0 = function dispatch_15(handler){
  this.dispatch_8(castTo(handler, 1060));
}
;
_.getAssociatedType_0 = function getAssociatedType_21(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_22(){
  return this.getAssociatedType_1();
}
;
_.dispatch_8 = function dispatch_14(handler){
  handler.onKeyUp_0(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_20(){
  return TYPE_6;
}
;
var TYPE_6;
var Lcom_google_gwt_event_dom_client_KeyUpEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'KeyUpEvent', 1037, Lcom_google_gwt_event_dom_client_KeyCodeEvent_2_classLit);
function $clinit_KeyUpHandler(){
  $clinit_KeyUpHandler = emptyMethod;
}

var Lcom_google_gwt_event_dom_client_KeyUpHandler_2_classLit = createForInterface('com.google.gwt.event.dom.client', 'KeyUpHandler');
function $clinit_LoadEvent(){
  $clinit_LoadEvent = emptyMethod;
  $clinit_DomEvent();
  TYPE_7 = new DomEvent$Type('load', new LoadEvent);
}

function LoadEvent(){
  DomEvent.call(this);
  this.$init_543();
}

function getType_39(){
  $clinit_LoadEvent();
  return TYPE_7;
}

defineClass(962, 194, {46:1, 1:1}, LoadEvent);
_.$init_543 = function $init_543(){
}
;
_.dispatch_0 = function dispatch_17(handler){
  this.dispatch_9(castTo(handler, 488));
}
;
_.getAssociatedType_0 = function getAssociatedType_24(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_25(){
  return this.getAssociatedType_1();
}
;
_.dispatch_9 = function dispatch_16(handler){
  handler.onLoad_0(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_23(){
  return TYPE_7;
}
;
var TYPE_7;
var Lcom_google_gwt_event_dom_client_LoadEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'LoadEvent', 962, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit);
function $clinit_MouseDownEvent(){
  $clinit_MouseDownEvent = emptyMethod;
  $clinit_MouseEvent();
  TYPE_8 = new DomEvent$Type('mousedown', new MouseDownEvent);
}

function MouseDownEvent(){
  MouseEvent_0.call(this);
  this.$init_544();
}

function getType_40(){
  $clinit_MouseDownEvent();
  return TYPE_8;
}

defineClass(802, 195, {46:1, 1:1}, MouseDownEvent);
_.$init_544 = function $init_544(){
}
;
_.dispatch_0 = function dispatch_19(handler){
  this.dispatch_10(castTo(handler, 253));
}
;
_.getAssociatedType_0 = function getAssociatedType_27(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_28(){
  return this.getAssociatedType_1();
}
;
_.dispatch_10 = function dispatch_18(handler){
  handler.onMouseDown_0(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_26(){
  return TYPE_8;
}
;
var TYPE_8;
var Lcom_google_gwt_event_dom_client_MouseDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'MouseDownEvent', 802, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit);
function $clinit_MouseMoveEvent(){
  $clinit_MouseMoveEvent = emptyMethod;
  $clinit_MouseEvent();
  TYPE_9 = new DomEvent$Type('mousemove', new MouseMoveEvent);
}

function MouseMoveEvent(){
  MouseEvent_0.call(this);
  this.$init_545();
}

function getType_41(){
  $clinit_MouseMoveEvent();
  return TYPE_9;
}

defineClass(803, 195, {46:1, 1:1}, MouseMoveEvent);
_.$init_545 = function $init_545(){
}
;
_.dispatch_0 = function dispatch_21(handler){
  this.dispatch_11(castTo(handler, 254));
}
;
_.getAssociatedType_0 = function getAssociatedType_30(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_31(){
  return this.getAssociatedType_1();
}
;
_.dispatch_11 = function dispatch_20(handler){
  handler.onMouseMove_0(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_29(){
  return TYPE_9;
}
;
var TYPE_9;
var Lcom_google_gwt_event_dom_client_MouseMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'MouseMoveEvent', 803, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit);
function $clinit_MouseOutEvent(){
  $clinit_MouseOutEvent = emptyMethod;
  $clinit_MouseEvent();
  TYPE_10 = new DomEvent$Type('mouseout', new MouseOutEvent);
}

function MouseOutEvent(){
  MouseEvent_0.call(this);
  this.$init_546();
}

function getType_42(){
  $clinit_MouseOutEvent();
  return TYPE_10;
}

defineClass(804, 195, {46:1, 1:1}, MouseOutEvent);
_.$init_546 = function $init_546(){
}
;
_.dispatch_0 = function dispatch_23(handler){
  this.dispatch_12(castTo(handler, 255));
}
;
_.getAssociatedType_0 = function getAssociatedType_33(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_34(){
  return this.getAssociatedType_1();
}
;
_.dispatch_12 = function dispatch_22(handler){
  handler.onMouseOut(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_32(){
  return TYPE_10;
}
;
var TYPE_10;
var Lcom_google_gwt_event_dom_client_MouseOutEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'MouseOutEvent', 804, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit);
function $clinit_MouseOverEvent(){
  $clinit_MouseOverEvent = emptyMethod;
  $clinit_MouseEvent();
  TYPE_11 = new DomEvent$Type('mouseover', new MouseOverEvent);
}

function MouseOverEvent(){
  MouseEvent_0.call(this);
  this.$init_547();
}

function getType_43(){
  $clinit_MouseOverEvent();
  return TYPE_11;
}

defineClass(895, 195, {46:1, 1:1}, MouseOverEvent);
_.$init_547 = function $init_547(){
}
;
_.dispatch_0 = function dispatch_25(handler){
  this.dispatch_13(castTo(handler, 308));
}
;
_.getAssociatedType_0 = function getAssociatedType_36(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_37(){
  return this.getAssociatedType_1();
}
;
_.dispatch_13 = function dispatch_24(handler){
  handler.onMouseOver(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_35(){
  return TYPE_11;
}
;
var TYPE_11;
var Lcom_google_gwt_event_dom_client_MouseOverEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'MouseOverEvent', 895, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit);
function $clinit_MouseUpEvent(){
  $clinit_MouseUpEvent = emptyMethod;
  $clinit_MouseEvent();
  TYPE_12 = new DomEvent$Type('mouseup', new MouseUpEvent);
}

function MouseUpEvent(){
  MouseEvent_0.call(this);
  this.$init_548();
}

function getType_44(){
  $clinit_MouseUpEvent();
  return TYPE_12;
}

defineClass(798, 195, {46:1, 1:1}, MouseUpEvent);
_.$init_548 = function $init_548(){
}
;
_.dispatch_0 = function dispatch_27(handler){
  this.dispatch_14(castTo(handler, 219));
}
;
_.getAssociatedType_0 = function getAssociatedType_39(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_40(){
  return this.getAssociatedType_1();
}
;
_.dispatch_14 = function dispatch_26(handler){
  handler.onMouseUp_0(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_38(){
  return TYPE_12;
}
;
var TYPE_12;
var Lcom_google_gwt_event_dom_client_MouseUpEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'MouseUpEvent', 798, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit);
function $clinit_MouseWheelEvent(){
  $clinit_MouseWheelEvent = emptyMethod;
  $clinit_MouseEvent();
  TYPE_13 = new DomEvent$Type('mousewheel', new MouseWheelEvent_0);
  {
    new DomEvent$Type('DOMMouseScroll', new MouseWheelEvent_0);
  }
}

function MouseWheelEvent_0(){
  MouseEvent_0.call(this);
  this.$init_549();
}

function getType_45(){
  $clinit_MouseWheelEvent();
  return TYPE_13;
}

defineClass(426, 195, {46:1, 1:1}, MouseWheelEvent_0);
_.$init_549 = function $init_549(){
}
;
_.dispatch_0 = function dispatch_29(handler){
  this.dispatch_15(castTo(handler, 1117));
}
;
_.getAssociatedType_0 = function getAssociatedType_42(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_43(){
  return this.getAssociatedType_1();
}
;
_.dispatch_15 = function dispatch_28(handler){
  handler.onMouseWheel(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_41(){
  return TYPE_13;
}
;
_.getDeltaY = function getDeltaY(){
  return $getMouseWheelVelocityY(this.getNativeEvent());
}
;
var TYPE_13;
var Lcom_google_gwt_event_dom_client_MouseWheelEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'MouseWheelEvent', 426, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit);
function $clinit_PrivateMap(){
  $clinit_PrivateMap = emptyMethod;
  $clinit_Object();
}

function PrivateMap(){
  $clinit_PrivateMap();
  Object_0.call(this);
  this.$init_550();
  if (isScript()) {
    this.map_0 = $cast(create_1());
  }
   else {
    this.javaMap = new HashMap;
  }
}

defineClass(809, 1, {1:1}, PrivateMap);
_.$init_550 = function $init_550(){
}
;
_.unsafeGet = function unsafeGet(key){
  if (isScript()) {
    return $unsafeGet(this.map_0, key);
  }
   else {
    return this.javaMap.get_1(key);
  }
}
;
_.unsafePut = function unsafePut(key, value_0){
  if (isScript()) {
    $unsafePut(this.map_0, key, value_0);
  }
   else {
    this.javaMap.put(key, value_0);
  }
}
;
var Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client', 'PrivateMap', 809, Ljava_lang_Object_2_classLit);
function $clinit_PrivateMap$JsMap(){
  $clinit_PrivateMap$JsMap = emptyMethod;
  $clinit_JavaScriptObject();
}

function $unsafeGet(this$static, key){
  $clinit_PrivateMap$JsMap();
  return this$static[key];
}

function $unsafePut(this$static, key, value_0){
  $clinit_PrivateMap$JsMap();
  this$static[key] = value_0;
}

function create_1(){
  $clinit_PrivateMap$JsMap();
  return $cast(createObject());
}

function $clinit_TouchEvent(){
  $clinit_TouchEvent = emptyMethod;
  $clinit_HumanInputEvent();
}

function TouchEvent_0(){
  $clinit_TouchEvent();
  HumanInputEvent.call(this);
  this.$init_551();
}

function isSupported(){
  $clinit_TouchEvent();
  if (isNull(impl_5)) {
    impl_5 = castTo(new TouchEvent$TouchSupportDetector, 288);
  }
  return impl_5.isSupported_0();
}

defineClass(287, 384, {46:1, 1:1});
_.$init_551 = function $init_551(){
}
;
_.getChangedTouches_0 = function getChangedTouches_0(){
  return $getChangedTouches(this.getNativeEvent());
}
;
_.getTouches_0 = function getTouches_0(){
  return $getTouches(this.getNativeEvent());
}
;
var impl_5;
var Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'TouchEvent', 287, Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit);
function $clinit_TouchCancelEvent(){
  $clinit_TouchCancelEvent = emptyMethod;
  $clinit_TouchEvent();
  TYPE_14 = new DomEvent$Type('touchcancel', new TouchCancelEvent);
}

function TouchCancelEvent(){
  TouchEvent_0.call(this);
  this.$init_552();
}

function getType_46(){
  $clinit_TouchCancelEvent();
  return TYPE_14;
}

defineClass(808, 287, {46:1, 1:1}, TouchCancelEvent);
_.$init_552 = function $init_552(){
}
;
_.dispatch_0 = function dispatch_31(handler){
  this.dispatch_16(castTo(handler, 1059));
}
;
_.getAssociatedType_0 = function getAssociatedType_45(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_46(){
  return this.getAssociatedType_1();
}
;
_.dispatch_16 = function dispatch_30(handler){
  handler.onTouchCancel(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_44(){
  return TYPE_14;
}
;
var TYPE_14;
var Lcom_google_gwt_event_dom_client_TouchCancelEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'TouchCancelEvent', 808, Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit);
function $clinit_TouchEndEvent(){
  $clinit_TouchEndEvent = emptyMethod;
  $clinit_TouchEvent();
  TYPE_15 = new DomEvent$Type('touchend', new TouchEndEvent);
}

function TouchEndEvent(){
  TouchEvent_0.call(this);
  this.$init_553();
}

function getType_47(){
  $clinit_TouchEndEvent();
  return TYPE_15;
}

defineClass(807, 287, {46:1, 1:1}, TouchEndEvent);
_.$init_553 = function $init_553(){
}
;
_.dispatch_0 = function dispatch_33(handler){
  this.dispatch_17(castTo(handler, 306));
}
;
_.getAssociatedType_0 = function getAssociatedType_48(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_49(){
  return this.getAssociatedType_1();
}
;
_.dispatch_17 = function dispatch_32(handler){
  handler.onTouchEnd(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_47(){
  return TYPE_15;
}
;
var TYPE_15;
var Lcom_google_gwt_event_dom_client_TouchEndEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'TouchEndEvent', 807, Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit);
function $clinit_TouchEvent$TouchSupportDetector(){
  $clinit_TouchEvent$TouchSupportDetector = emptyMethod;
  $clinit_Object();
}

function TouchEvent$TouchSupportDetector(){
  $clinit_TouchEvent$TouchSupportDetector();
  Object_0.call(this);
  this.$init_554();
}

defineClass(288, 1, {288:1, 1:1}, TouchEvent$TouchSupportDetector);
_.$init_554 = function $init_554(){
  this.isSupported = this.detectTouchSupport();
}
;
_.detectTouchSupport = function detectTouchSupport(){
  return 'ontouchstart' in $wnd;
}
;
_.isSupported_0 = function isSupported_0(){
  return this.isSupported;
}
;
_.isSupported = false;
var Lcom_google_gwt_event_dom_client_TouchEvent$TouchSupportDetector_2_classLit = createForClass('com.google.gwt.event.dom.client', 'TouchEvent/TouchSupportDetector', 288, Ljava_lang_Object_2_classLit);
function $clinit_TouchMoveEvent(){
  $clinit_TouchMoveEvent = emptyMethod;
  $clinit_TouchEvent();
  TYPE_16 = new DomEvent$Type('touchmove', new TouchMoveEvent);
}

function TouchMoveEvent(){
  TouchEvent_0.call(this);
  this.$init_555();
}

function getType_48(){
  $clinit_TouchMoveEvent();
  return TYPE_16;
}

defineClass(806, 287, {46:1, 1:1}, TouchMoveEvent);
_.$init_555 = function $init_555(){
}
;
_.dispatch_0 = function dispatch_35(handler){
  this.dispatch_18(castTo(handler, 305));
}
;
_.getAssociatedType_0 = function getAssociatedType_51(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_52(){
  return this.getAssociatedType_1();
}
;
_.dispatch_18 = function dispatch_34(handler){
  handler.onTouchMove(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_50(){
  return TYPE_16;
}
;
var TYPE_16;
var Lcom_google_gwt_event_dom_client_TouchMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'TouchMoveEvent', 806, Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit);
function $clinit_TouchStartEvent(){
  $clinit_TouchStartEvent = emptyMethod;
  $clinit_TouchEvent();
  TYPE_17 = new DomEvent$Type('touchstart', new TouchStartEvent);
}

function TouchStartEvent(){
  TouchEvent_0.call(this);
  this.$init_556();
}

function getType_49(){
  $clinit_TouchStartEvent();
  return TYPE_17;
}

defineClass(805, 287, {46:1, 1:1}, TouchStartEvent);
_.$init_556 = function $init_556(){
}
;
_.dispatch_0 = function dispatch_37(handler){
  this.dispatch_19(castTo(handler, 304));
}
;
_.getAssociatedType_0 = function getAssociatedType_54(){
  return this.getAssociatedType_1();
}
;
_.getAssociatedType = function getAssociatedType_55(){
  return this.getAssociatedType_1();
}
;
_.dispatch_19 = function dispatch_36(handler){
  handler.onTouchStart(this);
}
;
_.getAssociatedType_1 = function getAssociatedType_53(){
  return TYPE_17;
}
;
var TYPE_17;
var Lcom_google_gwt_event_dom_client_TouchStartEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'TouchStartEvent', 805, Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit);
function $clinit_AttachEvent(){
  $clinit_AttachEvent = emptyMethod;
  $clinit_GwtEvent();
}

function AttachEvent(attached){
  GwtEvent.call(this);
  this.$init_557();
  this.attached = attached;
}

function fire_1(source, attached){
  $clinit_AttachEvent();
  var event_0;
  if (isNotNull(TYPE_18)) {
    event_0 = new AttachEvent(attached);
    source.fireEvent(event_0);
  }
}

function getType_50(){
  $clinit_AttachEvent();
  if (isNull(TYPE_18)) {
    TYPE_18 = new GwtEvent$Type;
  }
  return TYPE_18;
}

defineClass(755, 110, {46:1, 1:1}, AttachEvent);
_.$init_557 = function $init_557(){
}
;
_.dispatch_0 = function dispatch_39(handler){
  this.dispatch_20(castTo(handler, 4431));
}
;
_.getAssociatedType = function getAssociatedType_57(){
  return this.getAssociatedType_0();
}
;
_.dispatch_20 = function dispatch_38(handler){
  handler.onAttachOrDetach(this);
}
;
_.getAssociatedType_0 = function getAssociatedType_56(){
  return TYPE_18;
}
;
_.isAttached = function isAttached_1(){
  return this.attached;
}
;
_.attached = false;
var TYPE_18;
var Lcom_google_gwt_event_logical_shared_AttachEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared', 'AttachEvent', 755, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_AttachEvent$Handler(){
  $clinit_AttachEvent$Handler = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_AttachEvent$Handler_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'AttachEvent/Handler');
function $clinit_CloseEvent(){
  $clinit_CloseEvent = emptyMethod;
  $clinit_GwtEvent();
}

function CloseEvent_0(target, autoClosed){
  GwtEvent.call(this);
  this.$init_559();
  this.autoClosed = autoClosed;
  this.target_0 = target;
}

function fire_3(source, target){
  $clinit_CloseEvent();
  fire_4(source, target, false);
}

function fire_4(source, target, autoClosed){
  $clinit_CloseEvent();
  var event_0;
  if (isNotNull(TYPE_20)) {
    event_0 = new CloseEvent_0(target, autoClosed);
    source.fireEvent(event_0);
  }
}

function getType_52(){
  $clinit_CloseEvent();
  return isNotNull(TYPE_20)?TYPE_20:(TYPE_20 = new GwtEvent$Type);
}

defineClass(754, 110, {46:1, 1:1}, CloseEvent_0);
_.$init_559 = function $init_559(){
}
;
_.dispatch_0 = function dispatch_43(handler){
  this.dispatch_22(castTo(handler, 252));
}
;
_.getAssociatedType = function getAssociatedType_61(){
  return this.getAssociatedType_0();
}
;
_.dispatch_22 = function dispatch_42(handler){
  handler.onClose_1(this);
}
;
_.getAssociatedType_0 = function getAssociatedType_60(){
  return castTo(TYPE_20, 87);
}
;
_.autoClosed = false;
var TYPE_20;
var Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared', 'CloseEvent', 754, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_CloseHandler(){
  $clinit_CloseHandler = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_CloseHandler_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'CloseHandler');
function $clinit_HasOpenHandlers(){
  $clinit_HasOpenHandlers = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_HasOpenHandlers_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'HasOpenHandlers');
function $clinit_HasResizeHandlers(){
  $clinit_HasResizeHandlers = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_HasResizeHandlers_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'HasResizeHandlers');
function $clinit_HasSelectionHandlers(){
  $clinit_HasSelectionHandlers = emptyMethod;
}

var Lcom_google_gwt_event_logical_shared_HasSelectionHandlers_2_classLit = createForInterface('com.google.gwt.event.logical.shared', 'HasSelectionHandlers');
function $clinit_OpenEvent(){
  $clinit_OpenEvent = emptyMethod;
  $clinit_GwtEvent();
}

function OpenEvent(target){
  GwtEvent.call(this);
  this.$init_560();
  this.target_0 = target;
}

function fire_5(source, target){
  $clinit_OpenEvent();
  var event_0;
  if (isNotNull(TYPE_21)) {
    event_0 = new OpenEvent(target);
    source.fireEvent(event_0);
  }
}

defineClass(1021, 110, {46:1, 1:1}, OpenEvent);
_.$init_560 = function $init_560(){
}
;
_.dispatch_0 = function dispatch_45(handler){
  this.dispatch_23(castTo(handler, 490));
}
;
_.getAssociatedType = function getAssociatedType_63(){
  return this.getAssociatedType_0();
}
;
_.dispatch_23 = function dispatch_44(handler){
  handler.onOpen_0(this);
}
;
_.getAssociatedType_0 = function getAssociatedType_62(){
  return castTo(TYPE_21, 87);
}
;
var TYPE_21;
var Lcom_google_gwt_event_logical_shared_OpenEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared', 'OpenEvent', 1021, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_ResizeEvent(){
  $clinit_ResizeEvent = emptyMethod;
  $clinit_GwtEvent();
}

function ResizeEvent(width_0, height){
  GwtEvent.call(this);
  this.$init_561();
  this.width_0 = width_0;
  this.height_0 = height;
}

function fire_6(source, width_0, height){
  $clinit_ResizeEvent();
  var event_0;
  if (isNotNull(TYPE_22)) {
    event_0 = new ResizeEvent(width_0, height);
    source.fireEvent(event_0);
  }
}

function getType_54(){
  $clinit_ResizeEvent();
  if (isNull(TYPE_22)) {
    TYPE_22 = new GwtEvent$Type;
  }
  return TYPE_22;
}

defineClass(741, 110, {46:1, 1:1}, ResizeEvent);
_.$init_561 = function $init_561(){
}
;
_.dispatch_0 = function dispatch_47(handler){
  this.dispatch_24(castTo(handler, 302));
}
;
_.getAssociatedType = function getAssociatedType_65(){
  return this.getAssociatedType_0();
}
;
_.dispatch_24 = function dispatch_46(handler){
  handler.onResize(this);
}
;
_.getAssociatedType_0 = function getAssociatedType_64(){
  return TYPE_22;
}
;
_.getHeight = function getHeight(){
  return this.height_0;
}
;
_.getWidth = function getWidth(){
  return this.width_0;
}
;
_.height_0 = 0;
_.width_0 = 0;
var TYPE_22;
var Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared', 'ResizeEvent', 741, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_SelectionEvent(){
  $clinit_SelectionEvent = emptyMethod;
  $clinit_GwtEvent();
}

function SelectionEvent(selectedItem){
  GwtEvent.call(this);
  this.$init_562();
  this.selectedItem = selectedItem;
}

function fire_7(source, selectedItem){
  $clinit_SelectionEvent();
  var event_0;
  if (isNotNull(TYPE_23)) {
    event_0 = new SelectionEvent(selectedItem);
    source.fireEvent(event_0);
  }
}

function getType_55(){
  $clinit_SelectionEvent();
  if (isNull(TYPE_23)) {
    TYPE_23 = new GwtEvent$Type;
  }
  return TYPE_23;
}

defineClass(801, 110, {46:1, 1:1}, SelectionEvent);
_.$init_562 = function $init_562(){
}
;
_.dispatch_0 = function dispatch_49(handler){
  this.dispatch_25(castTo(handler, 303));
}
;
_.getAssociatedType = function getAssociatedType_67(){
  return this.getAssociatedType_0();
}
;
_.dispatch_25 = function dispatch_48(handler){
  handler.onSelection(this);
}
;
_.getAssociatedType_0 = function getAssociatedType_66(){
  return castTo(TYPE_23, 87);
}
;
_.getSelectedItem = function getSelectedItem(){
  return this.selectedItem;
}
;
var TYPE_23;
var Lcom_google_gwt_event_logical_shared_SelectionEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared', 'SelectionEvent', 801, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_ValueChangeEvent(){
  $clinit_ValueChangeEvent = emptyMethod;
  $clinit_GwtEvent();
}

function ValueChangeEvent(value_0){
  GwtEvent.call(this);
  this.$init_563();
  this.value_0 = value_0;
}

function fire_8(source, value_0){
  $clinit_ValueChangeEvent();
  var event_0;
  if (isNotNull(TYPE_24)) {
    event_0 = new ValueChangeEvent(value_0);
    source.fireEvent(event_0);
  }
}

function fireIfNotEqual(source, oldValue, newValue){
  $clinit_ValueChangeEvent();
  var event_0;
  if (shouldFire(source, oldValue, newValue)) {
    event_0 = new ValueChangeEvent(newValue);
    source.fireEvent(event_0);
  }
}

function getType_56(){
  $clinit_ValueChangeEvent();
  if (isNull(TYPE_24)) {
    TYPE_24 = new GwtEvent$Type;
  }
  return TYPE_24;
}

function shouldFire(source, oldValue, newValue){
  return isNotNull(TYPE_24) && maskUndefined(oldValue) !== maskUndefined(newValue) && (jsEquals(oldValue, null) || !equals_Ljava_lang_Object__Z__devirtual$(oldValue, newValue));
}

defineClass(402, 110, {46:1, 1:1}, ValueChangeEvent);
_.$init_563 = function $init_563(){
}
;
_.dispatch_0 = function dispatch_51(handler){
  this.dispatch_26(castTo(handler, 75));
}
;
_.getAssociatedType = function getAssociatedType_69(){
  return this.getAssociatedType_0();
}
;
_.dispatch_26 = function dispatch_50(handler){
  handler.onValueChange(this);
}
;
_.getAssociatedType_0 = function getAssociatedType_68(){
  return castTo(TYPE_24, 87);
}
;
_.getValue_0 = function getValue_1(){
  return this.value_0;
}
;
var TYPE_24;
var Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared', 'ValueChangeEvent', 402, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_EventBus(){
  $clinit_EventBus = emptyMethod;
  $clinit_Object();
}

function EventBus(){
  $clinit_EventBus();
  Object_0.call(this);
  this.$init_564();
}

function dispatchEvent_1(event_0, handler){
  $clinit_EventBus();
  event_0.dispatch(handler);
}

function setSourceOfEvent(event_0, source){
  $clinit_EventBus();
  event_0.setSource(source);
}

defineClass(365, 1, {1:1});
_.$init_564 = function $init_564(){
}
;
var Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared', 'EventBus', 365, Ljava_lang_Object_2_classLit);
function $clinit_EventBus_0(){
  $clinit_EventBus_0 = emptyMethod;
  $clinit_EventBus();
}

function EventBus_0(){
  $clinit_EventBus_0();
  EventBus.call(this);
  this.$init_565();
}

defineClass(604, 365, {1:1});
_.$init_565 = function $init_565(){
}
;
_.castFireEvent = function castFireEvent(event_0){
  var e;
  try {
    this.fireEvent_0(castTo(event_0, 46));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 185)) {
      e = $e0;
      throw toJs(new UmbrellaException_0(e.getCauses()));
    }
     else 
      throw toJs($e0);
  }
}
;
_.fireEvent_0 = function fireEvent_0(event_0){
  throw toJs(new UnsupportedOperationException_0('Subclass responsibility. This class is a legacy wrapper for com.google.web.bindery.event.shared.EventBus. Use that directly, or try com.google.gwt.event.shared.SimpleEventBus'));
}
;
_.wrap = function wrap_0(reg){
  return new LegacyHandlerWrapper(reg);
}
;
var Lcom_google_gwt_event_shared_EventBus_2_classLit = createForClass('com.google.gwt.event.shared', 'EventBus', 604, Lcom_google_web_bindery_event_shared_EventBus_2_classLit);
function $clinit_HandlerManager(){
  $clinit_HandlerManager = emptyMethod;
  $clinit_Object();
}

function HandlerManager(source){
  $clinit_HandlerManager();
  HandlerManager_0.call(this, source, false);
}

function HandlerManager_0(source, fireInReverseOrder){
  $clinit_HandlerManager();
  Object_0.call(this);
  this.$init_566();
  this.eventBus = new HandlerManager$Bus(fireInReverseOrder);
  this.source = source;
}

defineClass(223, 1, {1:1}, HandlerManager, HandlerManager_0);
_.$init_566 = function $init_566(){
}
;
_.addHandler_1 = function addHandler_0(type_0, handler){
  return new LegacyHandlerWrapper(this.eventBus.addHandler_0(type_0, handler));
}
;
_.fireEvent = function fireEvent_1(event_0){
  var e, oldSource;
  if (!event_0.isLive()) {
    event_0.revive();
  }
  oldSource = event_0.getSource();
  event_0.overrideSource(this.source);
  try {
    this.eventBus.fireEvent_0(event_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 185)) {
      e = $e0;
      throw toJs(new UmbrellaException_0(e.getCauses()));
    }
     else 
      throw toJs($e0);
  }
   finally {
    if (jsEquals(oldSource, null)) {
      event_0.kill();
    }
     else {
      event_0.overrideSource(oldSource);
    }
  }
}
;
_.isEventHandled = function isEventHandled(e){
  return this.eventBus.isEventHandled_0(e);
}
;
var Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared', 'HandlerManager', 223, Ljava_lang_Object_2_classLit);
function $clinit_SimpleEventBus(){
  $clinit_SimpleEventBus = emptyMethod;
  $clinit_EventBus();
}

function SimpleEventBus(){
  $clinit_SimpleEventBus();
  SimpleEventBus_0.call(this, false);
}

function SimpleEventBus_0(fireInReverseOrder){
  $clinit_SimpleEventBus();
  EventBus.call(this);
  this.$init_567();
  this.isReverseOrder = fireInReverseOrder;
}

defineClass(186, 365, {1:1}, SimpleEventBus);
_.$init_567 = function $init_567(){
  this.firingDepth = 0;
  this.map_0 = new HashMap;
}
;
_.addHandler_0 = function addHandler_1(type_0, handler){
  return this.doAdd(type_0, null, handler);
}
;
_.defer_0 = function defer_0(command){
  if (isNull(this.deferredDeltas)) {
    this.deferredDeltas = new ArrayList;
  }
  this.deferredDeltas.add_5(command);
}
;
_.doAdd = function doAdd(type_0, source, handler){
  if (isNull(type_0)) {
    throw toJs(new NullPointerException_0('Cannot add a handler with a null type'));
  }
  if (jsEquals(handler, null)) {
    throw toJs(new NullPointerException_0('Cannot add a null handler'));
  }
  if (this.firingDepth > 0) {
    this.enqueueAdd(type_0, source, handler);
  }
   else {
    this.doAddNow(type_0, source, handler);
  }
  return new SimpleEventBus$1(this, type_0, source, handler);
}
;
_.doAddNow = function doAddNow(type_0, source, handler){
  $clinit_SimpleEventBus();
  var l;
  l = this.ensureHandlerList(type_0, source);
  l.add_5(handler);
}
;
_.doFire = function doFire(event_0, source){
  var causes, e, handler, handlers, it;
  if (isNull(event_0)) {
    throw toJs(new NullPointerException_0('Cannot fire null event'));
  }
  try {
    this.firingDepth++;
    if (jsNotEquals(source, null)) {
      setSourceOfEvent(event_0, source);
    }
    handlers = this.getDispatchList(event_0.getAssociatedType(), source);
    causes = null;
    it = this.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();
    while (this.isReverseOrder?it.hasPrevious():it.hasNext_0()) {
      handler = this.isReverseOrder?it.previous():it.next_1();
      try {
        dispatchEvent_1(event_0, handler);
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 24)) {
          e = $e0;
          if (isNull(causes)) {
            causes = new HashSet;
          }
          causes.add_5(e);
        }
         else 
          throw toJs($e0);
      }
    }
    if (isNotNull(causes)) {
      throw toJs(new UmbrellaException(causes));
    }
  }
   finally {
    this.firingDepth--;
    if (this.firingDepth == 0) {
      this.handleQueuedAddsAndRemoves();
    }
  }
}
;
_.doRemove = function doRemove(type_0, source, handler){
  if (this.firingDepth > 0) {
    this.enqueueRemove(type_0, source, handler);
  }
   else {
    this.doRemoveNow(type_0, source, handler);
  }
}
;
_.doRemoveNow = function doRemoveNow(type_0, source, handler){
  $clinit_SimpleEventBus();
  var l, removed;
  l = this.getHandlerList(type_0, source);
  removed = l.remove_1(handler);
  if (removed && l.isEmpty()) {
    this.prune(type_0, source);
  }
}
;
_.enqueueAdd = function enqueueAdd(type_0, source, handler){
  this.defer_0(new SimpleEventBus$2(this, type_0, source, handler));
}
;
_.enqueueRemove = function enqueueRemove(type_0, source, handler){
  this.defer_0(new SimpleEventBus$3(this, type_0, source, handler));
}
;
_.ensureHandlerList = function ensureHandlerList(type_0, source){
  var handlers, sourceMap;
  sourceMap = castTo(this.map_0.get_1(type_0), 82);
  if (isNull(sourceMap)) {
    sourceMap = new HashMap;
    this.map_0.put(type_0, sourceMap);
  }
  handlers = castTo(castTo(sourceMap.get_1(source), 38), 38);
  if (isNull(handlers)) {
    handlers = new ArrayList;
    sourceMap.put(source, handlers);
  }
  return handlers;
}
;
_.fireEvent_0 = function fireEvent_2(event_0){
  this.doFire(event_0, null);
}
;
_.getDispatchList = function getDispatchList(type_0, source){
  var directHandlers, globalHandlers, rtn;
  directHandlers = this.getHandlerList(type_0, source);
  if (jsEquals(source, null)) {
    return directHandlers;
  }
  globalHandlers = this.getHandlerList(type_0, null);
  rtn = new ArrayList_0(directHandlers);
  rtn.addAll(globalHandlers);
  return rtn;
}
;
_.getHandlerList = function getHandlerList(type_0, source){
  var handlers, sourceMap;
  sourceMap = castTo(this.map_0.get_1(type_0), 82);
  if (isNull(sourceMap)) {
    return emptyList();
  }
  handlers = castTo(castTo(sourceMap.get_1(source), 38), 38);
  if (isNull(handlers)) {
    return emptyList();
  }
  return handlers;
}
;
_.handleQueuedAddsAndRemoves = function handleQueuedAddsAndRemoves(){
  var c, c$iterator;
  if (isNotNull(this.deferredDeltas)) {
    try {
      for (c$iterator = this.deferredDeltas.iterator_0(); c$iterator.hasNext_0();) {
        c = castTo(c$iterator.next_1(), 533);
        c.execute();
      }
    }
     finally {
      this.deferredDeltas = null;
    }
  }
}
;
_.isEventHandled_0 = function isEventHandled_0(eventKey){
  return this.map_0.containsKey(eventKey);
}
;
_.prune = function prune(type_0, source){
  var pruned, sourceMap;
  sourceMap = castTo(this.map_0.get_1(type_0), 82);
  pruned = castTo(sourceMap.remove_4(source), 38);
  if (!isNotNull(pruned)) {
    debugger;
    throw toJs(makeAssertionError_Object("Can't prune what wasn't there"));
  }
  if (!pruned.isEmpty()) {
    debugger;
    throw toJs(makeAssertionError_Object('Pruned unempty list!'));
  }
  if (sourceMap.isEmpty()) {
    this.map_0.remove_4(type_0);
  }
}
;
_.firingDepth = 0;
_.isReverseOrder = false;
var Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus', 186, Lcom_google_web_bindery_event_shared_EventBus_2_classLit);
function $clinit_HandlerManager$Bus(){
  $clinit_HandlerManager$Bus = emptyMethod;
  $clinit_SimpleEventBus();
}

function HandlerManager$Bus(fireInReverseOrder){
  $clinit_HandlerManager$Bus();
  SimpleEventBus_0.call(this, fireInReverseOrder);
  this.$init_568();
}

defineClass(529, 186, {1:1}, HandlerManager$Bus);
_.$init_568 = function $init_568(){
}
;
_.doRemove = function doRemove_0(type_0, source, handler){
  getClassPrototype(186).doRemove.call(this, type_0, source, handler);
}
;
_.isEventHandled_0 = function isEventHandled_1(eventKey){
  return getClassPrototype(186).isEventHandled_0.call(this, eventKey);
}
;
var Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared', 'HandlerManager/Bus', 529, Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit);
function $clinit_HandlerRegistration_0(){
  $clinit_HandlerRegistration_0 = emptyMethod;
}

var Lcom_google_web_bindery_event_shared_HandlerRegistration_2_classLit = createForInterface('com.google.web.bindery.event.shared', 'HandlerRegistration');
function $clinit_HandlerRegistration(){
  $clinit_HandlerRegistration = emptyMethod;
}

var Lcom_google_gwt_event_shared_HandlerRegistration_2_classLit = createForInterface('com.google.gwt.event.shared', 'HandlerRegistration');
function $clinit_LegacyHandlerWrapper(){
  $clinit_LegacyHandlerWrapper = emptyMethod;
  $clinit_Object();
}

function LegacyHandlerWrapper(real){
  $clinit_LegacyHandlerWrapper();
  Object_0.call(this);
  this.$init_569();
  this.real = real;
}

defineClass(364, 1, {4423:1, 1:1}, LegacyHandlerWrapper);
_.$init_569 = function $init_569(){
}
;
_.removeHandler = function removeHandler(){
  this.real.removeHandler();
}
;
var Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared', 'LegacyHandlerWrapper', 364, Ljava_lang_Object_2_classLit);
function $clinit_SimpleEventBus_0(){
  $clinit_SimpleEventBus_0 = emptyMethod;
  $clinit_EventBus_0();
}

function SimpleEventBus_1(){
  $clinit_SimpleEventBus_0();
  EventBus_0.call(this);
  this.$init_570();
}

defineClass(523, 604, {1:1}, SimpleEventBus_1);
_.$init_570 = function $init_570(){
  this.real = new SimpleEventBus;
}
;
_.addHandler_1 = function addHandler_2(type_0, handler){
  return this.wrap(this.addHandler_0(castTo(type_0, 260), handler));
}
;
_.addHandler_0 = function addHandler_3(type_0, handler){
  return this.real.addHandler_0(type_0, handler);
}
;
_.fireEvent = function fireEvent_3(event_0){
  this.castFireEvent(event_0);
}
;
_.fireEvent_0 = function fireEvent_4(event_0){
  this.real.fireEvent_0(event_0);
}
;
var Lcom_google_gwt_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.gwt.event.shared', 'SimpleEventBus', 523, Lcom_google_gwt_event_shared_EventBus_2_classLit);
function $clinit_UmbrellaException(){
  $clinit_UmbrellaException = emptyMethod;
  $clinit_RuntimeException();
}

function UmbrellaException(causes){
  $clinit_UmbrellaException();
  var cause, cause$iterator, i;
  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));
  this.$init_571();
  this.causes = causes;
  i = 0;
  for (cause$iterator = causes.iterator_0(); cause$iterator.hasNext_0();) {
    cause = castTo(cause$iterator.next_1(), 24);
    if (i++ == 0) {
      continue;
    }
    this.addSuppressed(cause);
  }
}

function makeCause(causes){
  return causes.isEmpty()?null:castTo(causes.iterator_0().next_1(), 24);
}

function makeMessage(causes){
  var b, count, first, t, t$iterator;
  count = causes.size_1();
  if (count == 0) {
    return null;
  }
  b = new StringBuilder_1(count == 1?'Exception caught: ':count + ' exceptions caught: ');
  first = true;
  for (t$iterator = causes.iterator_0(); t$iterator.hasNext_0();) {
    t = castTo(t$iterator.next_1(), 24);
    if (first) {
      first = false;
    }
     else {
      b.append_9('; ');
    }
    b.append_9(t.getMessage());
  }
  return b.toString_0();
}

defineClass(185, 27, {185:1, 4:1, 25:1, 1:1, 27:1, 24:1}, UmbrellaException);
_.$init_571 = function $init_571(){
}
;
_.getCauses = function getCauses(){
  return this.causes;
}
;
var Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared', 'UmbrellaException', 185, Ljava_lang_RuntimeException_2_classLit);
function $clinit_UmbrellaException_0(){
  $clinit_UmbrellaException_0 = emptyMethod;
  $clinit_UmbrellaException();
}

function UmbrellaException_0(causes){
  $clinit_UmbrellaException_0();
  UmbrellaException.call(this, causes);
  this.$init_572();
}

defineClass(314, 185, {185:1, 4:1, 25:1, 1:1, 27:1, 24:1}, UmbrellaException_0);
_.$init_572 = function $init_572(){
}
;
var Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared', 'UmbrellaException', 314, Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit);
function $clinit_Request(){
  $clinit_Request = emptyMethod;
  $clinit_Object();
}

function Request_0(xmlHttpRequest, timeoutMillis, callback){
  $clinit_Request();
  Object_0.call(this);
  this.$init_573();
  if (isNull(xmlHttpRequest)) {
    throw toJs(new NullPointerException);
  }
  if (isNull(callback)) {
    throw toJs(new NullPointerException);
  }
  if (timeoutMillis < 0) {
    throw toJs(new IllegalArgumentException);
  }
  this.callback = callback;
  this.timeoutMillis = timeoutMillis;
  this.xmlHttpRequest = xmlHttpRequest;
  if (timeoutMillis > 0) {
    this.timer.schedule(timeoutMillis);
  }
}

function createResponse(xmlHttpRequest){
  return get_2655().createResponse(xmlHttpRequest);
}

defineClass(726, 1, {1:1}, Request_0);
_.$init_573 = function $init_573(){
  this.timer = new Request$1(this);
}
;
_.cancel = function cancel_7(){
  var xhr;
  if (isNull(this.xmlHttpRequest)) {
    return;
  }
  this.timer.cancel();
  xhr = this.xmlHttpRequest;
  this.xmlHttpRequest = null;
  $clearOnReadyStateChange(xhr);
  $abort(xhr);
}
;
_.fireOnResponseReceived = function fireOnResponseReceived(callback){
  var response, xhr;
  if (isNull(this.xmlHttpRequest)) {
    return;
  }
  this.timer.cancel();
  xhr = this.xmlHttpRequest;
  this.xmlHttpRequest = null;
  response = createResponse(xhr);
  callback.onResponseReceived(this, response);
}
;
_.fireOnTimeout = function fireOnTimeout(){
  $clinit_Request();
  if (isNull(this.xmlHttpRequest)) {
    return;
  }
  this.cancel();
  this.callback.onError_0(this, new RequestTimeoutException(this, this.timeoutMillis));
}
;
_.timeoutMillis = 0;
var Lcom_google_gwt_http_client_Request_2_classLit = createForClass('com.google.gwt.http.client', 'Request', 726, Ljava_lang_Object_2_classLit);
function $clinit_Request$1(){
  $clinit_Request$1 = emptyMethod;
  $clinit_Timer();
}

function Request$1(this$0){
  $clinit_Request$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_574();
}

defineClass(729, 93, {1:1}, Request$1);
_.$init_574 = function $init_574(){
}
;
_.run = function run_18(){
  this.this$01.fireOnTimeout();
}
;
var Lcom_google_gwt_http_client_Request$1_2_classLit = createForClass('com.google.gwt.http.client', 'Request/1', 729, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_Request$ImplHolder(){
  $clinit_Request$ImplHolder = emptyMethod;
  $clinit_Object();
  impl_6 = castTo(new Request$RequestImpl, 279);
}

function get_2655(){
  $clinit_Request$ImplHolder();
  return impl_6;
}

var impl_6;
function $clinit_Request$RequestImpl(){
  $clinit_Request$RequestImpl = emptyMethod;
  $clinit_Object();
}

function Request$RequestImpl(){
  $clinit_Request$RequestImpl();
  Object_0.call(this);
  this.$init_575();
}

defineClass(279, 1, {279:1, 1:1}, Request$RequestImpl);
_.$init_575 = function $init_575(){
}
;
_.createResponse = function createResponse_0(xmlHttpRequest){
  return new ResponseImpl(xmlHttpRequest);
}
;
var Lcom_google_gwt_http_client_Request$RequestImpl_2_classLit = createForClass('com.google.gwt.http.client', 'Request/RequestImpl', 279, Ljava_lang_Object_2_classLit);
function $clinit_Response(){
  $clinit_Response = emptyMethod;
  $clinit_Object();
}

function Response_0(){
  $clinit_Response();
  Object_0.call(this);
  this.$init_576();
}

defineClass(727, 1, {1:1});
_.$init_576 = function $init_576(){
}
;
var Lcom_google_gwt_http_client_Response_2_classLit = createForClass('com.google.gwt.http.client', 'Response', 727, Ljava_lang_Object_2_classLit);
function $clinit_ResponseImpl(){
  $clinit_ResponseImpl = emptyMethod;
  $clinit_Response();
}

function ResponseImpl(xmlHttpRequest){
  $clinit_ResponseImpl();
  Response_0.call(this);
  this.$init_577();
  this.xmlHttpRequest = xmlHttpRequest;
  if (!this.isResponseReady()) {
    debugger;
    throw toJs(makeAssertionError());
  }
}

defineClass(728, 727, {1:1}, ResponseImpl);
_.$init_577 = function $init_577(){
}
;
_.getStatusCode = function getStatusCode(){
  return $getStatus(this.xmlHttpRequest);
}
;
_.getStatusText = function getStatusText(){
  return $getStatusText(this.xmlHttpRequest);
}
;
_.getText = function getText_0(){
  return $getResponseText(this.xmlHttpRequest);
}
;
_.isResponseReady = function isResponseReady(){
  return $getReadyState(this.xmlHttpRequest) == 4;
}
;
var Lcom_google_gwt_http_client_ResponseImpl_2_classLit = createForClass('com.google.gwt.http.client', 'ResponseImpl', 728, Lcom_google_gwt_http_client_Response_2_classLit);
function $clinit_RequestBuilder(){
  $clinit_RequestBuilder = emptyMethod;
  $clinit_Object();
  DELETE = new RequestBuilder$Method('DELETE');
  GET = new RequestBuilder$Method('GET');
  HEAD = new RequestBuilder$Method('HEAD');
  POST = new RequestBuilder$Method('POST');
  PUT = new RequestBuilder$Method('PUT');
}

function RequestBuilder(httpMethod, url_0){
  $clinit_RequestBuilder();
  RequestBuilder_0.call(this, isNull(httpMethod)?null:httpMethod.toString_0(), url_0);
}

function RequestBuilder_0(httpMethod, url_0){
  Object_0.call(this);
  this.$init_578();
  throwIfEmptyOrNull('httpMethod', httpMethod);
  throwIfEmptyOrNull('url', url_0);
  this.httpMethod = httpMethod;
  this.url_0 = url_0;
}

defineClass(407, 1, {1:1}, RequestBuilder);
_.$init_578 = function $init_578(){
}
;
_.doSend = function doSend(requestData, callback){
  var e, request, requestPermissionException, xmlHttpRequest;
  xmlHttpRequest = create_8();
  try {
    if (jsNotEquals(this.user, null) && jsNotEquals(this.password, null)) {
      $open_2(xmlHttpRequest, this.httpMethod, this.url_0, this.user, this.password);
    }
     else if (jsNotEquals(this.user, null)) {
      $open_1(xmlHttpRequest, this.httpMethod, this.url_0, this.user);
    }
     else {
      $open_0(xmlHttpRequest, this.httpMethod, this.url_0);
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 175)) {
      e = $e0;
      requestPermissionException = new RequestPermissionException(this.url_0);
      requestPermissionException.initCause(new RequestException(e.getMessage()));
      throw toJs(requestPermissionException);
    }
     else 
      throw toJs($e0);
  }
  this.setHeaders(xmlHttpRequest);
  if (this.includeCredentials) {
    $setWithCredentials(xmlHttpRequest, true);
  }
  request = new Request_0(xmlHttpRequest, this.timeoutMillis, callback);
  $setOnReadyStateChange(xmlHttpRequest, new RequestBuilder$1(this, request, callback));
  try {
    $send(xmlHttpRequest, requestData);
  }
   catch ($e1) {
    $e1 = toJava($e1);
    if (instanceOf($e1, 175)) {
      e = $e1;
      throw toJs(new RequestException(e.getMessage()));
    }
     else 
      throw toJs($e1);
  }
  return request;
}
;
_.send_0 = function send(){
  throwIfNull('callback', this.callback);
  return this.doSend(this.requestData, this.callback);
}
;
_.setCallback_0 = function setCallback_0(callback){
  throwIfNull('callback', callback);
  this.callback = callback;
}
;
_.setHeader = function setHeader(header, value_0){
  throwIfEmptyOrNull('header', header);
  throwIfEmptyOrNull('value', value_0);
  if (isNull(this.headers)) {
    this.headers = new HashMap;
  }
  this.headers.put(header, value_0);
}
;
_.setHeaders = function setHeaders(xmlHttpRequest){
  var e, header, header$iterator;
  if (isNotNull(this.headers) && this.headers.size_1() > 0) {
    for (header$iterator = this.headers.entrySet().iterator_0(); header$iterator.hasNext_0();) {
      header = castTo(header$iterator.next_1(), 39);
      try {
        $setRequestHeader(xmlHttpRequest, castToString(header.getKey()), castToString(header.getValue_0()));
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 175)) {
          e = $e0;
          throw toJs(new RequestException(e.getMessage()));
        }
         else 
          throw toJs($e0);
      }
    }
  }
   else {
    $setRequestHeader(xmlHttpRequest, 'Content-Type', 'text/plain; charset=utf-8');
  }
}
;
_.setRequestData = function setRequestData(requestData){
  this.requestData = requestData;
}
;
_.includeCredentials = false;
_.timeoutMillis = 0;
var DELETE, GET, HEAD, POST, PUT;
var Lcom_google_gwt_http_client_RequestBuilder_2_classLit = createForClass('com.google.gwt.http.client', 'RequestBuilder', 407, Ljava_lang_Object_2_classLit);
function $clinit_ReadyStateChangeHandler(){
  $clinit_ReadyStateChangeHandler = emptyMethod;
}

var Lcom_google_gwt_xhr_client_ReadyStateChangeHandler_2_classLit = createForInterface('com.google.gwt.xhr.client', 'ReadyStateChangeHandler');
function $clinit_RequestBuilder$1(){
  $clinit_RequestBuilder$1 = emptyMethod;
  $clinit_Object();
}

function RequestBuilder$1(this$0, val$request, val$callback){
  $clinit_RequestBuilder$1();
  this.this$01 = this$0;
  this.val$request2 = val$request;
  this.val$callback3 = val$callback;
  Object_0.call(this);
  this.$init_579();
}

defineClass(797, 1, {1:1}, RequestBuilder$1);
_.$init_579 = function $init_579(){
}
;
_.onReadyStateChange = function onReadyStateChange(xhr){
  if ($getReadyState(xhr) == 4) {
    $clearOnReadyStateChange(xhr);
    this.val$request2.fireOnResponseReceived(this.val$callback3);
  }
}
;
var Lcom_google_gwt_http_client_RequestBuilder$1_2_classLit = createForClass('com.google.gwt.http.client', 'RequestBuilder/1', 797, Ljava_lang_Object_2_classLit);
function $clinit_RequestBuilder$Method(){
  $clinit_RequestBuilder$Method = emptyMethod;
  $clinit_Object();
}

function RequestBuilder$Method(name_0){
  $clinit_RequestBuilder$Method();
  Object_0.call(this);
  this.$init_580();
  this.name_0 = name_0;
}

defineClass(243, 1, {1:1}, RequestBuilder$Method);
_.$init_580 = function $init_580(){
}
;
_.toString_0 = function toString_41(){
  return this.name_0;
}
;
var Lcom_google_gwt_http_client_RequestBuilder$Method_2_classLit = createForClass('com.google.gwt.http.client', 'RequestBuilder/Method', 243, Ljava_lang_Object_2_classLit);
function $clinit_RequestCallback(){
  $clinit_RequestCallback = emptyMethod;
}

var Lcom_google_gwt_http_client_RequestCallback_2_classLit = createForInterface('com.google.gwt.http.client', 'RequestCallback');
function $clinit_RequestException(){
  $clinit_RequestException = emptyMethod;
  $clinit_Exception();
}

function RequestException(message){
  $clinit_RequestException();
  Exception_1.call(this, message);
  this.$init_581();
}

defineClass(165, 25, {165:1, 4:1, 25:1, 1:1, 24:1}, RequestException);
_.$init_581 = function $init_581(){
}
;
var Lcom_google_gwt_http_client_RequestException_2_classLit = createForClass('com.google.gwt.http.client', 'RequestException', 165, Ljava_lang_Exception_2_classLit);
function $clinit_RequestPermissionException(){
  $clinit_RequestPermissionException = emptyMethod;
  $clinit_RequestException();
}

function RequestPermissionException(url_0){
  $clinit_RequestPermissionException();
  RequestException.call(this, 'The URL ' + url_0 + ' is invalid or violates the same-origin security restriction');
  this.$init_582();
  this.url_0 = url_0;
}

defineClass(982, 165, {165:1, 4:1, 25:1, 1:1, 24:1}, RequestPermissionException);
_.$init_582 = function $init_582(){
}
;
var Lcom_google_gwt_http_client_RequestPermissionException_2_classLit = createForClass('com.google.gwt.http.client', 'RequestPermissionException', 982, Lcom_google_gwt_http_client_RequestException_2_classLit);
function $clinit_RequestTimeoutException(){
  $clinit_RequestTimeoutException = emptyMethod;
  $clinit_RequestException();
}

function RequestTimeoutException(request, timeoutMillis){
  $clinit_RequestTimeoutException();
  RequestException.call(this, formatMessage(timeoutMillis));
  this.$init_583();
  this.request = request;
  this.timeoutMillis = timeoutMillis;
}

function formatMessage(timeoutMillis){
  return 'A request timeout has expired after ' + timeoutMillis + ' ms';
}

defineClass(1036, 165, {165:1, 4:1, 25:1, 1:1, 24:1}, RequestTimeoutException);
_.$init_583 = function $init_583(){
}
;
_.timeoutMillis = 0;
var Lcom_google_gwt_http_client_RequestTimeoutException_2_classLit = createForClass('com.google.gwt.http.client', 'RequestTimeoutException', 1036, Lcom_google_gwt_http_client_RequestException_2_classLit);
function $clinit_StringValidator(){
  $clinit_StringValidator = emptyMethod;
  $clinit_Object();
}

function throwIfEmptyOrNull(name_0, value_0){
  $clinit_StringValidator();
  if (!jsNotEquals(name_0, null)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!(length__I__devirtual$(trim__Ljava_lang_String___devirtual$(name_0)) != 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  throwIfNull(name_0, value_0);
  if (0 == length__I__devirtual$(trim__Ljava_lang_String___devirtual$(value_0))) {
    throw toJs(new IllegalArgumentException_0(name_0 + ' cannot be empty'));
  }
}

function throwIfNull(name_0, value_0){
  $clinit_StringValidator();
  if (jsEquals(null, value_0)) {
    throw toJs(new NullPointerException_0(name_0 + ' cannot be null'));
  }
}

function $clinit_URL(){
  $clinit_URL = emptyMethod;
  $clinit_Object();
}

function encodePathSegment_0(decodedURLComponent){
  $clinit_URL();
  throwIfNull('decodedURLComponent', decodedURLComponent);
  return encodePathSegmentImpl(decodedURLComponent);
}

function encodePathSegmentImpl(decodedURLComponent){
  return encodeURIComponent(decodedURLComponent);
}

function $clinit_AutoDirectionHandler(){
  $clinit_AutoDirectionHandler = emptyMethod;
  $clinit_Object();
}

function AutoDirectionHandler(target, directionEstimator){
  Object_0.call(this);
  this.$init_584();
  this.target_0 = target;
  this.handlerRegistration = null;
  this.setDirectionEstimator(directionEstimator);
}

function addTo(target, directionEstimator){
  return new AutoDirectionHandler(target, directionEstimator);
}

function addTo_0(target, enabled){
  $clinit_AutoDirectionHandler();
  return addTo(target, enabled?get_2658():null);
}

defineClass(684, 1, {1060:1, 13:1, 1:1}, AutoDirectionHandler);
_.$init_584 = function $init_584(){
}
;
_.onKeyUp_0 = function onKeyUp_0(event_0){
  this.refreshDirection();
}
;
_.refreshDirection = function refreshDirection(){
  var dir_0;
  if (isNotNull(this.directionEstimator)) {
    dir_0 = this.directionEstimator.estimateDirection(this.target_0.getText());
    if (jsNotEquals(dir_0, this.target_0.getDirection())) {
      this.target_0.setDirection(dir_0);
    }
  }
}
;
_.setDirectionEstimator = function setDirectionEstimator(directionEstimator){
  this.directionEstimator = directionEstimator;
  if (isNull(directionEstimator) != isNull(this.handlerRegistration)) {
    if (isNull(directionEstimator)) {
      this.handlerRegistration.removeHandler();
      this.handlerRegistration = null;
    }
     else {
      this.handlerRegistration = this.target_0.addKeyUpHandler(this);
    }
  }
  this.refreshDirection();
}
;
_.setDirectionEstimator_0 = function setDirectionEstimator_0(enabled){
  this.setDirectionEstimator(enabled?get_2658():null);
}
;
var Lcom_google_gwt_i18n_client_AutoDirectionHandler_2_classLit = createForClass('com.google.gwt.i18n.client', 'AutoDirectionHandler', 684, Ljava_lang_Object_2_classLit);
function $clinit_AutoDirectionHandler$Target(){
  $clinit_AutoDirectionHandler$Target = emptyMethod;
}

var Lcom_google_gwt_i18n_client_AutoDirectionHandler$Target_2_classLit = createForInterface('com.google.gwt.i18n.client', 'AutoDirectionHandler/Target');
function $clinit_BidiPolicy(){
  $clinit_BidiPolicy = emptyMethod;
  $clinit_Object();
  impl_7 = castTo(new BidiPolicy$BidiPolicyImpl, 300);
}

function isBidiEnabled(){
  $clinit_BidiPolicy();
  return impl_7.isBidiEnabled();
}

var impl_7;
function $clinit_BidiPolicy$BidiPolicyImpl(){
  $clinit_BidiPolicy$BidiPolicyImpl = emptyMethod;
  $clinit_Object();
}

function BidiPolicy$BidiPolicyImpl(){
  $clinit_BidiPolicy$BidiPolicyImpl();
  Object_0.call(this);
  this.$init_585();
}

defineClass(300, 1, {300:1, 1:1}, BidiPolicy$BidiPolicyImpl);
_.$init_585 = function $init_585(){
}
;
_.isBidiEnabled = function isBidiEnabled_0(){
  return hasAnyRTL();
}
;
var Lcom_google_gwt_i18n_client_BidiPolicy$BidiPolicyImpl_2_classLit = createForClass('com.google.gwt.i18n.client', 'BidiPolicy/BidiPolicyImpl', 300, Ljava_lang_Object_2_classLit);
function $clinit_BidiUtils(){
  $clinit_BidiUtils = emptyMethod;
  $clinit_Object();
}

function getDirectionOnElement(elem){
  $clinit_BidiUtils();
  var dirPropertyValue;
  dirPropertyValue = $getPropertyString(elem, 'dir');
  if (equalsIgnoreCase_Ljava_lang_String__Z__devirtual$('rtl', dirPropertyValue)) {
    return $clinit_HasDirection$Direction() , RTL;
  }
   else if (equalsIgnoreCase_Ljava_lang_String__Z__devirtual$('ltr', dirPropertyValue)) {
    return $clinit_HasDirection$Direction() , LTR;
  }
  return $clinit_HasDirection$Direction() , DEFAULT;
}

function setDirectionOnElement(elem, direction){
  $clinit_BidiUtils();
  switch (direction.ordinal_0()) {
    case ($clinit_HasDirection$Direction() , RTL).ordinal_0():
      {
        $setPropertyString(elem, 'dir', 'rtl');
        break;
      }

    case ($clinit_HasDirection$Direction() , LTR).ordinal_0():
      {
        $setPropertyString(elem, 'dir', 'ltr');
        break;
      }

    case ($clinit_HasDirection$Direction() , DEFAULT).ordinal_0():
      {
        if (jsNotEquals(getDirectionOnElement(elem), ($clinit_HasDirection$Direction() , DEFAULT))) {
          $setPropertyString(elem, 'dir', '');
        }
        break;
      }

  }
}

function $clinit_Constants(){
  $clinit_Constants = emptyMethod;
}

var Lcom_google_gwt_i18n_client_Constants_2_classLit = createForInterface('com.google.gwt.i18n.client', 'Constants');
function $clinit_CurrencyData(){
  $clinit_CurrencyData = emptyMethod;
}

var Lcom_google_gwt_i18n_client_CurrencyData_2_classLit = createForInterface('com.google.gwt.i18n.client', 'CurrencyData');
function $clinit_CurrencyList(){
  $clinit_CurrencyList = emptyMethod;
  $clinit_Object();
  $clinit_Iterable();
}

function CurrencyList(){
  $clinit_CurrencyList();
  Object_0.call(this);
  this.$init_586();
}

function get_2656(){
  $clinit_CurrencyList();
  return $clinit_CurrencyList$CurrencyListInstance() , instance_7;
}

function loadCurrencyValuesNative(map_0, collection){
  for (var key in map_0) {
    if (map_0.hasOwnProperty(key)) {
      collection.add_5(map_0[key]);
    }
  }
}

function overrideMap(original, override){
  $clinit_CurrencyList();
  for (var key in override) {
    if (override.hasOwnProperty(key)) {
      original[key] = override[key];
    }
  }
  return original;
}

defineClass(250, 1, {1:1});
_.$init_586 = function $init_586(){
}
;
_.ensureCurrencyMap = function ensureCurrencyMap(){
  if (isScript()) {
    if (isNull(this.dataMapNative)) {
      this.dataMapNative = this.loadCurrencyMapNative();
    }
  }
   else {
    if (isNull(this.dataMapJava)) {
      this.dataMapJava = this.loadCurrencyMapJava();
    }
  }
}
;
_.getDefault = function getDefault(){
  if (isScript()) {
    return this.getDefaultNative();
  }
   else {
    return this.getDefaultJava();
  }
}
;
_.getDefaultJava = function getDefaultJava(){
  return new CurrencyDataImpl('USD', '$', 2, 'US$', '$');
}
;
_.getDefaultNative = function getDefaultNative(){
  return ['USD', '$', 2, 'US$'];
}
;
_.iterator_0 = function iterator_6(){
  return this.iterator_1(false);
}
;
_.iterator_1 = function iterator_7(includeDeprecated){
  var collection, item_0, item$iterator, newCollection, value_0, value$iterator;
  this.ensureCurrencyMap();
  collection = new ArrayList;
  if (isScript()) {
    loadCurrencyValuesNative(this.dataMapNative, collection);
  }
   else {
    for (item$iterator = this.dataMapJava.values_0().iterator_0(); item$iterator.hasNext_0();) {
      item_0 = castToAllowJso(item$iterator.next_1(), 369);
      collection.add_5(item_0);
    }
  }
  if (!includeDeprecated) {
    newCollection = new ArrayList;
    for (value$iterator = collection.iterator_0(); value$iterator.hasNext_0();) {
      value_0 = castToAllowJso(value$iterator.next_1(), 369);
      if (!isDeprecated__Z__devirtual$(value_0)) {
        newCollection.add_5(value_0);
      }
    }
    collection = newCollection;
  }
  return unmodifiableList(collection).iterator_0();
}
;
_.loadCurrencyMapJava = function loadCurrencyMapJava(){
  var result;
  result = new HashMap;
  result.put('USD', new CurrencyDataImpl('USD', '$', 2, 'US$', '$'));
  result.put('EUR', new CurrencyDataImpl('EUR', '\u20AC', 2, '\u20AC', '\u20AC'));
  result.put('GBP', new CurrencyDataImpl('GBP', 'UK\xA3', 2, 'UK\xA3', '\xA3'));
  result.put('JPY', new CurrencyDataImpl('JPY', '\xA5', 0, 'JP\xA5', '\xA5'));
  return result;
}
;
_.loadCurrencyMapNative = function loadCurrencyMapNative(){
  return {'USD':['USD', '$', 2], 'EUR':['EUR', '\u20AC', 2], 'GBP':['GBP', 'UK\xA3', 2], 'JPY':['JPY', '\xA5', 0]};
}
;
var Lcom_google_gwt_i18n_client_CurrencyList_2_classLit = createForClass('com.google.gwt.i18n.client', 'CurrencyList', 250, Ljava_lang_Object_2_classLit);
function $clinit_CurrencyList$CurrencyListInstance(){
  $clinit_CurrencyList$CurrencyListInstance = emptyMethod;
  $clinit_Object();
  instance_7 = castTo(new CurrencyList_, 250);
}

var instance_7;
function $clinit_CurrencyList_(){
  $clinit_CurrencyList_ = emptyMethod;
  $clinit_CurrencyList();
}

function CurrencyList_(){
  $clinit_CurrencyList_();
  CurrencyList.call(this);
  this.$init_587();
}

defineClass(1047, 250, {250:1, 1:1}, CurrencyList_);
_.$init_587 = function $init_587(){
}
;
_.getDefaultJava = function getDefaultJava_0(){
  return new CurrencyDataImpl('USD', 'US$', 2, 'US$', '$');
}
;
_.getDefaultNative = function getDefaultNative_0(){
  return ['USD', 'US$', 2, 'US$', '$'];
}
;
_.loadCurrencyMapJava = function loadCurrencyMapJava_0(){
  var result;
  result = getClassPrototype(250).loadCurrencyMapJava.call(this);
  result.put('ADP', new CurrencyDataImpl('ADP', 'ADP', 128, 'ADP', 'ADP'));
  result.put('AED', new CurrencyDataImpl('AED', 'DH', 2, 'DH', 'dh'));
  result.put('AFA', new CurrencyDataImpl('AFA', 'AFA', 130, 'AFA', 'AFA'));
  result.put('AFN', new CurrencyDataImpl('AFN', 'AFN', 0, 'AFN', 'Af.'));
  result.put('ALK', new CurrencyDataImpl('ALK', 'ALK', 130, 'ALK', 'ALK'));
  result.put('ALL', new CurrencyDataImpl('ALL', 'ALL', 0, 'ALL', 'Lek'));
  result.put('AMD', new CurrencyDataImpl('AMD', 'AMD', 2, 'AMD', 'Dram'));
  result.put('ANG', new CurrencyDataImpl('ANG', 'ANG', 2, 'ANG', 'ANG'));
  result.put('AOA', new CurrencyDataImpl('AOA', 'AOA', 2, 'AOA', 'Kz'));
  result.put('AOK', new CurrencyDataImpl('AOK', 'AOK', 130, 'AOK', 'AOK'));
  result.put('AON', new CurrencyDataImpl('AON', 'AON', 130, 'AON', 'AON'));
  result.put('AOR', new CurrencyDataImpl('AOR', 'AOR', 130, 'AOR', 'AOR'));
  result.put('ARA', new CurrencyDataImpl('ARA', 'ARA', 130, 'ARA', 'ARA'));
  result.put('ARL', new CurrencyDataImpl('ARL', 'ARL', 130, 'ARL', 'ARL'));
  result.put('ARM', new CurrencyDataImpl('ARM', 'ARM', 130, 'ARM', 'ARM'));
  result.put('ARP', new CurrencyDataImpl('ARP', 'ARP', 130, 'ARP', 'ARP'));
  result.put('ARS', new CurrencyDataImpl('ARS', 'AR$', 2, 'AR$', '$'));
  result.put('ATS', new CurrencyDataImpl('ATS', 'ATS', 130, 'ATS', 'ATS'));
  result.put('AUD', new CurrencyDataImpl('AUD', 'A$', 2, 'AU$', '$'));
  result.put('AWG', new CurrencyDataImpl('AWG', 'AWG', 2, 'AWG', 'Afl.'));
  result.put('AZM', new CurrencyDataImpl('AZM', 'AZM', 130, 'AZM', 'AZM'));
  result.put('AZN', new CurrencyDataImpl('AZN', 'AZN', 2, 'AZN', 'man.'));
  result.put('BAD', new CurrencyDataImpl('BAD', 'BAD', 130, 'BAD', 'BAD'));
  result.put('BAM', new CurrencyDataImpl('BAM', 'BAM', 2, 'BAM', 'KM'));
  result.put('BAN', new CurrencyDataImpl('BAN', 'BAN', 130, 'BAN', 'BAN'));
  result.put('BBD', new CurrencyDataImpl('BBD', 'BBD', 2, 'BBD', '$'));
  result.put('BDT', new CurrencyDataImpl('BDT', 'Tk', 2, 'Tk', '\u09F3'));
  result.put('BEC', new CurrencyDataImpl('BEC', 'BEC', 130, 'BEC', 'BEC'));
  result.put('BEF', new CurrencyDataImpl('BEF', 'BEF', 130, 'BEF', 'BEF'));
  result.put('BEL', new CurrencyDataImpl('BEL', 'BEL', 130, 'BEL', 'BEL'));
  result.put('BGL', new CurrencyDataImpl('BGL', 'BGL', 130, 'BGL', 'BGL'));
  result.put('BGM', new CurrencyDataImpl('BGM', 'BGM', 130, 'BGM', 'BGM'));
  result.put('BGN', new CurrencyDataImpl('BGN', 'BGN', 2, 'BGN', 'lev'));
  result.put('BGO', new CurrencyDataImpl('BGO', 'BGO', 130, 'BGO', 'BGO'));
  result.put('BHD', new CurrencyDataImpl('BHD', 'BHD', 3, 'BHD', 'din'));
  result.put('BIF', new CurrencyDataImpl('BIF', 'BIF', 0, 'BIF', 'FBu'));
  result.put('BMD', new CurrencyDataImpl('BMD', 'BMD', 2, 'BMD', '$'));
  result.put('BND', new CurrencyDataImpl('BND', 'BND', 2, 'BND', '$'));
  result.put('BOB', new CurrencyDataImpl('BOB', 'BOB', 2, 'BOB', 'Bs'));
  result.put('BOL', new CurrencyDataImpl('BOL', 'BOL', 130, 'BOL', 'BOL'));
  result.put('BOP', new CurrencyDataImpl('BOP', 'BOP', 130, 'BOP', 'BOP'));
  result.put('BOV', new CurrencyDataImpl('BOV', 'BOV', 130, 'BOV', 'BOV'));
  result.put('BRB', new CurrencyDataImpl('BRB', 'BRB', 130, 'BRB', 'BRB'));
  result.put('BRC', new CurrencyDataImpl('BRC', 'BRC', 130, 'BRC', 'BRC'));
  result.put('BRE', new CurrencyDataImpl('BRE', 'BRE', 130, 'BRE', 'BRE'));
  result.put('BRL', new CurrencyDataImpl('BRL', 'R$', 2, 'R$', 'R$'));
  result.put('BRN', new CurrencyDataImpl('BRN', 'BRN', 130, 'BRN', 'BRN'));
  result.put('BRR', new CurrencyDataImpl('BRR', 'BRR', 130, 'BRR', 'BRR'));
  result.put('BRZ', new CurrencyDataImpl('BRZ', 'BRZ', 130, 'BRZ', 'BRZ'));
  result.put('BSD', new CurrencyDataImpl('BSD', 'BSD', 2, 'BSD', '$'));
  result.put('BTN', new CurrencyDataImpl('BTN', 'BTN', 2, 'BTN', 'Nu.'));
  result.put('BUK', new CurrencyDataImpl('BUK', 'BUK', 130, 'BUK', 'BUK'));
  result.put('BWP', new CurrencyDataImpl('BWP', 'BWP', 2, 'BWP', 'P'));
  result.put('BYB', new CurrencyDataImpl('BYB', 'BYB', 130, 'BYB', 'BYB'));
  result.put('BYN', new CurrencyDataImpl('BYN', 'BYN', 2, 'BYN', 'BYN'));
  result.put('BYR', new CurrencyDataImpl('BYR', 'BYR', 128, 'BYR', 'BYR'));
  result.put('BZD', new CurrencyDataImpl('BZD', 'BZD', 2, 'BZD', '$'));
  result.put('CAD', new CurrencyDataImpl('CAD', 'CA$', 2, 'C$', '$'));
  result.put('CDF', new CurrencyDataImpl('CDF', 'CDF', 2, 'CDF', 'FrCD'));
  result.put('CHE', new CurrencyDataImpl('CHE', 'CHE', 130, 'CHE', 'CHE'));
  result.put('CHF', new CurrencyDataImpl('CHF', 'CHF', 2, 'CHF', 'CHF'));
  result.put('CHW', new CurrencyDataImpl('CHW', 'CHW', 130, 'CHW', 'CHW'));
  result.put('CLE', new CurrencyDataImpl('CLE', 'CLE', 130, 'CLE', 'CLE'));
  result.put('CLF', new CurrencyDataImpl('CLF', 'CLF', 132, 'CLF', 'CLF'));
  result.put('CLP', new CurrencyDataImpl('CLP', 'CL$', 0, 'CL$', '$'));
  result.put('CNH', new CurrencyDataImpl('CNH', 'CNH', 130, 'CNH', 'CNH'));
  result.put('CNX', new CurrencyDataImpl('CNX', 'CNX', 130, 'CNX', 'CNX'));
  result.put('CNY', new CurrencyDataImpl('CNY', 'CN\xA5', 2, 'RMB\xA5', '\xA5'));
  result.put('COP', new CurrencyDataImpl('COP', 'COL$', 2, 'COL$', '$'));
  result.put('COU', new CurrencyDataImpl('COU', 'COU', 130, 'COU', 'COU'));
  result.put('CRC', new CurrencyDataImpl('CRC', 'CR\u20A1', 2, 'CR\u20A1', '\u20A1'));
  result.put('CSD', new CurrencyDataImpl('CSD', 'CSD', 130, 'CSD', 'CSD'));
  result.put('CSK', new CurrencyDataImpl('CSK', 'CSK', 130, 'CSK', 'CSK'));
  result.put('CUC', new CurrencyDataImpl('CUC', 'CUC', 2, 'CUC', '$'));
  result.put('CUP', new CurrencyDataImpl('CUP', '$MN', 2, '$MN', '$'));
  result.put('CVE', new CurrencyDataImpl('CVE', 'CVE', 2, 'CVE', 'CVE'));
  result.put('CYP', new CurrencyDataImpl('CYP', 'CYP', 130, 'CYP', 'CYP'));
  result.put('CZK', new CurrencyDataImpl('CZK', 'K\u010D', 2, 'K\u010D', 'K\u010D'));
  result.put('DDM', new CurrencyDataImpl('DDM', 'DDM', 130, 'DDM', 'DDM'));
  result.put('DEM', new CurrencyDataImpl('DEM', 'DEM', 130, 'DEM', 'DEM'));
  result.put('DJF', new CurrencyDataImpl('DJF', 'Fdj', 0, 'Fdj', 'Fdj'));
  result.put('DKK', new CurrencyDataImpl('DKK', 'kr', 2, 'kr', 'kr'));
  result.put('DOP', new CurrencyDataImpl('DOP', 'RD$', 2, 'RD$', '$'));
  result.put('DZD', new CurrencyDataImpl('DZD', 'DZD', 2, 'DZD', 'din'));
  result.put('ECS', new CurrencyDataImpl('ECS', 'ECS', 130, 'ECS', 'ECS'));
  result.put('ECV', new CurrencyDataImpl('ECV', 'ECV', 130, 'ECV', 'ECV'));
  result.put('EEK', new CurrencyDataImpl('EEK', 'EEK', 130, 'EEK', 'EEK'));
  result.put('EGP', new CurrencyDataImpl('EGP', 'LE', 2, 'LE', 'E\xA3'));
  result.put('ERN', new CurrencyDataImpl('ERN', 'ERN', 2, 'ERN', 'Nfk'));
  result.put('ESA', new CurrencyDataImpl('ESA', 'ESA', 130, 'ESA', 'ESA'));
  result.put('ESB', new CurrencyDataImpl('ESB', 'ESB', 130, 'ESB', 'ESB'));
  result.put('ESP', new CurrencyDataImpl('ESP', 'ESP', 128, 'ESP', 'ESP'));
  result.put('ETB', new CurrencyDataImpl('ETB', 'ETB', 2, 'ETB', 'Birr'));
  result.put('EUR', new CurrencyDataImpl('EUR', '\u20AC', 2, '\u20AC', '\u20AC'));
  result.put('FIM', new CurrencyDataImpl('FIM', 'FIM', 130, 'FIM', 'FIM'));
  result.put('FJD', new CurrencyDataImpl('FJD', 'FJD', 2, 'FJD', '$'));
  result.put('FKP', new CurrencyDataImpl('FKP', 'FKP', 2, 'FKP', '\xA3'));
  result.put('FRF', new CurrencyDataImpl('FRF', 'FRF', 130, 'FRF', 'FRF'));
  result.put('GBP', new CurrencyDataImpl('GBP', '\xA3', 2, 'GB\xA3', '\xA3'));
  result.put('GEK', new CurrencyDataImpl('GEK', 'GEK', 130, 'GEK', 'GEK'));
  result.put('GEL', new CurrencyDataImpl('GEL', 'GEL', 2, 'GEL', 'GEL'));
  result.put('GHC', new CurrencyDataImpl('GHC', 'GHC', 130, 'GHC', 'GHC'));
  result.put('GHS', new CurrencyDataImpl('GHS', 'GHS', 2, 'GHS', 'GHS'));
  result.put('GIP', new CurrencyDataImpl('GIP', 'GIP', 2, 'GIP', '\xA3'));
  result.put('GMD', new CurrencyDataImpl('GMD', 'GMD', 2, 'GMD', 'GMD'));
  result.put('GNF', new CurrencyDataImpl('GNF', 'GNF', 0, 'GNF', 'FG'));
  result.put('GNS', new CurrencyDataImpl('GNS', 'GNS', 130, 'GNS', 'GNS'));
  result.put('GQE', new CurrencyDataImpl('GQE', 'GQE', 130, 'GQE', 'GQE'));
  result.put('GRD', new CurrencyDataImpl('GRD', 'GRD', 130, 'GRD', 'GRD'));
  result.put('GTQ', new CurrencyDataImpl('GTQ', 'GTQ', 2, 'GTQ', 'Q'));
  result.put('GWE', new CurrencyDataImpl('GWE', 'GWE', 130, 'GWE', 'GWE'));
  result.put('GWP', new CurrencyDataImpl('GWP', 'GWP', 130, 'GWP', 'GWP'));
  result.put('GYD', new CurrencyDataImpl('GYD', 'GYD', 2, 'GYD', '$'));
  result.put('HKD', new CurrencyDataImpl('HKD', 'HK$', 2, 'HK$', '$'));
  result.put('HNL', new CurrencyDataImpl('HNL', 'L', 2, 'L', 'L'));
  result.put('HRD', new CurrencyDataImpl('HRD', 'HRD', 130, 'HRD', 'HRD'));
  result.put('HRK', new CurrencyDataImpl('HRK', 'HRK', 2, 'HRK', 'kn'));
  result.put('HTG', new CurrencyDataImpl('HTG', 'HTG', 2, 'HTG', 'HTG'));
  result.put('HUF', new CurrencyDataImpl('HUF', 'HUF', 2, 'HUF', 'Ft'));
  result.put('IDR', new CurrencyDataImpl('IDR', 'IDR', 2, 'IDR', 'Rp'));
  result.put('IEP', new CurrencyDataImpl('IEP', 'IEP', 130, 'IEP', 'IEP'));
  result.put('ILP', new CurrencyDataImpl('ILP', 'ILP', 130, 'ILP', 'ILP'));
  result.put('ILR', new CurrencyDataImpl('ILR', 'ILR', 130, 'ILR', 'ILR'));
  result.put('ILS', new CurrencyDataImpl('ILS', '\u20AA', 2, 'IL\u20AA', '\u20AA'));
  result.put('INR', new CurrencyDataImpl('INR', '\u20B9', 2, 'Rs', '\u20B9'));
  result.put('IQD', new CurrencyDataImpl('IQD', 'IQD', 0, 'IQD', 'din'));
  result.put('IRR', new CurrencyDataImpl('IRR', 'IRR', 0, 'IRR', 'Rial'));
  result.put('ISJ', new CurrencyDataImpl('ISJ', 'ISJ', 130, 'ISJ', 'ISJ'));
  result.put('ISK', new CurrencyDataImpl('ISK', 'kr', 0, 'kr', 'kr'));
  result.put('ITL', new CurrencyDataImpl('ITL', 'ITL', 128, 'ITL', 'ITL'));
  result.put('JMD', new CurrencyDataImpl('JMD', 'JA$', 2, 'JA$', '$'));
  result.put('JOD', new CurrencyDataImpl('JOD', 'JOD', 3, 'JOD', 'din'));
  result.put('JPY', new CurrencyDataImpl('JPY', 'JP\xA5', 0, 'JP\xA5', '\xA5'));
  result.put('KES', new CurrencyDataImpl('KES', 'Ksh', 2, 'Ksh', 'Ksh'));
  result.put('KGS', new CurrencyDataImpl('KGS', 'KGS', 2, 'KGS', 'KGS'));
  result.put('KHR', new CurrencyDataImpl('KHR', 'KHR', 2, 'KHR', 'Riel'));
  result.put('KMF', new CurrencyDataImpl('KMF', 'KMF', 0, 'KMF', 'CF'));
  result.put('KPW', new CurrencyDataImpl('KPW', 'KPW', 0, 'KPW', '\u20A9'));
  result.put('KRH', new CurrencyDataImpl('KRH', 'KRH', 130, 'KRH', 'KRH'));
  result.put('KRO', new CurrencyDataImpl('KRO', 'KRO', 130, 'KRO', 'KRO'));
  result.put('KRW', new CurrencyDataImpl('KRW', '\u20A9', 0, 'KR\u20A9', '\u20A9'));
  result.put('KWD', new CurrencyDataImpl('KWD', 'KWD', 3, 'KWD', 'din'));
  result.put('KYD', new CurrencyDataImpl('KYD', 'KYD', 2, 'KYD', '$'));
  result.put('KZT', new CurrencyDataImpl('KZT', 'KZT', 2, 'KZT', '\u20B8'));
  result.put('LAK', new CurrencyDataImpl('LAK', 'LAK', 0, 'LAK', '\u20AD'));
  result.put('LBP', new CurrencyDataImpl('LBP', 'LBP', 0, 'LBP', 'L\xA3'));
  result.put('LKR', new CurrencyDataImpl('LKR', 'SLRs', 2, 'SLRs', 'Rs'));
  result.put('LRD', new CurrencyDataImpl('LRD', 'LRD', 2, 'LRD', '$'));
  result.put('LSL', new CurrencyDataImpl('LSL', 'LSL', 2, 'LSL', 'LSL'));
  result.put('LTL', new CurrencyDataImpl('LTL', 'LTL', 130, 'LTL', 'Lt'));
  result.put('LTT', new CurrencyDataImpl('LTT', 'LTT', 130, 'LTT', 'LTT'));
  result.put('LUC', new CurrencyDataImpl('LUC', 'LUC', 130, 'LUC', 'LUC'));
  result.put('LUF', new CurrencyDataImpl('LUF', 'LUF', 128, 'LUF', 'LUF'));
  result.put('LUL', new CurrencyDataImpl('LUL', 'LUL', 130, 'LUL', 'LUL'));
  result.put('LVL', new CurrencyDataImpl('LVL', 'LVL', 130, 'LVL', 'Ls'));
  result.put('LVR', new CurrencyDataImpl('LVR', 'LVR', 130, 'LVR', 'LVR'));
  result.put('LYD', new CurrencyDataImpl('LYD', 'LYD', 3, 'LYD', 'din'));
  result.put('MAD', new CurrencyDataImpl('MAD', 'MAD', 2, 'MAD', 'MAD'));
  result.put('MAF', new CurrencyDataImpl('MAF', 'MAF', 130, 'MAF', 'MAF'));
  result.put('MCF', new CurrencyDataImpl('MCF', 'MCF', 130, 'MCF', 'MCF'));
  result.put('MDC', new CurrencyDataImpl('MDC', 'MDC', 130, 'MDC', 'MDC'));
  result.put('MDL', new CurrencyDataImpl('MDL', 'MDL', 2, 'MDL', 'MDL'));
  result.put('MGA', new CurrencyDataImpl('MGA', 'MGA', 0, 'MGA', 'Ar'));
  result.put('MGF', new CurrencyDataImpl('MGF', 'MGF', 128, 'MGF', 'MGF'));
  result.put('MKD', new CurrencyDataImpl('MKD', 'MKD', 2, 'MKD', 'din'));
  result.put('MKN', new CurrencyDataImpl('MKN', 'MKN', 130, 'MKN', 'MKN'));
  result.put('MLF', new CurrencyDataImpl('MLF', 'MLF', 130, 'MLF', 'MLF'));
  result.put('MMK', new CurrencyDataImpl('MMK', 'MMK', 0, 'MMK', 'K'));
  result.put('MNT', new CurrencyDataImpl('MNT', 'MN\u20AE', 2, 'MN\u20AE', '\u20AE'));
  result.put('MOP', new CurrencyDataImpl('MOP', 'MOP', 2, 'MOP', 'MOP'));
  result.put('MRO', new CurrencyDataImpl('MRO', 'MRO', 128, 'MRO', 'MRO'));
  result.put('MRU', new CurrencyDataImpl('MRU', 'MRU', 2, 'MRU', 'MRU'));
  result.put('MTL', new CurrencyDataImpl('MTL', 'MTL', 130, 'MTL', 'MTL'));
  result.put('MTP', new CurrencyDataImpl('MTP', 'MTP', 130, 'MTP', 'MTP'));
  result.put('MUR', new CurrencyDataImpl('MUR', 'MUR', 2, 'MUR', 'Rs'));
  result.put('MVP', new CurrencyDataImpl('MVP', 'MVP', 130, 'MVP', 'MVP'));
  result.put('MVR', new CurrencyDataImpl('MVR', 'MVR', 2, 'MVR', 'MVR'));
  result.put('MWK', new CurrencyDataImpl('MWK', 'MWK', 2, 'MWK', 'MWK'));
  result.put('MXN', new CurrencyDataImpl('MXN', 'MX$', 2, 'Mex$', '$'));
  result.put('MXP', new CurrencyDataImpl('MXP', 'MXP', 130, 'MXP', 'MXP'));
  result.put('MXV', new CurrencyDataImpl('MXV', 'MXV', 130, 'MXV', 'MXV'));
  result.put('MYR', new CurrencyDataImpl('MYR', 'RM', 2, 'RM', 'RM'));
  result.put('MZE', new CurrencyDataImpl('MZE', 'MZE', 130, 'MZE', 'MZE'));
  result.put('MZM', new CurrencyDataImpl('MZM', 'MZM', 130, 'MZM', 'MZM'));
  result.put('MZN', new CurrencyDataImpl('MZN', 'MZN', 2, 'MZN', 'MTn'));
  result.put('NAD', new CurrencyDataImpl('NAD', 'NAD', 2, 'NAD', '$'));
  result.put('NGN', new CurrencyDataImpl('NGN', 'NGN', 2, 'NGN', '\u20A6'));
  result.put('NIC', new CurrencyDataImpl('NIC', 'NIC', 130, 'NIC', 'NIC'));
  result.put('NIO', new CurrencyDataImpl('NIO', 'NIO', 2, 'NIO', 'C$'));
  result.put('NLG', new CurrencyDataImpl('NLG', 'NLG', 130, 'NLG', 'NLG'));
  result.put('NOK', new CurrencyDataImpl('NOK', 'NOkr', 2, 'NOkr', 'kr'));
  result.put('NPR', new CurrencyDataImpl('NPR', 'NPR', 2, 'NPR', 'Rs'));
  result.put('NZD', new CurrencyDataImpl('NZD', 'NZ$', 2, 'NZ$', '$'));
  result.put('OMR', new CurrencyDataImpl('OMR', 'OMR', 3, 'OMR', 'Rial'));
  result.put('PAB', new CurrencyDataImpl('PAB', 'B/.', 2, 'B/.', 'B/.'));
  result.put('PEI', new CurrencyDataImpl('PEI', 'PEI', 130, 'PEI', 'PEI'));
  result.put('PEN', new CurrencyDataImpl('PEN', 'S/.', 2, 'S/.', 'S/.'));
  result.put('PES', new CurrencyDataImpl('PES', 'PES', 130, 'PES', 'PES'));
  result.put('PGK', new CurrencyDataImpl('PGK', 'PGK', 2, 'PGK', 'PGK'));
  result.put('PHP', new CurrencyDataImpl('PHP', 'PHP', 2, 'PHP', '\u20B1'));
  result.put('PKR', new CurrencyDataImpl('PKR', 'PKRs.', 2, 'PKRs.', 'Rs'));
  result.put('PLN', new CurrencyDataImpl('PLN', 'PLN', 2, 'PLN', 'z\u0142'));
  result.put('PLZ', new CurrencyDataImpl('PLZ', 'PLZ', 130, 'PLZ', 'PLZ'));
  result.put('PTE', new CurrencyDataImpl('PTE', 'PTE', 130, 'PTE', 'PTE'));
  result.put('PYG', new CurrencyDataImpl('PYG', 'PYG', 0, 'PYG', 'Gs'));
  result.put('QAR', new CurrencyDataImpl('QAR', 'QAR', 2, 'QAR', 'Rial'));
  result.put('RHD', new CurrencyDataImpl('RHD', 'RHD', 130, 'RHD', 'RHD'));
  result.put('ROL', new CurrencyDataImpl('ROL', 'ROL', 130, 'ROL', 'ROL'));
  result.put('RON', new CurrencyDataImpl('RON', 'RON', 2, 'RON', 'RON'));
  result.put('RSD', new CurrencyDataImpl('RSD', 'RSD', 0, 'RSD', 'din'));
  result.put('RUB', new CurrencyDataImpl('RUB', '\u0440\u0443\u0431.', 2, '\u0440\u0443\u0431.', '\u0440\u0443\u0431.'));
  result.put('RUR', new CurrencyDataImpl('RUR', 'RUR', 130, 'RUR', 'RUR'));
  result.put('RWF', new CurrencyDataImpl('RWF', 'RWF', 0, 'RWF', 'RF'));
  result.put('SAR', new CurrencyDataImpl('SAR', 'SR', 2, 'SR', 'Rial'));
  result.put('SBD', new CurrencyDataImpl('SBD', 'SBD', 2, 'SBD', '$'));
  result.put('SCR', new CurrencyDataImpl('SCR', 'SCR', 2, 'SCR', 'SCR'));
  result.put('SDD', new CurrencyDataImpl('SDD', 'SDD', 130, 'SDD', 'SDD'));
  result.put('SDG', new CurrencyDataImpl('SDG', 'SDG', 2, 'SDG', 'SDG'));
  result.put('SDP', new CurrencyDataImpl('SDP', 'SDP', 130, 'SDP', 'SDP'));
  result.put('SEK', new CurrencyDataImpl('SEK', 'kr', 2, 'kr', 'kr'));
  result.put('SGD', new CurrencyDataImpl('SGD', 'S$', 2, 'S$', '$'));
  result.put('SHP', new CurrencyDataImpl('SHP', 'SHP', 2, 'SHP', '\xA3'));
  result.put('SIT', new CurrencyDataImpl('SIT', 'SIT', 130, 'SIT', 'SIT'));
  result.put('SKK', new CurrencyDataImpl('SKK', 'SKK', 130, 'SKK', 'SKK'));
  result.put('SLL', new CurrencyDataImpl('SLL', 'SLL', 0, 'SLL', 'SLL'));
  result.put('SOS', new CurrencyDataImpl('SOS', 'SOS', 0, 'SOS', 'SOS'));
  result.put('SRD', new CurrencyDataImpl('SRD', 'SRD', 2, 'SRD', '$'));
  result.put('SRG', new CurrencyDataImpl('SRG', 'SRG', 130, 'SRG', 'SRG'));
  result.put('SSP', new CurrencyDataImpl('SSP', 'SSP', 2, 'SSP', 'SSP'));
  result.put('STD', new CurrencyDataImpl('STD', 'STD', 128, 'STD', 'Db'));
  result.put('STN', new CurrencyDataImpl('STN', 'STN', 2, 'STN', 'STN'));
  result.put('SUR', new CurrencyDataImpl('SUR', 'SUR', 130, 'SUR', 'SUR'));
  result.put('SVC', new CurrencyDataImpl('SVC', 'SVC', 130, 'SVC', 'SVC'));
  result.put('SYP', new CurrencyDataImpl('SYP', 'SYP', 0, 'SYP', '\xA3'));
  result.put('SZL', new CurrencyDataImpl('SZL', 'SZL', 2, 'SZL', 'SZL'));
  result.put('THB', new CurrencyDataImpl('THB', 'THB', 2, 'THB', '\u0E3F'));
  result.put('TJR', new CurrencyDataImpl('TJR', 'TJR', 130, 'TJR', 'TJR'));
  result.put('TJS', new CurrencyDataImpl('TJS', 'TJS', 2, 'TJS', 'Som'));
  result.put('TMM', new CurrencyDataImpl('TMM', 'TMM', 128, 'TMM', 'TMM'));
  result.put('TMT', new CurrencyDataImpl('TMT', 'TMT', 2, 'TMT', 'TMT'));
  result.put('TND', new CurrencyDataImpl('TND', 'TND', 3, 'TND', 'din'));
  result.put('TOP', new CurrencyDataImpl('TOP', 'TOP', 2, 'TOP', 'T$'));
  result.put('TPE', new CurrencyDataImpl('TPE', 'TPE', 130, 'TPE', 'TPE'));
  result.put('TRL', new CurrencyDataImpl('TRL', 'TRL', 128, 'TRL', 'TRL'));
  result.put('TRY', new CurrencyDataImpl('TRY', 'TL', 2, 'YTL', 'TL'));
  result.put('TTD', new CurrencyDataImpl('TTD', 'TTD', 2, 'TTD', '$'));
  result.put('TWD', new CurrencyDataImpl('TWD', 'NT$', 2, 'NT$', 'NT$'));
  result.put('TZS', new CurrencyDataImpl('TZS', 'TZS', 2, 'TZS', 'TSh'));
  result.put('UAH', new CurrencyDataImpl('UAH', 'UAH', 2, 'UAH', '\u20B4'));
  result.put('UAK', new CurrencyDataImpl('UAK', 'UAK', 130, 'UAK', 'UAK'));
  result.put('UGS', new CurrencyDataImpl('UGS', 'UGS', 130, 'UGS', 'UGS'));
  result.put('UGX', new CurrencyDataImpl('UGX', 'UGX', 0, 'UGX', 'UGX'));
  result.put('USD', new CurrencyDataImpl('USD', 'US$', 2, 'US$', '$'));
  result.put('USN', new CurrencyDataImpl('USN', 'USN', 130, 'USN', 'USN'));
  result.put('USS', new CurrencyDataImpl('USS', 'USS', 130, 'USS', 'USS'));
  result.put('UYI', new CurrencyDataImpl('UYI', 'UYI', 128, 'UYI', 'UYI'));
  result.put('UYP', new CurrencyDataImpl('UYP', 'UYP', 130, 'UYP', 'UYP'));
  result.put('UYU', new CurrencyDataImpl('UYU', 'UY$', 2, 'UY$', '$'));
  result.put('UYW', new CurrencyDataImpl('UYW', 'UYW', 132, 'UYW', 'UYW'));
  result.put('UZS', new CurrencyDataImpl('UZS', 'UZS', 2, 'UZS', 'so\u02BCm'));
  result.put('VEB', new CurrencyDataImpl('VEB', 'VEB', 130, 'VEB', 'VEB'));
  result.put('VEF', new CurrencyDataImpl('VEF', 'VEF', 130, 'VEF', 'Bs'));
  result.put('VES', new CurrencyDataImpl('VES', 'VES', 2, 'VES', 'VES'));
  result.put('VND', new CurrencyDataImpl('VND', '\u20AB', 24, '\u20AB', '\u20AB'));
  result.put('VNN', new CurrencyDataImpl('VNN', 'VNN', 130, 'VNN', 'VNN'));
  result.put('VUV', new CurrencyDataImpl('VUV', 'VUV', 0, 'VUV', 'VUV'));
  result.put('WST', new CurrencyDataImpl('WST', 'WST', 2, 'WST', 'WST'));
  result.put('XAF', new CurrencyDataImpl('XAF', 'FCFA', 0, 'FCFA', 'FCFA'));
  result.put('XAG', new CurrencyDataImpl('XAG', 'XAG', 130, 'XAG', 'XAG'));
  result.put('XAU', new CurrencyDataImpl('XAU', 'XAU', 130, 'XAU', 'XAU'));
  result.put('XBA', new CurrencyDataImpl('XBA', 'XBA', 130, 'XBA', 'XBA'));
  result.put('XBB', new CurrencyDataImpl('XBB', 'XBB', 130, 'XBB', 'XBB'));
  result.put('XBC', new CurrencyDataImpl('XBC', 'XBC', 130, 'XBC', 'XBC'));
  result.put('XBD', new CurrencyDataImpl('XBD', 'XBD', 130, 'XBD', 'XBD'));
  result.put('XCD', new CurrencyDataImpl('XCD', 'EC$', 2, 'EC$', '$'));
  result.put('XDR', new CurrencyDataImpl('XDR', 'XDR', 130, 'XDR', 'XDR'));
  result.put('XEU', new CurrencyDataImpl('XEU', 'XEU', 130, 'XEU', 'XEU'));
  result.put('XFO', new CurrencyDataImpl('XFO', 'XFO', 130, 'XFO', 'XFO'));
  result.put('XFU', new CurrencyDataImpl('XFU', 'XFU', 130, 'XFU', 'XFU'));
  result.put('XOF', new CurrencyDataImpl('XOF', 'CFA', 0, 'CFA', 'CFA'));
  result.put('XPD', new CurrencyDataImpl('XPD', 'XPD', 130, 'XPD', 'XPD'));
  result.put('XPF', new CurrencyDataImpl('XPF', 'CFPF', 0, 'CFPF', 'FCFP'));
  result.put('XPT', new CurrencyDataImpl('XPT', 'XPT', 130, 'XPT', 'XPT'));
  result.put('XRE', new CurrencyDataImpl('XRE', 'XRE', 130, 'XRE', 'XRE'));
  result.put('XSU', new CurrencyDataImpl('XSU', 'XSU', 130, 'XSU', 'XSU'));
  result.put('XTS', new CurrencyDataImpl('XTS', 'XTS', 130, 'XTS', 'XTS'));
  result.put('XUA', new CurrencyDataImpl('XUA', 'XUA', 130, 'XUA', 'XUA'));
  result.put('XXX', new CurrencyDataImpl('XXX', '\xA4', 130, '\xA4', '\xA4'));
  result.put('YDD', new CurrencyDataImpl('YDD', 'YDD', 130, 'YDD', 'YDD'));
  result.put('YER', new CurrencyDataImpl('YER', 'YER', 0, 'YER', 'Rial'));
  result.put('YUD', new CurrencyDataImpl('YUD', 'YUD', 130, 'YUD', 'YUD'));
  result.put('YUM', new CurrencyDataImpl('YUM', 'YUM', 130, 'YUM', 'YUM'));
  result.put('YUN', new CurrencyDataImpl('YUN', 'YUN', 130, 'YUN', 'YUN'));
  result.put('YUR', new CurrencyDataImpl('YUR', 'YUR', 130, 'YUR', 'YUR'));
  result.put('ZAL', new CurrencyDataImpl('ZAL', 'ZAL', 130, 'ZAL', 'ZAL'));
  result.put('ZAR', new CurrencyDataImpl('ZAR', 'ZAR', 2, 'ZAR', 'R'));
  result.put('ZMK', new CurrencyDataImpl('ZMK', 'ZMK', 128, 'ZMK', 'ZWK'));
  result.put('ZMW', new CurrencyDataImpl('ZMW', 'ZMW', 2, 'ZMW', 'ZMW'));
  result.put('ZRN', new CurrencyDataImpl('ZRN', 'ZRN', 130, 'ZRN', 'ZRN'));
  result.put('ZRZ', new CurrencyDataImpl('ZRZ', 'ZRZ', 130, 'ZRZ', 'ZRZ'));
  result.put('ZWD', new CurrencyDataImpl('ZWD', 'ZWD', 128, 'ZWD', 'ZWD'));
  result.put('ZWL', new CurrencyDataImpl('ZWL', 'ZWL', 130, 'ZWL', 'ZWL'));
  result.put('ZWR', new CurrencyDataImpl('ZWR', 'ZWR', 130, 'ZWR', 'ZWR'));
  return result;
}
;
_.loadCurrencyMapNative = function loadCurrencyMapNative_0(){
  return overrideMap(getClassPrototype(250).loadCurrencyMapNative.call(this), this.loadMyCurrencyMapOverridesNative());
}
;
_.loadMyCurrencyMapOverridesNative = function loadMyCurrencyMapOverridesNative(){
  return {'ADP':['ADP', 'ADP', 128, 'ADP', 'ADP'], 'AED':['AED', 'DH', 2, 'DH', 'dh'], 'AFA':['AFA', 'AFA', 130, 'AFA', 'AFA'], 'AFN':['AFN', 'AFN', 0, 'AFN', 'Af.'], 'ALK':['ALK', 'ALK', 130, 'ALK', 'ALK'], 'ALL':['ALL', 'ALL', 0, 'ALL', 'Lek'], 'AMD':['AMD', 'AMD', 2, 'AMD', 'Dram'], 'ANG':['ANG', 'ANG', 2, 'ANG', 'ANG'], 'AOA':['AOA', 'AOA', 2, 'AOA', 'Kz'], 'AOK':['AOK', 'AOK', 130, 'AOK', 'AOK'], 'AON':['AON', 'AON', 130, 'AON', 'AON'], 'AOR':['AOR', 'AOR', 130, 'AOR', 'AOR'], 'ARA':['ARA', 'ARA', 130, 'ARA', 'ARA'], 'ARL':['ARL', 'ARL', 130, 'ARL', 'ARL'], 'ARM':['ARM', 'ARM', 130, 'ARM', 'ARM'], 'ARP':['ARP', 'ARP', 130, 'ARP', 'ARP'], 'ARS':['ARS', 'AR$', 2, 'AR$', '$'], 'ATS':['ATS', 'ATS', 130, 'ATS', 'ATS'], 'AUD':['AUD', 'A$', 2, 'AU$', '$'], 'AWG':['AWG', 'AWG', 2, 'AWG', 'Afl.'], 'AZM':['AZM', 'AZM', 130, 'AZM', 'AZM'], 'AZN':['AZN', 'AZN', 2, 'AZN', 'man.'], 'BAD':['BAD', 'BAD', 130, 'BAD', 'BAD'], 'BAM':['BAM', 'BAM', 2, 'BAM', 'KM'], 'BAN':['BAN', 'BAN', 130, 'BAN', 'BAN'], 'BBD':['BBD', 'BBD', 2, 'BBD', '$'], 'BDT':['BDT', 'Tk', 2, 'Tk', '\u09F3'], 'BEC':['BEC', 'BEC', 130, 'BEC', 'BEC'], 'BEF':['BEF', 'BEF', 130, 'BEF', 'BEF'], 'BEL':['BEL', 'BEL', 130, 'BEL', 'BEL'], 'BGL':['BGL', 'BGL', 130, 'BGL', 'BGL'], 'BGM':['BGM', 'BGM', 130, 'BGM', 'BGM'], 'BGN':['BGN', 'BGN', 2, 'BGN', 'lev'], 'BGO':['BGO', 'BGO', 130, 'BGO', 'BGO'], 'BHD':['BHD', 'BHD', 3, 'BHD', 'din'], 'BIF':['BIF', 'BIF', 0, 'BIF', 'FBu'], 'BMD':['BMD', 'BMD', 2, 'BMD', '$'], 'BND':['BND', 'BND', 2, 'BND', '$'], 'BOB':['BOB', 'BOB', 2, 'BOB', 'Bs'], 'BOL':['BOL', 'BOL', 130, 'BOL', 'BOL'], 'BOP':['BOP', 'BOP', 130, 'BOP', 'BOP'], 'BOV':['BOV', 'BOV', 130, 'BOV', 'BOV'], 'BRB':['BRB', 'BRB', 130, 'BRB', 'BRB'], 'BRC':['BRC', 'BRC', 130, 'BRC', 'BRC'], 'BRE':['BRE', 'BRE', 130, 'BRE', 'BRE'], 'BRL':['BRL', 'R$', 2, 'R$', 'R$'], 'BRN':['BRN', 'BRN', 130, 'BRN', 'BRN'], 'BRR':['BRR', 'BRR', 130, 'BRR', 'BRR'], 'BRZ':['BRZ', 'BRZ', 130, 'BRZ', 'BRZ'], 'BSD':['BSD', 'BSD', 2, 'BSD', '$'], 'BTN':['BTN', 'BTN', 2, 'BTN', 'Nu.'], 'BUK':['BUK', 'BUK', 130, 'BUK', 'BUK'], 'BWP':['BWP', 'BWP', 2, 'BWP', 'P'], 'BYB':['BYB', 'BYB', 130, 'BYB', 'BYB'], 'BYN':['BYN', 'BYN', 2, 'BYN', 'BYN'], 'BYR':['BYR', 'BYR', 128, 'BYR', 'BYR'], 'BZD':['BZD', 'BZD', 2, 'BZD', '$'], 'CAD':['CAD', 'CA$', 2, 'C$', '$'], 'CDF':['CDF', 'CDF', 2, 'CDF', 'FrCD'], 'CHE':['CHE', 'CHE', 130, 'CHE', 'CHE'], 'CHF':['CHF', 'CHF', 2, 'CHF', 'CHF'], 'CHW':['CHW', 'CHW', 130, 'CHW', 'CHW'], 'CLE':['CLE', 'CLE', 130, 'CLE', 'CLE'], 'CLF':['CLF', 'CLF', 132, 'CLF', 'CLF'], 'CLP':['CLP', 'CL$', 0, 'CL$', '$'], 'CNH':['CNH', 'CNH', 130, 'CNH', 'CNH'], 'CNX':['CNX', 'CNX', 130, 'CNX', 'CNX'], 'CNY':['CNY', 'CN\xA5', 2, 'RMB\xA5', '\xA5'], 'COP':['COP', 'COL$', 2, 'COL$', '$'], 'COU':['COU', 'COU', 130, 'COU', 'COU'], 'CRC':['CRC', 'CR\u20A1', 2, 'CR\u20A1', '\u20A1'], 'CSD':['CSD', 'CSD', 130, 'CSD', 'CSD'], 'CSK':['CSK', 'CSK', 130, 'CSK', 'CSK'], 'CUC':['CUC', 'CUC', 2, 'CUC', '$'], 'CUP':['CUP', '$MN', 2, '$MN', '$'], 'CVE':['CVE', 'CVE', 2, 'CVE', 'CVE'], 'CYP':['CYP', 'CYP', 130, 'CYP', 'CYP'], 'CZK':['CZK', 'K\u010D', 2, 'K\u010D', 'K\u010D'], 'DDM':['DDM', 'DDM', 130, 'DDM', 'DDM'], 'DEM':['DEM', 'DEM', 130, 'DEM', 'DEM'], 'DJF':['DJF', 'Fdj', 0, 'Fdj', 'Fdj'], 'DKK':['DKK', 'kr', 2, 'kr', 'kr'], 'DOP':['DOP', 'RD$', 2, 'RD$', '$'], 'DZD':['DZD', 'DZD', 2, 'DZD', 'din'], 'ECS':['ECS', 'ECS', 130, 'ECS', 'ECS'], 'ECV':['ECV', 'ECV', 130, 'ECV', 'ECV'], 'EEK':['EEK', 'EEK', 130, 'EEK', 'EEK'], 'EGP':['EGP', 'LE', 2, 'LE', 'E\xA3'], 'ERN':['ERN', 'ERN', 2, 'ERN', 'Nfk'], 'ESA':['ESA', 'ESA', 130, 'ESA', 'ESA'], 'ESB':['ESB', 'ESB', 130, 'ESB', 'ESB'], 'ESP':['ESP', 'ESP', 128, 'ESP', 'ESP'], 'ETB':['ETB', 'ETB', 2, 'ETB', 'Birr'], 'EUR':['EUR', '\u20AC', 2, '\u20AC', '\u20AC'], 'FIM':['FIM', 'FIM', 130, 'FIM', 'FIM'], 'FJD':['FJD', 'FJD', 2, 'FJD', '$'], 'FKP':['FKP', 'FKP', 2, 'FKP', '\xA3'], 'FRF':['FRF', 'FRF', 130, 'FRF', 'FRF'], 'GBP':['GBP', '\xA3', 2, 'GB\xA3', '\xA3'], 'GEK':['GEK', 'GEK', 130, 'GEK', 'GEK'], 'GEL':['GEL', 'GEL', 2, 'GEL', 'GEL'], 'GHC':['GHC', 'GHC', 130, 'GHC', 'GHC'], 'GHS':['GHS', 'GHS', 2, 'GHS', 'GHS'], 'GIP':['GIP', 'GIP', 2, 'GIP', '\xkn'], 'HTG':['HTG', 'HTG', 2, 'HTG', 'HTG'], 'HUF':['HUF', 'HUF', 2, 'HUF', 'Ft'], 'IDR':['IDR', 'IDR', 2, 'IDR', 'Rp'], 'IEP':['IEP', 'IEP', 130, 'IEP', 'IEP'], 'ILP':['ILP', 'ILP', 130, 'ILP', 'ILP'], 'ILR':['ILR', 'ILR', 130, 'ILR', 'ILR'], 'ILS':['ILS', '\u20AA', 2, 'IL\u20AA', '\u20AA'], 'INR':['INR', '\u20B9', 2, 'Rs', '\u20B9'], 'IQD':['IQD', 'IQD', 0, 'IQD', 'din'], 'IRR':['IRR', 'IRR', 0, 'IRR', 'Rial'], 'ISJ':['ISJ', 'ISJ', 130, 'ISJ', 'ISJ'], 'ISK':['ISK', 'kr', 0, 'kr', 'kr'], 'ITL':['ITL', 'ITL', 128, 'ITL', 'ITL'], 'JMD':['JMD', 'JA$', 2, 'JA$', '$'], 'JOD':['JOD', 'JOD', 3, 'JOD', 'din'], 'JPY':['JPY', 'JP\xA5', 0, 'JP\xA5', '\xA5'], 'KES':['KES', 'Ksh', 2, 'Ksh', 'Ksh'], 'KGS':['KGS', 'KGS', 2, 'KGS', 'KGS'], 'KHR':['KHR', 'KHR', 2, 'KHR', 'Riel'], 'KMF':['KMF', 'KMF', 0, 'KMF', 'CF'], 'KPW':['KPW', 'KPW', 0, 'KPW', '\u20A9'], 'KRH':['KRH', 'KRH', 130, 'KRH', 'KRH'], 'KRO':['KRO', 'KRO', 130, 'KRO', 'KRO'], 'KRW':['KRW', '\u20A9', 0, 'KR\u20A9', '\u20A9'], 'KWD':['KWD', 'KWD', 3, 'KWD', 'din'], 'KYD':['KYD', 'KYD', 2, 'KYD', '$'], 'KZT':['KZT', 'KZT', 2, 'KZT', '\u20B8'], 'LAK':['LAK', 'LAK', 0, 'LAK', '\u20AD'], 'LBP':['LBP', 'LBP', 0, 'LBP', 'L\xA3'], 'LKR':['LKR', 'SLRs', 2, 'SLRs', 'Rs'], 'LRD':['LRD', 'LRD', 2, 'LRD', '$'], 'LSL':['LSL', 'LSL', 2, 'LSL', 'LSL'], 'LTL':['LTL', 'LTL', 130, 'LTL', 'Lt'], 'LTT':['LTT', 'LTT', 130, 'LTT', 'LTT'], 'LUC':['LUC', 'LUC', 130, 'LUC', 'LUC'], 'LUF':['LUF', 'LUF', 128, 'LUF', 'LUF'], 'LUL':['LUL', 'LUL', 130, 'LUL', 'LUL'], 'LVL':['LVL', 'LVL', 130, 'LVL', 'Ls'], 'LVR':['LVR', 'LVR', 130, 'LVR', 'LVR'], 'LYD':['LYD', 'LYD', 3, 'LYD', 'din'], 'MAD':['MAD', 'MAD', 2, 'MAD', 'MAD'], 'MAF':['MAF', 'MAF', 130, 'MAF', 'MAF'], 'MCF':['MCF', 'MCF', 130, 'MCF', 'MCF'], 'MDC':['MDC', 'MDC', 130, 'MDC', 'MDC'], 'MDL':['MDL', 'MDL', 2, 'MDL', 'MDL'], 'MGA':['MGA', 'MGA', 0, 'MGA', 'Ar'], 'MGF':['MGF', 'MGF', 128, 'MGF', 'MGF'], 'MKD':['MKD', 'MKD', 2, 'MKD', 'din'], 'MKN':['MKN', 'MKN', 130, 'MKN', 'MKN'], 'MLF':['MLF', 'MLF', 130, 'MLF', 'MLF'], 'MMK':['MMK', 'MMK', 0, 'MMK', 'K'], 'MNT':['MNT', 'MN\u20AE', 2, 'MN\u20AE', '\u20AE'], 'MOP':['MOP', 'MOP', 2, 'MOP', 'MOP'], 'MRO':['MRO', 'MRO', 128, 'MRO', 'MRO'], 'MRU':['MRU', 'MRU', 2, 'MRU', 'MRU'], 'MTL':['MTL', 'MTL', 130, 'MTL', 'MTL'], 'MTP':['MTP', 'MTP', 130, 'MTP', 'MTP'], 'MUR':['MUR', 'MUR', 2, 'MUR', 'Rs'], 'MVP':['MVP', 'MVP', 130, 'MVP', 'MVP'], 'MVR':['MVR', 'MVR', 2, 'MVR', 'MVR'], 'MWK':['MWK', 'MWK', 2, 'MWK', 'MWK'], 'MXN':['MXN', 'MX$', 2, 'Mex$', '$'], 'MXP':['MXP', 'MXP', 130, 'MXP', 'MXP'], 'MXV':['MXV', 'MXV', 130, 'MXV', 'MXV'], 'MYR':['MYR', 'RM', 2, 'RM', 'RM'], 'MZE':['MZE', 'MZE', 130, 'MZE', 'MZE'], 'MZM':['MZM', 'MZM', 130, 'MZM', 'MZM'], 'MZN':['MZN', 'MZN', 2, 'MZN', 'MTn'], 'NAD':['NAD', 'NAD', 2, 'NAD', '$'], 'NGN':['NGN', 'NGN', 2, 'NGN', '\u20A6'], 'NIC':['NIC', 'NIC', 130, 'NIC', 'NIC'], 'NIO':['NIO', 'NIO', 2, 'NIO', 'C$'], 'NLG':['NLG', 'NLG', 130, 'NLG', 'NLG'], 'NOK':['NOK', 'NOkr', 2, 'NOkr', 'kr'], 'NPR':['NPR', 'NPR', 2, 'NPR', 'Rs'], 'NZD':['NZD', 'NZ$', 2, 'NZ$', '$'], 'OMR':['OMR', 'OMR', 3, 'OMR', 'Rial'], 'PAB':['PAB', 'B/.', 2, 'B/.', 'B/.'], 'PEI':['PEI', 'PEI', 130, 'PEI', 'PEI'], 'PEN':['PEN', 'S/.', 2, 'S/.', 'S/.'], 'PES':['PES', 'PES', 130, 'PES', 'PES'], 'PGK':['PGK', 'PGK', 2, 'PGK', 'PGK'], 'PHP':['PHP', 'PHP', 2, 'PHP', '\u20B1'], 'PKR':['PKR', 'PKRs.', 2, 'PKRs.', 'Rs'], 'PLN':['PLN', 'PLN', 2, 'PLN', 'z\u0142'], 'PLZ':['PLZ', 'PLZ', 130, 'PLZ', 'PLZ'], 'PTE':['PTE', 'PTE', 130, 'PTE', 'PTE'], 'PYG':['PYG', 'PYG', 0, 'PYG', 'Gs'], 'QAR':['QAR', 'QAR', 2, 'QAR', 'Rial'], 'RHD':['RHD', 'RHD', 130, 'RHD', 'RHD'], 'ROL':['ROL', 'ROL', 130, 'ROL', 'ROL'], 'RON':['RON', 'RON', 2, 'RON', 'RON'], 'RSD':['RSD', 'RSD', 0, 'RSD', 'din'], 'RUB':['RUB', '\u0440\u0443\u0431.', 2, '\u0440\u0443\u0431.', '\u0440\u0443\u0431.'], 'RUR':['RUR', 'RUR', 130, 'RUR', 'RUR'], 'RWF':['RWF', 'RWF', 0, 'RWF', 'RF'], 'SAR':['SAR', 'SR', 2, 'SR', 'Rial'], 'SBD':['SBD', 'SBD', 2, 'SBD', '$'], 'SCR':['SCR', 'SCR', 2, 'SCR', 'SCR'], 'SDD':['SDD', 'SDD', 130, 'SDD', 'SDD'], 'SDG':['SDG', 'SDG', 2, 'SDG', 'SDG'], 'SDP':['SDP', 'SDP', 130, 'SDP', 'SDP'], 'SEK':['SEK', 'kr', 2, 'kr', 'kr'], 'SGD':['SGD', 'S$', 2, 'S$', '$'], 'SHP':['SHP', 'SHP', 2, 'SHP', '\xA3'], 'SIT':['SIT', 'SIT', 130, 'SIT', 'SIT'], 'SKK':['SKK', 'SKK', 130, 'SKK', 'SKK'], 'SLL':['SLL', 'SLL', 0, 'SLL', 'SLL'], 'SOS':['SOS', 'SOS', 0, 'SOS', 'SOS'], 'SRD':['SRD', 'SRD', 2, 'SRD', '$'], 'SRG':['SRG', 'SRG', 130, 'SRG', 'SRG'], 'SSP':['SSP', 'SSP', 2, 'SSP', 'SSP'], 'STD':['STD', 'STD', 128, 'STD', 'Db'], 'STN':['STN', 'STN', 2, 'STN', 'STN'], 'SUR':['SUR', 'SUR', 130, 'SUR', 'SUR'], 'SVC':['SVC', 'SVC', 130, 'SVC', 'SVC'], 'SYP':['SYP', 'SYP', 0, 'SYP', '\xA3'], 'SZL':['SZL', 'SZL', 2, 'SZL', 'SZL'], 'THB':['THB', 'THB', 2, 'THB', '\u0E3F'], 'TJR':['TJR', 'TJR', 130, 'TJR', 'TJR'], 'TJS':['TJS', 'TJS', 2, 'TJS', 'Som'], 'TMM':['TMM', 'TMM', 128, 'TMM', 'TMM'], 'TMT':['TMT', 'TMT', 2, 'TMT', 'TMT'], 'TND':['TND', 'TND', 3, 'TND', 'din'], 'TOP':['TOP', 'TOP', 2, 'TOP', 'T$'], 'TPE':['TPE', 'TPE', 130, 'TPE', 'TPE'], 'TRL':['TRL', 'TRL', 128, 'TRL', 'TRL'], 'TRY':['TRY', 'TL', 2, 'YTL', 'TL'], 'TTD':['TTD', 'TTD', 2, 'TTD', '$'], 'TWD':['TWD', 'NT$', 2, 'NT$', 'NT$'], 'TZS':['TZS', 'TZS', 2, 'TZS', 'TSh'], 'UAH':['UAH', 'UAH', 2, 'UAH', '\u20B4'], 'UAK':['UAK', 'UAK', 130, 'UAK', 'UAK'], 'UGS':['UGS', 'UGS', 130, 'UGS', 'UGS'], 'UGX':['UGX', 'UGX', 0, 'UGX', 'UGX'], 'USD':['USD', 'US$', 2, 'US$', '$'], 'USN':['USN', 'USN', 130, 'USN', 'USN'], 'USS':['USS', 'USS', 130, 'USS', 'USS'], 'UYI':['UYI', 'UYI', 128, 'UYI', 'UYI'], 'UYP':['UYP', 'UYP', 130, 'UYP', 'UYP'], 'UYU':['UYU', 'UY$', 2, 'UY$', '$'], 'UYW':['UYW', 'UYW', 132, 'UYW', 'UYW'], 'UZS':['UZS', 'UZS', 2, 'UZS', 'so\u02BCm'], 'VEB':['VEB', 'VEB', 130, 'VEB', 'VEB'], 'VEF':['VEF', 'VEF', 130, 'VEF', 'Bs'], 'VES':['VES', 'VES', 2, 'VES', 'VES'], 'VND':['VND', '\u20AB', 24, '\u20AB', '\u20AB'], 'VNN':['VNN', 'VNN', 130, 'VNN', 'VNN'], 'VUV':['VUV', 'VUV', 0, 'VUV', 'VUV'], 'WST':['WST', 'WST', 2, 'WST', 'WST'], 'XAF':['XAF', 'FCFA', 0, 'FCFA', 'FCFA'], 'XAG':['XAG', 'XAG', 130, 'XAG', 'XAG'], 'XAU':['XAU', 'XAU', 130, 'XAU', 'XAU'], 'XBA':['XBA', 'XBA', 130, 'XBA', 'XBA'], 'XBB':['XBB', 'XBB', 130, 'XBB', 'XBB'], 'XBC':['XBC', 'XBC', 130, 'XBC', 'XBC'], 'XBD':['XBD', 'XBD', 130, 'XBD', 'XBD'], 'XCD':['XCD', 'EC$', 2, 'EC$', '$'], 'XDR':['XDR', 'XDR', 130, 'XDR', 'XDR'], 'XEU':['XEU', 'XEU', 130, 'XEU', 'XEU'], 'XFO':['XFO', 'XFO', 130, 'XFO', 'XFO'], 'XFU':['XFU', 'XFU', 130, 'XFU', 'XFU'], 'XOF':['XOF', 'CFA', 0, 'CFA', 'CFA'], 'XPD':['XPD', 'XPD', 130, 'XPD', 'XPD'], 'XPF':['XPF', 'CFPF', 0, 'CFPF', 'FCFP'], 'XPT':['XPT', 'XPT', 130, 'XPT', 'XPT'], 'XRE':['XRE', 'XRE', 130, 'XRE', 'XRE'], 'XSU':['XSU', 'XSU', 130, 'XSU', 'XSU'], 'XTS':['XTS', 'XTS', 130, 'XTS', 'XTS'], 'XUA':['XUA', 'XUA', 130, 'XUA', 'XUA'], 'XXX':['XXX', '\xA4', 130, '\xA4', '\xA4'], 'YDD':['YDD', 'YDD', 130, 'YDD', 'YDD'], 'YER':['YER', 'YER', 0, 'YER', 'Rial'], 'YUD':['YUD', 'YUD', 130, 'YUD', 'YUD'], 'YUM':['YUM', 'YUM', 130, 'YUM', 'YUM'], 'YUN':['YUN', 'YUN', 130, 'YUN', 'YUN'], 'YUR':['YUR', 'YUR', 130, 'YUR', 'YUR'], 'ZAL':['ZAL', 'ZAL', 130, 'ZAL', 'ZAL'], 'ZAR':['ZAR', 'ZAR', 2, 'ZAR', 'R'], 'ZMK':['ZMK', 'ZMK', 128, 'ZMK', 'ZWK'], 'ZMW':['ZMW', 'ZMW', 2, 'ZMW', 'ZMW'], 'ZRN':['ZRN', 'ZRN', 130, 'ZRN', 'ZRN'], 'ZRZ':['ZRZ', 'ZRZ', 130, 'ZRZ', 'ZRZ'], 'ZWD':['ZWD', 'ZWD', 128, 'ZWD', 'ZWD'], 'ZWL':['ZWL', 'ZWL', 130, 'ZWL', 'ZWL'], 'ZWR':['ZWR', 'ZWR', 130, 'ZWR', 'ZWR']};
}
;
var Lcom_google_gwt_i18n_client_CurrencyList_1_2_classLit = createForClass('com.google.gwt.i18n.client', 'CurrencyList_', 1047, Lcom_google_gwt_i18n_client_CurrencyList_2_classLit);
function $clinit_DateTimeFormat(){
  $clinit_DateTimeFormat = emptyMethod;
  $clinit_Object();
  NUM_MILLISECONDS_IN_DAY = 24 * 60 * 60000;
  {
    cache = new HashMap;
  }
}

function DateTimeFormat(pattern, dtfi){
  $clinit_DateTimeFormat();
  Object_0.call(this);
  this.$init_588();
  this.pattern = pattern;
  this.dateTimeFormatInfo = dtfi;
  this.parsePattern(pattern);
}

defineClass(572, 1, {1:1});
_.$init_588 = function $init_588(){
  this.patternParts = new ArrayList;
}
;
_.addPart = function addPart(buf, count){
  if (buf.length_0() > 0) {
    this.patternParts.add_5(new DateTimeFormat$PatternPart(buf.toString_0(), count));
    buf.setLength(0);
  }
}
;
_.createTimeZone = function createTimeZone(timezoneOffset){
  return createTimeZone_0(timezoneOffset);
}
;
_.format = function format(date){
  return this.format_0(date, null);
}
;
_.format_0 = function format_0(date, timeZone){
  var ch_0, diff, i, j, keepDate, keepTime, n, toAppendTo, trailQuote;
  if (isNull(timeZone)) {
    timeZone = this.createTimeZone(date.getTimezoneOffset_0());
  }
  diff = (date.getTimezoneOffset_0() - timeZone.getOffset(date)) * 60000;
  keepDate = new Date_1(add_19(date.getTime_1(), fromInt_0(diff)));
  keepTime = keepDate;
  if (keepDate.getTimezoneOffset_0() != date.getTimezoneOffset_0()) {
    if (diff > 0) {
      diff -= 86400000;
    }
     else {
      diff += 86400000;
    }
    keepTime = new Date_1(add_19(date.getTime_1(), fromInt_0(diff)));
  }
  toAppendTo = new StringBuilder_0(64);
  n = length__I__devirtual$(this.pattern);
  for (i = 0; i < n;) {
    ch_0 = charAt_I_C__devirtual$(this.pattern, i);
    if (ch_0 >= 97 && ch_0 <= 122 || ch_0 >= 65 && ch_0 <= 90) {
      for (j = i + 1; j < n && charAt_I_C__devirtual$(this.pattern, j) == ch_0; ++j) {
      }
      this.subFormat(toAppendTo, ch_0, j - i, date, keepDate, keepTime, timeZone);
      i = j;
    }
     else if (ch_0 == 39) {
      ++i;
      if (i < n && charAt_I_C__devirtual$(this.pattern, i) == 39) {
        toAppendTo.append_4(39);
        ++i;
        continue;
      }
      trailQuote = false;
      while (!trailQuote) {
        j = i;
        while (j < n && charAt_I_C__devirtual$(this.pattern, j) != 39) {
          ++j;
        }
        if (j >= n) {
          throw toJs(new IllegalArgumentException_0("Missing trailing '"));
        }
        if (j + 1 < n && charAt_I_C__devirtual$(this.pattern, j + 1) == 39) {
          ++j;
        }
         else {
          trailQuote = true;
        }
        toAppendTo.append_9(substring_II_Ljava_lang_String___devirtual$(this.pattern, i, j));
        i = j + 1;
      }
    }
     else {
      toAppendTo.append_4(ch_0);
      ++i;
    }
  }
  return toAppendTo.toString_0();
}
;
_.format0To11Hours = function format0To11Hours(buf, count, date){
  var value_0;
  value_0 = date.getHours_0() % 12;
  this.zeroPaddingNumber(buf, value_0, count);
}
;
_.format0To23Hours = function format0To23Hours(buf, count, date){
  var value_0;
  value_0 = date.getHours_0();
  this.zeroPaddingNumber(buf, value_0, count);
}
;
_.format1To12Hours = function format1To12Hours(buf, count, date){
  var value_0;
  value_0 = date.getHours_0() % 12;
  if (value_0 == 0) {
    this.zeroPaddingNumber(buf, 12, count);
  }
   else {
    this.zeroPaddingNumber(buf, value_0, count);
  }
}
;
_.format24Hours = function format24Hours(buf, count, date){
  var value_0;
  value_0 = date.getHours_0();
  if (value_0 == 0) {
    this.zeroPaddingNumber(buf, 24, count);
  }
   else {
    this.zeroPaddingNumber(buf, value_0, count);
  }
}
;
_.formatAmPm = function formatAmPm(buf, date){
  if (date.getHours_0() >= 12 && date.getHours_0() < 24) {
    buf.append_9(this.dateTimeFormatInfo.ampms()[1]);
  }
   else {
    buf.append_9(this.dateTimeFormatInfo.ampms()[0]);
  }
}
;
_.formatDate = function formatDate(buf, count, date){
  var value_0;
  value_0 = date.getDate_1();
  this.zeroPaddingNumber(buf, value_0, count);
}
;
_.formatDayOfWeek = function formatDayOfWeek(buf, count, date){
  var value_0;
  value_0 = date.getDay_0();
  if (count == 5) {
    buf.append_9(this.dateTimeFormatInfo.weekdaysNarrow()[value_0]);
  }
   else if (count == 4) {
    buf.append_9(this.dateTimeFormatInfo.weekdaysFull()[value_0]);
  }
   else {
    buf.append_9(this.dateTimeFormatInfo.weekdaysShort()[value_0]);
  }
}
;
_.formatEra = function formatEra(buf, count, date){
  var value_0;
  value_0 = date.getYear_0() >= -1900?1:0;
  if (count >= 4) {
    buf.append_9(this.dateTimeFormatInfo.erasFull()[value_0]);
  }
   else {
    buf.append_9(this.dateTimeFormatInfo.erasShort()[value_0]);
  }
}
;
_.formatFractionalSeconds = function formatFractionalSeconds(buf, count, date){
  var time, value_0;
  time = date.getTime_1();
  if (lt(time, 0)) {
    value_0 = 1000 - toInt_0(mod_0(neg_0(time), 1000));
    if (value_0 == 1000) {
      value_0 = 0;
    }
  }
   else {
    value_0 = toInt_0(mod_0(time, 1000));
  }
  if (count == 1) {
    value_0 = $wnd.Math.min(narrow_int((value_0 + 50) / 100), 9);
    buf.append_4(narrow_char(48 + value_0));
  }
   else if (count == 2) {
    value_0 = $wnd.Math.min(narrow_int((value_0 + 5) / 10), 99);
    this.zeroPaddingNumber(buf, value_0, 2);
  }
   else {
    this.zeroPaddingNumber(buf, value_0, 3);
    if (count > 3) {
      this.zeroPaddingNumber(buf, 0, count - 3);
    }
  }
}
;
_.formatMinutes = function formatMinutes(buf, count, date){
  var value_0;
  value_0 = date.getMinutes_0();
  this.zeroPaddingNumber(buf, value_0, count);
}
;
_.formatMonth = function formatMonth(buf, count, date){
  var value_0;
  value_0 = date.getMonth_0();
  switch (count) {
    case 5:
      buf.append_9(this.dateTimeFormatInfo.monthsNarrow()[value_0]);
      break;
    case 4:
      buf.append_9(this.dateTimeFormatInfo.monthsFull()[value_0]);
      break;
    case 3:
      buf.append_9(this.dateTimeFormatInfo.monthsShort()[value_0]);
      break;
    default:this.zeroPaddingNumber(buf, value_0 + 1, count);
  }
}
;
_.formatQuarter = function formatQuarter(buf, count, date){
  var value_0;
  value_0 = narrow_int(date.getMonth_0() / 3);
  if (count < 4) {
    buf.append_9(this.dateTimeFormatInfo.quartersShort()[value_0]);
  }
   else {
    buf.append_9(this.dateTimeFormatInfo.quartersFull()[value_0]);
  }
}
;
_.formatSeconds = function formatSeconds(buf, count, date){
  var value_0;
  value_0 = date.getSeconds_0();
  this.zeroPaddingNumber(buf, value_0, count);
}
;
_.formatStandaloneDay = function formatStandaloneDay(buf, count, date){
  var value_0;
  value_0 = date.getDay_0();
  if (count == 5) {
    buf.append_9(this.dateTimeFormatInfo.weekdaysNarrowStandalone()[value_0]);
  }
   else if (count == 4) {
    buf.append_9(this.dateTimeFormatInfo.weekdaysFullStandalone()[value_0]);
  }
   else if (count == 3) {
    buf.append_9(this.dateTimeFormatInfo.weekdaysShortStandalone()[value_0]);
  }
   else {
    this.zeroPaddingNumber(buf, value_0, 1);
  }
}
;
_.formatStandaloneMonth = function formatStandaloneMonth(buf, count, date){
  var value_0;
  value_0 = date.getMonth_0();
  if (count == 5) {
    buf.append_9(this.dateTimeFormatInfo.monthsNarrowStandalone()[value_0]);
  }
   else if (count == 4) {
    buf.append_9(this.dateTimeFormatInfo.monthsFullStandalone()[value_0]);
  }
   else if (count == 3) {
    buf.append_9(this.dateTimeFormatInfo.monthsShortStandalone()[value_0]);
  }
   else {
    this.zeroPaddingNumber(buf, value_0 + 1, count);
  }
}
;
_.formatTimeZone = function formatTimeZone(buf, count, date, timeZone){
  if (count < 4) {
    buf.append_9(timeZone.getShortName(date));
  }
   else {
    buf.append_9(timeZone.getLongName(date));
  }
}
;
_.formatTimeZoneRFC = function formatTimeZoneRFC(buf, count, date, timeZone){
  if (count < 3) {
    buf.append_9(timeZone.getRFCTimeZoneString(date));
  }
   else if (count == 3) {
    buf.append_9(timeZone.getISOTimeZoneString(date));
  }
   else {
    buf.append_9(timeZone.getGMTString(date));
  }
}
;
_.formatYear = function formatYear(buf, count, date){
  var value_0;
  value_0 = date.getYear_0() + 1900;
  if (value_0 < 0) {
    value_0 = -value_0;
  }
  switch (count) {
    case 1:
      buf.append_5(value_0);
      break;
    case 2:
      this.zeroPaddingNumber(buf, value_0 % 100, 2);
      break;
    default:this.zeroPaddingNumber(buf, value_0, count);
      break;
  }
}
;
_.getNextCharCountInPattern = function getNextCharCountInPattern(pattern, start_0){
  var ch_0, next;
  ch_0 = charAt_I_C__devirtual$(pattern, start_0);
  next = start_0 + 1;
  while (next < length__I__devirtual$(pattern) && charAt_I_C__devirtual$(pattern, next) == ch_0) {
    ++next;
  }
  return next - start_0;
}
;
_.identifyAbutStart = function identifyAbutStart(){
  var abut, i, len;
  abut = false;
  len = this.patternParts.size_1();
  for (i = 0; i < len; i++) {
    if (this.isNumeric(castTo(this.patternParts.get_0(i), 230))) {
      if (!abut && i + 1 < len && this.isNumeric(castTo(this.patternParts.get_0(i + 1), 230))) {
        abut = true;
        castTo(this.patternParts.get_0(i), 230).abutStart = true;
      }
    }
     else {
      abut = false;
    }
  }
}
;
_.isNumeric = function isNumeric(part){
  var i;
  if (part.count <= 0) {
    return false;
  }
  i = indexOf_I_I__devirtual$('MLydhHmsSDkK', charAt_I_C__devirtual$(part.text_0, 0));
  return i > 1 || i >= 0 && part.count < 3;
}
;
_.parsePattern = function parsePattern(pattern){
  var buf, ch_0, count, i, inQuote;
  buf = new StringBuilder_0(32);
  inQuote = false;
  for (i = 0; i < length__I__devirtual$(pattern); i++) {
    ch_0 = charAt_I_C__devirtual$(pattern, i);
    if (ch_0 == 32) {
      this.addPart(buf, 0);
      buf.append_4(32);
      this.addPart(buf, 0);
      while (i + 1 < length__I__devirtual$(pattern) && charAt_I_C__devirtual$(pattern, i + 1) == 32) {
        i++;
      }
      continue;
    }
    if (inQuote) {
      if (ch_0 == 39) {
        if (i + 1 < length__I__devirtual$(pattern) && charAt_I_C__devirtual$(pattern, i + 1) == 39) {
          buf.append_4(ch_0);
          ++i;
        }
         else {
          inQuote = false;
        }
      }
       else {
        buf.append_4(ch_0);
      }
      continue;
    }
    if (indexOf_I_I__devirtual$('GyMLdkHmsSEcDahKzZv', ch_0) > 0) {
      this.addPart(buf, 0);
      buf.append_4(ch_0);
      count = this.getNextCharCountInPattern(pattern, i);
      this.addPart(buf, count);
      i += count - 1;
      continue;
    }
    if (ch_0 == 39) {
      if (i + 1 < length__I__devirtual$(pattern) && charAt_I_C__devirtual$(pattern, i + 1) == 39) {
        buf.append_4(39);
        i++;
      }
       else {
        inQuote = true;
      }
    }
     else {
      buf.append_4(ch_0);
    }
  }
  this.addPart(buf, 0);
  this.identifyAbutStart();
}
;
_.subFormat = function subFormat(buf, ch_0, count, date, adjustedDate, adjustedTime, timezone){
  switch (ch_0) {
    case 71:
      this.formatEra(buf, count, adjustedDate);
      break;
    case 121:
      this.formatYear(buf, count, adjustedDate);
      break;
    case 77:
      this.formatMonth(buf, count, adjustedDate);
      break;
    case 107:
      this.format24Hours(buf, count, adjustedTime);
      break;
    case 83:
      this.formatFractionalSeconds(buf, count, adjustedTime);
      break;
    case 69:
      this.formatDayOfWeek(buf, count, adjustedDate);
      break;
    case 97:
      this.formatAmPm(buf, adjustedTime);
      break;
    case 104:
      this.format1To12Hours(buf, count, adjustedTime);
      break;
    case 75:
      this.format0To11Hours(buf, count, adjustedTime);
      break;
    case 72:
      this.format0To23Hours(buf, count, adjustedTime);
      break;
    case 99:
      this.formatStandaloneDay(buf, count, adjustedDate);
      break;
    case 76:
      this.formatStandaloneMonth(buf, count, adjustedDate);
      break;
    case 81:
      this.formatQuarter(buf, count, adjustedDate);
      break;
    case 100:
      this.formatDate(buf, count, adjustedDate);
      break;
    case 109:
      this.formatMinutes(buf, count, adjustedTime);
      break;
    case 115:
      this.formatSeconds(buf, count, adjustedTime);
      break;
    case 122:
      this.formatTimeZone(buf, count, date, timezone);
      break;
    case 118:
      buf.append_9(timezone.getID());
      break;
    case 90:
      this.formatTimeZoneRFC(buf, count, date, timezone);
      break;
    default:return false;
  }
  return true;
}
;
_.zeroPaddingNumber = function zeroPaddingNumber(buf, value_0, minWidth){
  var b, i;
  b = 10;
  for (i = 0; i < minWidth - 1; i++) {
    if (value_0 < b) {
      buf.append_4(48);
    }
    b *= 10;
  }
  buf.append_5(value_0);
}
;
var NUM_MILLISECONDS_IN_DAY = 0, cache;
var Lcom_google_gwt_i18n_shared_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DateTimeFormat', 572, Ljava_lang_Object_2_classLit);
function $clinit_DateTimeFormat_0(){
  $clinit_DateTimeFormat_0 = emptyMethod;
  $clinit_DateTimeFormat();
  {
    cache_0 = new HashMap;
  }
}

function DateTimeFormat_0(pattern, dtfi){
  DateTimeFormat.call(this, pattern, dtfi);
  this.$init_589();
}

function getDefaultDateTimeFormatInfo(){
  return getCurrentLocale().getDateTimeFormatInfo();
}

function getFormat(pattern){
  $clinit_DateTimeFormat_0();
  return getFormat_0(pattern, getDefaultDateTimeFormatInfo());
}

function getFormat_0(pattern, dtfi){
  var defaultDtfi, dtf;
  defaultDtfi = getDefaultDateTimeFormatInfo();
  dtf = null;
  if (jsEquals(dtfi, defaultDtfi)) {
    dtf = castTo(cache_0.get_1(pattern), 324);
  }
  if (isNull(dtf)) {
    dtf = new DateTimeFormat_0(pattern, dtfi);
    if (jsEquals(dtfi, defaultDtfi)) {
      cache_0.put(pattern, dtf);
    }
  }
  return dtf;
}

defineClass(324, 572, {324:1, 1:1}, DateTimeFormat_0);
_.$init_589 = function $init_589(){
}
;
var cache_0;
var Lcom_google_gwt_i18n_client_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.client', 'DateTimeFormat', 324, Lcom_google_gwt_i18n_shared_DateTimeFormat_2_classLit);
function $clinit_DateTimeFormatInfo_0(){
  $clinit_DateTimeFormatInfo_0 = emptyMethod;
}

var Lcom_google_gwt_i18n_shared_DateTimeFormatInfo_2_classLit = createForInterface('com.google.gwt.i18n.shared', 'DateTimeFormatInfo');
function $clinit_DateTimeFormatInfo(){
  $clinit_DateTimeFormatInfo = emptyMethod;
}

var Lcom_google_gwt_i18n_client_DateTimeFormatInfo_2_classLit = createForInterface('com.google.gwt.i18n.client', 'DateTimeFormatInfo');
function $clinit_DefaultCurrencyData(){
  $clinit_DefaultCurrencyData = emptyMethod;
  $clinit_Object();
}

function DefaultCurrencyData(currencyCode, currencySymbol, fractionDigits){
  $clinit_DefaultCurrencyData();
  Object_0.call(this);
  this.$init_590();
  this.currencyCode = currencyCode;
  this.currencySymbol = currencySymbol;
  this.fractionDigits = fractionDigits;
}

defineClass(1048, 1, {369:1, 1:1});
_.$init_590 = function $init_590(){
}
;
_.getCurrencyCode = function getCurrencyCode(){
  return this.currencyCode;
}
;
_.getCurrencySymbol = function getCurrencySymbol(){
  return this.currencySymbol;
}
;
_.getDefaultFractionDigits = function getDefaultFractionDigits(){
  return this.fractionDigits;
}
;
_.getSimpleCurrencySymbol = function getSimpleCurrencySymbol(){
  return this.getCurrencySymbol();
}
;
_.isDeprecated = function isDeprecated(){
  return false;
}
;
_.fractionDigits = 0;
var Lcom_google_gwt_i18n_client_DefaultCurrencyData_2_classLit = createForClass('com.google.gwt.i18n.client', 'DefaultCurrencyData', 1048, Ljava_lang_Object_2_classLit);
function $clinit_DefaultDateTimeFormatInfo(){
  $clinit_DefaultDateTimeFormatInfo = emptyMethod;
  $clinit_Object();
}

function DefaultDateTimeFormatInfo(){
  $clinit_DefaultDateTimeFormatInfo();
  Object_0.call(this);
  this.$init_591();
}

defineClass(787, 1, {1:1});
_.$init_591 = function $init_591(){
}
;
_.ampms = function ampms(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['AM', 'PM']);
}
;
_.erasFull = function erasFull(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['Before Christ', 'Anno Domini']);
}
;
_.erasShort = function erasShort(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['BC', 'AD']);
}
;
_.monthsFull = function monthsFull(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']);
}
;
_.monthsFullStandalone = function monthsFullStandalone(){
  return this.monthsFull();
}
;
_.monthsNarrow = function monthsNarrow(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']);
}
;
_.monthsNarrowStandalone = function monthsNarrowStandalone(){
  return this.monthsNarrow();
}
;
_.monthsShort = function monthsShort(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);
}
;
_.monthsShortStandalone = function monthsShortStandalone(){
  return this.monthsShort();
}
;
_.quartersFull = function quartersFull(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']);
}
;
_.quartersShort = function quartersShort(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['Q1', 'Q2', 'Q3', 'Q4']);
}
;
_.weekdaysFull = function weekdaysFull(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']);
}
;
_.weekdaysFullStandalone = function weekdaysFullStandalone(){
  return this.weekdaysFull();
}
;
_.weekdaysNarrow = function weekdaysNarrow(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['S', 'M', 'T', 'W', 'T', 'F', 'S']);
}
;
_.weekdaysNarrowStandalone = function weekdaysNarrowStandalone(){
  return this.weekdaysNarrow();
}
;
_.weekdaysShort = function weekdaysShort(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);
}
;
_.weekdaysShortStandalone = function weekdaysShortStandalone(){
  return this.weekdaysShort();
}
;
var Lcom_google_gwt_i18n_shared_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DefaultDateTimeFormatInfo', 787, Ljava_lang_Object_2_classLit);
function $clinit_DefaultDateTimeFormatInfo_0(){
  $clinit_DefaultDateTimeFormatInfo_0 = emptyMethod;
  $clinit_DefaultDateTimeFormatInfo();
}

function DefaultDateTimeFormatInfo_0(){
  $clinit_DefaultDateTimeFormatInfo_0();
  DefaultDateTimeFormatInfo.call(this);
  this.$init_592();
}

defineClass(788, 787, {1:1});
_.$init_592 = function $init_592(){
}
;
var Lcom_google_gwt_i18n_client_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.client', 'DefaultDateTimeFormatInfo', 788, Lcom_google_gwt_i18n_shared_DefaultDateTimeFormatInfo_2_classLit);
function $clinit_HasDirection$Direction(){
  $clinit_HasDirection$Direction = emptyMethod;
  $clinit_Enum();
  RTL = new HasDirection$Direction('RTL', 0);
  LTR = new HasDirection$Direction('LTR', 1);
  DEFAULT = new HasDirection$Direction('DEFAULT', 2);
}

function HasDirection$Direction(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_593();
}

function valueOf_27(name_0){
  $clinit_HasDirection$Direction();
  return valueOf(($clinit_HasDirection$Direction$Map() , $MAP_26), name_0);
}

function values_28(){
  $clinit_HasDirection$Direction();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 228, 0, [RTL, LTR, DEFAULT]);
}

defineClass(228, 7, {228:1, 4:1, 8:1, 7:1, 1:1}, HasDirection$Direction);
_.$init_593 = function $init_593(){
}
;
var DEFAULT, LTR, RTL;
var Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client', 'HasDirection/Direction', 228, Ljava_lang_Enum_2_classLit, values_28, valueOf_27);
function $clinit_HasDirection$Direction$Map(){
  $clinit_HasDirection$Direction$Map = emptyMethod;
  $MAP_26 = createValueOfMap(values_28());
}

var $MAP_26;
function $clinit_LocaleInfo(){
  $clinit_LocaleInfo = emptyMethod;
  $clinit_Object();
  instance_8 = new LocaleInfo(castTo(castTo(new LocaleInfoImpl_, 210), 210), castTo(castTo(new CldrImpl, 277), 277));
}

function LocaleInfo(impl, cldr){
  Object_0.call(this);
  this.$init_594();
  this.infoImpl = impl;
  this.cldrImpl = cldr;
}

function getCurrentLocale(){
  $clinit_LocaleInfo();
  return instance_8;
}

function hasAnyRTL(){
  $clinit_LocaleInfo();
  return instance_8.infoImpl.hasAnyRTL();
}

defineClass(660, 1, {1:1}, LocaleInfo);
_.$init_594 = function $init_594(){
}
;
_.ensureDateTimeFormatInfo = function ensureDateTimeFormatInfo(){
  if (isNull(this.dateTimeFormatInfo)) {
    this.dateTimeFormatInfo = this.infoImpl.getDateTimeFormatInfo();
  }
}
;
_.ensureNumberConstants = function ensureNumberConstants(){
  if (isNull(this.numberConstants)) {
    this.numberConstants = this.infoImpl.getNumberConstants();
  }
}
;
_.getDateTimeFormatInfo = function getDateTimeFormatInfo(){
  this.ensureDateTimeFormatInfo();
  return this.dateTimeFormatInfo;
}
;
_.getNumberConstants = function getNumberConstants(){
  this.ensureNumberConstants();
  return this.numberConstants;
}
;
_.isRTL_0 = function isRTL_0(){
  return this.cldrImpl.isRTL_0();
}
;
var instance_8;
var Lcom_google_gwt_i18n_client_LocaleInfo_2_classLit = createForClass('com.google.gwt.i18n.client', 'LocaleInfo', 660, Ljava_lang_Object_2_classLit);
function $clinit_NumberFormat(){
  $clinit_NumberFormat = emptyMethod;
  $clinit_Object();
  localizedNumberConstants = getCurrentLocale().getNumberConstants();
  defaultNumberConstants = localizedNumberConstants;
}

function NumberFormat(numberConstants, pattern, cdata, userSuppliedPattern){
  Object_0.call(this);
  this.$init_595();
  if (isNull(cdata)) {
    throw toJs(new IllegalArgumentException_0('Unknown currency code'));
  }
  this.numberConstants = numberConstants;
  this.pattern = pattern;
  this.currencyData = cdata;
  this.parsePattern_0(this.pattern);
  if (!userSuppliedPattern && this.isCurrencyFormat) {
    this.minimumFractionDigits = getDefaultFractionDigits__I__devirtual$(this.currencyData);
    this.maximumFractionDigits = this.minimumFractionDigits;
  }
}

function NumberFormat_0(pattern, cdata, userSuppliedPattern){
  NumberFormat.call(this, defaultNumberConstants, pattern, cdata, userSuppliedPattern);
}

function getDecimalFormat(){
  $clinit_NumberFormat();
  if (isNull(cachedDecimalFormat)) {
    cachedDecimalFormat = new NumberFormat_0(defaultNumberConstants.decimalPattern(), get_2656().getDefault(), false);
  }
  return cachedDecimalFormat;
}

function toPrecision(d, digits){
  return d.toPrecision(digits);
}

function toScaledString(buf, val){
  var dot, expDigits, expIdx, scale, startLen;
  startLen = buf.length_0();
  buf.append_9(toPrecision(val, 20));
  scale = 0;
  expIdx = buf.indexOf_3('e', startLen);
  if (expIdx < 0) {
    expIdx = buf.indexOf_3('E', startLen);
  }
  if (expIdx >= 0) {
    expDigits = expIdx + 1;
    if (expDigits < buf.length_0() && buf.charAt_0(expDigits) == 43) {
      ++expDigits;
    }
    if (expDigits < buf.length_0()) {
      scale = parseInt_1(buf.substring_0(expDigits));
    }
    buf.delete_0(expIdx, buf.length_0());
  }
  dot = buf.indexOf_3('.', startLen);
  if (dot >= 0) {
    buf.deleteCharAt(dot);
    scale -= buf.length_0() - dot;
  }
  return scale;
}

defineClass(482, 1, {1:1}, NumberFormat_0);
_.$init_595 = function $init_595(){
  this.decimalSeparatorAlwaysShown = false;
  this.groupingSize = 3;
  this.isCurrencyFormat = false;
  this.maximumFractionDigits = 3;
  this.maximumIntegerDigits = 40;
  this.minimumFractionDigits = 0;
  this.minimumIntegerDigits = 1;
  this.multiplier = 1;
  this.negativePrefix = '-';
  this.negativeSuffix = '';
  this.positivePrefix = '';
  this.positiveSuffix = '';
  this.useExponentialNotation = false;
}
;
_.addExponent = function addExponent(digits){
  var exponentDigits, i;
  digits.append_9(this.numberConstants.exponentialSymbol());
  if (this.exponent < 0) {
    this.exponent = -this.exponent;
    digits.append_9(this.numberConstants.minusSign());
  }
  exponentDigits = valueOf_45(this.exponent);
  for (i = length__I__devirtual$(exponentDigits); i < this.minExponentDigits; ++i) {
    digits.append_4(48);
  }
  digits.append_9(exponentDigits);
}
;
_.addZeroAndDecimal = function addZeroAndDecimal(digits, decimalSeparator){
  if (this.digitsLength == 0) {
    digits.insert_4(0, 48);
    ++this.decimalPosition;
    ++this.digitsLength;
  }
  if (this.decimalPosition < this.digitsLength || this.decimalSeparatorAlwaysShown) {
    digits.insert_4(this.decimalPosition, decimalSeparator);
    ++this.digitsLength;
  }
}
;
_.adjustFractionDigits = function adjustFractionDigits(digits){
  var requiredDigits, toRemove;
  requiredDigits = this.decimalPosition + this.minimumFractionDigits;
  if (this.digitsLength < requiredDigits) {
    while (this.digitsLength < requiredDigits) {
      digits.append_4(48);
      ++this.digitsLength;
    }
  }
   else {
    toRemove = this.decimalPosition + this.maximumFractionDigits;
    if (toRemove > this.digitsLength) {
      toRemove = this.digitsLength;
    }
    while (toRemove > requiredDigits && digits.charAt_0(toRemove - 1) == 48) {
      --toRemove;
    }
    if (toRemove < this.digitsLength) {
      digits.delete_0(toRemove, this.digitsLength);
      this.digitsLength = toRemove;
    }
  }
}
;
_.computeExponent = function computeExponent(digits){
  var remainder, strip;
  strip = 0;
  while (strip < this.digitsLength - 1 && digits.charAt_0(strip) == 48) {
    ++strip;
  }
  if (strip > 0) {
    digits.delete_0(0, strip);
    this.digitsLength -= strip;
    this.exponent -= strip;
  }
  if (this.maximumIntegerDigits > this.minimumIntegerDigits && this.maximumIntegerDigits > 0) {
    this.exponent += this.decimalPosition - 1;
    remainder = this.exponent % this.maximumIntegerDigits;
    if (remainder < 0) {
      remainder += this.maximumIntegerDigits;
    }
    this.decimalPosition = remainder + 1;
    this.exponent -= remainder;
  }
   else {
    this.exponent += this.decimalPosition - this.minimumIntegerDigits;
    this.decimalPosition = this.minimumIntegerDigits;
  }
  if (this.digitsLength == 1 && digits.charAt_0(0) == 48) {
    this.exponent = 0;
    this.decimalPosition = this.minimumIntegerDigits;
  }
}
;
_.format_1 = function format_1(number){
  var buf, isNegative, preRound, scale;
  if (isNaN(number)) {
    return this.numberConstants.notANumber();
  }
  isNegative = number < 0 || number == 0 && 1 / number < 0;
  if (isNegative) {
    number = -number;
  }
  buf = new StringBuilder;
  if (isInfinite(number)) {
    buf.append_9(isNegative?this.negativePrefix:this.positivePrefix);
    buf.append_9(this.numberConstants.infinity());
    buf.append_9(isNegative?this.negativeSuffix:this.positiveSuffix);
    return buf.toString_0();
  }
  number *= this.multiplier;
  scale = toScaledString(buf, number);
  preRound = buf.length_0() + scale + this.maximumFractionDigits + 3;
  if (preRound > 0 && preRound < buf.length_0() && buf.charAt_0(preRound) == 57) {
    this.propagateCarry(buf, preRound - 1);
    scale += buf.length_0() - preRound;
    buf.delete_0(preRound, buf.length_0());
  }
  this.format_4(isNegative, buf, scale);
  return buf.toString_0();
}
;
_.format_2 = function format_2(value_0, scale){
  var buf, isNegative;
  isNegative = lt(value_0, 0);
  if (isNegative) {
    value_0 = neg_0(value_0);
  }
  value_0 = mul_0(value_0, fromInt_0(this.multiplier));
  buf = new StringBuilder;
  buf.append_9(valueOf_46(value_0));
  this.format_4(isNegative, buf, scale);
  return buf.toString_0();
}
;
_.format_3 = function format_3(number){
  var bigDec, bigInt, buf, isNegative;
  if (instanceOf(number, 90)) {
    bigDec = castTo(number, 90);
    isNegative = bigDec.signum() < 0;
    if (isNegative) {
      bigDec = bigDec.negate();
    }
    bigDec = bigDec.multiply(valueOf_52(fromInt_0(this.multiplier)));
    buf = new StringBuilder;
    buf.append_9(bigDec.unscaledValue().toString_0());
    this.format_4(isNegative, buf, -bigDec.scale_0());
    return buf.toString_0();
  }
   else if (instanceOf(number, 48)) {
    bigInt = castTo(number, 48);
    isNegative = bigInt.signum() < 0;
    if (isNegative) {
      bigInt = bigInt.negate_0();
    }
    bigInt = bigInt.multiply_0(valueOf_55(fromInt_0(this.multiplier)));
    buf = new StringBuilder;
    buf.append_9(bigInt.toString_0());
    this.format_4(isNegative, buf, 0);
    return buf.toString_0();
  }
   else if (instanceOf(number, 66)) {
    return this.format_2(longValue__J__devirtual$(number), 0);
  }
   else {
    return this.format_1(doubleValue__D__devirtual$(number));
  }
}
;
_.format_4 = function format_4(isNegative, digits, scale){
  var currentGroupingSize, decimalSeparator, groupingSeparator, useExponent, zeroChar;
  if (this.isCurrencyFormat) {
    decimalSeparator = charAt_I_C__devirtual$(this.numberConstants.monetarySeparator(), 0);
    groupingSeparator = charAt_I_C__devirtual$(this.numberConstants.monetaryGroupingSeparator(), 0);
  }
   else {
    decimalSeparator = charAt_I_C__devirtual$(this.numberConstants.decimalSeparator(), 0);
    groupingSeparator = charAt_I_C__devirtual$(this.numberConstants.groupingSeparator(), 0);
  }
  this.exponent = 0;
  this.digitsLength = digits.length_0();
  this.decimalPosition = this.digitsLength + scale;
  useExponent = this.useExponentialNotation;
  currentGroupingSize = this.groupingSize;
  if (this.decimalPosition > 1024) {
    useExponent = true;
  }
  if (useExponent) {
    this.computeExponent(digits);
  }
  this.processLeadingZeros(digits);
  this.roundValue(digits);
  this.insertGroupingSeparators(digits, groupingSeparator, currentGroupingSize);
  this.adjustFractionDigits(digits);
  this.addZeroAndDecimal(digits, decimalSeparator);
  if (useExponent) {
    this.addExponent(digits);
  }
  zeroChar = charAt_I_C__devirtual$(this.numberConstants.zeroDigit(), 0);
  if (zeroChar != 48) {
    this.localizeDigits(digits, zeroChar);
  }
  digits.insert_6(0, isNegative?this.negativePrefix:this.positivePrefix);
  digits.append_9(isNegative?this.negativeSuffix:this.positiveSuffix);
}
;
_.getDigit = function getDigit(ch_0){
  var zeroChar;
  if (48 <= ch_0 && ch_0 <= 48 + 9) {
    return ch_0 - 48;
  }
   else {
    zeroChar = charAt_I_C__devirtual$(this.numberConstants.zeroDigit(), 0);
    return zeroChar <= ch_0 && ch_0 <= zeroChar + 9?ch_0 - zeroChar:-1;
  }
}
;
_.insertGroupingSeparators = function insertGroupingSeparators(digits, groupingSeparator, g){
  var i;
  if (g > 0) {
    for (i = g; i < this.decimalPosition; i += g + 1) {
      digits.insert_4(this.decimalPosition - i, groupingSeparator);
      ++this.decimalPosition;
      ++this.digitsLength;
    }
  }
}
;
_.localizeDigits = function localizeDigits(digits, zero){
  var ch_0, i, n;
  n = digits.length_0();
  for (i = 0; i < n; ++i) {
    ch_0 = digits.charAt_0(i);
    if (ch_0 >= 48 && ch_0 <= 57) {
      digits.setCharAt(i, narrow_char(ch_0 - 48 + zero));
    }
  }
}
;
_.parse_1 = function parse_1(text_0){
  var pos, result;
  pos = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [0]);
  result = this.parse_2(text_0, pos);
  if (pos[0] == 0 || pos[0] != length__I__devirtual$(text_0)) {
    throw toJs(new NumberFormatException(text_0));
  }
  return result;
}
;
_.parse_2 = function parse_2(text_0, inOutPos){
  var gotNegative, gotNegativePrefix, gotNegativeSuffix, gotPositive, gotPositivePrefix, gotPositiveSuffix, ret, tempPos, valueOnly;
  ret = 0;
  gotPositivePrefix = startsWith_Ljava_lang_String_I_Z__devirtual$(text_0, this.positivePrefix, inOutPos[0]);
  gotNegativePrefix = startsWith_Ljava_lang_String_I_Z__devirtual$(text_0, this.negativePrefix, inOutPos[0]);
  gotPositiveSuffix = endsWith_Ljava_lang_String__Z__devirtual$(text_0, this.positiveSuffix);
  gotNegativeSuffix = endsWith_Ljava_lang_String__Z__devirtual$(text_0, this.negativeSuffix);
  gotPositive = gotPositivePrefix && gotPositiveSuffix;
  gotNegative = gotNegativePrefix && gotNegativeSuffix;
  if (gotPositive && gotNegative) {
    if (length__I__devirtual$(this.positivePrefix) > length__I__devirtual$(this.negativePrefix)) {
      gotNegative = false;
    }
     else if (length__I__devirtual$(this.positivePrefix) < length__I__devirtual$(this.negativePrefix)) {
      gotPositive = false;
    }
     else if (length__I__devirtual$(this.positiveSuffix) > length__I__devirtual$(this.negativeSuffix)) {
      gotNegative = false;
    }
     else if (length__I__devirtual$(this.positiveSuffix) < length__I__devirtual$(this.negativeSuffix)) {
      gotPositive = false;
    }
     else {
      gotNegative = false;
    }
  }
   else if (!gotPositive && !gotNegative) {
    throw toJs(new NumberFormatException(text_0 + ' does not have either positive or negative affixes'));
  }
  valueOnly = null;
  if (gotPositive) {
    inOutPos[0] += length__I__devirtual$(this.positivePrefix);
    valueOnly = substring_II_Ljava_lang_String___devirtual$(text_0, inOutPos[0], length__I__devirtual$(text_0) - length__I__devirtual$(this.positiveSuffix));
  }
   else {
    inOutPos[0] += length__I__devirtual$(this.negativePrefix);
    valueOnly = substring_II_Ljava_lang_String___devirtual$(text_0, inOutPos[0], length__I__devirtual$(text_0) - length__I__devirtual$(this.negativeSuffix));
  }
  if (equals_Ljava_lang_Object__Z__devirtual$_2(valueOnly, this.numberConstants.infinity())) {
    inOutPos[0] += length__I__devirtual$(this.numberConstants.infinity());
    ret = Infinity;
  }
   else if (equals_Ljava_lang_Object__Z__devirtual$_2(valueOnly, this.numberConstants.notANumber())) {
    inOutPos[0] += length__I__devirtual$(this.numberConstants.notANumber());
    ret = NaN;
  }
   else {
    tempPos = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [0]);
    ret = this.parseNumber(valueOnly, tempPos);
    inOutPos[0] += tempPos[0];
  }
  if (gotPositive) {
    inOutPos[0] += length__I__devirtual$(this.positiveSuffix);
  }
   else if (gotNegative) {
    inOutPos[0] += length__I__devirtual$(this.negativeSuffix);
  }
  if (gotNegative) {
    ret = -ret;
  }
  return ret;
}
;
_.parseAffix = function parseAffix(pattern, start_0, affix, inNegativePattern){
  var ch_0, inQuote, len, pos;
  affix.delete_0(0, affix.length_0());
  inQuote = false;
  len = length__I__devirtual$(pattern);
  for (pos = start_0; pos < len; ++pos) {
    ch_0 = charAt_I_C__devirtual$(pattern, pos);
    if (ch_0 == 39) {
      if (pos + 1 < len && charAt_I_C__devirtual$(pattern, pos + 1) == 39) {
        ++pos;
        affix.append_9("'");
      }
       else {
        inQuote = !inQuote;
      }
      continue;
    }
    if (inQuote) {
      affix.append_4(ch_0);
    }
     else {
      switch (ch_0) {
        case 35:
        case 48:
        case 44:
        case 46:
        case 59:
          return pos - start_0;
        case 164:
          this.isCurrencyFormat = true;
          if (pos + 1 < len && charAt_I_C__devirtual$(pattern, pos + 1) == 164) {
            ++pos;
            if (pos < len - 2 && charAt_I_C__devirtual$(pattern, pos + 1) == 164 && charAt_I_C__devirtual$(pattern, pos + 2) == 164) {
              pos += 2;
              affix.append_9(getSimpleCurrencySymbol__Ljava_lang_String___devirtual$(this.currencyData));
            }
             else {
              affix.append_9(getCurrencyCode__Ljava_lang_String___devirtual$(this.currencyData));
            }
          }
           else {
            affix.append_9(getCurrencySymbol__Ljava_lang_String___devirtual$(this.currencyData));
          }

          break;
        case 37:
          if (!inNegativePattern) {
            if (this.multiplier != 1) {
              throw toJs(new IllegalArgumentException_0('Too many percent/per mille characters in pattern "' + pattern + '"'));
            }
            this.multiplier = 100;
          }

          affix.append_9(this.numberConstants.percent());
          break;
        case 8240:
          if (!inNegativePattern) {
            if (this.multiplier != 1) {
              throw toJs(new IllegalArgumentException_0('Too many percent/per mille characters in pattern "' + pattern + '"'));
            }
            this.multiplier = 1000;
          }

          affix.append_9(this.numberConstants.perMill());
          break;
        case 45:
          affix.append_9('-');
          break;
        default:affix.append_4(ch_0);
      }
    }
  }
  return len - start_0;
}
;
_.parseNumber = function parseNumber(text_0, pos){
  var ch_0, decimal, digit, e, exponentChar, grouping, normalizedText, ret, sawDecimal, sawDigit, sawExponent, scale;
  sawDecimal = false;
  sawExponent = false;
  sawDigit = false;
  scale = 1;
  decimal = this.isCurrencyFormat?this.numberConstants.monetarySeparator():this.numberConstants.decimalSeparator();
  grouping = this.isCurrencyFormat?this.numberConstants.monetaryGroupingSeparator():this.numberConstants.groupingSeparator();
  exponentChar = this.numberConstants.exponentialSymbol();
  normalizedText = new StringBuilder;
  for (; pos[0] < length__I__devirtual$(text_0); ++pos[0]) {
    ch_0 = charAt_I_C__devirtual$(text_0, pos[0]);
    digit = this.getDigit(ch_0);
    if (digit >= 0 && digit <= 9) {
      normalizedText.append_4(narrow_char(digit + 48));
      sawDigit = true;
    }
     else if (ch_0 == charAt_I_C__devirtual$(decimal, 0)) {
      if (sawDecimal || sawExponent) {
        break;
      }
      normalizedText.append_4(46);
      sawDecimal = true;
    }
     else if (ch_0 == charAt_I_C__devirtual$(grouping, 0)) {
      if (sawDecimal || sawExponent) {
        break;
      }
      continue;
    }
     else if (ch_0 == charAt_I_C__devirtual$(exponentChar, 0)) {
      if (sawExponent) {
        break;
      }
      normalizedText.append_4(69);
      sawExponent = true;
    }
     else if (ch_0 == 43 || ch_0 == 45) {
      normalizedText.append_4(ch_0);
    }
     else if (ch_0 == charAt_I_C__devirtual$(this.numberConstants.percent(), 0)) {
      if (scale != 1) {
        break;
      }
      scale = 100;
      if (sawDigit) {
        ++pos[0];
        break;
      }
    }
     else if (ch_0 == charAt_I_C__devirtual$(this.numberConstants.perMill(), 0)) {
      if (scale != 1) {
        break;
      }
      scale = 1000;
      if (sawDigit) {
        ++pos[0];
        break;
      }
    }
     else {
      break;
    }
  }
  try {
    ret = parseDouble(normalizedText.toString_0());
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 133)) {
      e = $e0;
      throw toJs(new NumberFormatException(text_0));
    }
     else 
      throw toJs($e0);
  }
  ret = ret / scale;
  return ret;
}
;
_.parsePattern_0 = function parsePattern_0(pattern){
  var affix, pos;
  pos = 0;
  affix = new StringBuilder;
  pos += this.parseAffix(pattern, pos, affix, false);
  this.positivePrefix = affix.toString_0();
  pos += this.parseTrunk(pattern, pos, false);
  pos += this.parseAffix(pattern, pos, affix, false);
  this.positiveSuffix = affix.toString_0();
  if (pos < length__I__devirtual$(pattern) && charAt_I_C__devirtual$(pattern, pos) == 59) {
    ++pos;
    pos += this.parseAffix(pattern, pos, affix, true);
    this.negativePrefix = affix.toString_0();
    pos += this.parseTrunk(pattern, pos, true);
    pos += this.parseAffix(pattern, pos, affix, true);
    this.negativeSuffix = affix.toString_0();
  }
   else {
    this.negativePrefix = this.numberConstants.minusSign() + ('' + this.positivePrefix);
    this.negativeSuffix = this.positiveSuffix;
  }
}
;
_.parseTrunk = function parseTrunk(pattern, start_0, ignorePattern){
  var ch_0, decimalPos, digitLeftCount, digitRightCount, effectiveDecimalPos, groupingCount, len, loop, n, pos, totalDigits, zeroDigitCount;
  decimalPos = -1;
  digitLeftCount = 0;
  zeroDigitCount = 0;
  digitRightCount = 0;
  groupingCount = -1;
  len = length__I__devirtual$(pattern);
  pos = start_0;
  loop = true;
  for (; pos < len && loop; ++pos) {
    ch_0 = charAt_I_C__devirtual$(pattern, pos);
    switch (ch_0) {
      case 35:
        if (zeroDigitCount > 0) {
          ++digitRightCount;
        }
         else {
          ++digitLeftCount;
        }

        if (groupingCount >= 0 && decimalPos < 0) {
          ++groupingCount;
        }

        break;
      case 48:
        if (digitRightCount > 0) {
          throw toJs(new IllegalArgumentException_0("Unexpected '0' in pattern \"" + pattern + '"'));
        }

        ++zeroDigitCount;
        if (groupingCount >= 0 && decimalPos < 0) {
          ++groupingCount;
        }

        break;
      case 44:
        groupingCount = 0;
        break;
      case 46:
        if (decimalPos >= 0) {
          throw toJs(new IllegalArgumentException_0('Multiple decimal separators in pattern "' + pattern + '"'));
        }

        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;
        break;
      case 69:
        if (!ignorePattern) {
          if (this.useExponentialNotation) {
            throw toJs(new IllegalArgumentException_0('Multiple exponential symbols in pattern "' + pattern + '"'));
          }
          this.useExponentialNotation = true;
          this.minExponentDigits = 0;
        }

        while (pos + 1 < len && charAt_I_C__devirtual$(pattern, pos + 1) == 48) {
          ++pos;
          if (!ignorePattern) {
            ++this.minExponentDigits;
          }
        }

        if (!ignorePattern && digitLeftCount + zeroDigitCount < 1 || this.minExponentDigits < 1) {
          throw toJs(new IllegalArgumentException_0('Malformed exponential pattern "' + pattern + '"'));
        }

        loop = false;
        break;
      default:--pos;
        loop = false;
        break;
    }
  }
  if (zeroDigitCount == 0 && digitLeftCount > 0 && decimalPos >= 0) {
    n = decimalPos;
    if (n == 0) {
      ++n;
    }
    digitRightCount = digitLeftCount - n;
    digitLeftCount = n - 1;
    zeroDigitCount = 1;
  }
  if (decimalPos < 0 && digitRightCount > 0 || decimalPos >= 0 && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || groupingCount == 0) {
    throw toJs(new IllegalArgumentException_0('Malformed pattern "' + pattern + '"'));
  }
  if (ignorePattern) {
    return pos - start_0;
  }
  totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;
  this.maximumFractionDigits = decimalPos >= 0?totalDigits - decimalPos:0;
  if (decimalPos >= 0) {
    this.minimumFractionDigits = digitLeftCount + zeroDigitCount - decimalPos;
    if (this.minimumFractionDigits < 0) {
      this.minimumFractionDigits = 0;
    }
  }
  effectiveDecimalPos = decimalPos >= 0?decimalPos:totalDigits;
  this.minimumIntegerDigits = effectiveDecimalPos - digitLeftCount;
  if (this.useExponentialNotation) {
    this.maximumIntegerDigits = digitLeftCount + this.minimumIntegerDigits;
    if (this.maximumFractionDigits == 0 && this.minimumIntegerDigits == 0) {
      this.minimumIntegerDigits = 1;
    }
  }
  this.groupingSize = groupingCount > 0?groupingCount:0;
  this.decimalSeparatorAlwaysShown = decimalPos == 0 || decimalPos == totalDigits;
  return pos - start_0;
}
;
_.processLeadingZeros = function processLeadingZeros(digits){
  var i, prefix, strip;
  if (this.decimalPosition > this.digitsLength) {
    while (this.digitsLength < this.decimalPosition) {
      digits.append_4(48);
      ++this.digitsLength;
    }
  }
  if (!this.useExponentialNotation) {
    if (this.decimalPosition < this.minimumIntegerDigits) {
      prefix = new StringBuilder;
      while (this.decimalPosition < this.minimumIntegerDigits) {
        prefix.append_4(48);
        ++this.decimalPosition;
        ++this.digitsLength;
      }
      digits.insert_5(0, prefix);
    }
     else if (this.decimalPosition > this.minimumIntegerDigits) {
      strip = this.decimalPosition - this.minimumIntegerDigits;
      for (i = 0; i < strip; ++i) {
        if (digits.charAt_0(i) != 48) {
          strip = i;
          break;
        }
      }
      if (strip > 0) {
        digits.delete_0(0, strip);
        this.digitsLength -= strip;
        this.decimalPosition -= strip;
      }
    }
  }
}
;
_.propagateCarry = function propagateCarry(digits, i){
  var carry, digit;
  carry = true;
  while (carry && i >= 0) {
    digit = digits.charAt_0(i);
    if (digit == 57) {
      digits.setCharAt(i--, 48);
    }
     else {
      digits.setCharAt(i, narrow_char(digit + 1));
      carry = false;
    }
  }
  if (carry) {
    digits.insert_4(0, 49);
    ++this.decimalPosition;
    ++this.digitsLength;
  }
}
;
_.roundValue = function roundValue(digits){
  var i;
  if (this.digitsLength > this.decimalPosition + this.maximumFractionDigits && digits.charAt_0(this.decimalPosition + this.maximumFractionDigits) >= 53) {
    i = this.decimalPosition + this.maximumFractionDigits - 1;
    this.propagateCarry(digits, i);
  }
}
;
_.decimalPosition = 0;
_.decimalSeparatorAlwaysShown = false;
_.digitsLength = 0;
_.exponent = 0;
_.groupingSize = 0;
_.isCurrencyFormat = false;
_.maximumFractionDigits = 0;
_.maximumIntegerDigits = 0;
_.minExponentDigits = 0;
_.minimumFractionDigits = 0;
_.minimumIntegerDigits = 0;
_.multiplier = 0;
_.useExponentialNotation = false;
var cachedDecimalFormat, defaultNumberConstants, localizedNumberConstants;
var Lcom_google_gwt_i18n_client_NumberFormat_2_classLit = createForClass('com.google.gwt.i18n.client', 'NumberFormat', 482, Ljava_lang_Object_2_classLit);
function $clinit_NumberConstants(){
  $clinit_NumberConstants = emptyMethod;
}

var Lcom_google_gwt_i18n_client_constants_NumberConstants_2_classLit = createForInterface('com.google.gwt.i18n.client.constants', 'NumberConstants');
function $clinit_TimeZone_0(){
  $clinit_TimeZone_0 = emptyMethod;
}

var Lcom_google_gwt_i18n_shared_TimeZone_2_classLit = createForInterface('com.google.gwt.i18n.shared', 'TimeZone');
function $clinit_TimeZone(){
  $clinit_TimeZone = emptyMethod;
  $clinit_Object();
}

function TimeZone(){
  Object_0.call(this);
  this.$init_596();
}

function composeGMTString(offset){
  var data_0;
  data_0 = stampJavaTypeInfo(getClassLiteralForArray(C_classLit, 1), {4:1, 1:1}, 29, 15, [71, 77, 84, 45, 48, 48, 58, 48, 48]);
  if (offset <= 0) {
    data_0[3] = 43;
    offset = -offset;
  }
  data_0[4] = narrow_char(data_0[4] + narrow_int(narrow_int(offset / 60) / 10));
  data_0[5] = narrow_char(data_0[5] + narrow_int(offset / 60) % 10);
  data_0[7] = narrow_char(data_0[7] + narrow_int(offset % 60 / 10));
  data_0[8] = narrow_char(data_0[8] + offset % 10);
  return $create_2(data_0);
}

function composePOSIXTimeZoneID(offset){
  var str;
  if (offset == 0) {
    return 'Etc/GMT';
  }
  if (offset < 0) {
    offset = -offset;
    str = 'Etc/GMT-';
  }
   else {
    str = 'Etc/GMT+';
  }
  return str + ('' + offsetDisplay(offset));
}

function composeUTCString(offset){
  var str;
  if (offset == 0) {
    return 'UTC';
  }
  if (offset < 0) {
    offset = -offset;
    str = 'UTC+';
  }
   else {
    str = 'UTC-';
  }
  return str + ('' + offsetDisplay(offset));
}

function createTimeZone_0(timeZoneOffsetInMinutes){
  $clinit_TimeZone();
  var tz;
  tz = new TimeZone;
  tz.standardOffset = timeZoneOffsetInMinutes;
  tz.timezoneID = composePOSIXTimeZoneID(timeZoneOffsetInMinutes);
  tz.tzNames = initUnidimensionalArray(Ljava_lang_String_2_classLit, {4:1, 1:1, 5:1}, 2, 2, 6, 1);
  tz.tzNames[0] = composeUTCString(timeZoneOffsetInMinutes);
  tz.tzNames[1] = composeUTCString(timeZoneOffsetInMinutes);
  tz.transitionPoints = null;
  tz.adjustments = null;
  return tz;
}

function offsetDisplay(offset){
  var hour, mins;
  hour = narrow_int(offset / 60);
  mins = offset % 60;
  if (mins == 0) {
    return toString_64(hour);
  }
  return toString_64(hour) + ':' + toString_64(mins);
}

defineClass(999, 1, {1:1}, TimeZone);
_.$init_596 = function $init_596(){
}
;
_.getDaylightAdjustment = function getDaylightAdjustment(date){
  var index_0, timeInHours;
  if (jsEquals(this.transitionPoints, null)) {
    return 0;
  }
  timeInHours = div_1(div_1(date.getTime_1(), 1000), 3600);
  index_0 = 0;
  while (index_0 < this.transitionPoints.length && gte_0(timeInHours, fromInt_0(this.transitionPoints[index_0]))) {
    ++index_0;
  }
  return index_0 == 0?0:this.adjustments[index_0 - 1];
}
;
_.getGMTString = function getGMTString(date){
  return composeGMTString(this.getOffset(date));
}
;
_.getID = function getID(){
  return this.timezoneID;
}
;
_.getISOTimeZoneString = function getISOTimeZoneString(date){
  var data_0, offset;
  offset = -this.getOffset(date);
  data_0 = stampJavaTypeInfo(getClassLiteralForArray(C_classLit, 1), {4:1, 1:1}, 29, 15, [43, 48, 48, 58, 48, 48]);
  if (offset < 0) {
    data_0[0] = 45;
    offset = -offset;
  }
  data_0[1] = narrow_char(data_0[1] + narrow_int(narrow_int(offset / 60) / 10));
  data_0[2] = narrow_char(data_0[2] + narrow_int(offset / 60) % 10);
  data_0[4] = narrow_char(data_0[4] + narrow_int(offset % 60 / 10));
  data_0[5] = narrow_char(data_0[5] + offset % 10);
  return $create_2(data_0);
}
;
_.getLongName = function getLongName(date){
  return this.tzNames[this.isDaylightTime(date)?3:1];
}
;
_.getOffset = function getOffset(date){
  return this.standardOffset - this.getDaylightAdjustment(date);
}
;
_.getRFCTimeZoneString = function getRFCTimeZoneString(date){
  var data_0, offset;
  offset = -this.getOffset(date);
  data_0 = stampJavaTypeInfo(getClassLiteralForArray(C_classLit, 1), {4:1, 1:1}, 29, 15, [43, 48, 48, 48, 48]);
  if (offset < 0) {
    data_0[0] = 45;
    offset = -offset;
  }
  data_0[1] = narrow_char(data_0[1] + narrow_int(narrow_int(offset / 60) / 10));
  data_0[2] = narrow_char(data_0[2] + narrow_int(offset / 60) % 10);
  data_0[3] = narrow_char(data_0[3] + narrow_int(offset % 60 / 10));
  data_0[4] = narrow_char(data_0[4] + offset % 10);
  return $create_2(data_0);
}
;
_.getShortName = function getShortName(date){
  return this.tzNames[this.isDaylightTime(date)?2:0];
}
;
_.isDaylightTime = function isDaylightTime(date){
  return this.getDaylightAdjustment(date) > 0;
}
;
_.standardOffset = 0;
var Lcom_google_gwt_i18n_client_TimeZone_2_classLit = createForClass('com.google.gwt.i18n.client', 'TimeZone', 999, Ljava_lang_Object_2_classLit);
function $clinit_NumberConstantsImpl(){
  $clinit_NumberConstantsImpl = emptyMethod;
}

var Lcom_google_gwt_i18n_client_constants_NumberConstantsImpl_2_classLit = createForInterface('com.google.gwt.i18n.client.constants', 'NumberConstantsImpl');
function $clinit_NumberConstantsImpl_(){
  $clinit_NumberConstantsImpl_ = emptyMethod;
  $clinit_Object();
}

function NumberConstantsImpl_(){
  $clinit_NumberConstantsImpl_();
  Object_0.call(this);
  this.$init_597();
}

defineClass(483, 1, {1061:1, 1:1}, NumberConstantsImpl_);
_.$init_597 = function $init_597(){
}
;
_.decimalPattern = function decimalPattern(){
  return '#,##0.###';
}
;
_.decimalSeparator = function decimalSeparator_0(){
  return '.';
}
;
_.exponentialSymbol = function exponentialSymbol(){
  return 'E';
}
;
_.groupingSeparator = function groupingSeparator_0(){
  return ',';
}
;
_.infinity = function infinity(){
  return '\u221E';
}
;
_.minusSign = function minusSign(){
  return '-';
}
;
_.monetaryGroupingSeparator = function monetaryGroupingSeparator(){
  return ',';
}
;
_.monetarySeparator = function monetarySeparator(){
  return '.';
}
;
_.notANumber = function notANumber(){
  return 'NaN';
}
;
_.perMill = function perMill(){
  return '\u2030';
}
;
_.percent = function percent_0(){
  return '%';
}
;
_.zeroDigit = function zeroDigit(){
  return '0';
}
;
var Lcom_google_gwt_i18n_client_constants_NumberConstantsImpl_1_2_classLit = createForClass('com.google.gwt.i18n.client.constants', 'NumberConstantsImpl_', 483, Ljava_lang_Object_2_classLit);
function $clinit_CldrImpl(){
  $clinit_CldrImpl = emptyMethod;
  $clinit_Object();
}

function CldrImpl(){
  $clinit_CldrImpl();
  Object_0.call(this);
  this.$init_598();
}

defineClass(277, 1, {277:1, 1:1}, CldrImpl);
_.$init_598 = function $init_598(){
}
;
_.isRTL_0 = function isRTL_1(){
  return false;
}
;
var Lcom_google_gwt_i18n_client_impl_CldrImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl', 'CldrImpl', 277, Ljava_lang_Object_2_classLit);
function $clinit_CurrencyDataImpl(){
  $clinit_CurrencyDataImpl = emptyMethod;
  $clinit_DefaultCurrencyData();
}

function CurrencyDataImpl(currencyCode, currencySymbol, flagsAndPrecision, portableCurrencySymbol, simpleCurrencySymbol){
  $clinit_CurrencyDataImpl();
  DefaultCurrencyData.call(this, currencyCode, currencySymbol, getDefaultFractionDigits_1(flagsAndPrecision));
  this.$init_599();
  this.flagsAndPrecision = flagsAndPrecision;
  this.portableCurrencySymbol = jsEquals(portableCurrencySymbol, null)?currencySymbol:portableCurrencySymbol;
  this.simpleCurrencySymbol = jsEquals(simpleCurrencySymbol, null)?currencySymbol:simpleCurrencySymbol;
}

function getDefaultFractionDigits_1(flagsAndPrecision){
  $clinit_CurrencyDataImpl();
  return flagsAndPrecision & 7;
}

function isDeprecated_1(flagsAndPrecision){
  $clinit_CurrencyDataImpl();
  return (flagsAndPrecision & 128) != 0;
}

defineClass(6, 1048, {369:1, 1:1}, CurrencyDataImpl);
_.$init_599 = function $init_599(){
}
;
_.getDefaultFractionDigits = function getDefaultFractionDigits_0(){
  return getDefaultFractionDigits_1(this.flagsAndPrecision);
}
;
_.getSimpleCurrencySymbol = function getSimpleCurrencySymbol_0(){
  return this.simpleCurrencySymbol;
}
;
_.isDeprecated = function isDeprecated_0(){
  return isDeprecated_1(this.flagsAndPrecision);
}
;
_.flagsAndPrecision = 0;
var Lcom_google_gwt_i18n_client_impl_CurrencyDataImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl', 'CurrencyDataImpl', 6, Lcom_google_gwt_i18n_client_DefaultCurrencyData_2_classLit);
function $clinit_CurrencyDataJso(){
  $clinit_CurrencyDataJso = emptyMethod;
  $clinit_JavaScriptObject();
}

function $getCurrencyCode(this$static){
  return this$static[0];
}

function $getCurrencySymbol(this$static){
  return this$static[1];
}

function $getDefaultFractionDigits(this$static){
  return getDefaultFractionDigits_1($getFlagsAndPrecision(this$static));
}

function $getFlagsAndPrecision(this$static){
  return this$static[2];
}

function $getSimpleCurrencySymbol(this$static){
  return this$static[4] || this$static[1];
}

function $isDeprecated(this$static){
  return isDeprecated_1($getFlagsAndPrecision(this$static));
}

function getCurrencyCode__Ljava_lang_String___devirtual$(this$static){
  $clinit_CurrencyDataJso();
  return hasJavaObjectVirtualDispatch(this$static)?this$static.getCurrencyCode():$getCurrencyCode(this$static);
}

function getCurrencySymbol__Ljava_lang_String___devirtual$(this$static){
  $clinit_CurrencyDataJso();
  return hasJavaObjectVirtualDispatch(this$static)?this$static.getCurrencySymbol():$getCurrencySymbol(this$static);
}

function getDefaultFractionDigits__I__devirtual$(this$static){
  $clinit_CurrencyDataJso();
  return hasJavaObjectVirtualDispatch(this$static)?this$static.getDefaultFractionDigits():$getDefaultFractionDigits(this$static);
}

function getSimpleCurrencySymbol__Ljava_lang_String___devirtual$(this$static){
  $clinit_CurrencyDataJso();
  return hasJavaObjectVirtualDispatch(this$static)?this$static.getSimpleCurrencySymbol():$getSimpleCurrencySymbol(this$static);
}

function isDeprecated__Z__devirtual$(this$static){
  $clinit_CurrencyDataJso();
  return hasJavaObjectVirtualDispatch(this$static)?this$static.isDeprecated():$isDeprecated(this$static);
}

function $clinit_LocaleInfoImpl(){
  $clinit_LocaleInfoImpl = emptyMethod;
  $clinit_Object();
}

function LocaleInfoImpl(){
  $clinit_LocaleInfoImpl();
  Object_0.call(this);
  this.$init_600();
}

defineClass(210, 1, {210:1, 1:1});
_.$init_600 = function $init_600(){
}
;
_.getDateTimeFormatInfo = function getDateTimeFormatInfo_0(){
  return castTo(new DateTimeFormatInfoImpl, 1058);
}
;
_.getNumberConstants = function getNumberConstants_0(){
  return castTo(new NumberConstantsImpl_, 1061);
}
;
_.hasAnyRTL = function hasAnyRTL_0(){
  return false;
}
;
var Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl', 'LocaleInfoImpl', 210, Ljava_lang_Object_2_classLit);
function $clinit_LocaleInfoImpl_shared(){
  $clinit_LocaleInfoImpl_shared = emptyMethod;
  $clinit_LocaleInfoImpl();
}

function LocaleInfoImpl_shared(){
  $clinit_LocaleInfoImpl_shared();
  LocaleInfoImpl.call(this);
  this.$init_601();
}

defineClass(701, 210, {210:1, 1:1});
_.$init_601 = function $init_601(){
}
;
_.hasAnyRTL = function hasAnyRTL_1(){
  return false;
}
;
var Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_1shared_2_classLit = createForClass('com.google.gwt.i18n.client.impl', 'LocaleInfoImpl_shared', 701, Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_2_classLit);
function $clinit_LocaleInfoImpl_(){
  $clinit_LocaleInfoImpl_ = emptyMethod;
  $clinit_LocaleInfoImpl_shared();
}

function LocaleInfoImpl_(){
  $clinit_LocaleInfoImpl_();
  LocaleInfoImpl_shared.call(this);
  this.$init_602();
}

defineClass(702, 701, {210:1, 1:1}, LocaleInfoImpl_);
_.$init_602 = function $init_602(){
}
;
_.getDateTimeFormatInfo = function getDateTimeFormatInfo_1(){
  return castTo(new DateTimeFormatInfoImpl, 1058);
}
;
_.getNumberConstants = function getNumberConstants_1(){
  return castTo(new NumberConstantsImpl_, 1061);
}
;
var Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_1_2_classLit = createForClass('com.google.gwt.i18n.client.impl', 'LocaleInfoImpl_', 702, Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_1shared_2_classLit);
function $clinit_DateTimeFormatInfoImpl(){
  $clinit_DateTimeFormatInfoImpl = emptyMethod;
  $clinit_DefaultDateTimeFormatInfo_0();
}

function DateTimeFormatInfoImpl(){
  $clinit_DateTimeFormatInfoImpl();
  DefaultDateTimeFormatInfo_0.call(this);
  this.$init_603();
}

defineClass(404, 788, {1058:1, 1:1}, DateTimeFormatInfoImpl);
_.$init_603 = function $init_603(){
}
;
var Lcom_google_gwt_i18n_client_impl_cldr_DateTimeFormatInfoImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl.cldr', 'DateTimeFormatInfoImpl', 404, Lcom_google_gwt_i18n_client_DefaultDateTimeFormatInfo_2_classLit);
function $clinit_BidiFormatterBase(){
  $clinit_BidiFormatterBase = emptyMethod;
  $clinit_Object();
}

function BidiFormatterBase(contextDir, alwaysSpan){
  $clinit_BidiFormatterBase();
  Object_0.call(this);
  this.$init_604();
  this.contextDir = contextDir;
  this.alwaysSpan = alwaysSpan;
}

defineClass(284, 1, {284:1, 1:1});
_.$init_604 = function $init_604(){
}
;
_.dirResetIfNeeded = function dirResetIfNeeded(str, dir_0, isHtml, dirReset){
  if (dirReset && (jsEquals(this.contextDir, ($clinit_HasDirection$Direction() , LTR)) && (jsEquals(dir_0, ($clinit_HasDirection$Direction() , RTL)) || get_2657().endsWithRtl_0(str, isHtml)) || jsEquals(this.contextDir, ($clinit_HasDirection$Direction() , RTL)) && (jsEquals(dir_0, ($clinit_HasDirection$Direction() , LTR)) || get_2657().endsWithLtr_0(str, isHtml)))) {
    return jsEquals(this.contextDir, ($clinit_HasDirection$Direction() , LTR))?($clinit_BidiFormatterBase$Format() , LRM_STRING):($clinit_BidiFormatterBase$Format() , RLM_STRING);
  }
   else {
    return '';
  }
}
;
_.spanWrapWithKnownDirBase = function spanWrapWithKnownDirBase(dir_0, str, isHtml, dirReset){
  var dirCondition, origStr, result;
  dirCondition = jsNotEquals(dir_0, ($clinit_HasDirection$Direction() , DEFAULT)) && jsNotEquals(dir_0, this.contextDir);
  origStr = str;
  if (!isHtml) {
    str = htmlEscape(str);
  }
  result = new StringBuilder;
  if (this.alwaysSpan || dirCondition) {
    result.append_9('<span');
    if (dirCondition) {
      result.append_9(' ');
      result.append_9(jsEquals(dir_0, ($clinit_HasDirection$Direction() , RTL))?'dir=rtl':'dir=ltr');
    }
    result.append_9('>' + str + '<\/span>');
  }
   else {
    result.append_9(str);
  }
  result.append_9(this.dirResetIfNeeded(origStr, dir_0, isHtml, dirReset));
  return result.toString_0();
}
;
_.unicodeWrapWithKnownDirBase = function unicodeWrapWithKnownDirBase(dir_0, str, isHtml, dirReset){
  var result;
  result = new StringBuilder;
  if (jsNotEquals(dir_0, ($clinit_HasDirection$Direction() , DEFAULT)) && jsNotEquals(dir_0, this.contextDir)) {
    result.append_4(jsEquals(dir_0, ($clinit_HasDirection$Direction() , RTL))?8235:8234);
    result.append_9(str);
    result.append_4(8236);
  }
   else {
    result.append_9(str);
  }
  result.append_9(this.dirResetIfNeeded(str, dir_0, isHtml, dirReset));
  return result.toString_0();
}
;
_.alwaysSpan = false;
var Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit = createForClass('com.google.gwt.i18n.shared', 'BidiFormatterBase', 284, Ljava_lang_Object_2_classLit);
function $clinit_BidiFormatter(){
  $clinit_BidiFormatter = emptyMethod;
  $clinit_BidiFormatterBase();
  factory_0 = new BidiFormatter$Factory;
}

function BidiFormatter(contextDir, alwaysSpan){
  BidiFormatterBase.call(this, contextDir, alwaysSpan);
  this.$init_605();
}

function getInstance(rtlContext, alwaysSpan){
  return new BidiFormatter(rtlContext?($clinit_HasDirection$Direction() , RTL):($clinit_HasDirection$Direction() , LTR), alwaysSpan);
}

function getInstanceForCurrentLocale(){
  $clinit_BidiFormatter();
  return getInstanceForCurrentLocale_0(false);
}

function getInstanceForCurrentLocale_0(alwaysSpan){
  $clinit_BidiFormatter();
  return getInstance(getCurrentLocale().isRTL_0(), alwaysSpan);
}

defineClass(791, 284, {284:1, 1:1}, BidiFormatter);
_.$init_605 = function $init_605(){
}
;
_.spanWrapWithKnownDir = function spanWrapWithKnownDir(dir_0, str, isHtml){
  return this.spanWrapWithKnownDir_0(dir_0, str, isHtml, true);
}
;
_.spanWrapWithKnownDir_0 = function spanWrapWithKnownDir_0(dir_0, str, isHtml, dirReset){
  return this.spanWrapWithKnownDirBase(dir_0, str, isHtml, dirReset);
}
;
_.unicodeWrapWithKnownDir = function unicodeWrapWithKnownDir(dir_0, str, isHtml, dirReset){
  return this.unicodeWrapWithKnownDirBase(dir_0, str, isHtml, dirReset);
}
;
var factory_0;
var Lcom_google_gwt_i18n_shared_BidiFormatter_2_classLit = createForClass('com.google.gwt.i18n.shared', 'BidiFormatter', 791, Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit);
function $clinit_BidiFormatterBase$Factory(){
  $clinit_BidiFormatterBase$Factory = emptyMethod;
  $clinit_Object();
}

function BidiFormatterBase$Factory(){
  $clinit_BidiFormatterBase$Factory();
  Object_0.call(this);
  this.$init_606();
  this.instances = castTo(initUnidimensionalArray(Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit, {4433:1, 4:1, 1:1, 5:1}, 284, 6, 0, 1), 4433);
}

defineClass(792, 1, {1:1});
_.$init_606 = function $init_606(){
}
;
var Lcom_google_gwt_i18n_shared_BidiFormatterBase$Factory_2_classLit = createForClass('com.google.gwt.i18n.shared', 'BidiFormatterBase/Factory', 792, Ljava_lang_Object_2_classLit);
function $clinit_BidiFormatter$Factory(){
  $clinit_BidiFormatter$Factory = emptyMethod;
  $clinit_BidiFormatterBase$Factory();
}

function BidiFormatter$Factory(){
  $clinit_BidiFormatter$Factory();
  BidiFormatterBase$Factory.call(this);
  this.$init_607();
}

defineClass(793, 792, {1:1}, BidiFormatter$Factory);
_.$init_607 = function $init_607(){
}
;
var Lcom_google_gwt_i18n_shared_BidiFormatter$Factory_2_classLit = createForClass('com.google.gwt.i18n.shared', 'BidiFormatter/Factory', 793, Lcom_google_gwt_i18n_shared_BidiFormatterBase$Factory_2_classLit);
function $clinit_BidiFormatterBase$Format(){
  $clinit_BidiFormatterBase$Format = emptyMethod;
  $clinit_Object();
  LRM_STRING = toString_58(8206);
  RLM_STRING = toString_58(8207);
}

var LRM_STRING, RLM_STRING;
function $clinit_BidiUtils_0(){
  $clinit_BidiUtils_0 = emptyMethod;
  $clinit_Object();
  FIRST_STRONG_IS_LTR_RE = compile('^[^' + RTL_CHARS + ']*[' + LTR_CHARS + ']');
  FIRST_STRONG_IS_RTL_RE = compile('^[^' + LTR_CHARS + ']*[' + RTL_CHARS + ']');
  HAS_ANY_LTR_RE = compile('[' + LTR_CHARS + ']');
  HAS_ANY_RTL_RE = compile('[' + RTL_CHARS + ']');
  HAS_NUMERALS_RE = compile('\\d');
  SKIP_HTML_RE = compile_0('<[^>]*>|&[^;]+;', 'g');
  INSTANCE_2 = new BidiUtils;
  IS_REQUIRED_LTR_RE = compile('^http://.*');
  LAST_STRONG_IS_LTR_RE = compile('[' + LTR_CHARS + '][^' + RTL_CHARS + ']*$');
  LAST_STRONG_IS_RTL_RE = compile('[' + RTL_CHARS + '][^' + LTR_CHARS + ']*$');
  WORD_SEPARATOR_RE = compile('\\s+');
}

function BidiUtils(){
  Object_0.call(this);
  this.$init_608();
}

function get_2657(){
  $clinit_BidiUtils_0();
  return INSTANCE_2;
}

defineClass(790, 1, {1:1}, BidiUtils);
_.$init_608 = function $init_608(){
}
;
_.endsWithLtr = function endsWithLtr(str){
  return $test(LAST_STRONG_IS_LTR_RE, str);
}
;
_.endsWithLtr_0 = function endsWithLtr_0(str, isHtml){
  return this.endsWithLtr(this.stripHtmlIfNeeded(str, isHtml));
}
;
_.endsWithRtl = function endsWithRtl(str){
  return $test(LAST_STRONG_IS_RTL_RE, str);
}
;
_.endsWithRtl_0 = function endsWithRtl_0(str, isHtml){
  return this.endsWithRtl(this.stripHtmlIfNeeded(str, isHtml));
}
;
_.estimateDirection = function estimateDirection(str){
  var hasWeaklyLtr, i, rtlCount, token, tokens, total;
  rtlCount = 0;
  total = 0;
  hasWeaklyLtr = false;
  tokens = $split(WORD_SEPARATOR_RE, str);
  for (i = 0; i < $length_0(tokens); i++) {
    token = $get_0(tokens, i);
    if (this.startsWithRtl(token)) {
      rtlCount++;
      total++;
    }
     else if ($test(IS_REQUIRED_LTR_RE, token)) {
      hasWeaklyLtr = true;
    }
     else if (this.hasAnyLtr(token)) {
      total++;
    }
     else if ($test(HAS_NUMERALS_RE, token)) {
      hasWeaklyLtr = true;
    }
  }
  return total == 0?hasWeaklyLtr?($clinit_HasDirection$Direction() , LTR):($clinit_HasDirection$Direction() , DEFAULT):rtlCount / total > 0.4000000059604645?($clinit_HasDirection$Direction() , RTL):($clinit_HasDirection$Direction() , LTR);
}
;
_.hasAnyLtr = function hasAnyLtr(str){
  return $test(HAS_ANY_LTR_RE, str);
}
;
_.startsWithRtl = function startsWithRtl(str){
  return $test(FIRST_STRONG_IS_RTL_RE, str);
}
;
_.stripHtmlIfNeeded = function stripHtmlIfNeeded(str, isStripNeeded){
  return isStripNeeded?$replace(SKIP_HTML_RE, str, ' '):str;
}
;
var FIRST_STRONG_IS_LTR_RE, FIRST_STRONG_IS_RTL_RE, HAS_ANY_LTR_RE, HAS_ANY_RTL_RE, HAS_NUMERALS_RE, INSTANCE_2, IS_REQUIRED_LTR_RE, LAST_STRONG_IS_LTR_RE, LAST_STRONG_IS_RTL_RE, LTR_CHARS = 'A-Za-z\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u0300-\u0590\u0800-\u1FFF\u2C00-\uFB1C\uFDFE-\uFE6F\uFEFD-\uFFFF', RTL_CHARS = '\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC', SKIP_HTML_RE, WORD_SEPARATOR_RE;
var Lcom_google_gwt_i18n_shared_BidiUtils_2_classLit = createForClass('com.google.gwt.i18n.shared', 'BidiUtils', 790, Ljava_lang_Object_2_classLit);
function $clinit_DateTimeFormat$PatternPart(){
  $clinit_DateTimeFormat$PatternPart = emptyMethod;
  $clinit_Object();
}

function DateTimeFormat$PatternPart(txt, cnt){
  $clinit_DateTimeFormat$PatternPart();
  Object_0.call(this);
  this.$init_609();
  this.text_0 = txt;
  this.count = cnt;
  this.abutStart = false;
}

defineClass(230, 1, {230:1, 1:1}, DateTimeFormat$PatternPart);
_.$init_609 = function $init_609(){
}
;
_.abutStart = false;
_.count = 0;
var Lcom_google_gwt_i18n_shared_DateTimeFormat$PatternPart_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DateTimeFormat/PatternPart', 230, Ljava_lang_Object_2_classLit);
function $clinit_DirectionEstimator(){
  $clinit_DirectionEstimator = emptyMethod;
  $clinit_Object();
}

function DirectionEstimator(){
  $clinit_DirectionEstimator();
  Object_0.call(this);
  this.$init_610();
}

defineClass(661, 1, {1:1});
_.$init_610 = function $init_610(){
}
;
_.estimateDirection_0 = function estimateDirection_0(str, isHtml){
  return this.estimateDirection(get_2657().stripHtmlIfNeeded(str, isHtml));
}
;
var Lcom_google_gwt_i18n_shared_DirectionEstimator_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DirectionEstimator', 661, Ljava_lang_Object_2_classLit);
function $clinit_WordCountDirectionEstimator(){
  $clinit_WordCountDirectionEstimator = emptyMethod;
  $clinit_DirectionEstimator();
  instance_9 = new WordCountDirectionEstimator;
}

function WordCountDirectionEstimator(){
  DirectionEstimator.call(this);
  this.$init_611();
}

function get_2658(){
  $clinit_WordCountDirectionEstimator();
  return instance_9;
}

defineClass(703, 661, {1:1}, WordCountDirectionEstimator);
_.$init_611 = function $init_611(){
}
;
_.estimateDirection = function estimateDirection_1(str){
  return get_2657().estimateDirection(str);
}
;
var instance_9;
var Lcom_google_gwt_i18n_shared_WordCountDirectionEstimator_2_classLit = createForClass('com.google.gwt.i18n.shared', 'WordCountDirectionEstimator', 703, Lcom_google_gwt_i18n_shared_DirectionEstimator_2_classLit);
function $clinit_Date(){
  $clinit_Date = emptyMethod;
  $clinit_Object();
  ONE_HOUR_IN_MILLISECONDS = fromInt_0(60 * 60 * 1000);
}

function Date_0(){
  $clinit_Date();
  Object_0.call(this);
  this.$init_612();
  this.jsdate = new $wnd.Date;
}

function Date_1(date){
  $clinit_Date();
  Object_0.call(this);
  this.$init_612();
  this.jsdate = new $wnd.Date(toDouble_0(date));
}

function padTwo(number){
  $clinit_Date();
  if (number < 10) {
    return '0' + number;
  }
   else {
    return valueOf_45(number);
  }
}

defineClass(30, 1, {4:1, 8:1, 1:1, 30:1}, Date_0, Date_1);
_.$init_612 = function $init_612(){
}
;
_.compareTo_0 = function compareTo_5(other){
  return this.compareTo_3(castTo(other, 30));
}
;
_.after = function after(when){
  return gt(this.getTime_1(), when.getTime_1());
}
;
_.compareTo_3 = function compareTo_6(other){
  return compare_8(this.getTime_1(), other.getTime_1());
}
;
_.equals_0 = function equals_13(obj){
  return instanceOf(obj, 30) && eq(this.getTime_1(), castTo(obj, 30).getTime_1());
}
;
_.getDate_1 = function getDate_1(){
  return this.jsdate.getDate();
}
;
_.getDay_0 = function getDay(){
  return this.jsdate.getDay();
}
;
_.getHours_0 = function getHours(){
  return this.jsdate.getHours();
}
;
_.getMinutes_0 = function getMinutes(){
  return this.jsdate.getMinutes();
}
;
_.getMonth_0 = function getMonth(){
  return this.jsdate.getMonth();
}
;
_.getSeconds_0 = function getSeconds(){
  return this.jsdate.getSeconds();
}
;
_.getTime_1 = function getTime(){
  return fromDouble_0(this.jsdate.getTime());
}
;
_.getTimezoneOffset_0 = function getTimezoneOffset(){
  return this.jsdate.getTimezoneOffset();
}
;
_.getYear_0 = function getYear(){
  return this.jsdate.getFullYear() - 1900;
}
;
_.hashCode_1 = function hashCode_12(){
  var time;
  time = this.getTime_1();
  return toInt_0(xor_0(time, shru_0(time, 32)));
}
;
_.setTime_0 = function setTime(time){
  this.jsdate.setTime(toDouble_0(time));
}
;
_.toString_0 = function toString_42(){
  var hourOffset, minuteOffset, offset;
  offset = -this.jsdate.getTimezoneOffset();
  hourOffset = (offset >= 0?'+':'') + narrow_int(offset / 60);
  minuteOffset = padTwo($wnd.Math.abs(offset) % 60);
  return ($clinit_Date$StringData() , DAYS)[this.jsdate.getDay()] + ' ' + ($clinit_Date$StringData() , MONTHS)[this.jsdate.getMonth()] + ' ' + padTwo(this.jsdate.getDate()) + ' ' + padTwo(this.jsdate.getHours()) + ':' + padTwo(this.jsdate.getMinutes()) + ':' + padTwo(this.jsdate.getSeconds()) + ' GMT' + hourOffset + minuteOffset + ' ' + this.jsdate.getFullYear();
}
;
var ONE_HOUR_IN_MILLISECONDS = 0;
var Ljava_util_Date_2_classLit = createForClass('java.util', 'Date', 30, Ljava_lang_Object_2_classLit);
function $clinit_DateRecord(){
  $clinit_DateRecord = emptyMethod;
  $clinit_Date();
  serialVersionUID_4 = neg_0({l:2793890, m:1193475, h:72692});
}

function DateRecord(){
  $clinit_DateRecord();
  Date_0.call(this);
  this.$init_613();
  this.era = -1;
  this.ambiguousYear = false;
  this.year = -2147483648;
  this.month = -1;
  this.dayOfMonth = -1;
  this.ampm = -1;
  this.midnightIs24 = false;
  this.hours = -1;
  this.minutes = -1;
  this.seconds = -1;
  this.milliseconds = -1;
  this.dayOfWeek = -1;
  this.tzOffset = -2147483648;
}

defineClass(826, 30, {4:1, 8:1, 1:1, 30:1}, DateRecord);
_.$init_613 = function $init_613(){
}
;
_.ambiguousYear = false;
_.ampm = 0;
_.dayOfMonth = 0;
_.dayOfWeek = 0;
_.era = 0;
_.hours = 0;
_.midnightIs24 = false;
_.milliseconds = 0;
_.minutes = 0;
_.month = 0;
_.seconds = 0;
_.tzOffset = 0;
_.year = 0;
var serialVersionUID_4 = 0;
var Lcom_google_gwt_i18n_shared_impl_DateRecord_2_classLit = createForClass('com.google.gwt.i18n.shared.impl', 'DateRecord', 826, Ljava_util_Date_2_classLit);
function $clinit_DateRecord_FieldSerializer(){
  $clinit_DateRecord_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_114(streamReader, instance){
  $clinit_DateRecord_FieldSerializer();
  setAmbiguousYear(instance, streamReader.readBoolean());
  setAmpm(instance, streamReader.readInt());
  setDayOfMonth(instance, streamReader.readInt());
  setDayOfWeek(instance, streamReader.readInt());
  setEra(instance, streamReader.readInt());
  setHours(instance, streamReader.readInt());
  setMidnightIs24(instance, streamReader.readBoolean());
  setMilliseconds(instance, streamReader.readInt());
  setMinutes(instance, streamReader.readInt());
  setMonth(instance, streamReader.readInt());
  setSeconds(instance, streamReader.readInt());
  setTzOffset(instance, streamReader.readInt());
  setYear(instance, streamReader.readInt());
  deserialize_139(streamReader, instance);
}

function getAmbiguousYear(instance){
  return instance.ambiguousYear;
}

function getAmpm(instance){
  return instance.ampm;
}

function getDayOfMonth(instance){
  return instance.dayOfMonth;
}

function getDayOfWeek(instance){
  return instance.dayOfWeek;
}

function getEra(instance){
  return instance.era;
}

function getHours_0(instance){
  return instance.hours;
}

function getMidnightIs24(instance){
  return instance.midnightIs24;
}

function getMilliseconds(instance){
  return instance.milliseconds;
}

function getMinutes_0(instance){
  return instance.minutes;
}

function getMonth_0(instance){
  return instance.month;
}

function getSeconds_0(instance){
  return instance.seconds;
}

function getTzOffset(instance){
  return instance.tzOffset;
}

function getYear_0(instance){
  return instance.year;
}

function instantiate_109(streamReader){
  $clinit_DateRecord_FieldSerializer();
  return new DateRecord;
}

function serialize_109(streamWriter, instance){
  $clinit_DateRecord_FieldSerializer();
  streamWriter.writeBoolean(getAmbiguousYear(instance));
  streamWriter.writeInt(getAmpm(instance));
  streamWriter.writeInt(getDayOfMonth(instance));
  streamWriter.writeInt(getDayOfWeek(instance));
  streamWriter.writeInt(getEra(instance));
  streamWriter.writeInt(getHours_0(instance));
  streamWriter.writeBoolean(getMidnightIs24(instance));
  streamWriter.writeInt(getMilliseconds(instance));
  streamWriter.writeInt(getMinutes_0(instance));
  streamWriter.writeInt(getMonth_0(instance));
  streamWriter.writeInt(getSeconds_0(instance));
  streamWriter.writeInt(getTzOffset(instance));
  streamWriter.writeInt(getYear_0(instance));
  serialize_134(streamWriter, instance);
}

function setAmbiguousYear(instance, value_0){
  instance.ambiguousYear = value_0;
}

function setAmpm(instance, value_0){
  instance.ampm = value_0;
}

function setDayOfMonth(instance, value_0){
  instance.dayOfMonth = value_0;
}

function setDayOfWeek(instance, value_0){
  instance.dayOfWeek = value_0;
}

function setEra(instance, value_0){
  instance.era = value_0;
}

function setHours(instance, value_0){
  instance.hours = value_0;
}

function setMidnightIs24(instance, value_0){
  instance.midnightIs24 = value_0;
}

function setMilliseconds(instance, value_0){
  instance.milliseconds = value_0;
}

function setMinutes(instance, value_0){
  instance.minutes = value_0;
}

function setMonth(instance, value_0){
  instance.month = value_0;
}

function setSeconds(instance, value_0){
  instance.seconds = value_0;
}

function setTzOffset(instance, value_0){
  instance.tzOffset = value_0;
}

function setYear(instance, value_0){
  instance.year = value_0;
}

function $clinit_Array(){
  $clinit_Array = emptyMethod;
  $clinit_Object();
}

function asArray(array){
  return array;
}

function canSet(array, value_0){
  switch (getElementTypeCategory(array)) {
    case 6:
      return instanceOfString(value_0);
    case 7:
      return instanceOfDouble(value_0);
    case 8:
      return instanceOfBoolean(value_0);
    case 3:
      return instanceOfArray(value_0);
    case 11:
      return instanceOfFunction(value_0);
    case 12:
      return instanceOfJsObject(value_0);
    case 0:
      return canCast(value_0, getElementTypeId(array));
    case 2:
      return isJavaScriptObject(value_0);
    case 1:
      return isJavaScriptObject(value_0) || canCast(value_0, getElementTypeId(array));
    default:return true;
  }
}

function getClassLiteralForArray(clazz, dimensions){
  $clinit_Array();
  return getClassLiteralForArrayImpl(clazz, dimensions);
}

function getClassLiteralForArrayImpl(clazz, dimensions){
  return getClassLiteralForArray_0(clazz, dimensions);
}

function getElementTypeCategory(array){
  return array.__elementTypeCategory$ == null?10:array.__elementTypeCategory$;
}

function getElementTypeId(array){
  return array.__elementTypeId$;
}

function initMultidimensionalArray(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, count){
  $clinit_Array();
  return initMultidimensionalArray_0(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, 0, count);
}

function initMultidimensionalArray_0(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, index_0, count){
  var elementTypeCategory, i, isLastDimension, length_0, result;
  length_0 = dimExprs[index_0];
  isLastDimension = index_0 == count - 1;
  elementTypeCategory = isLastDimension?leafElementTypeCategory:0;
  result = initializeArrayElementsWithDefaults(elementTypeCategory, length_0);
  if (leafElementTypeCategory != 10) {
    stampJavaTypeInfo(getClassLiteralForArray(leafClassLiteral, count - index_0), castableTypeMapExprs[index_0], elementTypeIds[index_0], elementTypeCategory, result);
  }
  if (!isLastDimension) {
    ++index_0;
    for (i = 0; i < length_0; ++i) {
      set_7(result, i, initMultidimensionalArray_0(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, index_0, count));
    }
  }
  return result;
}

function initUnidimensionalArray(leafClassLiteral, castableTypeMap, elementTypeId, length_0, elementTypeCategory, dimensions){
  $clinit_Array();
  var result;
  result = initializeArrayElementsWithDefaults(elementTypeCategory, length_0);
  if (elementTypeCategory != 10) {
    stampJavaTypeInfo(getClassLiteralForArray(leafClassLiteral, dimensions), castableTypeMap, elementTypeId, elementTypeCategory, result);
  }
  return result;
}

function initializeArrayElementsWithDefaults(elementTypeCategory, length_0){
  var array = new Array(length_0);
  var initValue;
  switch (elementTypeCategory) {
    case 14:
    case 15:
      initValue = 0;
      break;
    case 16:
      initValue = false;
      break;
    default:return array;
  }
  for (var i = 0; i < length_0; ++i) {
    array[i] = initValue;
  }
  return array;
}

function isJavaArray(src_0){
  $clinit_Array();
  return isArray(src_0) && hasTypeMarker(src_0);
}

function isPrimitiveArray(array){
  $clinit_Array();
  var elementTypeCategory;
  elementTypeCategory = getElementTypeCategory(array);
  return elementTypeCategory >= 14 && elementTypeCategory <= 16;
}

function set_7(array, index_0, value_0){
  return array[index_0] = value_0;
}

function setCheck(array, index_0, value_0){
  $clinit_Array();
  checkArrayType(jsEquals(value_0, null) || canSet(array, value_0));
  return set_7(array, index_0, value_0);
}

function setClass(o, clazz){
  o.___clazz = clazz;
}

function setElementTypeCategory(array, elementTypeCategory){
  array.__elementTypeCategory$ = elementTypeCategory;
}

function setElementTypeId(array, elementTypeId){
  array.__elementTypeId$ = elementTypeId;
}

function stampJavaTypeInfo(arrayClass, castableTypeMap, elementTypeId, elementTypeCategory, array){
  $clinit_Array();
  setClass(array, arrayClass);
  setCastableTypeMap(array, castableTypeMap);
  setTypeMarker(array);
  setElementTypeId(array, elementTypeId);
  setElementTypeCategory(array, elementTypeCategory);
  return array;
}

function stampJavaTypeInfo_0(array, referenceType){
  $clinit_Array();
  if (getElementTypeCategory(referenceType) != 10) {
    stampJavaTypeInfo(getClass__Ljava_lang_Class___devirtual$(referenceType), getCastableTypeMap(referenceType), getElementTypeId(referenceType), getElementTypeCategory(referenceType), array);
  }
  return asArray(array);
}

function $clinit_BigLongLibBase(){
  $clinit_BigLongLibBase = emptyMethod;
  $clinit_Object();
  BITS01 = 2 * 22;
  BITS2 = 64 - 44;
  MASK = (1 << 22) - 1;
  MASK_2 = (1 << 20) - 1;
  SIGN_BIT = 20 - 1;
  SIGN_BIT_VALUE = 1 << 19;
  TWO_PWR_31_DBL = 65536 * 32768;
  TWO_PWR_32_DBL = 65536 * 65536;
  TWO_PWR_44_DBL = 4194304 * 4194304;
  TWO_PWR_63_DBL = 4294967296 * 2147483648;
}

function create_2(){
  if ($clinit_LongLib() , RUN_IN_JVM) {
    return new BigLongLibBase$BigLong;
  }
  return create0(0, 0, 0);
}

function create_3(value_0){
  $clinit_BigLongLibBase();
  var a, a0, a1, a2;
  a0 = value_0 & 4194303;
  a1 = value_0 >> 22 & 4194303;
  a2 = value_0 < 0?1048575:0;
  if ($clinit_LongLib() , RUN_IN_JVM) {
    a = new BigLongLibBase$BigLong;
    a.l_0 = a0;
    a.m_0 = a1;
    a.h_0 = a2;
    return a;
  }
  return create0(a0, a1, a2);
}

function create_4(a0, a1, a2){
  $clinit_BigLongLibBase();
  var a;
  if ($clinit_LongLib() , RUN_IN_JVM) {
    a = new BigLongLibBase$BigLong;
    a.l_0 = a0;
    a.m_0 = a1;
    a.h_0 = a2;
    return a;
  }
  return create0(a0, a1, a2);
}

function create_5(a){
  $clinit_BigLongLibBase();
  var b;
  if ($clinit_LongLib() , RUN_IN_JVM) {
    b = new BigLongLibBase$BigLong;
    b.l_0 = getL(a);
    b.m_0 = getM(a);
    b.h_0 = getH(a);
    return b;
  }
  return create0(getL(a), getM(a), getH(a));
}

function create0(l, m, h){
  return {l:l, m:m, h:h};
}

function divMod(a, b, computeRemainder){
  $clinit_BigLongLibBase();
  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;
  if (isZero(b)) {
    throw toJs(new ArithmeticException('divide by zero'));
  }
  if (isZero(a)) {
    if (computeRemainder) {
      remainder_0 = create_2();
    }
    return create_2();
  }
  if (isMinValue(b)) {
    return divModByMinValue(a, computeRemainder);
  }
  negative = false;
  if (isNegative_1(b)) {
    b = neg(b);
    negative = !negative;
  }
  bpower = powerOfTwo(b);
  aIsNegative = false;
  aIsMinValue = false;
  aIsCopy = false;
  if (isMinValue(a)) {
    aIsMinValue = true;
    aIsNegative = true;
    if (bpower == -1) {
      a = create_5(($clinit_BigLongLib$Const() , MAX_VALUE));
      aIsCopy = true;
      negative = !negative;
    }
     else {
      c = shr(a, bpower);
      if (negative) {
        negate(c);
      }
      if (computeRemainder) {
        remainder_0 = create_2();
      }
      return c;
    }
  }
   else if (isNegative_1(a)) {
    aIsNegative = true;
    a = neg(a);
    aIsCopy = true;
    negative = !negative;
  }
  if (bpower != -1) {
    return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);
  }
  if (compare_0(a, b) < 0) {
    if (computeRemainder) {
      if (aIsNegative) {
        remainder_0 = neg(a);
      }
       else {
        remainder_0 = create_5(a);
      }
    }
    return create_2();
  }
  return divModHelper(aIsCopy?a:create_5(a), b, negative, aIsNegative, aIsMinValue, computeRemainder);
}

function divModByMinValue(a, computeRemainder){
  if (isMinValue(a)) {
    if (computeRemainder) {
      remainder_0 = create_2();
    }
    return create_5(($clinit_BigLongLib$Const() , ONE));
  }
  if (computeRemainder) {
    remainder_0 = create_5(a);
  }
  return create_2();
}

function divModByShift(a, bpower, negative, aIsNegative, computeRemainder){
  var c;
  c = shr(a, bpower);
  if (negative) {
    negate(c);
  }
  if (computeRemainder) {
    a = maskRight(a, bpower);
    if (aIsNegative) {
      remainder_0 = neg(a);
    }
     else {
      remainder_0 = create_5(a);
    }
  }
  return c;
}

function divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder){
  var bshift, gte, quotient, shift_0;
  shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);
  bshift = shl(b, shift_0);
  quotient = create_2();
  while (shift_0 >= 0) {
    gte = trialSubtract(a, bshift);
    if (gte) {
      setBit(quotient, shift_0);
      if (isZero(a)) {
        break;
      }
    }
    toShru1(bshift);
    shift_0--;
  }
  if (negative) {
    negate(quotient);
  }
  if (computeRemainder) {
    if (aIsNegative) {
      remainder_0 = neg(a);
      if (aIsMinValue) {
        remainder_0 = sub_0(remainder_0, ($clinit_BigLongLib$Const() , ONE));
      }
    }
     else {
      remainder_0 = create_5(a);
    }
  }
  return quotient;
}

function getH(a){
  $clinit_BigLongLibBase();
  if ($clinit_LongLib() , RUN_IN_JVM) {
    return a.h_0;
  }
  return getHNative(a);
}

function getHNative(a){
  return a.h;
}

function getL(a){
  $clinit_BigLongLibBase();
  if ($clinit_LongLib() , RUN_IN_JVM) {
    return a.l_0;
  }
  return getLNative(a);
}

function getLNative(a){
  return a.l;
}

function getM(a){
  $clinit_BigLongLibBase();
  if ($clinit_LongLib() , RUN_IN_JVM) {
    return a.m_0;
  }
  return getMNative(a);
}

function getMNative(a){
  return a.m;
}

function isMinValue(a){
  $clinit_BigLongLibBase();
  return getH(a) == 524288 && getM(a) == 0 && getL(a) == 0;
}

function isNegative_1(a){
  $clinit_BigLongLibBase();
  return sign_0(a) != 0;
}

function isZero(a){
  $clinit_BigLongLibBase();
  return getL(a) == 0 && getM(a) == 0 && getH(a) == 0;
}

function maskRight(a, bits){
  var b0, b1, b2;
  if (bits <= 22) {
    b0 = getL(a) & (1 << bits) - 1;
    b1 = b2 = 0;
  }
   else if (bits <= 44) {
    b0 = getL(a);
    b1 = getM(a) & (1 << bits - 22) - 1;
    b2 = 0;
  }
   else {
    b0 = getL(a);
    b1 = getM(a);
    b2 = getH(a) & (1 << bits - 44) - 1;
  }
  return create_4(b0, b1, b2);
}

function negate(a){
  $clinit_BigLongLibBase();
  var neg0, neg1, neg2;
  neg0 = ~getL(a) + 1 & 4194303;
  neg1 = ~getM(a) + (neg0 == 0?1:0) & 4194303;
  neg2 = ~getH(a) + (neg0 == 0 && neg1 == 0?1:0) & 1048575;
  if ($clinit_LongLib() , RUN_IN_JVM) {
    a.l_0 = neg0;
    a.m_0 = neg1;
    a.h_0 = neg2;
  }
   else {
    setL(a, neg0);
    setM(a, neg1);
    setH(a, neg2);
  }
}

function numberOfLeadingZeros(a){
  var b1, b2;
  b2 = numberOfLeadingZeros_0(getH(a));
  if (b2 == 32) {
    b1 = numberOfLeadingZeros_0(getM(a));
    if (b1 == 32) {
      return numberOfLeadingZeros_0(getL(a)) + 32;
    }
     else {
      return b1 + 20 - (32 - 22);
    }
  }
   else {
    return b2 - (32 - 20);
  }
}

function powerOfTwo(a){
  var h, l, m;
  l = getL(a);
  if ((l & l - 1) != 0) {
    return -1;
  }
  m = getM(a);
  if ((m & m - 1) != 0) {
    return -1;
  }
  h = getH(a);
  if ((h & h - 1) != 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l == 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l != 0) {
    return numberOfTrailingZeros(l);
  }
  if (h == 0 && m != 0 && l == 0) {
    return numberOfTrailingZeros(m) + 22;
  }
  if (h != 0 && m == 0 && l == 0) {
    return numberOfTrailingZeros(h) + 44;
  }
  return -1;
}

function setBit(a, bit){
  if ($clinit_LongLib() , RUN_IN_JVM) {
    if (bit < 22) {
      a.l_0 |= 1 << bit;
    }
     else if (bit < 44) {
      a.m_0 |= 1 << bit - 22;
    }
     else {
      a.h_0 |= 1 << bit - 44;
    }
  }
   else {
    if (bit < 22) {
      setBitL(a, bit);
    }
     else if (bit < 44) {
      setBitM(a, bit - 22);
    }
     else {
      setBitH(a, bit - 44);
    }
  }
}

function setBitH(a, bit){
  a.h |= 1 << bit;
}

function setBitL(a, bit){
  a.l |= 1 << bit;
}

function setBitM(a, bit){
  a.m |= 1 << bit;
}

function setH(a, x_0){
  a.h = x_0;
}

function setL(a, x_0){
  a.l = x_0;
}

function setM(a, x_0){
  a.m = x_0;
}

function sign_0(a){
  $clinit_BigLongLibBase();
  return getH(a) >> 20 - 1;
}

function toDoubleHelper(a){
  $clinit_BigLongLibBase();
  return getL(a) + getM(a) * 4194304 + getH(a) * 17592186044416;
}

function toShru1(a){
  var a0, a1, a2;
  a1 = getM(a);
  a2 = getH(a);
  a0 = getL(a);
  if ($clinit_LongLib() , RUN_IN_JVM) {
    a.h_0 = a2 >>> 1;
    a.m_0 = a1 >>> 1 | (a2 & 1) << 22 - 1;
    a.l_0 = a0 >>> 1 | (a1 & 1) << 22 - 1;
  }
   else {
    setH(a, a2 >>> 1);
    setM(a, a1 >>> 1 | (a2 & 1) << 22 - 1);
    setL(a, a0 >>> 1 | (a1 & 1) << 22 - 1);
  }
}

function trialSubtract(a, b){
  var sum0, sum1, sum2;
  sum2 = getH(a) - getH(b);
  if (sum2 < 0) {
    return false;
  }
  sum0 = getL(a) - getL(b);
  sum1 = getM(a) - getM(b) + (sum0 >> 22);
  sum2 += sum1 >> 22;
  if (sum2 < 0) {
    return false;
  }
  if ($clinit_LongLib() , RUN_IN_JVM) {
    a.l_0 = sum0 & 4194303;
    a.m_0 = sum1 & 4194303;
    a.h_0 = sum2 & 1048575;
  }
   else {
    setL(a, sum0 & 4194303);
    setM(a, sum1 & 4194303);
    setH(a, sum2 & 1048575);
  }
  return true;
}

var BITS01 = 0, BITS2 = 0, MASK = 0, MASK_2 = 0, SIGN_BIT = 0, SIGN_BIT_VALUE = 0, TWO_PWR_31_DBL = 0, TWO_PWR_32_DBL = 0, TWO_PWR_44_DBL = 0, TWO_PWR_63_DBL = 0, remainder_0;
function $clinit_BigLongLib(){
  $clinit_BigLongLib = emptyMethod;
  $clinit_BigLongLibBase();
}

function add_18(a, b){
  $clinit_BigLongLib();
  var sum0, sum1, sum2;
  sum0 = getL(a) + getL(b);
  sum1 = getM(a) + getM(b) + (sum0 >> 22);
  sum2 = getH(a) + getH(b) + (sum1 >> 22);
  return create_4(sum0 & 4194303, sum1 & 4194303, sum2 & 1048575);
}

function and(a, b){
  $clinit_BigLongLib();
  return create_4(getL(a) & getL(b), getM(a) & getM(b), getH(a) & getH(b));
}

function compare_0(a, b){
  $clinit_BigLongLib();
  var a0, a1, a2, b0, b1, b2, signA, signB;
  signA = sign_0(a);
  signB = sign_0(b);
  if (signA != signB) {
    return signB - signA;
  }
  a2 = getH(a);
  b2 = getH(b);
  if (a2 != b2) {
    return a2 - b2;
  }
  a1 = getM(a);
  b1 = getM(b);
  if (a1 != b1) {
    return a1 - b1;
  }
  a0 = getL(a);
  b0 = getL(b);
  return a0 - b0;
}

function div_0(a, b){
  $clinit_BigLongLib();
  return divMod(a, b, false);
}

function fromDouble(value_0){
  $clinit_BigLongLib();
  var a0, a1, a2, negative, result;
  if (isNaN(value_0)) {
    return $clinit_BigLongLib$Const() , ZERO;
  }
  if (value_0 < -9223372036854775807) {
    return $clinit_BigLongLib$Const() , MIN_VALUE;
  }
  if (value_0 >= 9223372036854775807) {
    return $clinit_BigLongLib$Const() , MAX_VALUE;
  }
  negative = false;
  if (value_0 < 0) {
    negative = true;
    value_0 = -value_0;
  }
  a2 = 0;
  if (value_0 >= 17592186044416) {
    a2 = round_int(value_0 / 17592186044416);
    value_0 -= a2 * 17592186044416;
  }
  a1 = 0;
  if (value_0 >= 4194304) {
    a1 = round_int(value_0 / 4194304);
    value_0 -= a1 * 4194304;
  }
  a0 = round_int(value_0);
  result = create_4(a0, a1, a2);
  if (negative) {
    negate(result);
  }
  return result;
}

function fromInt(value_0){
  $clinit_BigLongLib();
  return create_3(value_0);
}

function mod(a, b){
  $clinit_BigLongLib();
  divMod(a, b, true);
  return $clinit_BigLongLibBase() , remainder_0;
}

function mul(a, b){
  $clinit_BigLongLib();
  var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;
  a0 = getL(a) & 8191;
  a1 = getL(a) >> 13 | (getM(a) & 15) << 9;
  a2 = getM(a) >> 4 & 8191;
  a3 = getM(a) >> 17 | (getH(a) & 255) << 5;
  a4 = (getH(a) & 1048320) >> 8;
  b0 = getL(b) & 8191;
  b1 = getL(b) >> 13 | (getM(b) & 15) << 9;
  b2 = getM(b) >> 4 & 8191;
  b3 = getM(b) >> 17 | (getH(b) & 255) << 5;
  b4 = (getH(b) & 1048320) >> 8;
  p0 = a0 * b0;
  p1 = a1 * b0;
  p2 = a2 * b0;
  p3 = a3 * b0;
  p4 = a4 * b0;
  if (b1 != 0) {
    p1 += a0 * b1;
    p2 += a1 * b1;
    p3 += a2 * b1;
    p4 += a3 * b1;
  }
  if (b2 != 0) {
    p2 += a0 * b2;
    p3 += a1 * b2;
    p4 += a2 * b2;
  }
  if (b3 != 0) {
    p3 += a0 * b3;
    p4 += a1 * b3;
  }
  if (b4 != 0) {
    p4 += a0 * b4;
  }
  c00 = p0 & 4194303;
  c01 = (p1 & 511) << 13;
  c0 = c00 + c01;
  c10 = p0 >> 22;
  c11 = p1 >> 9;
  c12 = (p2 & 262143) << 4;
  c13 = (p3 & 31) << 17;
  c1 = c10 + c11 + c12 + c13;
  c22 = p2 >> 18;
  c23 = p3 >> 5;
  c24 = (p4 & 4095) << 8;
  c2 = c22 + c23 + c24;
  c1 += c0 >> 22;
  c0 &= 4194303;
  c2 += c1 >> 22;
  c1 &= 4194303;
  c2 &= 1048575;
  return create_4(c0, c1, c2);
}

function neg(a){
  $clinit_BigLongLib();
  var neg0, neg1, neg2;
  neg0 = ~getL(a) + 1 & 4194303;
  neg1 = ~getM(a) + (neg0 == 0?1:0) & 4194303;
  neg2 = ~getH(a) + (neg0 == 0 && neg1 == 0?1:0) & 1048575;
  return create_4(neg0, neg1, neg2);
}

function not(a){
  $clinit_BigLongLib();
  return create_4(~getL(a) & 4194303, ~getM(a) & 4194303, ~getH(a) & 1048575);
}

function or(a, b){
  $clinit_BigLongLib();
  return create_4(getL(a) | getL(b), getM(a) | getM(b), getH(a) | getH(b));
}

function shl(a, n){
  $clinit_BigLongLib();
  var res0, res1, res2;
  n &= 63;
  if (n < 22) {
    res0 = getL(a) << n;
    res1 = getM(a) << n | getL(a) >> 22 - n;
    res2 = getH(a) << n | getM(a) >> 22 - n;
  }
   else if (n < 44) {
    res0 = 0;
    res1 = getL(a) << n - 22;
    res2 = getM(a) << n - 22 | getL(a) >> 44 - n;
  }
   else {
    res0 = 0;
    res1 = 0;
    res2 = getL(a) << n - 44;
  }
  return create_4(res0 & 4194303, res1 & 4194303, res2 & 1048575);
}

function shr(a, n){
  $clinit_BigLongLib();
  var a2, negative, res0, res1, res2;
  n &= 63;
  a2 = getH(a);
  negative = (a2 & 524288) != 0;
  if (negative) {
    a2 |= ~1048575;
  }
  if (n < 22) {
    res2 = a2 >> n;
    res1 = getM(a) >> n | a2 << 22 - n;
    res0 = getL(a) >> n | getM(a) << 22 - n;
  }
   else if (n < 44) {
    res2 = negative?1048575:0;
    res1 = a2 >> n - 22;
    res0 = getM(a) >> n - 22 | a2 << 44 - n;
  }
   else {
    res2 = negative?1048575:0;
    res1 = negative?4194303:0;
    res0 = a2 >> n - 44;
  }
  return create_4(res0 & 4194303, res1 & 4194303, res2 & 1048575);
}

function shru(a, n){
  $clinit_BigLongLib();
  var a2, res0, res1, res2;
  n &= 63;
  a2 = getH(a) & 1048575;
  if (n < 22) {
    res2 = a2 >>> n;
    res1 = getM(a) >> n | a2 << 22 - n;
    res0 = getL(a) >> n | getM(a) << 22 - n;
  }
   else if (n < 44) {
    res2 = 0;
    res1 = a2 >>> n - 22;
    res0 = getM(a) >> n - 22 | getH(a) << 44 - n;
  }
   else {
    res2 = 0;
    res1 = 0;
    res0 = a2 >>> n - 44;
  }
  return create_4(res0 & 4194303, res1 & 4194303, res2 & 1048575);
}

function sub_0(a, b){
  $clinit_BigLongLib();
  var sum0, sum1, sum2;
  sum0 = getL(a) - getL(b);
  sum1 = getM(a) - getM(b) + (sum0 >> 22);
  sum2 = getH(a) - getH(b) + (sum1 >> 22);
  return create_4(sum0 & 4194303, sum1 & 4194303, sum2 & 1048575);
}

function toDouble(a){
  $clinit_BigLongLib();
  if (compare_0(a, ($clinit_BigLongLib$Const() , ZERO)) < 0) {
    return -toDoubleHelper(neg(a));
  }
  return toDoubleHelper(a);
}

function toInt(a){
  $clinit_BigLongLib();
  return getL(a) | getM(a) << 22;
}

function toString_43(a){
  $clinit_BigLongLib();
  var digits, rem, res, tenPower, tenPowerLong, tenPowerZeroes, zeroesNeeded;
  if (isZero(a)) {
    return '0';
  }
  if (isMinValue(a)) {
    return '-9223372036854775808';
  }
  if (isNegative_1(a)) {
    return '-' + toString_43(neg(a));
  }
  rem = a;
  res = '';
  while (!isZero(rem)) {
    tenPowerZeroes = 9;
    tenPower = 1000000000;
    tenPowerLong = fromInt(1000000000);
    rem = divMod(rem, tenPowerLong, true);
    digits = '' + toInt(($clinit_BigLongLibBase() , remainder_0));
    if (!isZero(rem)) {
      zeroesNeeded = 9 - length__I__devirtual$(digits);
      for (; zeroesNeeded > 0; zeroesNeeded--) {
        digits = '0' + digits;
      }
    }
    res = digits + ('' + res);
  }
  return res;
}

function xor(a, b){
  $clinit_BigLongLib();
  return create_4(getL(a) ^ getL(b), getM(a) ^ getM(b), getH(a) ^ getH(b));
}

function $clinit_BigLongLib$Const(){
  $clinit_BigLongLib$Const = emptyMethod;
  $clinit_Object();
  MAX_VALUE = create_4(4194303, 4194303, 1048575 >> 1);
  MIN_VALUE = create_4(0, 0, 524288);
  ONE = fromInt(1);
  TWO = fromInt(2);
  ZERO = fromInt(0);
}

var MAX_VALUE, MIN_VALUE, ONE, TWO, ZERO;
function $clinit_BigLongLibBase$BigLong(){
  $clinit_BigLongLibBase$BigLong = emptyMethod;
  $clinit_Object();
}

function BigLongLibBase$BigLong(){
  $clinit_BigLongLibBase$BigLong();
  Object_0.call(this);
  this.$init_614();
}

defineClass(262, 1, {1:1}, BigLongLibBase$BigLong);
_.$init_614 = function $init_614(){
}
;
_.h_0 = 0;
_.l_0 = 0;
_.m_0 = 0;
var Lcom_google_gwt_lang_BigLongLibBase$BigLong_2_classLit = createForClass('com.google.gwt.lang', 'BigLongLibBase/BigLong', 262, Ljava_lang_Object_2_classLit);
function $clinit_Exceptions(){
  $clinit_Exceptions = emptyMethod;
  $clinit_Object();
}

function getJavaException(e){
  return e && e.__java$exception;
}

function makeAssertionError(){
  $clinit_Exceptions();
  return new AssertionError;
}

function makeAssertionError_Object(message){
  $clinit_Exceptions();
  return new AssertionError_0(message);
}

function toJava(e){
  $clinit_Exceptions();
  var javaException;
  if (instanceOf(e, 24)) {
    return e;
  }
  javaException = getJavaException(e);
  if (isNull(javaException)) {
    javaException = new JavaScriptException(e);
    captureStackTrace_0(javaException);
  }
  return javaException;
}

function toJs(t){
  $clinit_Exceptions();
  return t.backingJsObject_0;
}

function $clinit_LongLib(){
  $clinit_LongLib = emptyMethod;
  $clinit_Object();
}

function add_19(a, b){
  $clinit_LongLib();
  var result;
  if (isSmallLong(a) && isSmallLong(b)) {
    result = asDouble(a) + asDouble(b);
    if (isSafeIntegerRange(result)) {
      return createSmallLongEmul(result);
    }
  }
  return createLongEmul(add_18(toBigLong(a), toBigLong(b)));
}

function and_0(a, b){
  $clinit_LongLib();
  return createLongEmul(and(toBigLong(a), toBigLong(b)));
}

function asBigLong(value_0){
  $clinit_LongLib();
  if (RUN_IN_JVM) {
    return value_0.big_0;
  }
  return asBigLong0(value_0);
}

function asBigLong0(value_0){
  return value_0;
}

function asDouble(value_0){
  return asDouble_0(asSmallLong(value_0));
}

function asDouble_0(value_0){
  if (RUN_IN_JVM) {
    return isNull(value_0)?NaN:value_0.d;
  }
  return asDouble0(value_0);
}

function asDouble0(value_0){
  return value_0;
}

function asSmallLong(value_0){
  if (RUN_IN_JVM) {
    return value_0.small_0;
  }
  return asSmallLong0(value_0);
}

function asSmallLong0(value_0){
  return value_0;
}

function coerceToInt(value_0){
  if (RUN_IN_JVM) {
    return toInt_0(fromDouble_0(value_0));
  }
  return coerceToInt0(value_0);
}

function coerceToInt0(value_0){
  return value_0 | 0;
}

function compare_1(a, b){
  $clinit_LongLib();
  var result;
  if (isSmallLong(a) && isSmallLong(b)) {
    result = asDouble(a) - asDouble(b);
    if (!isNaN(result)) {
      return result;
    }
  }
  return compare_0(toBigLong(a), toBigLong(b));
}

function createBigLongEmul(big_0){
  var emul;
  if (RUN_IN_JVM) {
    emul = new LongLib$LongEmul;
    emul.big_0 = big_0;
    return emul;
  }
  return createBigLongEmul0(big_0);
}

function createBigLongEmul0(value_0){
  return value_0;
}

function createLongEmul(big_0){
  var a2;
  a2 = getH(big_0);
  if (a2 == 0) {
    return createSmallLongEmul(getL(big_0) + getM(big_0) * 4194304);
  }
  if (a2 == 1048575) {
    return createSmallLongEmul(getL(big_0) + getM(big_0) * 4194304 - 17592186044416);
  }
  return createBigLongEmul(big_0);
}

function createSmallLongEmul(value_0){
  var emul, small_0;
  if (RUN_IN_JVM) {
    small_0 = new LongLib$SmallLong;
    small_0.d = value_0;
    emul = new LongLib$LongEmul;
    emul.small_0 = small_0;
    return emul;
  }
  return createSmallLongEmul0(value_0);
}

function createSmallLongEmul0(value_0){
  return value_0;
}

function div_1(a, b){
  $clinit_LongLib();
  var result;
  if (isSmallLong(a) && isSmallLong(b)) {
    result = asDouble(a) / asDouble(b);
    if (isSafeIntegerRange(result)) {
      return createSmallLongEmul(truncate(result));
    }
  }
  return createLongEmul(div_0(toBigLong(a), toBigLong(b)));
}

function eq(a, b){
  $clinit_LongLib();
  return compare_1(a, b) == 0;
}

function fromDouble_0(value_0){
  $clinit_LongLib();
  if (isSafeIntegerRange(value_0)) {
    return createSmallLongEmul(truncate(value_0));
  }
  return createLongEmul(fromDouble(value_0));
}

function fromInt_0(value_0){
  $clinit_LongLib();
  return createSmallLongEmul(value_0);
}

function gt(a, b){
  $clinit_LongLib();
  return compare_1(a, b) > 0;
}

function gte_0(a, b){
  $clinit_LongLib();
  return compare_1(a, b) >= 0;
}

function isSafeIntegerRange(value_0){
  return -17592186044416 < value_0 && value_0 < 17592186044416;
}

function isSmallLong(value_0){
  if (RUN_IN_JVM) {
    return isNotNull(value_0.small_0);
  }
  return isSmallLong0(value_0);
}

function isSmallLong0(value_0){
  return typeof value_0 === 'number';
}

function lt(a, b){
  $clinit_LongLib();
  return compare_1(a, b) < 0;
}

function lte(a, b){
  $clinit_LongLib();
  return compare_1(a, b) <= 0;
}

function mod_0(a, b){
  $clinit_LongLib();
  var result;
  if (isSmallLong(a) && isSmallLong(b)) {
    result = asDouble(a) % asDouble(b);
    if (isSafeIntegerRange(result)) {
      return createSmallLongEmul(result);
    }
  }
  return createLongEmul(mod(toBigLong(a), toBigLong(b)));
}

function mul_0(a, b){
  $clinit_LongLib();
  var result;
  if (isSmallLong(a) && isSmallLong(b)) {
    result = asDouble(a) * asDouble(b);
    if (isSafeIntegerRange(result)) {
      return createSmallLongEmul(result);
    }
  }
  return createLongEmul(mul(toBigLong(a), toBigLong(b)));
}

function neg_0(a){
  $clinit_LongLib();
  var result;
  if (isSmallLong(a)) {
    result = 0 - asDouble(a);
    if (!isNaN(result)) {
      return createSmallLongEmul(result);
    }
  }
  return createLongEmul(neg(asBigLong(a)));
}

function neq(a, b){
  $clinit_LongLib();
  return compare_1(a, b) != 0;
}

function not_0(a){
  $clinit_LongLib();
  return createLongEmul(not(toBigLong(a)));
}

function or_0(a, b){
  $clinit_LongLib();
  return createLongEmul(or(toBigLong(a), toBigLong(b)));
}

function shl_0(a, n){
  $clinit_LongLib();
  return createLongEmul(shl(toBigLong(a), n));
}

function shr_0(a, n){
  $clinit_LongLib();
  return createLongEmul(shr(toBigLong(a), n));
}

function shru_0(a, n){
  $clinit_LongLib();
  return createLongEmul(shru(toBigLong(a), n));
}

function sub_1(a, b){
  $clinit_LongLib();
  var result;
  if (isSmallLong(a) && isSmallLong(b)) {
    result = asDouble(a) - asDouble(b);
    if (isSafeIntegerRange(result)) {
      return createSmallLongEmul(result);
    }
  }
  return createLongEmul(sub_0(toBigLong(a), toBigLong(b)));
}

function toBigLong(value_0){
  return isSmallLong(value_0)?toBigLong_0(asSmallLong(value_0)):asBigLong(value_0);
}

function toBigLong_0(longValue){
  var a0, a1, a3, value_0;
  value_0 = asDouble_0(longValue);
  a3 = 0;
  if (value_0 < 0) {
    value_0 += 17592186044416;
    a3 = 1048575;
  }
  a1 = round_int(value_0 / 4194304);
  a0 = round_int(value_0 - a1 * 4194304);
  return create_4(a0, a1, a3);
}

function toDouble_0(a){
  $clinit_LongLib();
  var d;
  if (isSmallLong(a)) {
    d = asDouble(a);
    return d == -0?0:d;
  }
  return toDouble(asBigLong(a));
}

function toInt_0(a){
  $clinit_LongLib();
  if (isSmallLong(a)) {
    return coerceToInt(asDouble(a));
  }
  return toInt(asBigLong(a));
}

function toString_44(value_0){
  if (RUN_IN_JVM) {
    return valueOf_46(fromDouble_0(value_0));
  }
  return valueOf_43(value_0);
}

function toString_45(a){
  $clinit_LongLib();
  if (isSmallLong(a)) {
    return toString_44(asDouble(a));
  }
  return toString_43(asBigLong(a));
}

function truncate(value_0){
  return value_0 < 0?$wnd.Math.ceil(value_0):$wnd.Math.floor(value_0);
}

function xor_0(a, b){
  $clinit_LongLib();
  return createLongEmul(xor(toBigLong(a), toBigLong(b)));
}

var RUN_IN_JVM = false;
function $clinit_LongLib$LongEmul(){
  $clinit_LongLib$LongEmul = emptyMethod;
  $clinit_Object();
}

function LongLib$LongEmul(){
  $clinit_LongLib$LongEmul();
  Object_0.call(this);
  this.$init_615();
}

defineClass(370, 1, {1:1}, LongLib$LongEmul);
_.$init_615 = function $init_615(){
}
;
var Lcom_google_gwt_lang_LongLib$LongEmul_2_classLit = createForClass('com.google.gwt.lang', 'LongLib/LongEmul', 370, Ljava_lang_Object_2_classLit);
function $clinit_LongLib$SmallLong(){
  $clinit_LongLib$SmallLong = emptyMethod;
  $clinit_Object();
}

function LongLib$SmallLong(){
  $clinit_LongLib$SmallLong();
  Object_0.call(this);
  this.$init_616();
}

defineClass(544, 1, {1:1}, LongLib$SmallLong);
_.$init_616 = function $init_616(){
}
;
_.d = 0;
var Lcom_google_gwt_lang_LongLib$SmallLong_2_classLit = createForClass('com.google.gwt.lang', 'LongLib/SmallLong', 544, Ljava_lang_Object_2_classLit);
function $clinit_com_00046fullmetalgalaxy_00046GameDraft__EntryMethodHolder(){
  $clinit_com_00046fullmetalgalaxy_00046GameDraft__EntryMethodHolder = emptyMethod;
  $clinit_Object();
}

function init_50(){
  $clinit_com_00046fullmetalgalaxy_00046GameDraft__EntryMethodHolder();
  castTo(new UserAgentAsserter, 257).onModuleLoad();
  castTo(new DocumentModeAsserter, 257).onModuleLoad();
  castTo(new AppMain, 257).onModuleLoad();
}

function $clinit_RegExp(){
  $clinit_RegExp = emptyMethod;
  $clinit_JavaScriptObject();
}

function $replace(this$static, input_0, replacement){
  $clinit_RegExp();
  return input_0.replace(this$static, replacement);
}

function $split(this$static, input_0){
  $clinit_RegExp();
  return input_0.split(this$static);
}

function $test(this$static, input_0){
  $clinit_RegExp();
  return this$static.test(input_0);
}

function compile(pattern){
  $clinit_RegExp();
  return new RegExp(pattern);
}

function compile_0(pattern, flags){
  $clinit_RegExp();
  return new RegExp(pattern, flags);
}

function $clinit_SplitResult(){
  $clinit_SplitResult = emptyMethod;
  $clinit_JsArrayString();
}

function $clinit_ResourcePrototype(){
  $clinit_ResourcePrototype = emptyMethod;
}

var Lcom_google_gwt_resources_client_ResourcePrototype_2_classLit = createForInterface('com.google.gwt.resources.client', 'ResourcePrototype');
function $clinit_ImageResource(){
  $clinit_ImageResource = emptyMethod;
}

var Lcom_google_gwt_resources_client_ImageResource_2_classLit = createForInterface('com.google.gwt.resources.client', 'ImageResource');
function $clinit_ImageResourcePrototype(){
  $clinit_ImageResourcePrototype = emptyMethod;
  $clinit_Object();
}

function ImageResourcePrototype(name_0, url_0, left, top_0, width_0, height, animated, lossy){
  $clinit_ImageResourcePrototype();
  Object_0.call(this);
  this.$init_617();
  this.name_0 = name_0;
  this.left_0 = left;
  this.top_0 = top_0;
  this.height_0 = height;
  this.width_0 = width_0;
  this.url_0 = url_0;
  this.animated = animated;
  this.lossy = lossy;
}

defineClass(9, 1, {1:1}, ImageResourcePrototype);
_.$init_617 = function $init_617(){
}
;
_.getHeight = function getHeight_0(){
  return this.height_0;
}
;
_.getLeft = function getLeft_0(){
  return this.left_0;
}
;
_.getSafeUri = function getSafeUri(){
  return this.url_0;
}
;
_.getTop = function getTop_0(){
  return this.top_0;
}
;
_.getWidth = function getWidth_0(){
  return this.width_0;
}
;
_.animated = false;
_.height_0 = 0;
_.left_0 = 0;
_.lossy = false;
_.top_0 = 0;
_.width_0 = 0;
var Lcom_google_gwt_resources_client_impl_ImageResourcePrototype_2_classLit = createForClass('com.google.gwt.resources.client.impl', 'ImageResourcePrototype', 9, Ljava_lang_Object_2_classLit);
function $clinit_ImageResourcePrototype$Bundle(){
  $clinit_ImageResourcePrototype$Bundle = emptyMethod;
  $clinit_ImageResourcePrototype();
}

function ImageResourcePrototype$Bundle(name_0, url_0, left, top_0, width_0, height, animated, lossy){
  $clinit_ImageResourcePrototype$Bundle();
  ImageResourcePrototype.call(this, name_0, url_0, left, top_0, width_0, height, animated, lossy);
  this.$init_618();
}

defineClass(3, 9, {3:1, 1:1}, ImageResourcePrototype$Bundle);
_.$init_618 = function $init_618(){
}
;
var Lcom_google_gwt_resources_client_impl_ImageResourcePrototype$Bundle_2_classLit = createForClass('com.google.gwt.resources.client.impl', 'ImageResourcePrototype/Bundle', 3, Lcom_google_gwt_resources_client_impl_ImageResourcePrototype_2_classLit);
function $clinit_SafeStyles(){
  $clinit_SafeStyles = emptyMethod;
}

var Lcom_google_gwt_safecss_shared_SafeStyles_2_classLit = createForInterface('com.google.gwt.safecss.shared', 'SafeStyles');
function $clinit_SafeStylesBuilder(){
  $clinit_SafeStylesBuilder = emptyMethod;
  $clinit_Object();
}

function SafeStylesBuilder(){
  $clinit_SafeStylesBuilder();
  Object_0.call(this);
  this.$init_619();
}

defineClass(789, 1, {1:1}, SafeStylesBuilder);
_.$init_619 = function $init_619(){
  this.sb = new StringBuilder;
}
;
_.append = function append(styles){
  this.sb.append_9(styles.asString());
  return this;
}
;
_.height_1 = function height_0(value_0, unit){
  return this.append(forHeight(value_0, unit));
}
;
_.toSafeStyles = function toSafeStyles(){
  return new SafeStylesString(this.sb.toString_0());
}
;
_.trustedNameAndValue = function trustedNameAndValue(name_0, value_0){
  return this.append(fromTrustedNameAndValue_0(name_0, value_0));
}
;
_.width_1 = function width_1(value_0, unit){
  return this.append(forWidth(value_0, unit));
}
;
var Lcom_google_gwt_safecss_shared_SafeStylesBuilder_2_classLit = createForClass('com.google.gwt.safecss.shared', 'SafeStylesBuilder', 789, Ljava_lang_Object_2_classLit);
function $clinit_SafeStylesHostedModeUtils(){
  $clinit_SafeStylesHostedModeUtils = emptyMethod;
  $clinit_Object();
}

function maybeCheckValidStyleName(html){
  $clinit_SafeStylesHostedModeUtils();
}

function maybeCheckValidStyleValue(html){
  $clinit_SafeStylesHostedModeUtils();
}

function $clinit_SafeStylesString(){
  $clinit_SafeStylesString = emptyMethod;
  $clinit_Object();
}

function SafeStylesString(css){
  $clinit_SafeStylesString();
  Object_0.call(this);
  this.$init_620();
  verifySafeStylesConstraints(css);
  this.css = css;
}

defineClass(350, 1, {1064:1, 4:1, 1:1}, SafeStylesString);
_.$init_620 = function $init_620(){
}
;
_.asString = function asString_0(){
  return this.css;
}
;
_.equals_0 = function equals_14(obj){
  if (!instanceOf(obj, 1064)) {
    return false;
  }
  return equals_Ljava_lang_Object__Z__devirtual$_2(this.css, castTo(obj, 1064).asString());
}
;
_.hashCode_1 = function hashCode_13(){
  return hashCode__I__devirtual$_0(this.css);
}
;
var Lcom_google_gwt_safecss_shared_SafeStylesString_2_classLit = createForClass('com.google.gwt.safecss.shared', 'SafeStylesString', 350, Ljava_lang_Object_2_classLit);
function $clinit_SafeStylesUtils(){
  $clinit_SafeStylesUtils = emptyMethod;
  $clinit_Object();
}

function forHeight(value_0, unit){
  $clinit_SafeStylesUtils();
  return fromTrustedNameAndValue('height', value_0, unit);
}

function forWidth(value_0, unit){
  $clinit_SafeStylesUtils();
  return fromTrustedNameAndValue('width', value_0, unit);
}

function fromTrustedNameAndValue(name_0, value_0, unit){
  maybeCheckValidStyleName(name_0);
  return new SafeStylesString(name_0 + ':' + value_0 + unit.getType_1() + ';');
}

function fromTrustedNameAndValue_0(name_0, value_0){
  $clinit_SafeStylesUtils();
  maybeCheckValidStyleName(name_0);
  maybeCheckValidStyleValue(value_0);
  return fromTrustedString(name_0 + ':' + value_0 + ';');
}

function fromTrustedString(s){
  $clinit_SafeStylesUtils();
  return new SafeStylesString(s);
}

function verifySafeStylesConstraints(styles){
  $clinit_SafeStylesUtils();
  if (jsEquals(styles, null)) {
    throw toJs(new NullPointerException_0('css is null'));
  }
  if (!(length__I__devirtual$(trim__Ljava_lang_String___devirtual$(styles)) == 0 || endsWith_Ljava_lang_String__Z__devirtual$(styles, ';'))) {
    debugger;
    throw toJs(makeAssertionError_Object("Invalid CSS Property: '" + styles + "'. CSS properties must be an empty string or end with a semi-colon (;)."));
  }
  if (!(!contains_Ljava_lang_CharSequence__Z__devirtual$(styles, '<') && !contains_Ljava_lang_CharSequence__Z__devirtual$(styles, '>'))) {
    debugger;
    throw toJs(makeAssertionError_Object("Invalid CSS Property: '" + styles + "'. CSS should not contain brackets (< or >)."));
  }
}

function $clinit_SafeHtmlTemplates(){
  $clinit_SafeHtmlTemplates = emptyMethod;
}

var Lcom_google_gwt_safehtml_client_SafeHtmlTemplates_2_classLit = createForInterface('com.google.gwt.safehtml.client', 'SafeHtmlTemplates');
function $clinit_SafeHtml(){
  $clinit_SafeHtml = emptyMethod;
}

var Lcom_google_gwt_safehtml_shared_SafeHtml_2_classLit = createForInterface('com.google.gwt.safehtml.shared', 'SafeHtml');
function $clinit_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(){
  $clinit_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml = emptyMethod;
  $clinit_Object();
}

function OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(html){
  $clinit_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml();
  Object_0.call(this);
  this.$init_621();
  if (jsEquals(html, null)) {
    throw toJs(new NullPointerException_0('html is null'));
  }
  this.html = html;
}

defineClass(171, 1, {309:1, 4:1, 1:1}, OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml);
_.$init_621 = function $init_621(){
}
;
_.asString = function asString_1(){
  return this.html;
}
;
_.equals_0 = function equals_15(obj){
  if (!instanceOf(obj, 309)) {
    return false;
  }
  return equals_Ljava_lang_Object__Z__devirtual$_2(this.html, castTo(obj, 309).asString());
}
;
_.hashCode_1 = function hashCode_14(){
  return hashCode__I__devirtual$_0(this.html);
}
;
var Lcom_google_gwt_safehtml_shared_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_2_classLit = createForClass('com.google.gwt.safehtml.shared', 'OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml', 171, Ljava_lang_Object_2_classLit);
function $clinit_SafeHtmlString(){
  $clinit_SafeHtmlString = emptyMethod;
  $clinit_Object();
}

function SafeHtmlString(html){
  $clinit_SafeHtmlString();
  Object_0.call(this);
  this.$init_622();
  if (jsEquals(html, null)) {
    throw toJs(new NullPointerException_0('html is null'));
  }
  this.html = html;
}

defineClass(352, 1, {309:1, 4:1, 1:1}, SafeHtmlString);
_.$init_622 = function $init_622(){
}
;
_.asString = function asString_2(){
  return this.html;
}
;
_.equals_0 = function equals_16(obj){
  if (!instanceOf(obj, 309)) {
    return false;
  }
  return equals_Ljava_lang_Object__Z__devirtual$_2(this.html, castTo(obj, 309).asString());
}
;
_.hashCode_1 = function hashCode_15(){
  return hashCode__I__devirtual$_0(this.html);
}
;
_.toString_0 = function toString_47(){
  return 'safe: "' + this.asString() + '"';
}
;
var Lcom_google_gwt_safehtml_shared_SafeHtmlString_2_classLit = createForClass('com.google.gwt.safehtml.shared', 'SafeHtmlString', 352, Ljava_lang_Object_2_classLit);
function $clinit_SafeHtmlUtils(){
  $clinit_SafeHtmlUtils = emptyMethod;
  $clinit_Object();
  EMPTY_SAFE_HTML = new SafeHtmlString('');
  HTML_CHARS_RE = compile('[&<>\'"]');
  AMP_RE = compile_0('&', 'g');
  GT_RE = compile_0('>', 'g');
  LT_RE = compile_0('<', 'g');
  SQUOT_RE = compile_0("'", 'g');
  QUOT_RE = compile_0('"', 'g');
}

function fromString_0(s){
  $clinit_SafeHtmlUtils();
  return new SafeHtmlString(htmlEscape(s));
}

function htmlEscape(s){
  $clinit_SafeHtmlUtils();
  if (!$test(HTML_CHARS_RE, s)) {
    return s;
  }
  if (indexOf_Ljava_lang_String__I__devirtual$(s, '&') != -1) {
    s = $replace(AMP_RE, s, '&amp;');
  }
  if (indexOf_Ljava_lang_String__I__devirtual$(s, '<') != -1) {
    s = $replace(LT_RE, s, '&lt;');
  }
  if (indexOf_Ljava_lang_String__I__devirtual$(s, '>') != -1) {
    s = $replace(GT_RE, s, '&gt;');
  }
  if (indexOf_Ljava_lang_String__I__devirtual$(s, '"') != -1) {
    s = $replace(QUOT_RE, s, '&quot;');
  }
  if (indexOf_Ljava_lang_String__I__devirtual$(s, "'") != -1) {
    s = $replace(SQUOT_RE, s, '&#39;');
  }
  return s;
}

var AMP_RE, EMPTY_SAFE_HTML, GT_RE, HTML_CHARS_RE, LT_RE, QUOT_RE, SQUOT_RE;
function $clinit_SafeUri(){
  $clinit_SafeUri = emptyMethod;
}

var Lcom_google_gwt_safehtml_shared_SafeUri_2_classLit = createForInterface('com.google.gwt.safehtml.shared', 'SafeUri');
function $clinit_SafeUriHostedModeUtils(){
  $clinit_SafeUriHostedModeUtils = emptyMethod;
  $clinit_Object();
}

function maybeCheckValidUri(uri_0){
  $clinit_SafeUriHostedModeUtils();
}

function $clinit_SafeUriString(){
  $clinit_SafeUriString = emptyMethod;
  $clinit_Object();
}

function SafeUriString(uri_0){
  $clinit_SafeUriString();
  Object_0.call(this);
  this.$init_623();
  if (jsEquals(uri_0, null)) {
    throw toJs(new NullPointerException_0('uri is null'));
  }
  this.uri_0 = uri_0;
}

defineClass(405, 1, {1054:1, 1:1}, SafeUriString);
_.$init_623 = function $init_623(){
}
;
_.asString = function asString_3(){
  return this.uri_0;
}
;
_.equals_0 = function equals_17(obj){
  if (!instanceOf(obj, 1054)) {
    return false;
  }
  return equals_Ljava_lang_Object__Z__devirtual$_2(this.uri_0, castTo(obj, 1054).asString());
}
;
_.hashCode_1 = function hashCode_16(){
  return hashCode__I__devirtual$_0(this.uri_0);
}
;
_.toString_0 = function toString_48(){
  return 'safe: "' + this.asString() + '"';
}
;
var Lcom_google_gwt_safehtml_shared_SafeUriString_2_classLit = createForClass('com.google.gwt.safehtml.shared', 'SafeUriString', 405, Ljava_lang_Object_2_classLit);
function $clinit_UriUtils(){
  $clinit_UriUtils = emptyMethod;
  $clinit_Object();
  ESCAPED_LBRACKET_RE = isScript_0()?compile_0('%5B', 'g'):null;
  ESCAPED_RBRACKET_RE = isScript_0()?compile_0('%5D', 'g'):null;
}

function fromTrustedString_0(s){
  $clinit_UriUtils();
  maybeCheckValidUri(s);
  return new SafeUriString(s);
}

function unsafeCastFromUntrustedString(s){
  $clinit_UriUtils();
  return new SafeUriString(s);
}

var ESCAPED_LBRACKET_RE, ESCAPED_RBRACKET_RE;
function $clinit_Parser(){
  $clinit_Parser = emptyMethod;
}

var Lcom_google_gwt_text_shared_Parser_2_classLit = createForInterface('com.google.gwt.text.shared', 'Parser');
function $clinit_IntegerParser(){
  $clinit_IntegerParser = emptyMethod;
  $clinit_Object();
}

function IntegerParser(){
  Object_0.call(this);
  this.$init_624();
}

function instance_10(){
  $clinit_IntegerParser();
  if (isNull(INSTANCE_3)) {
    INSTANCE_3 = new IntegerParser;
  }
  return INSTANCE_3;
}

defineClass(1020, 1, {1:1}, IntegerParser);
_.$init_624 = function $init_624(){
}
;
_.parse_4 = function parse_4(object){
  return this.parse_3(object);
}
;
_.parse_3 = function parse_3(object){
  var e;
  if (equals_Ljava_lang_Object__Z__devirtual$_2('', toString_46(object))) {
    return null;
  }
  try {
    return valueOf_37(round_int(rint(getDecimalFormat().parse_1(toString_46(object)))));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 133)) {
      e = $e0;
      throw toJs(new ParseException(e.getMessage(), 0));
    }
     else 
      throw toJs($e0);
  }
}
;
var INSTANCE_3;
var Lcom_google_gwt_text_client_IntegerParser_2_classLit = createForClass('com.google.gwt.text.client', 'IntegerParser', 1020, Ljava_lang_Object_2_classLit);
function $clinit_Renderer(){
  $clinit_Renderer = emptyMethod;
}

var Lcom_google_gwt_text_shared_Renderer_2_classLit = createForInterface('com.google.gwt.text.shared', 'Renderer');
function $clinit_AbstractRenderer(){
  $clinit_AbstractRenderer = emptyMethod;
  $clinit_Object();
}

function AbstractRenderer(){
  $clinit_AbstractRenderer();
  Object_0.call(this);
  this.$init_625();
}

defineClass(421, 1, {1:1});
_.$init_625 = function $init_625(){
}
;
var Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit = createForClass('com.google.gwt.text.shared', 'AbstractRenderer', 421, Ljava_lang_Object_2_classLit);
function $clinit_IntegerRenderer(){
  $clinit_IntegerRenderer = emptyMethod;
  $clinit_AbstractRenderer();
}

function IntegerRenderer(){
  AbstractRenderer.call(this);
  this.$init_626();
}

function instance_11(){
  $clinit_IntegerRenderer();
  if (isNull(INSTANCE_4)) {
    INSTANCE_4 = new IntegerRenderer;
  }
  return INSTANCE_4;
}

defineClass(1019, 421, {1:1}, IntegerRenderer);
_.$init_626 = function $init_626(){
}
;
_.render = function render_0(object){
  return this.render_0(castTo(object, 28));
}
;
_.render_0 = function render(object){
  if (isNull(object)) {
    return '';
  }
  return getDecimalFormat().format_3(object);
}
;
var INSTANCE_4;
var Lcom_google_gwt_text_client_IntegerRenderer_2_classLit = createForClass('com.google.gwt.text.client', 'IntegerRenderer', 1019, Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit);
function $clinit_PassthroughParser(){
  $clinit_PassthroughParser = emptyMethod;
  $clinit_Object();
}

function PassthroughParser(){
  Object_0.call(this);
  this.$init_627();
}

function instance_12(){
  $clinit_PassthroughParser();
  if (isNull(INSTANCE_5)) {
    INSTANCE_5 = new PassthroughParser;
  }
  return INSTANCE_5;
}

defineClass(966, 1, {1:1}, PassthroughParser);
_.$init_627 = function $init_627(){
}
;
_.parse_4 = function parse_5(object){
  return this.parse_5(object);
}
;
_.parse_5 = function parse_6(object){
  return toString_46(object);
}
;
var INSTANCE_5;
var Lcom_google_gwt_text_shared_testing_PassthroughParser_2_classLit = createForClass('com.google.gwt.text.shared.testing', 'PassthroughParser', 966, Ljava_lang_Object_2_classLit);
function $clinit_PassthroughRenderer(){
  $clinit_PassthroughRenderer = emptyMethod;
  $clinit_AbstractRenderer();
}

function PassthroughRenderer(){
  AbstractRenderer.call(this);
  this.$init_628();
}

function instance_13(){
  $clinit_PassthroughRenderer();
  if (isNull(INSTANCE_6)) {
    INSTANCE_6 = new PassthroughRenderer;
  }
  return INSTANCE_6;
}

defineClass(965, 421, {1:1}, PassthroughRenderer);
_.$init_628 = function $init_628(){
}
;
_.render = function render_1(object){
  return this.render_1(castToString(object));
}
;
_.render_1 = function render_2(object){
  return object;
}
;
var INSTANCE_6;
var Lcom_google_gwt_text_shared_testing_PassthroughRenderer_2_classLit = createForClass('com.google.gwt.text.shared.testing', 'PassthroughRenderer', 965, Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit);
function $clinit_Momentum(){
  $clinit_Momentum = emptyMethod;
}

var Lcom_google_gwt_touch_client_Momentum_2_classLit = createForInterface('com.google.gwt.touch.client', 'Momentum');
function $clinit_DefaultMomentum(){
  $clinit_DefaultMomentum = emptyMethod;
  $clinit_Object();
}

function DefaultMomentum(){
  $clinit_DefaultMomentum();
  Object_0.call(this);
  this.$init_629();
}

defineClass(1009, 1, {1:1}, DefaultMomentum);
_.$init_629 = function $init_629(){
}
;
_.calcNewVelocity = function calcNewVelocity(initialVelocity, decelFactor, oldVelocity, minDecel){
  var maxVelocityX, minVelocityX, newVelocity;
  newVelocity = initialVelocity * decelFactor;
  if (oldVelocity >= 0) {
    maxVelocityX = $wnd.Math.max(0, oldVelocity - minDecel);
    newVelocity = $wnd.Math.min(newVelocity, maxVelocityX);
  }
   else {
    minVelocityX = $wnd.Math.min(0, oldVelocity + minDecel);
    newVelocity = $wnd.Math.max(newVelocity, minVelocityX);
  }
  return newVelocity;
}
;
_.createState = function createState(initialPosition, initialVelocity){
  return new Momentum$State(initialPosition, initialVelocity);
}
;
_.updateState_0 = function updateState_0(state){
  var decelFactor, dist, elapsedMillis, ellapsedMillis, initialVelocity, minDecel, newVelocity, newVelocityX, newVelocityY, oldVelocity, position, totalEllapsedMillis;
  ellapsedMillis = state.getElapsedMillis();
  totalEllapsedMillis = state.getCumulativeElapsedMillis();
  initialVelocity = state.getInitialVelocity();
  oldVelocity = state.getVelocity();
  decelFactor = $wnd.Math.pow(0.9993, totalEllapsedMillis);
  minDecel = ellapsedMillis * 5.0E-4;
  newVelocityX = this.calcNewVelocity(initialVelocity.getX_0(), decelFactor, oldVelocity.getX_0(), minDecel);
  newVelocityY = this.calcNewVelocity(initialVelocity.getY_0(), decelFactor, oldVelocity.getY_0(), minDecel);
  newVelocity = new Point(newVelocityX, newVelocityY);
  state.setVelocity(newVelocity);
  elapsedMillis = state.getElapsedMillis();
  dist = newVelocity.mult(new Point(elapsedMillis, elapsedMillis));
  position = state.getPosition_1();
  state.setPosition_2(position.plus(dist));
  if ($wnd.Math.abs(newVelocity.getX_0()) < 0.02 && $wnd.Math.abs(newVelocity.getY_0()) < 0.02) {
    return false;
  }
  return true;
}
;
var Lcom_google_gwt_touch_client_DefaultMomentum_2_classLit = createForClass('com.google.gwt.touch.client', 'DefaultMomentum', 1009, Ljava_lang_Object_2_classLit);
function $clinit_Momentum$State(){
  $clinit_Momentum$State = emptyMethod;
  $clinit_Object();
}

function Momentum$State(initialPosition, initialVelocity){
  $clinit_Momentum$State();
  Object_0.call(this);
  this.$init_630();
  this.initialPosition = initialPosition;
  this.initialVelocity = initialVelocity;
  this.position_0 = new Point_0(initialPosition);
  this.velocity = new Point_0(initialVelocity);
}

defineClass(1010, 1, {1:1}, Momentum$State);
_.$init_630 = function $init_630(){
  this.cumulativeElapsedMillis = 0;
  this.elapsedMillis = 0;
}
;
_.getCumulativeElapsedMillis = function getCumulativeElapsedMillis(){
  return this.cumulativeElapsedMillis;
}
;
_.getElapsedMillis = function getElapsedMillis(){
  return this.elapsedMillis;
}
;
_.getInitialVelocity = function getInitialVelocity(){
  return this.initialVelocity;
}
;
_.getPosition_1 = function getPosition_2(){
  return this.position_0;
}
;
_.getVelocity = function getVelocity(){
  return this.velocity;
}
;
_.setCumulativeElapsedMillis = function setCumulativeElapsedMillis(cumulativeElapsedMillis){
  this.cumulativeElapsedMillis = cumulativeElapsedMillis;
}
;
_.setElapsedMillis = function setElapsedMillis(elapsedMillis){
  this.elapsedMillis = elapsedMillis;
}
;
_.setPosition_2 = function setPosition_3(position){
  this.position_0 = position;
}
;
_.setVelocity = function setVelocity(velocity){
  this.velocity = velocity;
}
;
_.cumulativeElapsedMillis = 0;
_.elapsedMillis = 0;
var Lcom_google_gwt_touch_client_Momentum$State_2_classLit = createForClass('com.google.gwt.touch.client', 'Momentum/State', 1010, Ljava_lang_Object_2_classLit);
function $clinit_Point(){
  $clinit_Point = emptyMethod;
  $clinit_Object();
}

function Point(x_0, y_0){
  $clinit_Point();
  Object_0.call(this);
  this.$init_631();
  this.x_0 = x_0;
  this.y_0 = y_0;
}

function Point_0(c){
  $clinit_Point();
  Point.call(this, c.x_0, c.y_0);
}

defineClass(105, 1, {105:1, 1:1}, Point, Point_0);
_.$init_631 = function $init_631(){
}
;
_.equals_0 = function equals_18(obj){
  var c;
  if (!instanceOf(obj, 105)) {
    return false;
  }
  c = castTo(obj, 105);
  return this.x_0 == c.x_0 && this.y_0 == c.y_0;
}
;
_.getX_0 = function getX_2(){
  return this.x_0;
}
;
_.getY_0 = function getY_2(){
  return this.y_0;
}
;
_.hashCode_1 = function hashCode_17(){
  return round_int(this.x_0) ^ round_int(this.y_0);
}
;
_.minus = function minus(c){
  return new Point(this.x_0 - c.x_0, this.y_0 - c.y_0);
}
;
_.mult = function mult(c){
  return new Point(this.x_0 * c.x_0, this.y_0 * c.y_0);
}
;
_.plus = function plus(c){
  return new Point(this.x_0 + c.x_0, this.y_0 + c.y_0);
}
;
_.toString_0 = function toString_49(){
  return 'Point(' + this.x_0 + ',' + this.y_0 + ')';
}
;
_.x_0 = 0;
_.y_0 = 0;
var Lcom_google_gwt_touch_client_Point_2_classLit = createForClass('com.google.gwt.touch.client', 'Point', 105, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller(){
  $clinit_TouchScroller = emptyMethod;
  $clinit_Object();
  MAX_TRACKING_TIME_ON_DECK = 200 / 2;
  MS_PER_FRAME = round_int(1000 / 60);
}

function TouchScroller(){
  Object_0.call(this);
  this.$init_632();
  this.setMomentum(new DefaultMomentum);
}

function createIfSupported_0(){
  return isSupported_2()?new TouchScroller:null;
}

function createIfSupported_1(widget){
  $clinit_TouchScroller();
  var scroller;
  scroller = createIfSupported_0();
  if (isNotNull(scroller)) {
    scroller.setTargetWidget(widget);
  }
  return scroller;
}

function isAndroid3(){
  var ua = navigator.userAgent.toLowerCase();
  return /android ([3-9]+)\.([0-9]+)/.exec(ua) != null;
}

function isSupported_2(){
  if (jsEquals(isSupported_1, null)) {
    isSupported_1 = valueOf_32(isSupported() && !isAndroid3());
  }
  return booleanValue__Z__devirtual$(isSupported_1);
}

defineClass(968, 1, {1:1}, TouchScroller);
_.$init_632 = function $init_632(){
  this.handlerRegs = new ArrayList;
  this.lastTouchPosition = new TouchScroller$TemporalPoint;
  this.recentTouchPosition = new TouchScroller$TemporalPoint;
  this.recentScrollTriggeringTouchPosition = new TouchScroller$TemporalPoint;
  this.touchPositionsDuringMomentum = new ArrayList;
  this.momentumTouchRemovalCommand = new TouchScroller$MomentumTouchRemovalCommand(this);
}
;
_.calculateEndVelocity = function calculateEndVelocity(from, to){
  var dist, time;
  time = to.getTime_0() - from.getTime_0();
  if (time <= 0) {
    return null;
  }
  dist = from.getPoint().minus(to.getPoint());
  return new Point(dist.getX_0() / time, dist.getY_0() / time);
}
;
_.cancelAll = function cancelAll(){
  this.touching = false;
  this.dragging = false;
  this.momentumCommand = null;
}
;
_.getTouchFromEvent = function getTouchFromEvent(event_0){
  var touches;
  touches = event_0.getTouches_0();
  return $length(touches) > 0?$get(touches, 0):null;
}
;
_.getWidgetScrollPosition = function getWidgetScrollPosition(){
  $clinit_TouchScroller();
  return new Point(this.widget.getHorizontalScrollPosition(), this.widget.getVerticalScrollPosition());
}
;
_.hitTest = function hitTest(point1, point2){
  var absDiffX, absDiffY, diff;
  diff = point1.minus(point2);
  absDiffX = $wnd.Math.abs(diff.getX_0());
  absDiffY = $wnd.Math.abs(diff.getY_0());
  return absDiffX <= 25 && absDiffY <= 25;
}
;
_.isClickScrollTriggeringTouch = function isClickScrollTriggeringTouch(clickPoint){
  $clinit_TouchScroller();
  if (isNotNull(this.recentScrollTriggeringTouchPosition.getPoint())) {
    return this.hitTest(clickPoint, this.recentScrollTriggeringTouchPosition.getPoint());
  }
  return false;
}
;
_.isClickTouchPositionDuringMomentum = function isClickTouchPositionDuringMomentum(clickPoint){
  $clinit_TouchScroller();
  var currentTime, point, point$iterator, same;
  currentTime = currentTimeMillis_1();
  same = false;
  for (point$iterator = this.touchPositionsDuringMomentum.iterator_0(); point$iterator.hasNext_0();) {
    point = castTo(point$iterator.next_1(), 182);
    if (currentTime - point.getTime_0() <= 2500 && this.hitTest(clickPoint, point.getPoint())) {
      same = true;
      break;
    }
  }
  return same;
}
;
_.isMomentumActive = function isMomentumActive(){
  return isNotNull(this.momentumCommand);
}
;
_.onDragEnd = function onDragEnd(event_0){
  var endVelocity;
  if (isNull(this.momentum)) {
    return;
  }
  endVelocity = this.calculateEndVelocity(this.recentTouchPosition, this.lastTouchPosition);
  if (isNotNull(endVelocity)) {
    this.momentumCommand = new TouchScroller$MomentumCommand(this, endVelocity);
    get_2653().scheduleFixedDelay(this.momentumCommand, 16);
  }
}
;
_.onDragMove = function onDragMove(event_0){
  var curScrollPosition, diff;
  diff = this.startTouchPosition.minus(this.lastTouchPosition.getPoint());
  curScrollPosition = this.startScrollPosition.plus(diff);
  this.setWidgetScrollPosition(curScrollPosition);
}
;
_.onDragStart = function onDragStart(event_0){
}
;
_.onTouchCancel_0 = function onTouchCancel_0(event_0){
  this.onTouchEnd_0(event_0);
}
;
_.onTouchEnd_0 = function onTouchEnd_1(event_0){
  if (!this.touching) {
    return;
  }
  this.touching = false;
  if (this.dragging) {
    this.dragging = false;
    this.onDragEnd(event_0);
  }
}
;
_.onTouchMove_0 = function onTouchMove_1(event_0){
  var absDiffX, absDiffY, diff, hMax, hMin, hPosition, touch, touchPoint, touchTime, trackingTime, vMax, vMin, vPosition;
  if (!this.touching) {
    return;
  }
  touch = this.getTouchFromEvent(event_0);
  touchPoint = new Point($getPageX(touch), $getPageY(touch));
  touchTime = currentTimeMillis_1();
  this.lastTouchPosition.setTemporalPoint(touchPoint, touchTime);
  if (!this.dragging) {
    diff = touchPoint.minus(this.startTouchPosition);
    absDiffX = $wnd.Math.abs(diff.getX_0());
    absDiffY = $wnd.Math.abs(diff.getY_0());
    if (absDiffX > 5 || absDiffY > 5) {
      this.recentScrollTriggeringTouchPosition.setTemporalPoint(this.recentTouchPosition.getPoint(), this.recentTouchPosition.getTime_0());
      if (absDiffX > absDiffY) {
        hPosition = this.widget.getHorizontalScrollPosition();
        hMin = this.widget.getMinimumHorizontalScrollPosition();
        hMax = this.widget.getMaximumHorizontalScrollPosition();
        if (diff.getX_0() < 0 && hMax <= hPosition) {
          this.cancelAll();
          return;
        }
         else if (diff.getX_0() > 0 && hMin >= hPosition) {
          this.cancelAll();
          return;
        }
      }
       else {
        vPosition = this.widget.getVerticalScrollPosition();
        vMin = this.widget.getMinimumVerticalScrollPosition();
        vMax = this.widget.getMaximumVerticalScrollPosition();
        if (diff.getY_0() < 0 && vMax <= vPosition) {
          this.cancelAll();
          return;
        }
         else if (diff.getY_0() > 0 && vMin >= vPosition) {
          this.cancelAll();
          return;
        }
      }
      this.dragging = true;
      this.onDragStart(event_0);
    }
  }
  event_0.preventDefault_0();
  if (this.dragging) {
    this.onDragMove(event_0);
    trackingTime = touchTime - this.recentTouchPosition.getTime_0();
    if (trackingTime > 200 && isNotNull(this.recentTouchPositionOnDeck)) {
      this.recentTouchPosition.setTemporalPoint(this.recentTouchPositionOnDeck.getPoint(), this.recentTouchPositionOnDeck.getTime_0());
      this.recentTouchPositionOnDeck = null;
    }
     else if (trackingTime > 100 && isNull(this.recentTouchPositionOnDeck)) {
      this.recentTouchPositionOnDeck = new TouchScroller$TemporalPoint_0(touchPoint, touchTime);
    }
  }
}
;
_.onTouchStart_0 = function onTouchStart_1(event_0){
  var startTouchTime, touch;
  this.recentScrollTriggeringTouchPosition.setTemporalPoint(null, 0);
  if (this.touching) {
    return;
  }
  touch = this.getTouchFromEvent(event_0);
  this.startTouchPosition = new Point($getPageX(touch), $getPageY(touch));
  startTouchTime = currentTimeMillis_1();
  this.recentTouchPosition.setTemporalPoint(this.startTouchPosition, startTouchTime);
  this.lastTouchPosition.setTemporalPoint(this.startTouchPosition, startTouchTime);
  this.recentTouchPositionOnDeck = null;
  if (this.isMomentumActive()) {
    this.touchPositionsDuringMomentum.add_5(new TouchScroller$TemporalPoint_0(this.startTouchPosition, startTouchTime));
    get_2653().scheduleFixedDelay(this.momentumTouchRemovalCommand, 2500);
  }
  this.startScrollPosition = this.getWidgetScrollPosition();
  this.cancelAll();
  this.touching = true;
}
;
_.removeAttachHandler = function removeAttachHandler(){
  if (isNotNull(this.attachHandlerReg)) {
    this.attachHandlerReg.removeHandler();
    this.attachHandlerReg = null;
  }
}
;
_.removeBustClickHandler = function removeBustClickHandler(){
  if (isNotNull(this.bustClickHandlerReg)) {
    this.bustClickHandlerReg.removeHandler();
    this.bustClickHandlerReg = null;
  }
}
;
_.setMomentum = function setMomentum(momentum){
  this.momentum = momentum;
  if (isNull(momentum)) {
    this.momentumCommand = null;
  }
}
;
_.setTargetWidget = function setTargetWidget(widget){
  var reg, reg$iterator;
  if (jsEquals(this.widget, widget)) {
    return;
  }
  this.cancelAll();
  for (reg$iterator = this.handlerRegs.iterator_0(); reg$iterator.hasNext_0();) {
    reg = castTo(reg$iterator.next_1(), 4423);
    reg.removeHandler();
  }
  this.handlerRegs.clear_0();
  this.removeAttachHandler();
  this.removeBustClickHandler();
  this.widget = widget;
  if (isNotNull(widget)) {
    if (widget.asWidget().isAttached()) {
      this.setupBustClickHandler();
    }
    this.attachHandlerReg = widget.asWidget().addAttachHandler(new TouchScroller$1(this));
    this.handlerRegs.add_5(widget.asWidget().addDomHandler(new TouchScroller$2(this), getType_49()));
    this.handlerRegs.add_5(widget.asWidget().addDomHandler(new TouchScroller$3(this), getType_48()));
    this.handlerRegs.add_5(widget.asWidget().addDomHandler(new TouchScroller$4(this), getType_47()));
    this.handlerRegs.add_5(widget.asWidget().addDomHandler(new TouchScroller$5(this), getType_46()));
  }
}
;
_.setWidgetScrollPosition = function setWidgetScrollPosition(position){
  $clinit_TouchScroller();
  this.widget.setHorizontalScrollPosition(round_int(position.getX_0()));
  this.widget.setVerticalScrollPosition(round_int(position.getY_0()));
}
;
_.setupBustClickHandler = function setupBustClickHandler(){
  this.removeBustClickHandler();
  this.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6(this));
}
;
_.dragging = false;
_.touching = false;
var MAX_TRACKING_TIME_ON_DECK = 0, MS_PER_FRAME = 0, isSupported_1;
var Lcom_google_gwt_touch_client_TouchScroller_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller', 968, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$1(){
  $clinit_TouchScroller$1 = emptyMethod;
  $clinit_Object();
}

function TouchScroller$1(this$0){
  $clinit_TouchScroller$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_633();
}

defineClass(972, 1, {4431:1, 13:1, 1:1}, TouchScroller$1);
_.$init_633 = function $init_633(){
}
;
_.onAttachOrDetach = function onAttachOrDetach(event_0){
  if (event_0.isAttached()) {
    this.this$01.setupBustClickHandler();
  }
   else {
    this.this$01.removeBustClickHandler();
  }
}
;
var Lcom_google_gwt_touch_client_TouchScroller$1_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/1', 972, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$2(){
  $clinit_TouchScroller$2 = emptyMethod;
  $clinit_Object();
}

function TouchScroller$2(this$0){
  $clinit_TouchScroller$2();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_634();
}

defineClass(973, 1, {304:1, 13:1, 1:1}, TouchScroller$2);
_.$init_634 = function $init_634(){
}
;
_.onTouchStart = function onTouchStart_2(event_0){
  this.this$01.onTouchStart_0(event_0);
}
;
var Lcom_google_gwt_touch_client_TouchScroller$2_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/2', 973, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$3(){
  $clinit_TouchScroller$3 = emptyMethod;
  $clinit_Object();
}

function TouchScroller$3(this$0){
  $clinit_TouchScroller$3();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_635();
}

defineClass(974, 1, {305:1, 13:1, 1:1}, TouchScroller$3);
_.$init_635 = function $init_635(){
}
;
_.onTouchMove = function onTouchMove_2(event_0){
  this.this$01.onTouchMove_0(event_0);
}
;
var Lcom_google_gwt_touch_client_TouchScroller$3_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/3', 974, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$4(){
  $clinit_TouchScroller$4 = emptyMethod;
  $clinit_Object();
}

function TouchScroller$4(this$0){
  $clinit_TouchScroller$4();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_636();
}

defineClass(975, 1, {306:1, 13:1, 1:1}, TouchScroller$4);
_.$init_636 = function $init_636(){
}
;
_.onTouchEnd = function onTouchEnd_2(event_0){
  this.this$01.onTouchEnd_0(event_0);
}
;
var Lcom_google_gwt_touch_client_TouchScroller$4_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/4', 975, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$5(){
  $clinit_TouchScroller$5 = emptyMethod;
  $clinit_Object();
}

function TouchScroller$5(this$0){
  $clinit_TouchScroller$5();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_637();
}

defineClass(976, 1, {1059:1, 13:1, 1:1}, TouchScroller$5);
_.$init_637 = function $init_637(){
}
;
_.onTouchCancel = function onTouchCancel_1(event_0){
  this.this$01.onTouchCancel_0(event_0);
}
;
var Lcom_google_gwt_touch_client_TouchScroller$5_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/5', 976, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$6(){
  $clinit_TouchScroller$6 = emptyMethod;
  $clinit_Object();
}

function TouchScroller$6(this$0){
  $clinit_TouchScroller$6();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_638();
}

defineClass(977, 1, {13:1, 148:1, 1:1}, TouchScroller$6);
_.$init_638 = function $init_638(){
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_6(event_0){
  var clickPoint;
  if (1 == event_0.getTypeInt()) {
    clickPoint = new Point($getClientX(event_0.getNativeEvent()), $getClientY(event_0.getNativeEvent()));
    if (this.this$01.isClickScrollTriggeringTouch(clickPoint) || this.this$01.isClickTouchPositionDuringMomentum(clickPoint)) {
      event_0.cancel();
      $stopPropagation(event_0.getNativeEvent());
      $preventDefault(event_0.getNativeEvent());
    }
  }
}
;
var Lcom_google_gwt_touch_client_TouchScroller$6_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/6', 977, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$MomentumCommand(){
  $clinit_TouchScroller$MomentumCommand = emptyMethod;
  $clinit_Object();
}

function TouchScroller$MomentumCommand(this$0, endVelocity){
  $clinit_TouchScroller$MomentumCommand();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_639();
  this.state = this$0.momentum.createState(this.initialPosition, endVelocity);
  this.windowResizeHandler = addResizeHandler(new TouchScroller$MomentumCommand$1(this));
}

defineClass(969, 1, {1:1}, TouchScroller$MomentumCommand);
_.$init_639 = function $init_639(){
  this.duration = new Duration;
  this.initialPosition = this.this$01.getWidgetScrollPosition();
  this.lastElapsedMillis = 0;
}
;
_.execute_1 = function execute_6(){
  var cumulativeElapsedMillis, hMax, hMin, hPos, notDone, vMax, vMin, vPos;
  if (jsNotEquals(this, this.this$01.momentumCommand)) {
    this.finish_0();
    return false;
  }
  cumulativeElapsedMillis = this.duration.elapsedMillis_0();
  this.state.setElapsedMillis(cumulativeElapsedMillis - this.lastElapsedMillis);
  this.lastElapsedMillis = cumulativeElapsedMillis;
  this.state.setCumulativeElapsedMillis(cumulativeElapsedMillis);
  notDone = this.this$01.momentum.updateState_0(this.state);
  if (!notDone) {
    this.finish_0();
  }
  this.this$01.setWidgetScrollPosition(this.state.getPosition_1());
  hPos = round_int(this.state.getPosition_1().getX_0());
  hMin = this.this$01.widget.getMinimumHorizontalScrollPosition();
  hMax = this.this$01.widget.getMaximumHorizontalScrollPosition();
  vMin = this.this$01.widget.getMinimumVerticalScrollPosition();
  vMax = this.this$01.widget.getMaximumVerticalScrollPosition();
  vPos = round_int(this.state.getPosition_1().getY_0());
  if ((vMax <= vPos || vMin >= vPos) && (hMax <= hPos || hMin >= hPos)) {
    this.finish_0();
    return false;
  }
  return notDone;
}
;
_.finish_0 = function finish_0(){
  $clinit_TouchScroller$MomentumCommand();
  if (isNotNull(this.windowResizeHandler)) {
    this.windowResizeHandler.removeHandler();
    this.windowResizeHandler = null;
  }
  if (jsEquals(this, this.this$01.momentumCommand)) {
    this.this$01.momentumCommand = null;
  }
}
;
_.lastElapsedMillis = 0;
var Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/MomentumCommand', 969, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$MomentumCommand$1(){
  $clinit_TouchScroller$MomentumCommand$1 = emptyMethod;
  $clinit_Object();
}

function TouchScroller$MomentumCommand$1(this$1){
  $clinit_TouchScroller$MomentumCommand$1();
  this.this$11 = this$1;
  Object_0.call(this);
  this.$init_640();
}

defineClass(971, 1, {302:1, 13:1, 1:1}, TouchScroller$MomentumCommand$1);
_.$init_640 = function $init_640(){
}
;
_.onResize = function onResize_0(event_0){
  this.this$11.finish_0();
}
;
var Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand$1_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/MomentumCommand/1', 971, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$MomentumTouchRemovalCommand(){
  $clinit_TouchScroller$MomentumTouchRemovalCommand = emptyMethod;
  $clinit_Object();
}

function TouchScroller$MomentumTouchRemovalCommand(this$0){
  $clinit_TouchScroller$MomentumTouchRemovalCommand();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_641();
}

defineClass(970, 1, {1:1}, TouchScroller$MomentumTouchRemovalCommand);
_.$init_641 = function $init_641(){
}
;
_.execute_1 = function execute_7(){
  var currentTime, iter, point;
  currentTime = currentTimeMillis_1();
  iter = this.this$01.touchPositionsDuringMomentum.iterator_0();
  while (iter.hasNext_0()) {
    point = castTo(iter.next_1(), 182);
    if (currentTime - point.getTime_0() >= 2500) {
      iter.remove_3();
    }
  }
  return !this.this$01.touchPositionsDuringMomentum.isEmpty();
}
;
var Lcom_google_gwt_touch_client_TouchScroller$MomentumTouchRemovalCommand_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/MomentumTouchRemovalCommand', 970, Ljava_lang_Object_2_classLit);
function $clinit_TouchScroller$TemporalPoint(){
  $clinit_TouchScroller$TemporalPoint = emptyMethod;
  $clinit_Object();
}

function TouchScroller$TemporalPoint(){
  $clinit_TouchScroller$TemporalPoint();
  Object_0.call(this);
  this.$init_642();
}

function TouchScroller$TemporalPoint_0(point, time){
  $clinit_TouchScroller$TemporalPoint();
  Object_0.call(this);
  this.$init_642();
  this.setTemporalPoint(point, time);
}

defineClass(182, 1, {182:1, 1:1}, TouchScroller$TemporalPoint, TouchScroller$TemporalPoint_0);
_.$init_642 = function $init_642(){
}
;
_.getPoint = function getPoint(){
  return this.point;
}
;
_.getTime_0 = function getTime_0(){
  return this.time;
}
;
_.setTemporalPoint = function setTemporalPoint(point, time){
  this.point = point;
  this.time = time;
}
;
_.time = 0;
var Lcom_google_gwt_touch_client_TouchScroller$TemporalPoint_2_classLit = createForClass('com.google.gwt.touch.client', 'TouchScroller/TemporalPoint', 182, Ljava_lang_Object_2_classLit);
function $clinit_BaseListenerWrapper(){
  $clinit_BaseListenerWrapper = emptyMethod;
  $clinit_Object();
}

function BaseListenerWrapper(listener){
  $clinit_BaseListenerWrapper();
  Object_0.call(this);
  this.$init_643();
  this.listener = listener;
}

defineClass(67, 1, {13:1, 67:1, 1:1});
_.$init_643 = function $init_643(){
}
;
var Lcom_google_gwt_user_client_BaseListenerWrapper_2_classLit = createForClass('com.google.gwt.user.client', 'BaseListenerWrapper', 67, Ljava_lang_Object_2_classLit);
function $clinit_BaseListenerWrapper$WrapWindowResize(){
  $clinit_BaseListenerWrapper$WrapWindowResize = emptyMethod;
  $clinit_BaseListenerWrapper();
}

function BaseListenerWrapper$WrapWindowResize(listener){
  BaseListenerWrapper.call(this, listener);
  this.$init_644();
}

function add_20(listener){
  $clinit_BaseListenerWrapper$WrapWindowResize();
  addResizeHandler(new BaseListenerWrapper$WrapWindowResize(listener));
}

defineClass(580, 67, {302:1, 13:1, 67:1, 1:1}, BaseListenerWrapper$WrapWindowResize);
_.$init_644 = function $init_644(){
}
;
_.onResize = function onResize_1(event_0){
  castTo(this.listener, 312).onWindowResized(event_0.getWidth(), event_0.getHeight());
}
;
var Lcom_google_gwt_user_client_BaseListenerWrapper$WrapWindowResize_2_classLit = createForClass('com.google.gwt.user.client', 'BaseListenerWrapper/WrapWindowResize', 580, Lcom_google_gwt_user_client_BaseListenerWrapper_2_classLit);
function $clinit_CommandCanceledException(){
  $clinit_CommandCanceledException = emptyMethod;
  $clinit_RuntimeException();
}

function CommandCanceledException(command){
  $clinit_CommandCanceledException();
  RuntimeException.call(this);
  this.$init_645();
  this.command = command;
}

defineClass(1049, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, CommandCanceledException);
_.$init_645 = function $init_645(){
}
;
var Lcom_google_gwt_user_client_CommandCanceledException_2_classLit = createForClass('com.google.gwt.user.client', 'CommandCanceledException', 1049, Ljava_lang_RuntimeException_2_classLit);
function $clinit_CommandExecutor(){
  $clinit_CommandExecutor = emptyMethod;
  $clinit_Object();
}

function CommandExecutor(){
  $clinit_CommandExecutor();
  Object_0.call(this);
  this.$init_646();
}

function hasTimeSliceExpired(currentTimeMillis, startTimeMillis){
  return currentTimeMillis - startTimeMillis >= 100;
}

defineClass(1041, 1, {1:1}, CommandExecutor);
_.$init_646 = function $init_646(){
  this.cancellationTimer = new CommandExecutor$1(this);
  this.commands = new ArrayList;
  this.executing = false;
  this.executionTimer = new CommandExecutor$2(this);
  this.executionTimerPending = false;
  this.iterator = new CommandExecutor$CircularIterator(this);
}
;
_.doCommandCanceled = function doCommandCanceled(){
  var cmd;
  cmd = this.iterator.getLast();
  this.iterator.remove_3();
  if (!jsNotEquals(cmd, null)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (instanceOf(cmd, 360)) {
    throw toJs(new CommandCanceledException(castTo(cmd, 360)));
  }
   else if (instanceOf(cmd, 491)) {
    throw toJs(new IncrementalCommandCanceledException(castTo(cmd, 491)));
  }
  this.setExecuting(false);
  this.maybeStartExecutionTimer();
}
;
_.doExecuteCommands = function doExecuteCommands(startTimeMillis){
  var command, element, incrementalCommand, removeCommand, wasCanceled;
  if (!!this.isExecutionTimerPending()) {
    debugger;
    throw toJs(makeAssertionError());
  }
  wasCanceled = false;
  try {
    this.setExecuting(true);
    this.iterator.setEnd(this.commands.size_1());
    this.cancellationTimer.schedule(10000);
    while (this.iterator.hasNext_0()) {
      element = this.iterator.next_1();
      removeCommand = true;
      try {
        if (jsEquals(element, null)) {
          return;
        }
        if (instanceOf(element, 360)) {
          command = castTo(element, 360);
          command.execute();
        }
         else if (instanceOf(element, 491)) {
          incrementalCommand = castTo(element, 491);
          removeCommand = !incrementalCommand.execute_1();
        }
      }
       finally {
        wasCanceled = this.iterator.wasRemoved();
        if (!wasCanceled) {
          if (removeCommand) {
            this.iterator.remove_3();
          }
        }
      }
      if (hasTimeSliceExpired(currentTimeMillis_1(), startTimeMillis)) {
        return;
      }
    }
  }
   finally {
    if (!wasCanceled) {
      this.cancellationTimer.cancel();
      this.setExecuting(false);
      this.maybeStartExecutionTimer();
    }
  }
}
;
_.isExecuting = function isExecuting(){
  $clinit_CommandExecutor();
  return this.executing;
}
;
_.isExecutionTimerPending = function isExecutionTimerPending(){
  return this.executionTimerPending;
}
;
_.maybeStartExecutionTimer = function maybeStartExecutionTimer(){
  if (!this.commands.isEmpty() && !this.isExecutionTimerPending() && !this.isExecuting()) {
    this.setExecutionTimerPending(true);
    this.executionTimer.schedule(1);
  }
}
;
_.setExecuting = function setExecuting(executing){
  this.executing = executing;
}
;
_.setExecutionTimerPending = function setExecutionTimerPending(pending){
  $clinit_CommandExecutor();
  this.executionTimerPending = pending;
}
;
_.submit_0 = function submit(command){
  this.commands.add_5(command);
  this.maybeStartExecutionTimer();
}
;
_.executing = false;
_.executionTimerPending = false;
var Lcom_google_gwt_user_client_CommandExecutor_2_classLit = createForClass('com.google.gwt.user.client', 'CommandExecutor', 1041, Ljava_lang_Object_2_classLit);
function $clinit_CommandExecutor$1(){
  $clinit_CommandExecutor$1 = emptyMethod;
  $clinit_Timer();
}

function CommandExecutor$1(this$0){
  $clinit_CommandExecutor$1();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_647();
}

defineClass(1043, 93, {1:1}, CommandExecutor$1);
_.$init_647 = function $init_647(){
}
;
_.run = function run_19(){
  if (!this.this$01.isExecuting()) {
    return;
  }
  this.this$01.doCommandCanceled();
}
;
var Lcom_google_gwt_user_client_CommandExecutor$1_2_classLit = createForClass('com.google.gwt.user.client', 'CommandExecutor/1', 1043, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_CommandExecutor$2(){
  $clinit_CommandExecutor$2 = emptyMethod;
  $clinit_Timer();
}

function CommandExecutor$2(this$0){
  $clinit_CommandExecutor$2();
  this.this$01 = this$0;
  Timer.call(this);
  this.$init_648();
}

defineClass(1044, 93, {1:1}, CommandExecutor$2);
_.$init_648 = function $init_648(){
}
;
_.run = function run_20(){
  if (!!this.this$01.isExecuting()) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.this$01.setExecutionTimerPending(false);
  this.this$01.doExecuteCommands(currentTimeMillis_1());
}
;
var Lcom_google_gwt_user_client_CommandExecutor$2_2_classLit = createForClass('com.google.gwt.user.client', 'CommandExecutor/2', 1044, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_Iterator(){
  $clinit_Iterator = emptyMethod;
}

function $remove(this$static){
  throw toJs(new UnsupportedOperationException);
}

var Ljava_util_Iterator_2_classLit = createForInterface('java.util', 'Iterator');
function $clinit_CommandExecutor$CircularIterator(){
  $clinit_CommandExecutor$CircularIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function CommandExecutor$CircularIterator(this$0){
  $clinit_CommandExecutor$CircularIterator();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_649();
}

defineClass(1042, 1, {1:1, 63:1}, CommandExecutor$CircularIterator);
_.$init_649 = function $init_649(){
  this.last = -1;
  this.next_0 = 0;
}
;
_.getLast = function getLast(){
  $clinit_CommandExecutor$CircularIterator();
  if (!(this.last >= 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return this.this$01.commands.get_0(this.last);
}
;
_.hasNext_0 = function hasNext(){
  return this.next_0 < this.end;
}
;
_.next_1 = function next_0(){
  var command;
  this.last = this.next_0;
  command = this.this$01.commands.get_0(this.next_0++);
  if (this.next_0 >= this.end) {
    this.next_0 = 0;
  }
  return command;
}
;
_.remove_3 = function remove_16(){
  if (!(this.last >= 0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.this$01.commands.remove_2(this.last);
  --this.end;
  if (this.last <= this.next_0) {
    if (--this.next_0 < 0) {
      this.next_0 = 0;
    }
  }
  this.last = -1;
}
;
_.setEnd = function setEnd(end){
  $clinit_CommandExecutor$CircularIterator();
  if (!(end >= this.next_0)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.end = end;
}
;
_.wasRemoved = function wasRemoved(){
  $clinit_CommandExecutor$CircularIterator();
  return this.last == -1;
}
;
_.end = 0;
_.last = 0;
_.next_0 = 0;
var Lcom_google_gwt_user_client_CommandExecutor$CircularIterator_2_classLit = createForClass('com.google.gwt.user.client', 'CommandExecutor/CircularIterator', 1042, Ljava_lang_Object_2_classLit);
function $clinit_Cookies(){
  $clinit_Cookies = emptyMethod;
  $clinit_Object();
}

function ensureCookies(){
  var newCachedCookies;
  if (isNull(cachedCookies) || needsRefresh()) {
    newCachedCookies = new HashMap;
    loadCookies(newCachedCookies);
    cachedCookies = newCachedCookies;
  }
  return cachedCookies;
}

function getCookie(name_0){
  $clinit_Cookies();
  var cookiesMap;
  cookiesMap = ensureCookies();
  return castToString(cookiesMap.get_1(name_0));
}

function isValidCookieName(name_0){
  if (uriEncoding) {
    return true;
  }
   else if (contains_Ljava_lang_CharSequence__Z__devirtual$(name_0, '=') || contains_Ljava_lang_CharSequence__Z__devirtual$(name_0, ';') || contains_Ljava_lang_CharSequence__Z__devirtual$(name_0, ',') || startsWith_Ljava_lang_String__Z__devirtual$(name_0, '$') || matches_Ljava_lang_String__Z__devirtual$(name_0, '.*\\s+.*')) {
    return false;
  }
   else {
    return true;
  }
}

function isValidCookieValue(value_0){
  if (uriEncoding) {
    return true;
  }
  if (contains_Ljava_lang_CharSequence__Z__devirtual$(value_0, '=') || contains_Ljava_lang_CharSequence__Z__devirtual$(value_0, ';')) {
    return false;
  }
   else {
    return true;
  }
}

function loadCookies(m){
  var docCookie = $doc.cookie;
  if (docCookie && docCookie != '') {
    var crumbs = docCookie.split('; ');
    for (var i = crumbs.length - 1; i >= 0; --i) {
      var name_0, value_0;
      var eqIdx = crumbs[i].indexOf('=');
      if (eqIdx == -1) {
        name_0 = crumbs[i];
        value_0 = '';
      }
       else {
        name_0 = crumbs[i].substring(0, eqIdx);
        value_0 = crumbs[i].substring(eqIdx + 1);
      }
      if (uriEncoding) {
        try {
          name_0 = decodeURIComponent(name_0);
        }
         catch (e) {
        }
        try {
          value_0 = decodeURIComponent(value_0);
        }
         catch (e) {
        }
      }
      m.put(name_0, value_0);
    }
  }
}

function needsRefresh(){
  var docCookie = $doc.cookie;
  if (docCookie != rawCookies) {
    rawCookies = docCookie;
    return true;
  }
   else {
    return false;
  }
}

function setCookie(name_0, value_0, expires){
  $clinit_Cookies();
  setCookie_0(name_0, value_0, expires, null, null, false);
}

function setCookie_0(name_0, value_0, expires, domain, path, secure){
  if (uriEncoding) {
    name_0 = uriEncode(name_0);
    value_0 = uriEncode(value_0);
  }
   else if (!isValidCookieName(name_0)) {
    throw toJs(new IllegalArgumentException_0('Illegal cookie format: ' + name_0 + ' is not a valid cookie name.'));
  }
   else if (!isValidCookieValue(value_0)) {
    throw toJs(new IllegalArgumentException_0('Illegal cookie format: ' + value_0 + ' is not a valid cookie value.'));
  }
  setCookieImpl(name_0, value_0, toDouble_0(isNull(expires)?0:expires.getTime_1()), domain, path, secure);
}

function setCookieImpl(name_0, value_0, expires, domain, path, secure){
  var c = name_0 + '=' + value_0;
  if (expires)
    c += ';expires=' + (new Date(expires)).toGMTString();
  if (domain)
    c += ';domain=' + domain;
  if (path)
    c += ';path=' + path;
  if (secure)
    c += ';secure';
  $doc.cookie = c;
}

function uriEncode(s){
  return encodeURIComponent(s);
}

var cachedCookies = null, rawCookies, uriEncoding = true;
function $clinit_DOM(){
  $clinit_DOM = emptyMethod;
  $clinit_Object();
  impl_8 = castTo(new DOMImplWebkit_0, 328);
}

function appendChild(parent_0, child){
  $clinit_DOM();
  if (!!isPotential(parent_0)) {
    debugger;
    throw toJs(makeAssertionError_Object('Cannot append to a PotentialElement'));
  }
  $appendChild(parent_0, resolve(child));
}

function asOld(elem){
  $clinit_DOM();
  return elem;
}

function clone_0(elem, deep){
  $clinit_DOM();
  return $cast($cloneNode(elem, deep));
}

function createDiv(){
  $clinit_DOM();
  return $cast($createDivElement(get_2654()));
}

function createElement_0(tagName){
  $clinit_DOM();
  return $cast($createElement(get_2654(), tagName));
}

function createInputRadio(name_0){
  $clinit_DOM();
  return $cast($createRadioInputElement(get_2654(), name_0));
}

function createSpan(){
  $clinit_DOM();
  return $cast($createSpanElement(get_2654()));
}

function createTBody(){
  $clinit_DOM();
  return $cast($createTBodyElement(get_2654()));
}

function createTD(){
  $clinit_DOM();
  return $cast($createTDElement(get_2654()));
}

function createTR(){
  $clinit_DOM();
  return $cast($createTRElement(get_2654()));
}

function createTable(){
  $clinit_DOM();
  return $cast($createTableElement(get_2654()));
}

function createUniqueId(){
  $clinit_DOM();
  return $createUniqueId(get_2654());
}

function dispatchEvent_2(evt, elem){
  $clinit_DOM();
  var eventListener;
  eventListener = getEventListener(elem);
  if (isNull(eventListener)) {
    return false;
  }
  dispatchEvent_3(evt, elem, eventListener);
  return true;
}

function dispatchEvent_3(evt, elem, listener){
  $clinit_DOM();
  var prevCurrentEvent;
  prevCurrentEvent = currentEvent_0;
  currentEvent_0 = evt;
  dispatchEventImpl(evt, elem, listener);
  currentEvent_0 = prevCurrentEvent;
}

function dispatchEventImpl(evt, elem, listener){
  if (jsEquals(elem, sCaptureElem)) {
    if (eventGetType_0(evt) == 8192) {
      sCaptureElem = null;
    }
  }
  listener.onBrowserEvent(evt);
}

function eventGetCurrentTarget_1(evt){
  $clinit_DOM();
  return $cast($getCurrentEventTarget(evt));
}

function eventGetTarget_1(evt){
  $clinit_DOM();
  return $cast($getEventTarget(evt));
}

function eventGetToElement(evt){
  $clinit_DOM();
  return asOld(impl_8.eventGetToElement(evt));
}

function eventGetType_0(evt){
  $clinit_DOM();
  return impl_8.eventGetTypeInt(evt);
}

function getCaptureElement(){
  $clinit_DOM();
  return asOld(sCaptureElem);
}

function getChild_0(parent_0, index_0){
  $clinit_DOM();
  return asOld(impl_8.getChild_0(parent_0, index_0));
}

function getElementAttribute(elem, attr){
  $clinit_DOM();
  return $getAttribute(elem, attr);
}

function getEventListener(elem){
  $clinit_DOM();
  return getEventListener_1(elem);
}

function getEventsSunk(elem){
  $clinit_DOM();
  return impl_8.getEventsSunk(elem);
}

function getFirstChild(elem){
  $clinit_DOM();
  return asOld($getFirstChildElement(elem));
}

function getNextSibling(elem){
  $clinit_DOM();
  return $cast($getNextSibling(elem));
}

function getParent_1(elem){
  $clinit_DOM();
  return asOld($getParentElement(elem));
}

function insertChild(parent_0, child, index_0){
  $clinit_DOM();
  if (!!isPotential(parent_0)) {
    debugger;
    throw toJs(makeAssertionError_Object('Cannot insert into a PotentialElement'));
  }
  impl_8.insertChild(parent_0, resolve(child), index_0);
}

function isPotential(o){
  $clinit_DOM();
  try {
    return !!o && !!o.__gwt_resolve;
  }
   catch (e) {
    return false;
  }
}

function maybeInitializeEventSystem(){
  $clinit_DOM();
  impl_8.maybeInitializeEventSystem();
}

function previewEvent(evt){
  $clinit_DOM();
  var ret;
  ret = fireNativePreviewEvent(evt);
  if (!ret && isNotNull(evt)) {
    $stopPropagation(evt);
    $preventDefault(evt);
  }
  return ret;
}

function releaseCapture(elem){
  $clinit_DOM();
  if (isNotNull(sCaptureElem) && jsEquals(elem, sCaptureElem)) {
    sCaptureElem = null;
  }
  impl_8.releaseCapture(elem);
}

function resolve(maybePotential){
  return maybePotential.__gwt_resolve?maybePotential.__gwt_resolve():maybePotential;
}

function setCapture(elem){
  $clinit_DOM();
  sCaptureElem = elem;
  impl_8.setCapture(elem);
}

function setEventListener(elem, listener){
  $clinit_DOM();
  setEventListener_1(elem, listener);
}

function setIntStyleAttribute(elem, attr, value_0){
  $clinit_DOM();
  $setProperty_0($getStyle(elem), attr, toString_64(value_0));
}

function setStyleAttribute(elem, attr, value_0){
  $clinit_DOM();
  $setProperty_0($getStyle(elem), attr, value_0);
}

function sinkBitlessEvent_0(elem, eventTypeName){
  $clinit_DOM();
  impl_8.sinkBitlessEvent_0(elem, eventTypeName);
}

function sinkEvents_1(elem, eventBits){
  $clinit_DOM();
  impl_8.sinkEvents_0(elem, eventBits);
}

var currentEvent_0 = null, impl_8, sCaptureElem;
function $clinit_DeferredCommand(){
  $clinit_DeferredCommand = emptyMethod;
  $clinit_Object();
  commandExecutor = new CommandExecutor;
}

function addCommand(cmd){
  $clinit_DeferredCommand();
  if (isNull(cmd)) {
    throw toJs(new NullPointerException_0('cmd cannot be null'));
  }
  commandExecutor.submit_0(cmd);
}

var commandExecutor;
function $clinit_DocumentModeAsserter(){
  $clinit_DocumentModeAsserter = emptyMethod;
  $clinit_Object();
}

function DocumentModeAsserter(){
  $clinit_DocumentModeAsserter();
  Object_0.call(this);
  this.$init_650();
}

defineClass(493, 1, {257:1, 1:1}, DocumentModeAsserter);
_.$init_650 = function $init_650(){
}
;
_.onModuleLoad = function onModuleLoad_7(){
  var allowedModes, currentMode, i, impl, message, severity;
  impl = castTo(new DocumentModeAsserter_DocumentModeProperty, 1140);
  severity = impl.getDocumentModeSeverity();
  if (jsEquals(severity, ($clinit_DocumentModeAsserter$Severity() , IGNORE))) {
    return;
  }
  currentMode = $getCompatMode(get_2654());
  allowedModes = impl.getAllowedDocumentModes();
  for (i = 0; i < allowedModes.length; i++) {
    if (equals_Ljava_lang_Object__Z__devirtual$_2(allowedModes[i], currentMode)) {
      return;
    }
  }
  if (allowedModes.length == 1 && equals_Ljava_lang_Object__Z__devirtual$_2('CSS1Compat', allowedModes[0]) && equals_Ljava_lang_Object__Z__devirtual$_2('BackCompat', currentMode)) {
    message = "GWT no longer supports Quirks Mode (document.compatMode=' " + 'BackCompat' + "').<br>Make sure your application's host HTML page has a Standards Mode " + "(document.compatMode=' " + 'CSS1Compat' + "') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML " + 'page.<br><br>To continue using this unsupported rendering mode and risk layout problems, ' + 'suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>' + '&nbsp;&nbsp;&lt;extend-configuration-property name="document.compatMode" value="' + currentMode + '"/&gt;';
  }
   else {
    message = "Your *.gwt.xml module configuration prohibits the use of the current document rendering mode (document.compatMode=' " + currentMode + "').<br>Modify your application's host HTML page doctype, or update your custom " + "'document.compatMode' configuration property settings.";
  }
  if (jsEquals(severity, ($clinit_DocumentModeAsserter$Severity() , ERROR))) {
    throw toJs(new RuntimeException_1(message));
  }
  log_0(message);
}
;
var Lcom_google_gwt_user_client_DocumentModeAsserter_2_classLit = createForClass('com.google.gwt.user.client', 'DocumentModeAsserter', 493, Ljava_lang_Object_2_classLit);
function $clinit_DocumentModeAsserter$DocumentModeProperty(){
  $clinit_DocumentModeAsserter$DocumentModeProperty = emptyMethod;
}

var Lcom_google_gwt_user_client_DocumentModeAsserter$DocumentModeProperty_2_classLit = createForInterface('com.google.gwt.user.client', 'DocumentModeAsserter/DocumentModeProperty');
function $clinit_DocumentModeAsserter$Severity(){
  $clinit_DocumentModeAsserter$Severity = emptyMethod;
  $clinit_Enum();
  ERROR = new DocumentModeAsserter$Severity('ERROR', 0);
  IGNORE = new DocumentModeAsserter$Severity('IGNORE', 1);
  WARN = new DocumentModeAsserter$Severity('WARN', 2);
}

function DocumentModeAsserter$Severity(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_651();
}

function valueOf_28(name_0){
  $clinit_DocumentModeAsserter$Severity();
  return valueOf(($clinit_DocumentModeAsserter$Severity$Map() , $MAP_27), name_0);
}

function values_29(){
  $clinit_DocumentModeAsserter$Severity();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_user_client_DocumentModeAsserter$Severity_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 222, 0, [ERROR, IGNORE, WARN]);
}

defineClass(222, 7, {222:1, 4:1, 8:1, 7:1, 1:1}, DocumentModeAsserter$Severity);
_.$init_651 = function $init_651(){
}
;
var ERROR, IGNORE, WARN;
var Lcom_google_gwt_user_client_DocumentModeAsserter$Severity_2_classLit = createForEnum('com.google.gwt.user.client', 'DocumentModeAsserter/Severity', 222, Ljava_lang_Enum_2_classLit, values_29, valueOf_28);
function $clinit_DocumentModeAsserter$Severity$Map(){
  $clinit_DocumentModeAsserter$Severity$Map = emptyMethod;
  $MAP_27 = createValueOfMap(values_29());
}

var $MAP_27;
function $clinit_DocumentModeAsserter_DocumentModeProperty(){
  $clinit_DocumentModeAsserter_DocumentModeProperty = emptyMethod;
  $clinit_Object();
}

function DocumentModeAsserter_DocumentModeProperty(){
  $clinit_DocumentModeAsserter_DocumentModeProperty();
  Object_0.call(this);
  this.$init_652();
}

defineClass(503, 1, {1140:1, 1:1}, DocumentModeAsserter_DocumentModeProperty);
_.$init_652 = function $init_652(){
}
;
_.getAllowedDocumentModes = function getAllowedDocumentModes(){
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['CSS1Compat']);
}
;
_.getDocumentModeSeverity = function getDocumentModeSeverity(){
  return $clinit_DocumentModeAsserter$Severity() , WARN;
}
;
var Lcom_google_gwt_user_client_DocumentModeAsserter_1DocumentModeProperty_2_classLit = createForClass('com.google.gwt.user.client', 'DocumentModeAsserter_DocumentModeProperty', 503, Ljava_lang_Object_2_classLit);
function $clinit_Element_0(){
  $clinit_Element_0 = emptyMethod;
  $clinit_Element();
}

function $clinit_Event_0(){
  $clinit_Event_0 = emptyMethod;
  $clinit_NativeEvent();
  FOCUSEVENTS = 2048 | 4096;
  KEYEVENTS = 128 | 256 | 512;
  MOUSEEVENTS = 4 | 8 | 64 | 16 | 32;
  TOUCHEVENTS = 1048576 | 2097152 | 4194304 | 8388608;
  GESTUREEVENTS = 16777216 | 33554432 | 67108864;
}

function $getTarget_0(this$static){
  $clinit_Event_0();
  return $cast($getEventTarget(this$static));
}

function $getTypeInt(this$static){
  $clinit_Event_0();
  return eventGetType_0(this$static);
}

function addNativePreviewHandler(handler){
  $clinit_Event_0();
  if (!isNotNull(handler)) {
    debugger;
    throw toJs(makeAssertionError_Object('Cannot add a null handler'));
  }
  maybeInitializeEventSystem();
  getType_57();
  if (isNull(handlers_0)) {
    handlers_0 = new HandlerManager_0(null, true);
    $clinit_Event$NativePreviewEvent() , singleton = new Event$NativePreviewEvent;
  }
  return handlers_0.addHandler_1(($clinit_Event$NativePreviewEvent() , TYPE_25), handler);
}

function as_2(event_0){
  $clinit_Event_0();
  return event_0;
}

function fireNativePreviewEvent(nativeEvent){
  $clinit_Event_0();
  return fire_9(handlers_0, nativeEvent);
}

function getEventListener_0(elem){
  $clinit_Event_0();
  return getEventListener(elem);
}

function getEventsSunk_0(elem){
  $clinit_Event_0();
  return getEventsSunk(elem);
}

function getTypeInt(typeName){
  $clinit_Event_0();
  return ($clinit_DOM() , impl_8).eventGetTypeInt_0(typeName);
}

function setEventListener_0(elem, listener){
  $clinit_Event_0();
  setEventListener(elem, listener);
}

function sinkEvents_2(elem, eventBits){
  $clinit_Event_0();
  sinkEvents_1(elem, eventBits);
}

var FOCUSEVENTS = 0, GESTUREEVENTS = 0, KEYEVENTS = 0, MOUSEEVENTS = 0, TOUCHEVENTS = 0, handlers_0;
function $clinit_Event$NativePreviewEvent(){
  $clinit_Event$NativePreviewEvent = emptyMethod;
  $clinit_GwtEvent();
}

function Event$NativePreviewEvent(){
  $clinit_Event$NativePreviewEvent();
  GwtEvent.call(this);
  this.$init_653();
}

function fire_9(handlers, nativeEvent){
  $clinit_Event$NativePreviewEvent();
  var lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, ret;
  if (isNotNull(TYPE_25) && isNotNull(handlers) && handlers.isEventHandled(TYPE_25)) {
    lastIsCanceled = singleton.isCanceled;
    lastIsConsumed = singleton.isConsumed;
    lastIsFirstHandler = singleton.isFirstHandler;
    lastNativeEvent = singleton.nativeEvent;
    singleton.revive();
    singleton.setNativeEvent_0(nativeEvent);
    handlers.fireEvent(singleton);
    ret = !(singleton.isCanceled_0() && !singleton.isConsumed_0());
    singleton.isCanceled = lastIsCanceled;
    singleton.isConsumed = lastIsConsumed;
    singleton.isFirstHandler = lastIsFirstHandler;
    singleton.nativeEvent = lastNativeEvent;
    return ret;
  }
  return true;
}

function getType_57(){
  $clinit_Event$NativePreviewEvent();
  if (isNull(TYPE_25)) {
    TYPE_25 = new GwtEvent$Type;
  }
  return TYPE_25;
}

defineClass(525, 110, {46:1, 1:1}, Event$NativePreviewEvent);
_.$init_653 = function $init_653(){
  this.isCanceled = false;
  this.isConsumed = false;
  this.isFirstHandler = false;
}
;
_.dispatch_0 = function dispatch_52(handler){
  this.dispatch_27(castTo(handler, 148));
}
;
_.getAssociatedType = function getAssociatedType_71(){
  return this.getAssociatedType_0();
}
;
_.cancel = function cancel_8(){
  this.isCanceled = true;
}
;
_.consume = function consume(){
  this.isConsumed = true;
}
;
_.dispatch_27 = function dispatch_53(handler){
  handler.onPreviewNativeEvent(this);
  singleton.isFirstHandler = false;
}
;
_.getAssociatedType_0 = function getAssociatedType_70(){
  return TYPE_25;
}
;
_.getNativeEvent = function getNativeEvent_0(){
  return this.nativeEvent;
}
;
_.getTypeInt = function getTypeInt_0(){
  return $getTypeInt(as_2(this.getNativeEvent()));
}
;
_.isCanceled_0 = function isCanceled_0(){
  return this.isCanceled;
}
;
_.isConsumed_0 = function isConsumed(){
  return this.isConsumed;
}
;
_.isFirstHandler_0 = function isFirstHandler(){
  return this.isFirstHandler;
}
;
_.revive = function revive_0(){
  getClassPrototype(110).revive.call(this);
  this.isCanceled = false;
  this.isConsumed = false;
  this.isFirstHandler = true;
  this.nativeEvent = null;
}
;
_.setNativeEvent_0 = function setNativeEvent_0(nativeEvent){
  this.nativeEvent = nativeEvent;
}
;
_.isCanceled = false;
_.isConsumed = false;
_.isFirstHandler = false;
var TYPE_25, singleton;
var Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit = createForClass('com.google.gwt.user.client', 'Event/NativePreviewEvent', 525, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_History(){
  $clinit_History = emptyMethod;
  $clinit_Object();
  impl_9 = castTo(new History$HistoryImpl, 270);
  historyEventSource = new History$HistoryEventSource;
  tokenEncoder = castTo(new History$HistoryTokenEncoder, 269);
  token_0 = getDecodedHash();
}

function addHistoryListener(listener){
  $clinit_History();
  add_21(listener);
}

function addValueChangeHandler_1(handler){
  $clinit_History();
  return historyEventSource.addValueChangeHandler(handler);
}

function getDecodedHash(){
  var hashToken;
  hashToken = getHash();
  if (jsEquals(hashToken, null) || isEmpty__Z__devirtual$(hashToken)) {
    return '';
  }
  return tokenEncoder.decode(substring_I_Ljava_lang_String___devirtual$(hashToken, 1));
}

function getToken_5(){
  $clinit_History();
  return token_0;
}

function onHashChanged(){
  $clinit_History();
  var hashToken;
  hashToken = getDecodedHash();
  if (!equals_Ljava_lang_Object__Z__devirtual$_2(hashToken, getToken_5())) {
    token_0 = hashToken;
    historyEventSource.fireValueChangedEvent(hashToken);
  }
}

var historyEventSource, impl_9, token_0, tokenEncoder;
function $clinit_History$HistoryEventSource(){
  $clinit_History$HistoryEventSource = emptyMethod;
  $clinit_Object();
}

function History$HistoryEventSource(){
  $clinit_History$HistoryEventSource();
  Object_0.call(this);
  this.$init_654();
}

defineClass(588, 1, {1:1}, History$HistoryEventSource);
_.$init_654 = function $init_654(){
  this.handlers = new HandlerManager(null);
}
;
_.addValueChangeHandler = function addValueChangeHandler_2(handler){
  return this.handlers.addHandler_1(getType_56(), handler);
}
;
_.fireEvent = function fireEvent_5(event_0){
  this.handlers.fireEvent(event_0);
}
;
_.fireValueChangedEvent = function fireValueChangedEvent(newToken){
  fire_8(this, newToken);
}
;
var Lcom_google_gwt_user_client_History$HistoryEventSource_2_classLit = createForClass('com.google.gwt.user.client', 'History/HistoryEventSource', 588, Ljava_lang_Object_2_classLit);
function $clinit_History$HistoryImpl(){
  $clinit_History$HistoryImpl = emptyMethod;
  $clinit_Object();
}

function History$HistoryImpl(){
  $clinit_History$HistoryImpl();
  Object_0.call(this);
  this.$init_655();
  this.attachListener();
}

defineClass(270, 1, {270:1, 1:1}, History$HistoryImpl);
_.$init_655 = function $init_655(){
}
;
_.attachListener = function attachListener(){
  var handler = $entry(onHashChanged);
  $wnd.addEventListener('hashchange', handler, false);
}
;
var Lcom_google_gwt_user_client_History$HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client', 'History/HistoryImpl', 270, Ljava_lang_Object_2_classLit);
function $clinit_History$HistoryTokenEncoder(){
  $clinit_History$HistoryTokenEncoder = emptyMethod;
  $clinit_Object();
}

function History$HistoryTokenEncoder(){
  $clinit_History$HistoryTokenEncoder();
  Object_0.call(this);
  this.$init_656();
}

defineClass(269, 1, {269:1, 1:1}, History$HistoryTokenEncoder);
_.$init_656 = function $init_656(){
}
;
_.decode = function decode(toDecode){
  return $wnd.decodeURI(toDecode.replace('%23', '#'));
}
;
var Lcom_google_gwt_user_client_History$HistoryTokenEncoder_2_classLit = createForClass('com.google.gwt.user.client', 'History/HistoryTokenEncoder', 269, Ljava_lang_Object_2_classLit);
function $clinit_History$WrapHistory(){
  $clinit_History$WrapHistory = emptyMethod;
  $clinit_BaseListenerWrapper();
}

function History$WrapHistory(listener){
  BaseListenerWrapper.call(this, listener);
  this.$init_657();
}

function add_21(listener){
  $clinit_History$WrapHistory();
  addValueChangeHandler_1(new History$WrapHistory(listener));
}

defineClass(589, 67, {75:1, 13:1, 67:1, 1:1}, History$WrapHistory);
_.$init_657 = function $init_657(){
}
;
_.onValueChange = function onValueChange_24(event_0){
  castTo(this.listener, 524).onHistoryChanged(castToString(event_0.getValue_0()));
}
;
var Lcom_google_gwt_user_client_History$WrapHistory_2_classLit = createForClass('com.google.gwt.user.client', 'History/WrapHistory', 589, Lcom_google_gwt_user_client_BaseListenerWrapper_2_classLit);
function $clinit_IncrementalCommandCanceledException(){
  $clinit_IncrementalCommandCanceledException = emptyMethod;
  $clinit_RuntimeException();
}

function IncrementalCommandCanceledException(command){
  $clinit_IncrementalCommandCanceledException();
  RuntimeException.call(this);
  this.$init_658();
  this.command = command;
}

defineClass(1050, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, IncrementalCommandCanceledException);
_.$init_658 = function $init_658(){
}
;
var Lcom_google_gwt_user_client_IncrementalCommandCanceledException_2_classLit = createForClass('com.google.gwt.user.client', 'IncrementalCommandCanceledException', 1050, Ljava_lang_RuntimeException_2_classLit);
function $clinit_Random(){
  $clinit_Random = emptyMethod;
  $clinit_Object();
}

function nextInt(){
  $clinit_Random();
  return Math.floor(Math.random() * 4294967296) - 2147483648 | 0;
}

function nextInt_0(upperBound){
  $clinit_Random();
  return Math.floor(Math.random() * upperBound) | 0;
}

function $clinit_Window(){
  $clinit_Window = emptyMethod;
  $clinit_Object();
  impl_10 = castTo(new WindowImpl, 313);
}

function addCloseHandler(handler){
  $clinit_Window();
  maybeInitializeCloseHandlers();
  return addHandler_4(getType_52(), handler);
}

function addHandler_4(type_0, handler){
  return getHandlers().addHandler_1(type_0, handler);
}

function addResizeHandler(handler){
  $clinit_Window();
  maybeInitializeCloseHandlers();
  maybeInitializeResizeHandlers();
  return addHandler_4(getType_54(), handler);
}

function addWindowClosingHandler(handler){
  $clinit_Window();
  maybeInitializeCloseHandlers();
  return addHandler_4(getType_58(), handler);
}

function addWindowResizeListener(listener){
  $clinit_Window();
  add_20(listener);
}

function alert_0(msg){
  $clinit_Window();
  $wnd.alert(msg);
}

function confirm_0(msg){
  $clinit_Window();
  return $wnd.confirm(msg);
}

function fireEvent_6(event_0){
  if (isNotNull(handlers_1)) {
    handlers_1.fireEvent(event_0);
  }
}

function getClientHeight(){
  $clinit_Window();
  return $getClientHeight_0(get_2654());
}

function getClientWidth(){
  $clinit_Window();
  return $getClientWidth_0(get_2654());
}

function getHandlers(){
  if (isNull(handlers_1)) {
    handlers_1 = new Window$WindowHandlers;
  }
  return handlers_1;
}

function getScrollLeft_2(){
  $clinit_Window();
  return $getScrollLeft_0(get_2654());
}

function getScrollTop_0(){
  $clinit_Window();
  return $getScrollTop_0(get_2654());
}

function maybeInitializeCloseHandlers(){
  if (isClient() && !closeHandlersInitialized) {
    impl_10.initWindowCloseHandler();
    closeHandlersInitialized = true;
  }
}

function maybeInitializeResizeHandlers(){
  if (isClient() && !resizeHandlersInitialized) {
    impl_10.initWindowResizeHandler();
    resizeHandlersInitialized = true;
  }
}

function onClosed(){
  $clinit_Window();
  if (closeHandlersInitialized) {
    fire_3(getHandlers(), null);
  }
}

function onClosing(){
  $clinit_Window();
  var event_0;
  if (closeHandlersInitialized) {
    event_0 = new Window$ClosingEvent;
    fireEvent_6(event_0);
    return event_0.getMessage();
  }
  return null;
}

function onResize_2(){
  $clinit_Window();
  var height, width_0;
  if (resizeHandlersInitialized) {
    width_0 = getClientWidth();
    height = getClientHeight();
    if (lastResizeWidth != width_0 || lastResizeHeight != height) {
      lastResizeWidth = width_0;
      lastResizeHeight = height;
      fire_6(getHandlers(), width_0, height);
    }
  }
}

var closeHandlersInitialized = false, handlers_1, impl_10, lastResizeHeight = 0, lastResizeWidth = 0, resizeHandlersInitialized = false;
function $clinit_Window$ClosingEvent(){
  $clinit_Window$ClosingEvent = emptyMethod;
  $clinit_GwtEvent();
  TYPE_26 = new GwtEvent$Type;
}

function Window$ClosingEvent(){
  $clinit_Window$ClosingEvent();
  GwtEvent.call(this);
  this.$init_659();
}

function getType_58(){
  $clinit_Window$ClosingEvent();
  return TYPE_26;
}

defineClass(526, 110, {46:1, 1:1}, Window$ClosingEvent);
_.$init_659 = function $init_659(){
  this.message_0 = null;
}
;
_.dispatch_0 = function dispatch_54(handler){
  this.dispatch_28(castTo(handler, 528));
}
;
_.getAssociatedType = function getAssociatedType_73(){
  return this.getAssociatedType_0();
}
;
_.dispatch_28 = function dispatch_55(handler){
  handler.onWindowClosing(this);
}
;
_.getAssociatedType_0 = function getAssociatedType_72(){
  return TYPE_26;
}
;
_.getMessage = function getMessage_6(){
  return this.message_0;
}
;
var TYPE_26;
var Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client', 'Window/ClosingEvent', 526, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $clinit_Window$Location(){
  $clinit_Window$Location = emptyMethod;
  $clinit_Object();
}

function getHash(){
  $clinit_Window$Location();
  return ($clinit_Window() , impl_10).getHash();
}

function $clinit_Window$WindowHandlers(){
  $clinit_Window$WindowHandlers = emptyMethod;
  $clinit_HandlerManager();
}

function Window$WindowHandlers(){
  $clinit_Window$WindowHandlers();
  HandlerManager.call(this, null);
  this.$init_660();
}

defineClass(527, 223, {1:1}, Window$WindowHandlers);
_.$init_660 = function $init_660(){
}
;
var Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client', 'Window/WindowHandlers', 527, Lcom_google_gwt_event_shared_HandlerManager_2_classLit);
function $clinit_DOMImpl_0(){
  $clinit_DOMImpl_0 = emptyMethod;
  $clinit_Object();
}

function DOMImpl_0(){
  $clinit_DOMImpl_0();
  Object_0.call(this);
  this.$init_661();
}

function getEventListener_1(elem){
  $clinit_DOMImpl_0();
  var maybeListener = elem.__listener;
  return isMyListener(maybeListener)?maybeListener:null;
}

function isMyListener(object){
  return !instanceOfJso(object) && instanceOf(object, 18);
}

function setEventListener_1(elem, listener){
  $clinit_DOMImpl_0();
  elem.__listener = listener;
}

defineClass(328, 1, {1:1});
_.$init_661 = function $init_661(){
}
;
_.eventGetTypeInt = function eventGetTypeInt(evt){
  return this.eventGetTypeInt_0($getType_0(evt));
}
;
_.eventGetTypeInt_0 = function eventGetTypeInt_0(eventType){
  switch (eventType) {
    case 'blur':
      return 4096;
    case 'change':
      return 1024;
    case 'click':
      return 1;
    case 'dblclick':
      return 2;
    case 'focus':
      return 2048;
    case 'keydown':
      return 128;
    case 'keypress':
      return 256;
    case 'keyup':
      return 512;
    case 'load':
      return 32768;
    case 'losecapture':
      return 8192;
    case 'mousedown':
      return 4;
    case 'mousemove':
      return 64;
    case 'mouseout':
      return 32;
    case 'mouseover':
      return 16;
    case 'mouseup':
      return 8;
    case 'scroll':
      return 16384;
    case 'error':
      return 65536;
    case 'mousewheel':
      return 131072;
    case 'DOMMouseScroll':
      return 131072;
    case 'contextmenu':
      return 262144;
    case 'paste':
      return 524288;
    case 'touchstart':
      return 1048576;
    case 'touchmove':
      return 2097152;
    case 'touchend':
      return 4194304;
    case 'touchcancel':
      return 8388608;
    case 'gesturestart':
      return 16777216;
    case 'gesturechange':
      return 33554432;
    case 'gestureend':
      return 67108864;
    default:return -1;
  }
}
;
_.getEventsSunk = function getEventsSunk_1(elem){
  return elem.__eventBits || 0;
}
;
_.maybeInitializeEventSystem = function maybeInitializeEventSystem_0(){
  if (!eventSystemIsInitialized) {
    this.initEventSystem();
    eventSystemIsInitialized = true;
  }
}
;
var eventSystemIsInitialized = false;
var Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl', 'DOMImpl', 328, Ljava_lang_Object_2_classLit);
function $clinit_DOMImplStandard_0(){
  $clinit_DOMImplStandard_0 = emptyMethod;
  $clinit_DOMImpl_0();
  bitlessEventDispatchers = getBitlessEventDispatchers();
  captureEventDispatchers = getCaptureEventDispatchers();
}

function DOMImplStandard_0(){
  $clinit_DOMImplStandard_0();
  DOMImpl_0.call(this);
  this.$init_662();
}

function dispatchCapturedEvent(evt){
  previewEvent(evt);
}

function dispatchCapturedMouseEvent(evt){
  var cancelled;
  cancelled = !previewEvent(evt);
  if (cancelled || isNull(captureElem)) {
    return;
  }
  if (dispatchEvent_2(evt, captureElem)) {
    $stopPropagation(evt);
  }
}

function dispatchDragEvent(evt){
  $preventDefault(evt);
  dispatchEvent_5(evt);
}

function dispatchEvent_5(evt){
  var element;
  element = getFirstAncestorWithListener(evt);
  if (isNull(element)) {
    return;
  }
  dispatchEvent_3(evt, $getNodeType(element) != 1?null:element, getEventListener_1(element));
}

function dispatchUnhandledEvent_0(evt){
  var element;
  element = $cast($getCurrentEventTarget(evt));
  $setPropertyString(element, '__gwtLastUnhandledEvent', $getType_0(evt));
  dispatchEvent_5(evt);
}

function getBitlessEventDispatchers(){
  return {_default_:dispatchEvent_5, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};
}

function getCaptureEventDispatchers(){
  return {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};
}

function getFirstAncestorWithListener(evt){
  var curElem;
  curElem = $cast($getCurrentEventTarget(evt));
  while (isNotNull(curElem) && isNull(getEventListener_1(curElem))) {
    curElem = $cast($getParentNode(curElem));
  }
  return curElem;
}

defineClass(611, 328, {1:1});
_.$init_662 = function $init_662(){
}
;
_.eventGetToElement = function eventGetToElement_0(evt){
  if (equals_Ljava_lang_Object__Z__devirtual$_2($getType_0(evt), 'mouseover')) {
    return $cast($getEventTarget(evt));
  }
  if (equals_Ljava_lang_Object__Z__devirtual$_2($getType_0(evt), 'mouseout')) {
    return $cast($getRelatedEventTarget(evt));
  }
  return null;
}
;
_.getChild_0 = function getChild_1(elem, index_0){
  var count = 0, child = elem.firstChild;
  while (child) {
    if (child.nodeType == 1) {
      if (index_0 == count)
        return child;
      ++count;
    }
    child = child.nextSibling;
  }
  return null;
}
;
_.initEventSystem = function initEventSystem(){
  dispatchEvent_4 = $entry(dispatchEvent_5);
  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);
  var foreach = foreach_0;
  var bitlessEvents = bitlessEventDispatchers;
  foreach(bitlessEvents, function(e, fn){
    bitlessEvents[e] = $entry(fn);
  }
  );
  var captureEvents_0 = captureEventDispatchers;
  foreach(captureEvents_0, function(e, fn){
    captureEvents_0[e] = $entry(fn);
  }
  );
  foreach(captureEvents_0, function(e, fn){
    $wnd.addEventListener(e, fn, true);
  }
  );
}
;
_.insertChild = function insertChild_0(parent_0, toAdd, index_0){
  var count = 0, child = parent_0.firstChild, before = null;
  while (child) {
    if (child.nodeType == 1) {
      if (count == index_0) {
        before = child;
        break;
      }
      ++count;
    }
    child = child.nextSibling;
  }
  parent_0.insertBefore(toAdd, before);
}
;
_.releaseCapture = function releaseCapture_0(elem){
  this.maybeInitializeEventSystem();
  if (jsEquals(captureElem, elem)) {
    captureElem = null;
  }
}
;
_.setCapture = function setCapture_0(elem){
  this.maybeInitializeEventSystem();
  captureElem = elem;
}
;
_.sinkBitlessEvent_0 = function sinkBitlessEvent_1(elem, eventTypeName){
  this.maybeInitializeEventSystem();
  this.sinkBitlessEventImpl(elem, eventTypeName);
}
;
_.sinkBitlessEventImpl = function sinkBitlessEventImpl(elem, eventTypeName){
  var dispatchMap = bitlessEventDispatchers;
  var dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];
  elem.addEventListener(eventTypeName, dispatcher, false);
}
;
_.sinkEvents_0 = function sinkEvents_3(elem, bits){
  this.maybeInitializeEventSystem();
  this.sinkEventsImpl(elem, bits);
}
;
_.sinkEventsImpl = function sinkEventsImpl(elem, bits){
  var chMask = (elem.__eventBits || 0) ^ bits;
  elem.__eventBits = bits;
  if (!chMask)
    return;
  if (chMask & 1)
    elem.onclick = bits & 1?dispatchEvent_4:null;
  if (chMask & 2)
    elem.ondblclick = bits & 2?dispatchEvent_4:null;
  if (chMask & 4)
    elem.onmousedown = bits & 4?dispatchEvent_4:null;
  if (chMask & 8)
    elem.onmouseup = bits & 8?dispatchEvent_4:null;
  if (chMask & 16)
    elem.onmouseover = bits & 16?dispatchEvent_4:null;
  if (chMask & 32)
    elem.onmouseout = bits & 32?dispatchEvent_4:null;
  if (chMask & 64)
    elem.onmousemove = bits & 64?dispatchEvent_4:null;
  if (chMask & 128)
    elem.onkeydown = bits & 128?dispatchEvent_4:null;
  if (chMask & 256)
    elem.onkeypress = bits & 256?dispatchEvent_4:null;
  if (chMask & 512)
    elem.onkeyup = bits & 512?dispatchEvent_4:null;
  if (chMask & 1024)
    elem.onchange = bits & 1024?dispatchEvent_4:null;
  if (chMask & 2048)
    elem.onfocus = bits & 2048?dispatchEvent_4:null;
  if (chMask & 4096)
    elem.onblur = bits & 4096?dispatchEvent_4:null;
  if (chMask & 8192)
    elem.onlosecapture = bits & 8192?dispatchEvent_4:null;
  if (chMask & 16384)
    elem.onscroll = bits & 16384?dispatchEvent_4:null;
  if (chMask & 32768)
    elem.onload = bits & 32768?dispatchUnhandledEvent:null;
  if (chMask & 65536)
    elem.onerror = bits & 65536?dispatchEvent_4:null;
  if (chMask & 131072)
    elem.onmousewheel = bits & 131072?dispatchEvent_4:null;
  if (chMask & 262144)
    elem.oncontextmenu = bits & 262144?dispatchEvent_4:null;
  if (chMask & 524288)
    elem.onpaste = bits & 524288?dispatchEvent_4:null;
  if (chMask & 1048576)
    elem.ontouchstart = bits & 1048576?dispatchEvent_4:null;
  if (chMask & 2097152)
    elem.ontouchmove = bits & 2097152?dispatchEvent_4:null;
  if (chMask & 4194304)
    elem.ontouchend = bits & 4194304?dispatchEvent_4:null;
  if (chMask & 8388608)
    elem.ontouchcancel = bits & 8388608?dispatchEvent_4:null;
  if (chMask & 16777216)
    elem.ongesturestart = bits & 16777216?dispatchEvent_4:null;
  if (chMask & 33554432)
    elem.ongesturechange = bits & 33554432?dispatchEvent_4:null;
  if (chMask & 67108864)
    elem.ongestureend = bits & 67108864?dispatchEvent_4:null;
}
;
var bitlessEventDispatchers, captureElem, captureEventDispatchers, dispatchEvent_4, dispatchUnhandledEvent;
var Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl', 'DOMImplStandard', 611, Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit);
function $clinit_DOMImplStandardBase_0(){
  $clinit_DOMImplStandardBase_0 = emptyMethod;
  $clinit_DOMImplStandard_0();
}

function DOMImplStandardBase_0(){
  $clinit_DOMImplStandardBase_0();
  DOMImplStandard_0.call(this);
  this.$init_663();
}

defineClass(612, 611, {1:1});
_.$init_663 = function $init_663(){
}
;
var Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.user.client.impl', 'DOMImplStandardBase', 612, Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit);
function $clinit_DOMImplWebkit_0(){
  $clinit_DOMImplWebkit_0 = emptyMethod;
  $clinit_DOMImplStandardBase_0();
}

function DOMImplWebkit_0(){
  $clinit_DOMImplWebkit_0();
  DOMImplStandardBase_0.call(this);
  this.$init_664();
}

defineClass(613, 612, {328:1, 1:1}, DOMImplWebkit_0);
_.$init_664 = function $init_664(){
}
;
var Lcom_google_gwt_user_client_impl_DOMImplWebkit_2_classLit = createForClass('com.google.gwt.user.client.impl', 'DOMImplWebkit', 613, Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit);
function $clinit_ElementMapperImpl(){
  $clinit_ElementMapperImpl = emptyMethod;
  $clinit_Object();
}

function ElementMapperImpl(){
  $clinit_ElementMapperImpl();
  Object_0.call(this);
  this.$init_665();
}

function clearIndex(elem){
  elem['__uiObjectID'] = null;
}

function getIndex(elem){
  var index_0 = elem['__uiObjectID'];
  return index_0 == null?-1:index_0;
}

function setIndex(elem, index_0){
  elem['__uiObjectID'] = index_0;
}

defineClass(960, 1, {1:1}, ElementMapperImpl);
_.$init_665 = function $init_665(){
  this.freeList = null;
  this.uiObjectList = new ArrayList;
}
;
_.get_3 = function get_2659(elem){
  var index_0;
  index_0 = getIndex(elem);
  if (index_0 < 0) {
    return null;
  }
  return castTo(this.uiObjectList.get_0(index_0), 14);
}
;
_.getObjectList = function getObjectList(){
  return this.uiObjectList;
}
;
_.put_0 = function put_1(uiObject){
  var index_0;
  if (isNull(this.freeList)) {
    index_0 = this.uiObjectList.size_1();
    this.uiObjectList.add_5(uiObject);
  }
   else {
    index_0 = this.freeList.index_0;
    this.uiObjectList.set_1(index_0, uiObject);
    this.freeList = this.freeList.next_0;
  }
  setIndex(uiObject.getElement(), index_0);
}
;
_.removeByElement = function removeByElement(elem){
  var index_0;
  index_0 = getIndex(elem);
  this.removeImpl(elem, index_0);
}
;
_.removeImpl = function removeImpl(elem, index_0){
  clearIndex(elem);
  this.uiObjectList.set_1(index_0, null);
  this.freeList = new ElementMapperImpl$FreeNode(index_0, this.freeList);
}
;
var Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl', 'ElementMapperImpl', 960, Ljava_lang_Object_2_classLit);
function $clinit_ElementMapperImpl$FreeNode(){
  $clinit_ElementMapperImpl$FreeNode = emptyMethod;
  $clinit_Object();
}

function ElementMapperImpl$FreeNode(index_0, next){
  $clinit_ElementMapperImpl$FreeNode();
  Object_0.call(this);
  this.$init_666();
  this.index_0 = index_0;
  this.next_0 = next;
}

defineClass(961, 1, {1:1}, ElementMapperImpl$FreeNode);
_.$init_666 = function $init_666(){
}
;
_.index_0 = 0;
var Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit = createForClass('com.google.gwt.user.client.impl', 'ElementMapperImpl/FreeNode', 961, Ljava_lang_Object_2_classLit);
function $clinit_EventMap(){
  $clinit_EventMap = emptyMethod;
  $clinit_JavaScriptObject();
}

function foreach_0(map_0, fn){
  $clinit_EventMap();
  for (var e in map_0) {
    if (map_0.hasOwnProperty(e)) {
      fn(e, map_0[e]);
    }
  }
}

function $clinit_WindowImpl(){
  $clinit_WindowImpl = emptyMethod;
  $clinit_Object();
}

function WindowImpl(){
  $clinit_WindowImpl();
  Object_0.call(this);
  this.$init_667();
}

defineClass(313, 1, {313:1, 1:1}, WindowImpl);
_.$init_667 = function $init_667(){
}
;
_.getHash = function getHash_0(){
  return $wnd.location.hash;
}
;
_.initWindowCloseHandler = function initWindowCloseHandler(){
  var oldOnBeforeUnload = $wnd.onbeforeunload;
  var oldOnUnload = $wnd.onunload;
  $wnd.onbeforeunload = function(evt){
    var ret, oldRet;
    try {
      ret = $entry(onClosing)();
    }
     finally {
      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);
    }
    if (ret != null) {
      return ret;
    }
    if (oldRet != null) {
      return oldRet;
    }
  }
  ;
  $wnd.onunload = $entry(function(evt){
    try {
      onClosed();
    }
     finally {
      oldOnUnload && oldOnUnload(evt);
      $wnd.onresize = null;
      $wnd.onscroll = null;
      $wnd.onbeforeunload = null;
      $wnd.onunload = null;
    }
  }
  );
}
;
_.initWindowResizeHandler = function initWindowResizeHandler(){
  var oldOnResize = $wnd.onresize;
  $wnd.onresize = $entry(function(evt){
    try {
      onResize_2();
    }
     finally {
      oldOnResize && oldOnResize(evt);
    }
  }
  );
}
;
var Lcom_google_gwt_user_client_impl_WindowImpl_2_classLit = createForClass('com.google.gwt.user.client.impl', 'WindowImpl', 313, Ljava_lang_Object_2_classLit);
function $clinit_CustomFieldSerializer(){
  $clinit_CustomFieldSerializer = emptyMethod;
  $clinit_Object();
}

function $clinit_IncompatibleRemoteServiceException(){
  $clinit_IncompatibleRemoteServiceException = emptyMethod;
  $clinit_RuntimeException();
}

function IncompatibleRemoteServiceException(){
  $clinit_IncompatibleRemoteServiceException();
  RuntimeException_1.call(this, 'This application is out of date, please click the refresh button on your browser.');
  this.$init_668();
}

function IncompatibleRemoteServiceException_0(msg){
  $clinit_IncompatibleRemoteServiceException();
  RuntimeException_1.call(this, 'This application is out of date, please click the refresh button on your browser.' + ' ( ' + msg + ' )');
  this.$init_668();
}

function IncompatibleRemoteServiceException_1(msg, cause){
  $clinit_IncompatibleRemoteServiceException();
  RuntimeException_2.call(this, msg, cause);
  this.$init_668();
}

defineClass(211, 27, {211:1, 4:1, 25:1, 1:1, 27:1, 24:1}, IncompatibleRemoteServiceException, IncompatibleRemoteServiceException_0, IncompatibleRemoteServiceException_1);
_.$init_668 = function $init_668(){
}
;
var Lcom_google_gwt_user_client_rpc_IncompatibleRemoteServiceException_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'IncompatibleRemoteServiceException', 211, Ljava_lang_RuntimeException_2_classLit);
function $clinit_IncompatibleRemoteServiceException_FieldSerializer(){
  $clinit_IncompatibleRemoteServiceException_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_115(streamReader, instance){
  $clinit_IncompatibleRemoteServiceException_FieldSerializer();
  deserialize_125(streamReader, instance);
}

function instantiate_110(streamReader){
  $clinit_IncompatibleRemoteServiceException_FieldSerializer();
  return new IncompatibleRemoteServiceException;
}

function serialize_110(streamWriter, instance){
  $clinit_IncompatibleRemoteServiceException_FieldSerializer();
  serialize_120(streamWriter, instance);
}

function $clinit_InvocationException(){
  $clinit_InvocationException = emptyMethod;
  $clinit_RuntimeException();
}

function InvocationException(s){
  $clinit_InvocationException();
  RuntimeException_2.call(this, s, null);
  this.$init_669();
}

function InvocationException_0(s, cause){
  $clinit_InvocationException();
  RuntimeException_2.call(this, s, cause);
  this.$init_669();
}

defineClass(227, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, InvocationException, InvocationException_0);
_.$init_669 = function $init_669(){
}
;
var Lcom_google_gwt_user_client_rpc_InvocationException_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'InvocationException', 227, Ljava_lang_RuntimeException_2_classLit);
function $clinit_RpcRequestBuilder(){
  $clinit_RpcRequestBuilder = emptyMethod;
  $clinit_Object();
}

function RpcRequestBuilder(){
  $clinit_RpcRequestBuilder();
  Object_0.call(this);
  this.$init_670();
}

defineClass(852, 1, {1:1}, RpcRequestBuilder);
_.$init_670 = function $init_670(){
}
;
_.create_0 = function create_6(serviceEntryPoint){
  this.builder = this.doCreate(serviceEntryPoint);
  if (!isNotNull(this.builder)) {
    debugger;
    throw toJs(makeAssertionError_Object('doCreate failed to return a RequestBuilder'));
  }
  return this;
}
;
_.doCreate = function doCreate(serviceEntryPoint){
  return new RequestBuilder(($clinit_RequestBuilder() , POST), serviceEntryPoint);
}
;
_.doFinish = function doFinish(rb){
  rb.setHeader('X-GWT-Permutation', getPermutationStrongName());
  rb.setHeader('X-GWT-Module-Base', getModuleBaseURL());
}
;
_.doSetCallback = function doSetCallback(rb, callback){
  rb.setCallback_0(callback);
}
;
_.doSetContentType = function doSetContentType(rb, contentType){
  rb.setHeader('Content-Type', contentType);
}
;
_.doSetRequestData = function doSetRequestData(rb, data_0){
  rb.setRequestData(data_0);
}
;
_.doSetRequestId = function doSetRequestId(rb, id_0){
}
;
_.finish_1 = function finish_1(){
  try {
    if (!isNotNull(this.builder)) {
      debugger;
      throw toJs(makeAssertionError_Object('Call create() first'));
    }
    this.doFinish(this.builder);
    return this.builder;
  }
   finally {
    this.builder = null;
  }
}
;
_.setCallback_1 = function setCallback_1(callback){
  if (!isNotNull(this.builder)) {
    debugger;
    throw toJs(makeAssertionError_Object('Call create() first'));
  }
  this.doSetCallback(this.builder, callback);
  return this;
}
;
_.setContentType = function setContentType(contentType){
  if (!isNotNull(this.builder)) {
    debugger;
    throw toJs(makeAssertionError_Object('Call create() first'));
  }
  this.doSetContentType(this.builder, contentType);
  return this;
}
;
_.setRequestData_0 = function setRequestData_0(data_0){
  if (!isNotNull(this.builder)) {
    debugger;
    throw toJs(makeAssertionError_Object('Call create() first'));
  }
  this.doSetRequestData(this.builder, data_0);
  return this;
}
;
_.setRequestId = function setRequestId(id_0){
  if (!isNotNull(this.builder)) {
    debugger;
    throw toJs(makeAssertionError_Object('Call create() first'));
  }
  this.doSetRequestId(this.builder, id_0);
  return this;
}
;
var Lcom_google_gwt_user_client_rpc_RpcRequestBuilder_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'RpcRequestBuilder', 852, Ljava_lang_Object_2_classLit);
function $clinit_RpcTokenException(){
  $clinit_RpcTokenException = emptyMethod;
  $clinit_RuntimeException();
}

function RpcTokenException(){
  $clinit_RpcTokenException();
  RuntimeException_1.call(this, 'Invalid RPC token');
  this.$init_671();
}

defineClass(297, 27, {297:1, 4:1, 25:1, 1:1, 27:1, 24:1}, RpcTokenException);
_.$init_671 = function $init_671(){
}
;
var Lcom_google_gwt_user_client_rpc_RpcTokenException_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'RpcTokenException', 297, Ljava_lang_RuntimeException_2_classLit);
function $clinit_RpcTokenException_FieldSerializer(){
  $clinit_RpcTokenException_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_116(streamReader, instance){
  $clinit_RpcTokenException_FieldSerializer();
  deserialize_125(streamReader, instance);
}

function instantiate_111(streamReader){
  $clinit_RpcTokenException_FieldSerializer();
  return new RpcTokenException;
}

function $clinit_SerializationException(){
  $clinit_SerializationException = emptyMethod;
  $clinit_Exception();
}

function SerializationException(msg){
  $clinit_SerializationException();
  Exception_1.call(this, msg);
  this.$init_672();
}

function SerializationException_0(cause){
  $clinit_SerializationException();
  Exception_3.call(this, cause);
  this.$init_672();
}

defineClass(95, 25, {95:1, 4:1, 25:1, 1:1, 24:1}, SerializationException, SerializationException_0);
_.$init_672 = function $init_672(){
}
;
var Lcom_google_gwt_user_client_rpc_SerializationException_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'SerializationException', 95, Ljava_lang_Exception_2_classLit);
function $clinit_SerializationStreamReader(){
  $clinit_SerializationStreamReader = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_SerializationStreamReader_2_classLit = createForInterface('com.google.gwt.user.client.rpc', 'SerializationStreamReader');
function $clinit_SerializationStreamWriter(){
  $clinit_SerializationStreamWriter = emptyMethod;
}

var Lcom_google_gwt_user_client_rpc_SerializationStreamWriter_2_classLit = createForInterface('com.google.gwt.user.client.rpc', 'SerializationStreamWriter');
function $clinit_ServiceDefTarget$NoServiceEntryPointSpecifiedException(){
  $clinit_ServiceDefTarget$NoServiceEntryPointSpecifiedException = emptyMethod;
  $clinit_InvocationException();
}

function ServiceDefTarget$NoServiceEntryPointSpecifiedException(){
  $clinit_ServiceDefTarget$NoServiceEntryPointSpecifiedException();
  InvocationException.call(this, 'Service implementation URL not specified');
  this.$init_673();
}

defineClass(560, 227, {4:1, 25:1, 1:1, 27:1, 24:1}, ServiceDefTarget$NoServiceEntryPointSpecifiedException);
_.$init_673 = function $init_673(){
}
;
var Lcom_google_gwt_user_client_rpc_ServiceDefTarget$NoServiceEntryPointSpecifiedException_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'ServiceDefTarget/NoServiceEntryPointSpecifiedException', 560, Lcom_google_gwt_user_client_rpc_InvocationException_2_classLit);
function $clinit_StatusCodeException(){
  $clinit_StatusCodeException = emptyMethod;
  $clinit_InvocationException();
}

function StatusCodeException(statusCode, statusText, encodedResponse){
  $clinit_StatusCodeException();
  InvocationException.call(this, statusCode + ' ' + statusText + ' ' + encodedResponse);
  this.$init_674();
  this.statusCode = statusCode;
  this.statusText_0 = statusText;
  this.encodedResponse = encodedResponse;
}

defineClass(1034, 227, {4:1, 25:1, 1:1, 27:1, 24:1}, StatusCodeException);
_.$init_674 = function $init_674(){
}
;
_.statusCode = 0;
var Lcom_google_gwt_user_client_rpc_StatusCodeException_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'StatusCodeException', 1034, Lcom_google_gwt_user_client_rpc_InvocationException_2_classLit);
var Lcom_google_gwt_user_client_rpc_XsrfToken_2_classLit = createForClass('com.google.gwt.user.client.rpc', 'XsrfToken', 1715, Ljava_lang_Object_2_classLit);
function $clinit_XsrfToken_FieldSerializer(){
  $clinit_XsrfToken_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function getToken_6(instance){
  return instance.token;
}

function serialize_111(streamWriter, instance){
  $clinit_XsrfToken_FieldSerializer();
  streamWriter.writeString(getToken_6(instance));
}

function $clinit_byte_Array_Rank_1_FieldSerializer(){
  $clinit_byte_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_117(streamReader, instance){
  $clinit_byte_Array_Rank_1_FieldSerializer();
  var i, n;
  for (i = 0 , n = instance.length; i < n; ++i) {
    instance[i] = streamReader.readByte();
  }
}

function instantiate_112(streamReader){
  $clinit_byte_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(B_classLit, {173:1, 4:1, 1:1}, 29, size_0, 15, 1);
}

function serialize_112(streamWriter, instance){
  $clinit_byte_Array_Rank_1_FieldSerializer();
  var i, n;
  streamWriter.writeInt(instance.length);
  for (i = 0 , n = instance.length; i < n; ++i) {
    streamWriter.writeByte(instance[i]);
  }
}

function $clinit_Boolean_CustomFieldSerializer(){
  $clinit_Boolean_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_118(streamReader, instance){
  $clinit_Boolean_CustomFieldSerializer();
}

function instantiate_113(streamReader){
  $clinit_Boolean_CustomFieldSerializer();
  return valueOf_32(streamReader.readBoolean());
}

function serialize_113(streamWriter, instance){
  $clinit_Boolean_CustomFieldSerializer();
  streamWriter.writeBoolean(booleanValue__Z__devirtual$(instance));
}

function $clinit_Exception_FieldSerializer(){
  $clinit_Exception_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_119(streamReader, instance){
  $clinit_Exception_FieldSerializer();
  deserialize_128(streamReader, instance);
}

function serialize_114(streamWriter, instance){
  $clinit_Exception_FieldSerializer();
  serialize_123(streamWriter, instance);
}

function $clinit_Integer_Array_Rank_1_FieldSerializer(){
  $clinit_Integer_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_120(streamReader, instance){
  $clinit_Integer_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_114(streamReader){
  $clinit_Integer_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Ljava_lang_Integer_2_classLit, {4:1, 1:1, 5:1}, 28, size_0, 0, 1);
}

function serialize_115(streamWriter, instance){
  $clinit_Integer_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_Integer_CustomFieldSerializer(){
  $clinit_Integer_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_121(streamReader, instance){
  $clinit_Integer_CustomFieldSerializer();
}

function instantiate_115(streamReader){
  $clinit_Integer_CustomFieldSerializer();
  return valueOf_37(streamReader.readInt());
}

function serialize_116(streamWriter, instance){
  $clinit_Integer_CustomFieldSerializer();
  streamWriter.writeInt(instance.intValue());
}

function $clinit_Long_Array_Rank_1_FieldSerializer(){
  $clinit_Long_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_122(streamReader, instance){
  $clinit_Long_Array_Rank_1_FieldSerializer();
  deserialize_124(streamReader, instance);
}

function instantiate_116(streamReader){
  $clinit_Long_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Ljava_lang_Long_2_classLit, {4:1, 1:1, 5:1}, 66, size_0, 0, 1);
}

function serialize_117(streamWriter, instance){
  $clinit_Long_Array_Rank_1_FieldSerializer();
  serialize_119(streamWriter, instance);
}

function $clinit_Long_CustomFieldSerializer(){
  $clinit_Long_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_123(streamReader, instance){
  $clinit_Long_CustomFieldSerializer();
}

function instantiate_117(streamReader){
  $clinit_Long_CustomFieldSerializer();
  return valueOf_40(streamReader.readLong());
}

function serialize_118(streamWriter, instance){
  $clinit_Long_CustomFieldSerializer();
  streamWriter.writeLong(instance.longValue());
}

function $clinit_Object_Array_CustomFieldSerializer(){
  $clinit_Object_Array_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_124(streamReader, instance){
  $clinit_Object_Array_CustomFieldSerializer();
  var itemIndex;
  for (itemIndex = 0; itemIndex < instance.length; ++itemIndex) {
    setCheck(instance, itemIndex, streamReader.readObject());
  }
}

function serialize_119(streamWriter, instance){
  $clinit_Object_Array_CustomFieldSerializer();
  var itemCount, itemIndex;
  itemCount = instance.length;
  streamWriter.writeInt(itemCount);
  for (itemIndex = 0; itemIndex < itemCount; ++itemIndex) {
    streamWriter.writeObject(instance[itemIndex]);
  }
}

function $clinit_RuntimeException_FieldSerializer(){
  $clinit_RuntimeException_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_125(streamReader, instance){
  $clinit_RuntimeException_FieldSerializer();
  deserialize_119(streamReader, instance);
}

function serialize_120(streamWriter, instance){
  $clinit_RuntimeException_FieldSerializer();
  serialize_114(streamWriter, instance);
}

function $clinit_String_Array_Rank_1_FieldSerializer(){
  $clinit_String_Array_Rank_1_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_126(streamReader, instance){
  $clinit_String_Array_Rank_1_FieldSerializer();
  var i, n;
  for (i = 0 , n = instance.length; i < n; ++i) {
    instance[i] = streamReader.readString();
  }
}

function instantiate_118(streamReader){
  $clinit_String_Array_Rank_1_FieldSerializer();
  var size_0;
  size_0 = streamReader.readInt();
  return initUnidimensionalArray(Ljava_lang_String_2_classLit, {4:1, 1:1, 5:1}, 2, size_0, 6, 1);
}

function serialize_121(streamWriter, instance){
  $clinit_String_Array_Rank_1_FieldSerializer();
  var i, n;
  streamWriter.writeInt(instance.length);
  for (i = 0 , n = instance.length; i < n; ++i) {
    streamWriter.writeString(instance[i]);
  }
}

function $clinit_String_CustomFieldSerializer(){
  $clinit_String_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_127(streamReader, instance){
  $clinit_String_CustomFieldSerializer();
}

function instantiate_119(streamReader){
  $clinit_String_CustomFieldSerializer();
  return streamReader.readString();
}

function serialize_122(streamWriter, instance){
  $clinit_String_CustomFieldSerializer();
  streamWriter.writeString(instance);
}

function $clinit_Throwable_FieldSerializer(){
  $clinit_Throwable_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_128(streamReader, instance){
  $clinit_Throwable_FieldSerializer();
  setDetailMessage(instance, streamReader.readString());
}

function getDetailMessage(instance){
  return instance.detailMessage;
}

function serialize_123(streamWriter, instance){
  $clinit_Throwable_FieldSerializer();
  streamWriter.writeString(getDetailMessage(instance));
}

function setDetailMessage(instance, value_0){
  instance.detailMessage = value_0;
}

function $clinit_Date_CustomFieldSerializer(){
  $clinit_Date_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_129(streamReader, instance){
  $clinit_Date_CustomFieldSerializer();
}

function instantiate_120(streamReader){
  $clinit_Date_CustomFieldSerializer();
  return new Date_2(streamReader.readLong());
}

function serialize_124(streamWriter, instance){
  $clinit_Date_CustomFieldSerializer();
  streamWriter.writeLong(instance.getTime_1());
}

function $clinit_Time_CustomFieldSerializer(){
  $clinit_Time_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_130(streamReader, instance){
  $clinit_Time_CustomFieldSerializer();
}

function instantiate_121(streamReader){
  $clinit_Time_CustomFieldSerializer();
  return new Time(streamReader.readLong());
}

function serialize_125(streamWriter, instance){
  $clinit_Time_CustomFieldSerializer();
  streamWriter.writeLong(instance.getTime_1());
}

function $clinit_Timestamp_CustomFieldSerializer(){
  $clinit_Timestamp_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_131(streamReader, instance){
  $clinit_Timestamp_CustomFieldSerializer();
  instance.setNanos(streamReader.readInt());
}

function instantiate_122(streamReader){
  $clinit_Timestamp_CustomFieldSerializer();
  return new Timestamp(streamReader.readLong());
}

function serialize_126(streamWriter, instance){
  $clinit_Timestamp_CustomFieldSerializer();
  streamWriter.writeLong(instance.getTime_1());
  streamWriter.writeInt(instance.getNanos());
}

function $clinit_ArrayList_CustomFieldSerializer(){
  $clinit_ArrayList_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_132(streamReader, instance){
  $clinit_ArrayList_CustomFieldSerializer();
  deserialize_134(streamReader, instance);
}

function serialize_127(streamWriter, instance){
  $clinit_ArrayList_CustomFieldSerializer();
  serialize_129(streamWriter, instance);
}

function $clinit_ArrayList_FieldSerializer(){
  $clinit_ArrayList_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function instantiate_123(streamReader){
  $clinit_ArrayList_FieldSerializer();
  return new ArrayList;
}

function $clinit_Arrays$ArrayList_CustomFieldSerializer(){
  $clinit_Arrays$ArrayList_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_133(streamReader, instance){
  $clinit_Arrays$ArrayList_CustomFieldSerializer();
}

function instantiate_124(streamReader){
  $clinit_Arrays$ArrayList_CustomFieldSerializer();
  var array, i, size_0;
  size_0 = streamReader.readInt();
  array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, size_0, 5, 1);
  for (i = 0; i < size_0; ++i) {
    setCheck(array, i, streamReader.readObject());
  }
  return asList(array);
}

function serialize_128(streamWriter, instance){
  $clinit_Arrays$ArrayList_CustomFieldSerializer();
  var obj, obj$iterator, size_0;
  size_0 = instance.size_1();
  streamWriter.writeInt(size_0);
  for (obj$iterator = instance.iterator_0(); obj$iterator.hasNext_0();) {
    obj = obj$iterator.next_1();
    streamWriter.writeObject(obj);
  }
}

function $clinit_Collection_CustomFieldSerializerBase(){
  $clinit_Collection_CustomFieldSerializerBase = emptyMethod;
  $clinit_Object();
}

function deserialize_134(streamReader, instance){
  $clinit_Collection_CustomFieldSerializerBase();
  var i, obj, size_0;
  size_0 = streamReader.readInt();
  for (i = 0; i < size_0; ++i) {
    obj = streamReader.readObject();
    instance.add_5(obj);
  }
}

function serialize_129(streamWriter, instance){
  $clinit_Collection_CustomFieldSerializerBase();
  var obj, obj$iterator, size_0;
  size_0 = instance.size_1();
  streamWriter.writeInt(size_0);
  for (obj$iterator = instance.iterator_0(); obj$iterator.hasNext_0();) {
    obj = obj$iterator.next_1();
    streamWriter.writeObject(obj);
  }
}

function $clinit_Collections$EmptyList_CustomFieldSerializer(){
  $clinit_Collections$EmptyList_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_135(streamReader, instance){
  $clinit_Collections$EmptyList_CustomFieldSerializer();
}

function instantiate_125(streamReader){
  $clinit_Collections$EmptyList_CustomFieldSerializer();
  return emptyList();
}

function serialize_130(streamWriter, instance){
  $clinit_Collections$EmptyList_CustomFieldSerializer();
}

function $clinit_Collections$EmptyMap_CustomFieldSerializer(){
  $clinit_Collections$EmptyMap_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_136(streamReader, instance){
  $clinit_Collections$EmptyMap_CustomFieldSerializer();
}

function instantiate_126(streamReader){
  $clinit_Collections$EmptyMap_CustomFieldSerializer();
  return emptyMap();
}

function serialize_131(streamWriter, instance){
  $clinit_Collections$EmptyMap_CustomFieldSerializer();
}

function $clinit_Collections$EmptySet_CustomFieldSerializer(){
  $clinit_Collections$EmptySet_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_137(streamReader, instance){
  $clinit_Collections$EmptySet_CustomFieldSerializer();
}

function instantiate_127(streamReader){
  $clinit_Collections$EmptySet_CustomFieldSerializer();
  return emptySet();
}

function serialize_132(streamWriter, instance){
  $clinit_Collections$EmptySet_CustomFieldSerializer();
}

function $clinit_Collections$SingletonList_CustomFieldSerializer(){
  $clinit_Collections$SingletonList_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_138(streamReader, instance){
  $clinit_Collections$SingletonList_CustomFieldSerializer();
}

function instantiate_128(streamReader){
  $clinit_Collections$SingletonList_CustomFieldSerializer();
  return singletonList(streamReader.readObject());
}

function serialize_133(streamWriter, instance){
  $clinit_Collections$SingletonList_CustomFieldSerializer();
  streamWriter.writeObject(instance.get_0(0));
}

function $clinit_Date_CustomFieldSerializer_0(){
  $clinit_Date_CustomFieldSerializer_0 = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_139(streamReader, instance){
  $clinit_Date_CustomFieldSerializer_0();
}

function instantiate_129(streamReader){
  $clinit_Date_CustomFieldSerializer_0();
  return new Date_1(streamReader.readLong());
}

function serialize_134(streamWriter, instance){
  $clinit_Date_CustomFieldSerializer_0();
  streamWriter.writeLong(instance.getTime_1());
}

function $clinit_EnumMap_CustomFieldSerializer(){
  $clinit_EnumMap_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_140(streamReader, instance){
  $clinit_EnumMap_CustomFieldSerializer();
  deserialize_147(streamReader, instance);
}

function getKeyUniverse(map_0){
  return map_0.keySet.all;
}

function instantiate_130(streamReader){
  $clinit_EnumMap_CustomFieldSerializer();
  var clazz, exemplar;
  exemplar = streamReader.readObject();
  clazz = getClass__Ljava_lang_Class___devirtual$(exemplar);
  return new EnumMap(clazz);
}

function serialize_135(streamWriter, instance){
  $clinit_EnumMap_CustomFieldSerializer();
  var exemplar, keyUniverse;
  keyUniverse = getKeyUniverse(instance);
  exemplar = keyUniverse[0];
  streamWriter.writeObject(exemplar);
  serialize_142(streamWriter, instance);
}

function $clinit_HashMap_CustomFieldSerializer(){
  $clinit_HashMap_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_141(streamReader, instance){
  $clinit_HashMap_CustomFieldSerializer();
  deserialize_147(streamReader, instance);
}

function serialize_136(streamWriter, instance){
  $clinit_HashMap_CustomFieldSerializer();
  serialize_142(streamWriter, instance);
}

function $clinit_HashMap_FieldSerializer(){
  $clinit_HashMap_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function instantiate_131(streamReader){
  $clinit_HashMap_FieldSerializer();
  return new HashMap;
}

function $clinit_HashSet_CustomFieldSerializer(){
  $clinit_HashSet_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_142(streamReader, instance){
  $clinit_HashSet_CustomFieldSerializer();
  deserialize_134(streamReader, instance);
}

function serialize_137(streamWriter, instance){
  $clinit_HashSet_CustomFieldSerializer();
  serialize_129(streamWriter, instance);
}

function $clinit_HashSet_FieldSerializer(){
  $clinit_HashSet_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function instantiate_132(streamReader){
  $clinit_HashSet_FieldSerializer();
  return new HashSet;
}

function $clinit_IdentityHashMap_CustomFieldSerializer(){
  $clinit_IdentityHashMap_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_143(streamReader, instance){
  $clinit_IdentityHashMap_CustomFieldSerializer();
  deserialize_147(streamReader, instance);
}

function serialize_138(streamWriter, instance){
  $clinit_IdentityHashMap_CustomFieldSerializer();
  serialize_142(streamWriter, instance);
}

function $clinit_IdentityHashMap_FieldSerializer(){
  $clinit_IdentityHashMap_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function instantiate_133(streamReader){
  $clinit_IdentityHashMap_FieldSerializer();
  return new IdentityHashMap;
}

function $clinit_LinkedHashMap_CustomFieldSerializer(){
  $clinit_LinkedHashMap_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_144(streamReader, instance){
  $clinit_LinkedHashMap_CustomFieldSerializer();
  deserialize_147(streamReader, instance);
}

function getAccessOrder(instance){
  return instance.accessOrder;
}

function instantiate_134(streamReader){
  $clinit_LinkedHashMap_CustomFieldSerializer();
  var accessOrder;
  accessOrder = streamReader.readBoolean();
  return new LinkedHashMap_0(16, 0.75, accessOrder);
}

function serialize_139(streamWriter, instance){
  $clinit_LinkedHashMap_CustomFieldSerializer();
  streamWriter.writeBoolean(getAccessOrder(instance));
  serialize_142(streamWriter, instance);
}

function $clinit_LinkedHashSet_CustomFieldSerializer(){
  $clinit_LinkedHashSet_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_145(streamReader, instance){
  $clinit_LinkedHashSet_CustomFieldSerializer();
  deserialize_134(streamReader, instance);
}

function serialize_140(streamWriter, instance){
  $clinit_LinkedHashSet_CustomFieldSerializer();
  serialize_129(streamWriter, instance);
}

function $clinit_LinkedHashSet_FieldSerializer(){
  $clinit_LinkedHashSet_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function instantiate_135(streamReader){
  $clinit_LinkedHashSet_FieldSerializer();
  return new LinkedHashSet;
}

function $clinit_LinkedList_CustomFieldSerializer(){
  $clinit_LinkedList_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_146(streamReader, instance){
  $clinit_LinkedList_CustomFieldSerializer();
  deserialize_134(streamReader, instance);
}

function serialize_141(streamWriter, instance){
  $clinit_LinkedList_CustomFieldSerializer();
  serialize_129(streamWriter, instance);
}

function $clinit_LinkedList_FieldSerializer(){
  $clinit_LinkedList_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function instantiate_136(streamReader){
  $clinit_LinkedList_FieldSerializer();
  return new LinkedList;
}

function $clinit_Map_CustomFieldSerializerBase(){
  $clinit_Map_CustomFieldSerializerBase = emptyMethod;
  $clinit_Object();
}

function deserialize_147(streamReader, instance){
  $clinit_Map_CustomFieldSerializerBase();
  var i, key, size_0, value_0;
  size_0 = streamReader.readInt();
  for (i = 0; i < size_0; ++i) {
    key = streamReader.readObject();
    value_0 = streamReader.readObject();
    instance.put(key, value_0);
  }
}

function serialize_142(streamWriter, instance){
  $clinit_Map_CustomFieldSerializerBase();
  var entry, entry$iterator, size_0;
  size_0 = instance.size_1();
  streamWriter.writeInt(size_0);
  for (entry$iterator = castTo(instance.entrySet(), 53).iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    streamWriter.writeObject(entry.getKey());
    streamWriter.writeObject(entry.getValue_0());
  }
}

function $clinit_Stack_FieldSerializer(){
  $clinit_Stack_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_148(streamReader, instance){
  $clinit_Stack_FieldSerializer();
  deserialize_151(streamReader, instance);
}

function instantiate_137(streamReader){
  $clinit_Stack_FieldSerializer();
  return new Stack;
}

function serialize_143(streamWriter, instance){
  $clinit_Stack_FieldSerializer();
  serialize_146(streamWriter, instance);
}

function $clinit_TreeMap_CustomFieldSerializer(){
  $clinit_TreeMap_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_149(streamReader, instance){
  $clinit_TreeMap_CustomFieldSerializer();
  deserialize_147(streamReader, instance);
}

function instantiate_138(streamReader){
  $clinit_TreeMap_CustomFieldSerializer();
  return new TreeMap(castTo(streamReader.readObject(), 107));
}

function serialize_144(streamWriter, instance){
  $clinit_TreeMap_CustomFieldSerializer();
  streamWriter.writeObject(instance.comparator());
  serialize_142(streamWriter, instance);
}

function $clinit_TreeSet_CustomFieldSerializer(){
  $clinit_TreeSet_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_150(streamReader, instance){
  $clinit_TreeSet_CustomFieldSerializer();
  deserialize_134(streamReader, instance);
}

function instantiate_139(streamReader){
  $clinit_TreeSet_CustomFieldSerializer();
  return new TreeSet(castTo(streamReader.readObject(), 107));
}

function serialize_145(streamWriter, instance){
  $clinit_TreeSet_CustomFieldSerializer();
  streamWriter.writeObject(instance.comparator());
  serialize_129(streamWriter, instance);
}

function $clinit_Vector_CustomFieldSerializer(){
  $clinit_Vector_CustomFieldSerializer = emptyMethod;
  $clinit_CustomFieldSerializer();
}

function deserialize_151(streamReader, instance){
  $clinit_Vector_CustomFieldSerializer();
  deserialize_134(streamReader, instance);
}

function serialize_146(streamWriter, instance){
  $clinit_Vector_CustomFieldSerializer();
  serialize_129(streamWriter, instance);
}

function $clinit_Vector_FieldSerializer(){
  $clinit_Vector_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function instantiate_140(streamReader){
  $clinit_Vector_FieldSerializer();
  return new Vector;
}

function $clinit_AbstractSerializationStream(){
  $clinit_AbstractSerializationStream = emptyMethod;
  $clinit_Object();
}

function AbstractSerializationStream(){
  $clinit_AbstractSerializationStream();
  Object_0.call(this);
  this.$init_675();
}

function base64Append(sb, digit, haveNonZero){
  var c;
  if (digit > 0) {
    haveNonZero = true;
  }
  if (haveNonZero) {
    if (digit < 26) {
      c = 65 + digit;
    }
     else if (digit < 52) {
      c = 97 + digit - 26;
    }
     else if (digit < 62) {
      c = 48 + digit - 52;
    }
     else if (digit == 62) {
      c = 36;
    }
     else {
      c = 95;
    }
    sb.append_4(narrow_char(c));
  }
  return haveNonZero;
}

function base64Value(digit){
  if (digit >= 65 && digit <= 90) {
    return digit - 65;
  }
  if (digit >= 97) {
    return digit - 97 + 26;
  }
  if (digit >= 48 && digit <= 57) {
    return digit - 48 + 52;
  }
  if (digit == 36) {
    return 62;
  }
  return 63;
}

function longFromBase64(value_0){
  $clinit_AbstractSerializationStream();
  var len, longVal, pos;
  pos = 0;
  longVal = fromInt_0(base64Value(charAt_I_C__devirtual$(value_0, pos++)));
  len = length__I__devirtual$(value_0);
  while (pos < len) {
    longVal = shl_0(longVal, 6);
    longVal = or_0(longVal, fromInt_0(base64Value(charAt_I_C__devirtual$(value_0, pos++))));
  }
  return longVal;
}

function longToBase64(value_0){
  $clinit_AbstractSerializationStream();
  var haveNonZero, high, low, sb, v;
  low = toInt_0(and_0(value_0, -1));
  high = toInt_0(shr_0(value_0, 32));
  sb = new StringBuilder;
  haveNonZero = base64Append(sb, high >> 28 & 15, false);
  haveNonZero = base64Append(sb, high >> 22 & 63, haveNonZero);
  haveNonZero = base64Append(sb, high >> 16 & 63, haveNonZero);
  haveNonZero = base64Append(sb, high >> 10 & 63, haveNonZero);
  haveNonZero = base64Append(sb, high >> 4 & 63, haveNonZero);
  v = (high & 15) << 2 | low >> 30 & 3;
  haveNonZero = base64Append(sb, v, haveNonZero);
  haveNonZero = base64Append(sb, low >> 24 & 63, haveNonZero);
  haveNonZero = base64Append(sb, low >> 18 & 63, haveNonZero);
  haveNonZero = base64Append(sb, low >> 12 & 63, haveNonZero);
  base64Append(sb, low >> 6 & 63, haveNonZero);
  base64Append(sb, low & 63, true);
  return sb.toString_0();
}

defineClass(391, 1, {1:1});
_.$init_675 = function $init_675(){
  this.flags = 0;
  this.version = 7;
}
;
_.addFlags = function addFlags(flags){
  this.flags |= flags;
}
;
_.areFlagsValid = function areFlagsValid(){
  return ((this.flags | 3) ^ 3) == 0;
}
;
_.getFlags = function getFlags(){
  return this.flags;
}
;
_.getVersion_0 = function getVersion_2(){
  return this.version;
}
;
_.setFlags = function setFlags(flags){
  this.flags = flags;
}
;
_.setVersion_0 = function setVersion_2(version){
  this.version = version;
}
;
_.flags = 0;
_.version = 0;
var Lcom_google_gwt_user_client_rpc_impl_AbstractSerializationStream_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'AbstractSerializationStream', 391, Ljava_lang_Object_2_classLit);
function $clinit_AbstractSerializationStreamReader(){
  $clinit_AbstractSerializationStreamReader = emptyMethod;
  $clinit_AbstractSerializationStream();
  TWO_PWR_31_DBL_0 = 65536 * 32768;
  TWO_PWR_32_DBL_0 = 65536 * 65536;
  TWO_PWR_44_DBL_0 = 4194304 * 4194304;
  TWO_PWR_63_DBL_0 = 4294967296 * 2147483648;
}

function AbstractSerializationStreamReader(){
  $clinit_AbstractSerializationStreamReader();
  AbstractSerializationStream.call(this);
  this.$init_676();
}

defineClass(392, 391, {1:1});
_.$init_676 = function $init_676(){
  this.seenArray = new ArrayList;
}
;
_.prepareToRead = function prepareToRead(encoded){
  this.seenArray.clear_0();
  this.setVersion_0(this.readInt());
  this.setFlags(this.readInt());
}
;
_.readObject = function readObject(){
  var token, typeSignature;
  token = this.readInt();
  if (token < 0) {
    return this.seenArray.get_0(-(token + 1));
  }
  typeSignature = this.getString(token);
  if (jsEquals(typeSignature, null)) {
    return null;
  }
  return this.deserialize_1(typeSignature);
}
;
_.rememberDecodedObject = function rememberDecodedObject(index_0, o){
  this.seenArray.set_1(index_0 - 1, o);
}
;
_.reserveDecodedObjectIndex = function reserveDecodedObjectIndex(){
  this.seenArray.add_5(null);
  return this.seenArray.size_1();
}
;
var TWO_PWR_31_DBL_0 = 0, TWO_PWR_32_DBL_0 = 0, TWO_PWR_44_DBL_0 = 0, TWO_PWR_63_DBL_0 = 0;
var Lcom_google_gwt_user_client_rpc_impl_AbstractSerializationStreamReader_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'AbstractSerializationStreamReader', 392, Lcom_google_gwt_user_client_rpc_impl_AbstractSerializationStream_2_classLit);
function $clinit_AbstractSerializationStreamWriter(){
  $clinit_AbstractSerializationStreamWriter = emptyMethod;
  $clinit_AbstractSerializationStream();
  TWO_PWR_32_DBL_1 = 65536 * 65536;
}

function AbstractSerializationStreamWriter(){
  $clinit_AbstractSerializationStreamWriter();
  AbstractSerializationStream.call(this);
  this.$init_677();
}

defineClass(406, 391, {1:1});
_.$init_677 = function $init_677(){
  this.objectMap = new IdentityHashMap;
  this.stringMap = new HashMap;
  this.stringTable = new ArrayList;
}
;
_.addString = function addString(string){
  var index_0, o;
  if (jsEquals(string, null)) {
    return 0;
  }
  o = castTo(this.stringMap.get_1(string), 28);
  if (isNotNull(o)) {
    return o.intValue();
  }
  this.stringTable.add_5(string);
  index_0 = this.stringTable.size_1();
  this.stringMap.put(string, valueOf_37(index_0));
  return index_0;
}
;
_.getIndexForObject = function getIndexForObject(instance){
  return this.objectMap.containsKey(instance)?castTo(this.objectMap.get_1(instance), 28).intValue():-1;
}
;
_.getStringTable = function getStringTable(){
  return this.stringTable;
}
;
_.prepareToWrite = function prepareToWrite(){
  this.objectCount = 0;
  this.objectMap.clear_0();
  this.stringMap.clear_0();
  this.stringTable.clear_0();
}
;
_.saveIndexForObject = function saveIndexForObject(instance){
  this.objectMap.put(instance, valueOf_37(this.objectCount++));
}
;
_.writeBoolean = function writeBoolean(fieldValue){
  this.append_0(fieldValue?'1':'0');
}
;
_.writeByte = function writeByte(fieldValue){
  this.append_0(valueOf_45(fieldValue));
}
;
_.writeDouble = function writeDouble(fieldValue){
  this.append_0(valueOf_43(fieldValue));
}
;
_.writeFloat = function writeFloat(fieldValue){
  this.writeDouble(fieldValue);
}
;
_.writeInt = function writeInt(fieldValue){
  this.append_0(valueOf_45(fieldValue));
}
;
_.writeObject = function writeObject(instance){
  var objIndex, typeSignature;
  if (jsEquals(instance, null)) {
    this.writeString(null);
    return;
  }
  objIndex = this.getIndexForObject(instance);
  if (objIndex >= 0) {
    this.writeInt(-(objIndex + 1));
    return;
  }
  this.saveIndexForObject(instance);
  typeSignature = this.getObjectTypeSignature(instance);
  if (jsEquals(typeSignature, null)) {
    throw toJs(new SerializationException('could not get type signature for ' + getClass__Ljava_lang_Class___devirtual$(instance)));
  }
  this.writeString(typeSignature);
  this.serialize_0(instance, typeSignature);
}
;
_.writeShort = function writeShort(value_0){
  this.append_0(valueOf_45(value_0));
}
;
_.writeString = function writeString(value_0){
  this.writeInt(this.addString(value_0));
}
;
_.objectCount = 0;
var TWO_PWR_32_DBL_1 = 0;
var Lcom_google_gwt_user_client_rpc_impl_AbstractSerializationStreamWriter_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'AbstractSerializationStreamWriter', 406, Lcom_google_gwt_user_client_rpc_impl_AbstractSerializationStream_2_classLit);
function $clinit_ClientSerializationStreamReader(){
  $clinit_ClientSerializationStreamReader = emptyMethod;
  $clinit_AbstractSerializationStreamReader();
}

function ClientSerializationStreamReader(serializer){
  $clinit_ClientSerializationStreamReader();
  AbstractSerializationStreamReader.call(this);
  this.$init_678();
  this.serializer = serializer;
}

function eval_0(encoded){
  return eval(encoded);
}

function getLength(array){
  return array.length;
}

function readVersion(encodedString){
  var pos, versionStr;
  versionStr = substring_II_Ljava_lang_String___devirtual$(encodedString, lastIndexOf_Ljava_lang_String__I__devirtual$(encodedString, ',') + 1, lastIndexOf_Ljava_lang_String__I__devirtual$(encodedString, ']'));
  pos = lastIndexOf_Ljava_lang_String__I__devirtual$(versionStr, '[');
  if (pos >= 0) {
    versionStr = substring_I_Ljava_lang_String___devirtual$(versionStr, pos + 1);
  }
  return parseInt_1(trim__Ljava_lang_String___devirtual$(versionStr));
}

defineClass(713, 392, {1:1}, ClientSerializationStreamReader);
_.$init_678 = function $init_678(){
}
;
_.deserialize_1 = function deserialize_152(typeSignature){
  var id_0, instance;
  id_0 = this.reserveDecodedObjectIndex();
  instance = this.serializer.instantiate(this, typeSignature);
  this.rememberDecodedObject(id_0, instance);
  this.serializer.deserialize_0(this, instance, typeSignature);
  return instance;
}
;
_.getString = function getString(index_0){
  return index_0 > 0?this.stringTable[index_0 - 1]:null;
}
;
_.prepareToRead = function prepareToRead_0(encoded){
  if (readVersion(encoded) < 8) {
    this.results = eval_0(encoded);
  }
   else {
    this.results = safeEval(encoded);
  }
  this.index_0 = getLength(this.results);
  getClassPrototype(392).prepareToRead.call(this, encoded);
  if (this.getVersion_0() < 5 || this.getVersion_0() > 8) {
    throw toJs(new IncompatibleRemoteServiceException_0('Got version ' + this.getVersion_0() + ', expected version between ' + 5 + ' and ' + 8));
  }
  if (!this.areFlagsValid()) {
    throw toJs(new IncompatibleRemoteServiceException_0('Got an unknown flag from server: ' + this.getFlags()));
  }
  this.stringTable = this.readJavaScriptObject();
}
;
_.readBoolean = function readBoolean(){
  return !!this.results[--this.index_0];
}
;
_.readByte = function readByte(){
  return this.results[--this.index_0];
}
;
_.readChar = function readChar(){
  return this.results[--this.index_0];
}
;
_.readDouble = function readDouble(){
  return Number(this.results[--this.index_0]);
}
;
_.readFloat = function readFloat(){
  return Number(this.results[--this.index_0]);
}
;
_.readInt = function readInt(){
  return this.results[--this.index_0];
}
;
_.readJavaScriptObject = function readJavaScriptObject(){
  return this.results[--this.index_0];
}
;
_.readLong = function readLong(){
  var s = this.results[--this.index_0];
  return longFromBase64(s);
}
;
_.readShort = function readShort(){
  return this.results[--this.index_0];
}
;
_.readString = function readString(){
  return this.getString(this.readInt());
}
;
_.index_0 = 0;
var Lcom_google_gwt_user_client_rpc_impl_ClientSerializationStreamReader_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'ClientSerializationStreamReader', 713, Lcom_google_gwt_user_client_rpc_impl_AbstractSerializationStreamReader_2_classLit);
function $clinit_ClientSerializationStreamWriter(){
  $clinit_ClientSerializationStreamWriter = emptyMethod;
  $clinit_AbstractSerializationStreamWriter();
  regex_0 = getQuotingRegex();
}

function ClientSerializationStreamWriter(serializer, moduleBaseURL, serializationPolicyStrongName){
  $clinit_ClientSerializationStreamWriter();
  AbstractSerializationStreamWriter.call(this);
  this.$init_679();
  this.serializer = serializer;
  this.moduleBaseURL = moduleBaseURL;
  this.serializationPolicyStrongName = serializationPolicyStrongName;
}

function append_1(sb, token){
  if (!jsNotEquals(token, null)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  sb.append_9(token);
  sb.append_4(124);
}

function getQuotingRegex(){
  var ua = navigator.userAgent.toLowerCase();
  if (ua.indexOf('android') != -1) {
    return /[\u0000\|\\\u0080-\uFFFF]/g;
  }
   else if (ua.indexOf('chrome/11') != -1) {
    return /[\u0000\|\\\u0300-\uFFFF]/g;
  }
   else if (ua.indexOf('webkit') != -1) {
    return /[\u0000\|\\\u0300-\u03ff\u0590-\u05FF\u0600-\u06ff\u0730-\u074A\u07eb-\u07f3\u0940-\u0963\u0980-\u09ff\u0a00-\u0a7f\u0b00-\u0b7f\u0e00-\u0e7f\u0f00-\u0fff\u1900-\u194f\u1a00-\u1a1f\u1b00-\u1b7f\u1cda-\u1cdc\u1dc0-\u1dff\u1f00-\u1fff\u2000-\u206f\u20d0-\u20ff\u2100-\u214f\u2300-\u23ff\u2a00-\u2aff\u3000-\u303f\uaab2-\uaab4\uD800-\uFFFF]/g;
  }
   else {
    return /[\u0000\|\\\uD800-\uFFFF]/g;
  }
}

function quoteString(str){
  var regex = regex_0;
  var idx = 0;
  var out = '';
  var result;
  while ((result = regex.exec(str)) != null) {
    out += str.substring(idx, result.index);
    idx = result.index + 1;
    var ch_0 = result[0].charCodeAt(0);
    if (ch_0 == 0) {
      out += '\\0';
    }
     else if (ch_0 == 92) {
      out += '\\\\';
    }
     else if (ch_0 == 124) {
      out += '\\!';
    }
     else {
      var hex = ch_0.toString(16);
      out += '\\u0000'.substring(0, 6 - hex.length) + hex;
    }
  }
  return out + str.substring(idx);
}

defineClass(341, 406, {341:1, 1:1}, ClientSerializationStreamWriter);
_.$init_679 = function $init_679(){
}
;
_.append_0 = function append_0(token){
  append_1(this.encodeBuffer, token);
}
;
_.getObjectTypeSignature = function getObjectTypeSignature(o){
  var clazz, e;
  clazz = getClass__Ljava_lang_Class___devirtual$(o);
  if (instanceOf(o, 7)) {
    e = castTo(o, 7);
    clazz = e.getDeclaringClass();
  }
  return this.serializer.getSerializationSignature(clazz);
}
;
_.prepareToWrite = function prepareToWrite_0(){
  getClassPrototype(406).prepareToWrite.call(this);
  this.encodeBuffer = new StringBuilder;
  this.writeString(this.moduleBaseURL);
  this.writeString(this.serializationPolicyStrongName);
}
;
_.serialize_0 = function serialize_147(instance, typeSignature){
  this.serializer.serialize(this, instance, typeSignature);
}
;
_.toString_0 = function toString_50(){
  var buffer;
  buffer = new StringBuilder;
  this.writeHeader(buffer);
  this.writeStringTable(buffer);
  this.writePayload(buffer);
  return buffer.toString_0();
}
;
_.writeHeader = function writeHeader(buffer){
  append_1(buffer, valueOf_45(this.getVersion_0()));
  append_1(buffer, valueOf_45(this.getFlags()));
}
;
_.writeLong = function writeLong(value_0){
  this.append_0(longToBase64(value_0));
}
;
_.writePayload = function writePayload(buffer){
  buffer.append_9(this.encodeBuffer.toString_0());
}
;
_.writeStringTable = function writeStringTable(buffer){
  var s, s$iterator, stringTable;
  stringTable = this.getStringTable();
  append_1(buffer, valueOf_45(stringTable.size_1()));
  for (s$iterator = stringTable.iterator_0(); s$iterator.hasNext_0();) {
    s = castToString(s$iterator.next_1());
    append_1(buffer, quoteString(s));
  }
  return buffer;
}
;
var regex_0;
var Lcom_google_gwt_user_client_rpc_impl_ClientSerializationStreamWriter_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'ClientSerializationStreamWriter', 341, Lcom_google_gwt_user_client_rpc_impl_AbstractSerializationStreamWriter_2_classLit);
function $clinit_ReflectionHelper(){
  $clinit_ReflectionHelper = emptyMethod;
  $clinit_Object();
}

function loadClass(klass){
  $clinit_ReflectionHelper();
  throw toJs(new RuntimeException_1("ReflectionHelper can't be used from web mode."));
}

function newInstance_0(klass){
  $clinit_ReflectionHelper();
  throw toJs(new RuntimeException_1("ReflectionHelper can't be used from web mode."));
}

function $clinit_RemoteServiceProxy$ServiceHelper(){
  $clinit_RemoteServiceProxy$ServiceHelper = emptyMethod;
  $clinit_Object();
}

function RemoteServiceProxy$ServiceHelper(this$0, serviceName, methodName){
  $clinit_RemoteServiceProxy$ServiceHelper();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_680();
  this.fullServiceName = serviceName + '.' + methodName;
  this.methodName = methodName;
  this.statsContext = new RpcStatsContext;
}

defineClass(149, 1, {1:1}, RemoteServiceProxy$ServiceHelper);
_.$init_680 = function $init_680(){
}
;
_.finish_2 = function finish_2(callback, responseHeader){
  var payload, toss;
  payload = this.streamWriter.toString_0();
  toss = this.statsContext.isStatsAvailable_0() && this.statsContext.stats(this.statsContext.timeStat_0(this.fullServiceName, 'requestSerialized'));
  return this.this$01.doInvoke(responseHeader, this.fullServiceName, this.statsContext, payload, callback);
}
;
_.start_2 = function start_2(remoteServiceInterfaceName, paramCount){
  var toss;
  toss = this.statsContext.isStatsAvailable_0() && this.statsContext.stats(this.statsContext.timeStat_0(this.fullServiceName, 'begin'));
  this.streamWriter = this.this$01.createStreamWriter();
  if (isNotNull(this.this$01.getRpcToken())) {
    this.streamWriter.writeObject(this.this$01.getRpcToken());
  }
  this.streamWriter.writeString(remoteServiceInterfaceName);
  this.streamWriter.writeString(this.methodName);
  this.streamWriter.writeInt(paramCount);
  return this.streamWriter;
}
;
var Lcom_google_gwt_user_client_rpc_impl_RemoteServiceProxy$ServiceHelper_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'RemoteServiceProxy/ServiceHelper', 149, Ljava_lang_Object_2_classLit);
function $clinit_RequestCallbackAdapter(){
  $clinit_RequestCallbackAdapter = emptyMethod;
  $clinit_Object();
}

function RequestCallbackAdapter(streamFactory, methodName, statsContext, callback, tokenExceptionHandler, responseReader){
  $clinit_RequestCallbackAdapter();
  Object_0.call(this);
  this.$init_681();
  if (!isNotNull(streamFactory)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(callback)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!isNotNull(responseReader)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.streamFactory = streamFactory;
  this.callback = callback;
  this.methodName = methodName;
  this.statsContext = statsContext;
  this.responseReader = responseReader;
  this.tokenExceptionHandler = tokenExceptionHandler;
}

defineClass(714, 1, {1:1}, RequestCallbackAdapter);
_.$init_681 = function $init_681(){
}
;
_.onError_0 = function onError_0(request, exception){
  this.callback.onFailure(exception);
}
;
_.onResponseReceived = function onResponseReceived(request, response){
  var caught, e, encodedResponse, result, returned, statusCode, toss;
  result = null;
  caught = null;
  try {
    encodedResponse = response.getText();
    statusCode = response.getStatusCode();
    toss = this.statsContext.isStatsAvailable_0() && this.statsContext.stats(this.statsContext.bytesStat(this.methodName, length__I__devirtual$(encodedResponse), 'responseReceived'));
    if (statusCode != 200) {
      caught = new StatusCodeException(statusCode, response.getStatusText(), encodedResponse);
    }
     else if (jsEquals(encodedResponse, null)) {
      caught = new InvocationException('No response payload from ' + this.methodName);
    }
     else if (isReturnValue(encodedResponse)) {
      result = this.responseReader.read_0(this.streamFactory.createStreamReader(encodedResponse));
    }
     else if (isThrownException(encodedResponse)) {
      caught = castTo(this.streamFactory.createStreamReader(encodedResponse).readObject(), 24);
    }
     else {
      caught = new InvocationException(encodedResponse + ' from ' + this.methodName);
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 95)) {
      e = $e0;
      caught = new IncompatibleRemoteServiceException_1('The response could not be deserialized', e);
    }
     else if (instanceOf($e0, 24)) {
      e = $e0;
      caught = e;
    }
     else 
      throw toJs($e0);
  }
   finally {
    toss = this.statsContext.isStatsAvailable_0() && this.statsContext.stats(this.statsContext.timeStat_0(this.methodName, 'responseDeserialized'));
  }
  try {
    if (isNull(caught)) {
      this.callback.onSuccess(result);
    }
     else if (isNotNull(this.tokenExceptionHandler) && instanceOf(caught, 297)) {
      this.tokenExceptionHandler.onRpcTokenException(castTo(caught, 297));
    }
     else {
      this.callback.onFailure(caught);
    }
  }
   finally {
    returned = isNull(caught)?result:caught;
    toss = this.statsContext.isStatsAvailable_0() && this.statsContext.stats(this.statsContext.timeStat(this.methodName, returned, 'end'));
  }
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter', 714, Ljava_lang_Object_2_classLit);
function $clinit_RequestCallbackAdapter$ResponseReader(){
  $clinit_RequestCallbackAdapter$ResponseReader = emptyMethod;
  $clinit_Enum();
  BOOLEAN = new RequestCallbackAdapter$ResponseReader$1('BOOLEAN', 0);
  BYTE = new RequestCallbackAdapter$ResponseReader$2('BYTE', 1);
  CHAR = new RequestCallbackAdapter$ResponseReader$3('CHAR', 2);
  DOUBLE = new RequestCallbackAdapter$ResponseReader$4('DOUBLE', 3);
  FLOAT = new RequestCallbackAdapter$ResponseReader$5('FLOAT', 4);
  INT = new RequestCallbackAdapter$ResponseReader$6('INT', 5);
  LONG = new RequestCallbackAdapter$ResponseReader$7('LONG', 6);
  OBJECT = new RequestCallbackAdapter$ResponseReader$8('OBJECT', 7);
  SHORT = new RequestCallbackAdapter$ResponseReader$9('SHORT', 8);
  STRING = new RequestCallbackAdapter$ResponseReader$10('STRING', 9);
  VOID = new RequestCallbackAdapter$ResponseReader$11('VOID', 10);
}

function RequestCallbackAdapter$ResponseReader(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_682();
}

function valueOf_29(name_0){
  $clinit_RequestCallbackAdapter$ResponseReader();
  return valueOf(($clinit_RequestCallbackAdapter$ResponseReader$Map() , $MAP_28), name_0);
}

function values_30(){
  $clinit_RequestCallbackAdapter$ResponseReader();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 81, 0, [BOOLEAN, BYTE, CHAR, DOUBLE, FLOAT, INT, LONG, OBJECT, SHORT, STRING, VOID]);
}

defineClass(81, 7, {81:1, 4:1, 8:1, 7:1, 1:1});
_.$init_682 = function $init_682(){
}
;
var BOOLEAN, BYTE, CHAR, DOUBLE, FLOAT, INT, LONG, OBJECT, SHORT, STRING, VOID;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader', 81, Ljava_lang_Enum_2_classLit, values_30, valueOf_29);
function $clinit_RequestCallbackAdapter$ResponseReader$1(){
  $clinit_RequestCallbackAdapter$ResponseReader$1 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$1(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$1();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_683();
}

defineClass(715, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$1);
_.$init_683 = function $init_683(){
}
;
_.read_0 = function read(streamReader){
  return valueOf_32(streamReader.readBoolean());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$1_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/1', 715, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$10(){
  $clinit_RequestCallbackAdapter$ResponseReader$10 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$10(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$10();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_684();
}

defineClass(724, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$10);
_.$init_684 = function $init_684(){
}
;
_.read_0 = function read_0(streamReader){
  return streamReader.readString();
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$10_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/10', 724, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$11(){
  $clinit_RequestCallbackAdapter$ResponseReader$11 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$11(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$11();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_685();
}

defineClass(725, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$11);
_.$init_685 = function $init_685(){
}
;
_.read_0 = function read_1(streamReader){
  return null;
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$11_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/11', 725, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$2(){
  $clinit_RequestCallbackAdapter$ResponseReader$2 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$2(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$2();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_686();
}

defineClass(716, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$2);
_.$init_686 = function $init_686(){
}
;
_.read_0 = function read_2(streamReader){
  return valueOf_33(streamReader.readByte());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$2_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/2', 716, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$3(){
  $clinit_RequestCallbackAdapter$ResponseReader$3 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$3(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$3();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_687();
}

defineClass(717, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$3);
_.$init_687 = function $init_687(){
}
;
_.read_0 = function read_3(streamReader){
  return valueOf_34(streamReader.readChar());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$3_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/3', 717, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$4(){
  $clinit_RequestCallbackAdapter$ResponseReader$4 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$4(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$4();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_688();
}

defineClass(718, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$4);
_.$init_688 = function $init_688(){
}
;
_.read_0 = function read_4(streamReader){
  return valueOf_35(streamReader.readDouble());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$4_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/4', 718, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$5(){
  $clinit_RequestCallbackAdapter$ResponseReader$5 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$5(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$5();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_689();
}

defineClass(719, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$5);
_.$init_689 = function $init_689(){
}
;
_.read_0 = function read_5(streamReader){
  return valueOf_36(streamReader.readFloat());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$5_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/5', 719, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$6(){
  $clinit_RequestCallbackAdapter$ResponseReader$6 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$6(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$6();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_690();
}

defineClass(720, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$6);
_.$init_690 = function $init_690(){
}
;
_.read_0 = function read_6(streamReader){
  return valueOf_37(streamReader.readInt());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$6_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/6', 720, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$7(){
  $clinit_RequestCallbackAdapter$ResponseReader$7 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$7(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$7();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_691();
}

defineClass(721, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$7);
_.$init_691 = function $init_691(){
}
;
_.read_0 = function read_7(streamReader){
  return valueOf_40(streamReader.readLong());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$7_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/7', 721, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$8(){
  $clinit_RequestCallbackAdapter$ResponseReader$8 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$8(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$8();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_692();
}

defineClass(722, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$8);
_.$init_692 = function $init_692(){
}
;
_.read_0 = function read_8(streamReader){
  return streamReader.readObject();
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$8_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/8', 722, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$9(){
  $clinit_RequestCallbackAdapter$ResponseReader$9 = emptyMethod;
  $clinit_RequestCallbackAdapter$ResponseReader();
}

function RequestCallbackAdapter$ResponseReader$9(enum$name, enum$ordinal){
  $clinit_RequestCallbackAdapter$ResponseReader$9();
  RequestCallbackAdapter$ResponseReader.call(this, enum$name, enum$ordinal);
  this.$init_693();
}

defineClass(723, 81, {81:1, 4:1, 8:1, 7:1, 1:1}, RequestCallbackAdapter$ResponseReader$9);
_.$init_693 = function $init_693(){
}
;
_.read_0 = function read_9(streamReader){
  return valueOf_41(streamReader.readShort());
}
;
var Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader$9_2_classLit = createForEnum('com.google.gwt.user.client.rpc.impl', 'RequestCallbackAdapter/ResponseReader/9', 723, Lcom_google_gwt_user_client_rpc_impl_RequestCallbackAdapter$ResponseReader_2_classLit, null, null);
function $clinit_RequestCallbackAdapter$ResponseReader$Map(){
  $clinit_RequestCallbackAdapter$ResponseReader$Map = emptyMethod;
  $MAP_28 = createValueOfMap(values_30());
}

var $MAP_28;
function $clinit_RpcStatsContext(){
  $clinit_RpcStatsContext = emptyMethod;
  $clinit_Object();
}

function RpcStatsContext(){
  $clinit_RpcStatsContext();
  RpcStatsContext_0.call(this, getNextRequestId());
}

function RpcStatsContext_0(requestId){
  Object_0.call(this);
  this.$init_694();
  this.requestId = requestId;
}

function getNextRequestId(){
  return requestIdCounter++;
}

defineClass(394, 1, {1:1}, RpcStatsContext);
_.$init_694 = function $init_694(){
}
;
_.bytesStat = function bytesStat(method, bytes, eventType){
  var stat = this.timeStat_0(method, eventType);
  stat.bytes = bytes;
  return stat;
}
;
_.getRequestId = function getRequestId(){
  return this.requestId;
}
;
_.isStatsAvailable_0 = function isStatsAvailable_0(){
  return !!$stats;
}
;
_.stats = function stats_0(data_0){
  return $stats(data_0);
}
;
_.timeStat = function timeStat(method, result, eventType){
  return this.timeStat_0(method, eventType);
}
;
_.timeStat_0 = function timeStat_0(method, eventType){
  return {moduleName:getModuleName(), sessionId:$sessionId, subSystem:'rpc', evtGroup:this.requestId, method:method, millis:(new Date).getTime(), type:eventType};
}
;
_.requestId = 0;
var requestIdCounter = 0;
var Lcom_google_gwt_user_client_rpc_impl_RpcStatsContext_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl', 'RpcStatsContext', 394, Ljava_lang_Object_2_classLit);
function $clinit_SerializerBase$MethodMap(){
  $clinit_SerializerBase$MethodMap = emptyMethod;
  $clinit_JavaScriptObject();
}

function $deserialize(this$static, stream, instance, signature){
  $clinit_SerializerBase$MethodMap();
  this$static[signature][1](stream, instance);
}

function $get_2(this$static, signature){
  $clinit_SerializerBase$MethodMap();
  return this$static[signature];
}

function $instantiate(this$static, stream, signature){
  $clinit_SerializerBase$MethodMap();
  return this$static[signature][0](stream);
}

function $serialize(this$static, stream, instance, signature){
  $clinit_SerializerBase$MethodMap();
  this$static[signature][2](stream, instance);
}

function $clinit_AbstractImagePrototype(){
  $clinit_AbstractImagePrototype = emptyMethod;
  $clinit_Object();
}

function AbstractImagePrototype(){
  $clinit_AbstractImagePrototype();
  Object_0.call(this);
  this.$init_695();
}

function create_7(resource){
  $clinit_AbstractImagePrototype();
  return new ClippedImagePrototype(resource.getSafeUri(), resource.getLeft(), resource.getTop(), resource.getWidth(), resource.getHeight());
}

defineClass(283, 1, {283:1, 1:1});
_.$init_695 = function $init_695(){
}
;
_.applyTo = function applyTo(imageElement){
  throw toJs(new UnsupportedOperationException);
}
;
_.createElement_1 = function createElement_1(){
  throw toJs(new UnsupportedOperationException);
}
;
_.getHTML = function getHTML(){
  return this.getSafeHtml().asString();
}
;
_.getSafeHtml = function getSafeHtml(){
  throw toJs(new UnsupportedOperationException);
}
;
var Lcom_google_gwt_user_client_ui_AbstractImagePrototype_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AbstractImagePrototype', 283, Ljava_lang_Object_2_classLit);
function $clinit_AbstractImagePrototype$ImagePrototypeElement(){
  $clinit_AbstractImagePrototype$ImagePrototypeElement = emptyMethod;
  $clinit_Element();
}

function $clinit_AttachDetachException(){
  $clinit_AttachDetachException = emptyMethod;
  $clinit_UmbrellaException_0();
  attachCommand = new AttachDetachException$1;
  detachCommand = new AttachDetachException$2;
}

function AttachDetachException(causes){
  UmbrellaException_0.call(this, causes);
  this.$init_696();
}

function tryCommand(hasWidgets, c){
  $clinit_AttachDetachException();
  var caught, e, w, w$iterator;
  caught = null;
  for (w$iterator = hasWidgets.iterator_0(); w$iterator.hasNext_0();) {
    w = castTo(w$iterator.next_1(), 11);
    try {
      c.execute_3(w);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 24)) {
        e = $e0;
        if (isNull(caught)) {
          caught = new HashSet;
        }
        caught.add_5(e);
      }
       else 
        throw toJs($e0);
    }
  }
  if (isNotNull(caught)) {
    throw toJs(new AttachDetachException(caught));
  }
}

defineClass(557, 314, {185:1, 4:1, 25:1, 1:1, 27:1, 24:1}, AttachDetachException);
_.$init_696 = function $init_696(){
}
;
var attachCommand, detachCommand;
var Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AttachDetachException', 557, Lcom_google_gwt_event_shared_UmbrellaException_2_classLit);
function $clinit_AttachDetachException$Command(){
  $clinit_AttachDetachException$Command = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_AttachDetachException$Command_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'AttachDetachException/Command');
function $clinit_AttachDetachException$1(){
  $clinit_AttachDetachException$1 = emptyMethod;
  $clinit_Object();
}

function AttachDetachException$1(){
  $clinit_AttachDetachException$1();
  Object_0.call(this);
  this.$init_697();
}

defineClass(558, 1, {1:1}, AttachDetachException$1);
_.$init_697 = function $init_697(){
}
;
_.execute_3 = function execute_8(w){
  w.onAttach();
}
;
var Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AttachDetachException/1', 558, Ljava_lang_Object_2_classLit);
function $clinit_AttachDetachException$2(){
  $clinit_AttachDetachException$2 = emptyMethod;
  $clinit_Object();
}

function AttachDetachException$2(){
  $clinit_AttachDetachException$2();
  Object_0.call(this);
  this.$init_698();
}

defineClass(559, 1, {1:1}, AttachDetachException$2);
_.$init_698 = function $init_698(){
}
;
_.execute_3 = function execute_9(w){
  w.onDetach();
}
;
var Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AttachDetachException/2', 559, Ljava_lang_Object_2_classLit);
function $clinit_ButtonBase(){
  $clinit_ButtonBase = emptyMethod;
  $clinit_FocusWidget();
}

function ButtonBase(elem){
  $clinit_ButtonBase();
  FocusWidget_0.call(this, elem);
  this.$init_699();
}

defineClass(329, 208, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1});
_.$init_699 = function $init_699(){
}
;
_.setHTML_0 = function setHTML_2(html){
  $setInnerHTML(this.getElement(), html);
}
;
_.setText = function setText_3(text_0){
  $setInnerText(this.getElement(), text_0);
}
;
var Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ButtonBase', 329, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit);
function $clinit_Button(){
  $clinit_Button = emptyMethod;
  $clinit_ButtonBase();
}

function Button(){
  ButtonBase.call(this, $createPushButtonElement(get_2654()));
  this.$init_700();
  this.setStyleName('gwt-Button');
}

function Button_0(html){
  $clinit_Button();
  Button.call(this);
  this.setHTML_0(html);
}

defineClass(68, 329, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, Button_0);
_.$init_700 = function $init_700(){
}
;
var Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Button', 68, Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit);
function $clinit_CellPanel(){
  $clinit_CellPanel = emptyMethod;
  $clinit_ComplexPanel();
}

function CellPanel(){
  $clinit_CellPanel();
  ComplexPanel.call(this);
  this.$init_701();
  this.table = createTable();
  this.body_0 = createTBody();
  appendChild(this.table, this.body_0);
  this.setElement(this.table);
}

defineClass(374, 134, {18:1, 45:1, 14:1, 11:1, 1:1});
_.$init_701 = function $init_701(){
}
;
_.getBody = function getBody(){
  return asOld(this.body_0);
}
;
_.getTable = function getTable(){
  return asOld(this.table);
}
;
_.getWidgetTd = function getWidgetTd(w){
  if (jsNotEquals(w.getParent(), this)) {
    return null;
  }
  return getParent_1(w.getElement());
}
;
_.setCellHeight = function setCellHeight(w, height){
  var td;
  td = this.getWidgetTd(w);
  if (isNotNull(td)) {
    $setPropertyString(td, 'height', height);
  }
}
;
_.setCellHorizontalAlignment = function setCellHorizontalAlignment(td, align_0){
  this.setCellHorizontalAlignment_0(asOld(td), align_0);
}
;
_.setCellHorizontalAlignment_0 = function setCellHorizontalAlignment_0(td, align_0){
  $setPropertyString(td, 'align', align_0.getTextAlignString());
}
;
_.setCellHorizontalAlignment_1 = function setCellHorizontalAlignment_1(w, align_0){
  var td;
  td = this.getWidgetTd(w);
  if (isNotNull(td)) {
    this.setCellHorizontalAlignment(td, align_0);
  }
}
;
_.setCellVerticalAlignment = function setCellVerticalAlignment(td, align_0){
  this.setCellVerticalAlignment_0(asOld(td), align_0);
}
;
_.setCellVerticalAlignment_0 = function setCellVerticalAlignment_0(td, align_0){
  $setProperty_0($getStyle(td), 'verticalAlign', align_0.getVerticalAlignString());
}
;
_.setCellWidth = function setCellWidth(w, width_0){
  var td;
  td = this.getWidgetTd(w);
  if (isNotNull(td)) {
    $setPropertyString(td, 'width', width_0);
  }
}
;
var Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'CellPanel', 374, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit);
function $clinit_HasName(){
  $clinit_HasName = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasName_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasName');
function $clinit_CheckBox(){
  $clinit_CheckBox = emptyMethod;
  $clinit_ButtonBase();
  DEFAULT_DIRECTION_ESTIMATOR_0 = ($clinit_DirectionalTextHelper() , DEFAULT_DIRECTION_ESTIMATOR_1);
}

function CheckBox_0(elem){
  $clinit_CheckBox();
  var uid;
  ButtonBase.call(this, createSpan());
  this.$init_702();
  this.inputElem = as_1(elem);
  this.labelElem = $createLabelElement(get_2654());
  $appendChild(this.getElement(), this.inputElem);
  $appendChild(this.getElement(), this.labelElem);
  uid = createUniqueId();
  $setPropertyString(this.inputElem, 'id', uid);
  $setHtmlFor(this.labelElem, uid);
  this.directionalTextHelper = new DirectionalTextHelper(this.labelElem, true);
  this.setTabIndex(0);
}

defineClass(145, 329, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 183:1, 14:1, 11:1, 1:1});
_.$init_702 = function $init_702(){
}
;
_.addValueChangeHandler = function addValueChangeHandler_3(handler){
  if (!this.valueChangeHandlerInitialized) {
    this.ensureDomEventHandlers();
    this.valueChangeHandlerInitialized = true;
  }
  return this.addHandler(handler, getType_56());
}
;
_.ensureDomEventHandlers = function ensureDomEventHandlers(){
  this.addClickHandler(new CheckBox$1(this));
}
;
_.getTabIndex = function getTabIndex_2(){
  return $getTabIndex(this.inputElem);
}
;
_.getValue_3 = function getValue_2(){
  if (this.isAttached()) {
    return valueOf_32($isChecked(this.inputElem));
  }
   else {
    return valueOf_32($isDefaultChecked(this.inputElem));
  }
}
;
_.isEnabled = function isEnabled_0(){
  return !$isDisabled(this.inputElem);
}
;
_.onLoad = function onLoad_8(){
  setEventListener(this.inputElem, this);
}
;
_.onUnload = function onUnload_6(){
  setEventListener(this.inputElem, null);
  this.setValue_4(this.getValue_3());
}
;
_.setEnabled = function setEnabled_2(enabled){
  $setDisabled(this.inputElem, !enabled);
  if (enabled) {
    this.removeStyleDependentName('disabled');
  }
   else {
    this.addStyleDependentName('disabled');
  }
}
;
_.setFocus = function setFocus_2(focused){
  if (focused) {
    $focus(this.inputElem);
  }
   else {
    $blur(this.inputElem);
  }
}
;
_.setHTML_0 = function setHTML_3(html){
  this.directionalTextHelper.setHtml(html);
}
;
_.setTabIndex = function setTabIndex_0(index_0){
  if (isNotNull(this.inputElem)) {
    $setTabIndex(this.inputElem, index_0);
  }
}
;
_.setText = function setText_4(text_0){
  this.directionalTextHelper.setText(text_0);
}
;
_.setValue_4 = function setValue_2(value_0){
  this.setValue_5(value_0, false);
}
;
_.setValue_5 = function setValue_3(value_0, fireEvents){
  var oldValue;
  if (jsEquals(value_0, null)) {
    value_0 = ($clinit_Boolean() , FALSE_2);
  }
  oldValue = this.getValue_3();
  $setChecked(this.inputElem, booleanValue__Z__devirtual$(value_0));
  $setDefaultChecked(this.inputElem, booleanValue__Z__devirtual$(value_0));
  if (equals_Ljava_lang_Object__Z__devirtual$_0(value_0, oldValue)) {
    return;
  }
  if (fireEvents) {
    fire_8(this, value_0);
  }
}
;
_.sinkEvents = function sinkEvents_4(eventBitsToAdd){
  if (this.isOrWasAttached()) {
    sinkEvents_2(this.inputElem, eventBitsToAdd | getEventsSunk_0(this.inputElem));
  }
   else {
    getClassPrototype(11).sinkEvents.call(this, eventBitsToAdd);
  }
}
;
_.valueChangeHandlerInitialized = false;
var DEFAULT_DIRECTION_ESTIMATOR_0;
var Lcom_google_gwt_user_client_ui_CheckBox_2_classLit = createForClass('com.google.gwt.user.client.ui', 'CheckBox', 145, Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit);
function $clinit_CheckBox$1(){
  $clinit_CheckBox$1 = emptyMethod;
  $clinit_Object();
}

function CheckBox$1(this$0){
  $clinit_CheckBox$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_703();
}

defineClass(958, 1, {72:1, 13:1, 1:1}, CheckBox$1);
_.$init_703 = function $init_703(){
}
;
_.onClick = function onClick_25(event_0){
  fire_8(this.this$01, this.this$01.getValue_3());
}
;
var Lcom_google_gwt_user_client_ui_CheckBox$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'CheckBox/1', 958, Ljava_lang_Object_2_classLit);
function $clinit_ComplexPanel$1(){
  $clinit_ComplexPanel$1 = emptyMethod;
  $clinit_Object();
}

function ComplexPanel$1(this$0){
  $clinit_ComplexPanel$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_704();
}

defineClass(556, 1, {1:1}, ComplexPanel$1);
_.$init_704 = function $init_704(){
}
;
_.execute_3 = function execute_10(w){
  this.this$01.orphan(w);
}
;
var Lcom_google_gwt_user_client_ui_ComplexPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ComplexPanel/1', 556, Ljava_lang_Object_2_classLit);
function $clinit_CustomButton(){
  $clinit_CustomButton = emptyMethod;
  $clinit_ButtonBase();
  DOWN_HOVERING = 1 | 2;
  DOWN_DISABLED = 1 | 4;
}

function CustomButton(){
  $clinit_CustomButton();
  ButtonBase.call(this, ($clinit_FocusPanel() , impl_1).createFocusable());
  this.$init_705();
  this.sinkEvents(1 | 124 | 6144 | 896);
  this.setUpFace(this.createFace(null, 'up', 0));
  this.setStyleName('gwt-CustomButton');
  getButtonRole().set_3(this.getElement());
}

function CustomButton_0(upImage){
  $clinit_CustomButton();
  CustomButton.call(this);
  this.getUpFace().setImage(upImage);
}

function CustomButton_1(upText){
  $clinit_CustomButton();
  CustomButton.call(this);
  this.getUpFace().setText(upText);
}

defineClass(153, 329, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1});
_.$init_705 = function $init_705(){
}
;
_.cleanupCaptureState = function cleanupCaptureState(){
  if (this.isCapturing || this.isFocusing) {
    releaseCapture(this.getElement());
    this.isCapturing = false;
    this.isFocusing = false;
    this.onClickCancel();
  }
}
;
_.createFace = function createFace(delegateTo, name_0, faceID){
  return new CustomButton$2(this, this, delegateTo, name_0, faceID);
}
;
_.finishSetup = function finishSetup(){
  if (isNull(this.curFace)) {
    this.setCurrentFace_0(this.getUpFace());
  }
}
;
_.getCurrentFace = function getCurrentFace(){
  this.finishSetup();
  return this.curFace;
}
;
_.getDownDisabledFace = function getDownDisabledFace(){
  if (isNull(this.downDisabled)) {
    this.setDownDisabledFace(this.createFace(this.getDownFace(), 'down-disabled', 5));
  }
  return this.downDisabled;
}
;
_.getDownFace = function getDownFace(){
  if (isNull(this.down)) {
    this.setDownFace(this.createFace(this.getUpFace(), 'down', 1));
  }
  return this.down;
}
;
_.getDownHoveringFace = function getDownHoveringFace(){
  if (isNull(this.downHovering)) {
    this.setDownHoveringFace(this.createFace(this.getDownFace(), 'down-hovering', 3));
  }
  return this.downHovering;
}
;
_.getFaceFromID = function getFaceFromID(id_0){
  switch (id_0) {
    case 1:
      return this.getDownFace();
    case 0:
      return this.getUpFace();
    case 3:
      return this.getDownHoveringFace();
    case 2:
      return this.getUpHoveringFace();
    case 4:
      return this.getUpDisabledFace();
    case 5:
      return this.getDownDisabledFace();
    default:throw toJs(new IllegalStateException_0(id_0 + ' is not a known face id.'));
  }
}
;
_.getTabIndex = function getTabIndex_3(){
  return ($clinit_FocusPanel() , impl_1).getTabIndex_0(this.getElement());
}
;
_.getUpDisabledFace = function getUpDisabledFace(){
  if (isNull(this.upDisabled)) {
    this.setUpDisabledFace(this.createFace(this.getUpFace(), 'up-disabled', 4));
  }
  return this.upDisabled;
}
;
_.getUpFace = function getUpFace(){
  return this.up;
}
;
_.getUpHoveringFace = function getUpHoveringFace(){
  if (isNull(this.upHovering)) {
    this.setUpHoveringFace(this.createFace(this.getUpFace(), 'up-hovering', 2));
  }
  return this.upHovering;
}
;
_.isDown = function isDown(){
  return (1 & this.getCurrentFace().getFaceID()) > 0;
}
;
_.isHovering = function isHovering(){
  return (2 & this.getCurrentFace().getFaceID()) > 0;
}
;
_.onAttach = function onAttach_2(){
  this.finishSetup();
  getClassPrototype(208).onAttach.call(this);
}
;
_.onBrowserEvent = function onBrowserEvent_3(event_0){
  var keyCode, to, type_0;
  if (this.isEnabled() == false) {
    return;
  }
  type_0 = eventGetType_0(event_0);
  switch (type_0) {
    case 1:
      if (!this.allowClick) {
        $stopPropagation(event_0);
        return;
      }

      break;
    case 4:
      if ($getButton(event_0) == 1) {
        this.setFocus(true);
        this.onClickStart();
        setCapture(this.getElement());
        this.isCapturing = true;
        $preventDefault(event_0);
      }

      break;
    case 8:
      if (this.isCapturing) {
        this.isCapturing = false;
        releaseCapture(this.getElement());
        if (this.isHovering() && $getButton(event_0) == 1) {
          this.onClick_1();
        }
      }

      break;
    case 64:
      if (this.isCapturing) {
        $preventDefault(event_0);
      }

      break;
    case 32:
      to = eventGetToElement(event_0);
      if ($isOrHasChild(this.getElement(), eventGetTarget_1(event_0)) && (isNull(to) || !$isOrHasChild(this.getElement(), to))) {
        if (this.isCapturing) {
          this.onClickCancel();
        }
        this.setHovering(false);
      }

      break;
    case 16:
      if ($isOrHasChild(this.getElement(), eventGetTarget_1(event_0))) {
        this.setHovering(true);
        if (this.isCapturing) {
          this.onClickStart();
        }
      }

      break;
    case 4096:
      if (this.isFocusing) {
        this.isFocusing = false;
        this.onClickCancel();
      }

      break;
    case 8192:
      if (this.isCapturing) {
        this.isCapturing = false;
        this.onClickCancel();
      }

      break;
  }
  getClassPrototype(11).onBrowserEvent.call(this, event_0);
  if (($getTypeInt(event_0) & 896) != 0) {
    keyCode = narrow_char($getKeyCode(event_0));
    switch (type_0) {
      case 128:
        if (keyCode == 32) {
          this.isFocusing = true;
          this.onClickStart();
        }

        break;
      case 512:
        if (this.isFocusing && keyCode == 32) {
          this.isFocusing = false;
          this.onClick_1();
        }

        break;
      case 256:
        if (keyCode == 10 || keyCode == 13) {
          this.onClickStart();
          this.onClick_1();
        }

        break;
    }
  }
}
;
_.onClick_1 = function onClick_26(){
  var evt;
  this.allowClick = true;
  evt = $createClickEvent(get_2654(), 1, 0, 0, 0, 0, false, false, false, false);
  $dispatchEvent(this.getElement(), evt);
  this.allowClick = false;
}
;
_.onClickCancel = function onClickCancel(){
}
;
_.onClickStart = function onClickStart(){
}
;
_.onDetach = function onDetach_1(){
  getClassPrototype(11).onDetach.call(this);
  this.cleanupCaptureState();
  this.setHovering(false);
}
;
_.setAriaPressed = function setAriaPressed(newFace){
  var pressed;
  pressed = (newFace.getFaceID() & 1) == 1;
  getButtonRole().setAriaPressedState(this.getElement(), of_1(pressed));
}
;
_.setCurrentFace = function setCurrentFace(faceID){
  var newFace;
  newFace = this.getFaceFromID(faceID);
  this.setCurrentFace_0(newFace);
}
;
_.setCurrentFace_0 = function setCurrentFace_0(newFace){
  if (jsNotEquals(this.curFace, newFace)) {
    if (isNotNull(this.curFace)) {
      this.removeStyleDependentName(this.curFace.getName_0());
    }
    this.curFace = newFace;
    this.setCurrentFaceElement(newFace.getFace());
    this.addStyleDependentName(this.curFace.getName_0());
    if (this.isEnabled()) {
      this.setAriaPressed(newFace);
    }
  }
}
;
_.setCurrentFaceElement = function setCurrentFaceElement(newFaceElement){
  $clinit_CustomButton();
  if (jsNotEquals(this.curFaceElement, newFaceElement)) {
    if (isNotNull(this.curFaceElement)) {
      $removeChild(this.getElement(), this.curFaceElement);
    }
    this.curFaceElement = newFaceElement;
    appendChild(this.getElement(), this.curFaceElement);
  }
}
;
_.setDown = function setDown(down){
  if (down != this.isDown()) {
    this.toggleDown();
  }
}
;
_.setDownDisabledFace = function setDownDisabledFace(downDisabled){
  this.downDisabled = downDisabled;
}
;
_.setDownFace = function setDownFace(down){
  this.down = down;
}
;
_.setDownHoveringFace = function setDownHoveringFace(downHovering){
  this.downHovering = downHovering;
}
;
_.setEnabled = function setEnabled_3(enabled){
  if (this.isEnabled() != enabled) {
    this.toggleDisabled();
    getClassPrototype(208).setEnabled.call(this, enabled);
    if (!enabled) {
      this.cleanupCaptureState();
      getButtonRole().removeAriaPressedState(this.getElement());
    }
     else {
      this.setAriaPressed(this.getCurrentFace());
    }
  }
}
;
_.setFocus = function setFocus_3(focused){
  if (focused) {
    ($clinit_FocusPanel() , impl_1).focus_0(this.getElement());
  }
   else {
    ($clinit_FocusPanel() , impl_1).blur_1(this.getElement());
  }
}
;
_.setHTML_0 = function setHTML_4(html){
  this.getCurrentFace().setHTML_0(html);
}
;
_.setHovering = function setHovering(hovering){
  if (hovering != this.isHovering()) {
    this.toggleHover();
  }
}
;
_.setTabIndex = function setTabIndex_1(index_0){
  ($clinit_FocusPanel() , impl_1).setTabIndex_0(this.getElement(), index_0);
}
;
_.setText = function setText_5(text_0){
  this.getCurrentFace().setText(text_0);
}
;
_.setUpDisabledFace = function setUpDisabledFace(upDisabled){
  this.upDisabled = upDisabled;
}
;
_.setUpFace = function setUpFace(up){
  this.up = up;
}
;
_.setUpHoveringFace = function setUpHoveringFace(upHovering){
  this.upHovering = upHovering;
}
;
_.toggleDisabled = function toggleDisabled(){
  var newFaceID;
  newFaceID = this.getCurrentFace().getFaceID() ^ 4;
  newFaceID &= ~2;
  this.setCurrentFace(newFaceID);
}
;
_.toggleDown = function toggleDown(){
  var newFaceID;
  newFaceID = this.getCurrentFace().getFaceID() ^ 1;
  this.setCurrentFace(newFaceID);
}
;
_.toggleHover = function toggleHover(){
  var newFaceID;
  newFaceID = this.getCurrentFace().getFaceID() ^ 2;
  newFaceID &= ~4;
  this.setCurrentFace(newFaceID);
}
;
_.allowClick = false;
_.isCapturing = false;
_.isFocusing = false;
var DOWN_DISABLED = 0, DOWN_HOVERING = 0;
var Lcom_google_gwt_user_client_ui_CustomButton_2_classLit = createForClass('com.google.gwt.user.client.ui', 'CustomButton', 153, Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit);
function $clinit_CustomButton$Face(){
  $clinit_CustomButton$Face = emptyMethod;
  $clinit_Object();
}

function CustomButton$Face(this$0, delegateTo){
  $clinit_CustomButton$Face();
  this.this$01_0 = this$0;
  Object_0.call(this);
  this.$init_706();
  this.delegateTo = delegateTo;
}

defineClass(676, 1, {1:1});
_.$init_706 = function $init_706(){
}
;
_.getFace = function getFace(){
  $clinit_CustomButton$Face();
  if (isNull(this.face_0)) {
    if (isNull(this.delegateTo)) {
      this.face_0 = createDiv();
      return this.face_0;
    }
     else {
      return this.delegateTo.getFace();
    }
  }
   else {
    return this.face_0;
  }
}
;
_.setHTML_0 = function setHTML_5(html){
  this.face_0 = createDiv();
  setStyleName_0(this.face_0, 'html-face', true);
  $setInnerHTML(this.face_0, html);
  this.updateButtonFace();
}
;
_.setImage = function setImage(image){
  this.face_0 = image.getElement();
  this.updateButtonFace();
}
;
_.setText = function setText_6(text_0){
  this.face_0 = createDiv();
  setStyleName_0(this.face_0, 'html-face', true);
  $setInnerText(this.face_0, text_0);
  this.updateButtonFace();
}
;
_.toString_0 = function toString_51(){
  return this.getName_0();
}
;
_.updateButtonFace = function updateButtonFace(){
  if (isNotNull(this.this$01_0.curFace) && jsEquals(this.this$01_0.curFace.getFace(), this.getFace())) {
    this.this$01_0.setCurrentFaceElement(this.face_0);
  }
}
;
var Lcom_google_gwt_user_client_ui_CustomButton$Face_2_classLit = createForClass('com.google.gwt.user.client.ui', 'CustomButton/Face', 676, Ljava_lang_Object_2_classLit);
function $clinit_CustomButton$2(){
  $clinit_CustomButton$2 = emptyMethod;
  $clinit_CustomButton$Face();
}

function CustomButton$2(this$0, this$0_1, $anonymous0, val$name, val$faceID){
  $clinit_CustomButton$2();
  this.this$01 = this$0;
  this.this$02 = this$0_1;
  this.val$name4 = val$name;
  this.val$faceID5 = val$faceID;
  CustomButton$Face.call(this, this$0, $anonymous0);
  this.$init_707();
}

defineClass(678, 676, {1:1}, CustomButton$2);
_.$init_707 = function $init_707(){
}
;
_.getFaceID = function getFaceID(){
  return this.val$faceID5;
}
;
_.getName = function getName_3(){
  return this.val$name4;
}
;
_.getName_0 = function(){
  return this.getName();
}
;
_.val$faceID5 = 0;
var Lcom_google_gwt_user_client_ui_CustomButton$2_2_classLit = createForClass('com.google.gwt.user.client.ui', 'CustomButton/2', 678, Lcom_google_gwt_user_client_ui_CustomButton$Face_2_classLit);
function $clinit_DecoratorPanel(){
  $clinit_DecoratorPanel = emptyMethod;
  $clinit_SimplePanel();
  DEFAULT_ROW_STYLENAMES = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['top', 'middle', 'bottom']);
}

function DecoratorPanel(rowStyles, containerIndex){
  $clinit_DecoratorPanel();
  var i, row, table;
  SimplePanel_0.call(this, createTable());
  this.$init_710();
  table = this.getElement();
  this.tbody = createTBody();
  appendChild(table, this.tbody);
  $setPropertyInt(table, 'cellSpacing', 0);
  $setPropertyInt(table, 'cellPadding', 0);
  for (i = 0; i < rowStyles.length; i++) {
    row = createTR_0(rowStyles[i]);
    appendChild(this.tbody, row);
    if (i == containerIndex) {
      this.containerElem = getFirstChild(getChild_0(row, 1));
    }
  }
  this.setStyleName('gwt-DecoratorPanel');
}

function createTD_0(styleName){
  var inner, tdElem;
  tdElem = createTD();
  inner = createDiv();
  appendChild(tdElem, inner);
  setStyleName(tdElem, styleName);
  setStyleName(inner, styleName + 'Inner');
  return tdElem;
}

function createTR_0(styleName){
  var trElem;
  trElem = createTR();
  setStyleName(trElem, styleName);
  if (getCurrentLocale().isRTL_0()) {
    appendChild(trElem, createTD_0(styleName + 'Right'));
    appendChild(trElem, createTD_0(styleName + 'Center'));
    appendChild(trElem, createTD_0(styleName + 'Left'));
  }
   else {
    appendChild(trElem, createTD_0(styleName + 'Left'));
    appendChild(trElem, createTD_0(styleName + 'Center'));
    appendChild(trElem, createTD_0(styleName + 'Right'));
  }
  return trElem;
}

defineClass(1005, 112, {18:1, 45:1, 14:1, 11:1, 1:1}, DecoratorPanel);
_.$init_710 = function $init_710(){
}
;
_.getCellElement = function getCellElement_0(row, cell){
  var td, tr;
  tr = getChild_0(this.tbody, row);
  td = getChild_0(tr, cell);
  return asOld(getFirstChild(td));
}
;
_.getContainerElement = function getContainerElement_1(){
  return asOld(this.containerElem);
}
;
var DEFAULT_ROW_STYLENAMES;
var Lcom_google_gwt_user_client_ui_DecoratorPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DecoratorPanel', 1005, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit);
function $clinit_DialogBox$1(){
  $clinit_DialogBox$1 = emptyMethod;
  $clinit_Object();
}

function DialogBox$1(this$0){
  $clinit_DialogBox$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_711();
}

defineClass(851, 1, {302:1, 13:1, 1:1}, DialogBox$1);
_.$init_711 = function $init_711(){
}
;
_.onResize = function onResize_3(event_0){
  this.this$01.windowWidth = event_0.getWidth();
}
;
var Lcom_google_gwt_user_client_ui_DialogBox$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DialogBox/1', 851, Ljava_lang_Object_2_classLit);
function $clinit_DialogBox$Caption(){
  $clinit_DialogBox$Caption = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_DialogBox$Caption_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'DialogBox/Caption');
function $clinit_DialogBox$CaptionImpl(){
  $clinit_DialogBox$CaptionImpl = emptyMethod;
  $clinit_HTML();
}

function DialogBox$CaptionImpl(){
  $clinit_DialogBox$CaptionImpl();
  HTML.call(this);
  this.$init_712();
  this.setStyleName('Caption');
}

defineClass(849, 31, {79:1, 77:1, 78:1, 76:1, 18:1, 31:1, 183:1, 14:1, 11:1, 1:1}, DialogBox$CaptionImpl);
_.$init_712 = function $init_712(){
}
;
var Lcom_google_gwt_user_client_ui_DialogBox$CaptionImpl_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DialogBox/CaptionImpl', 849, Lcom_google_gwt_user_client_ui_HTML_2_classLit);
function $clinit_DialogBox$MouseHandler(){
  $clinit_DialogBox$MouseHandler = emptyMethod;
  $clinit_Object();
}

function DialogBox$MouseHandler(this$0){
  $clinit_DialogBox$MouseHandler();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_713();
}

defineClass(850, 1, {253:1, 254:1, 255:1, 308:1, 219:1, 13:1, 1:1}, DialogBox$MouseHandler);
_.$init_713 = function $init_713(){
}
;
_.onMouseDown_0 = function onMouseDown_5(event_0){
  this.this$01.beginDragging(event_0);
}
;
_.onMouseMove_0 = function onMouseMove_6(event_0){
  this.this$01.continueDragging(event_0);
}
;
_.onMouseOut = function onMouseOut_2(event_0){
  this.this$01.onMouseLeave(this.this$01.caption.asWidget());
}
;
_.onMouseOver = function onMouseOver_1(event_0){
  this.this$01.onMouseEnter(this.this$01.caption.asWidget());
}
;
_.onMouseUp_0 = function onMouseUp_6(event_0){
  this.this$01.endDragging(event_0);
}
;
var Lcom_google_gwt_user_client_ui_DialogBox$MouseHandler_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DialogBox/MouseHandler', 850, Ljava_lang_Object_2_classLit);
function $clinit_DirectionalTextHelper(){
  $clinit_DirectionalTextHelper = emptyMethod;
  $clinit_Object();
  DEFAULT_DIRECTION_ESTIMATOR_1 = get_2658();
}

function DirectionalTextHelper(element, isElementInline){
  $clinit_DirectionalTextHelper();
  Object_0.call(this);
  this.$init_714();
  this.element = element;
  this.isElementInline = isElementInline;
  this.isSpanWrapped = false;
  this.initialElementDir = getDirectionOnElement(element);
  this.textDir = this.initialElementDir;
  this.isDirectionExplicitlySet = true;
}

defineClass(383, 1, {1:1}, DirectionalTextHelper);
_.$init_714 = function $init_714(){
}
;
_.getHtml = function getHtml(){
  return this.getTextOrHtml(true);
}
;
_.getTextDirection = function getTextDirection(){
  return this.textDir;
}
;
_.getTextOrHtml = function getTextOrHtml(isHtml){
  var elem;
  elem = this.isSpanWrapped?$getFirstChildElement(this.element):this.element;
  return isHtml?$getInnerHTML(elem):$getInnerText(elem);
}
;
_.setDirection = function setDirection_0(direction){
  setDirectionOnElement(this.element, direction);
  this.initialElementDir = direction;
  this.setInnerTextOrHtml(this.getHtml(), true);
  this.isSpanWrapped = false;
  this.textDir = this.initialElementDir;
  this.isDirectionExplicitlySet = true;
}
;
_.setHtml = function setHtml(content_0){
  this.setTextOrHtml_0(content_0, true);
}
;
_.setInnerTextOrHtml = function setInnerTextOrHtml(content_0, isHtml){
  if (isHtml) {
    $setInnerHTML(this.element, content_0);
  }
   else {
    $setInnerText(this.element, content_0);
  }
}
;
_.setText = function setText_7(content_0){
  this.setTextOrHtml_0(content_0, false);
}
;
_.setTextOrHtml = function setTextOrHtml(content_0, dir_0, isHtml){
  this.textDir = dir_0;
  if (this.isElementInline) {
    this.isSpanWrapped = true;
    $setInnerHTML(this.element, getInstanceForCurrentLocale_0(true).spanWrapWithKnownDir(dir_0, content_0, isHtml));
  }
   else {
    this.isSpanWrapped = false;
    setDirectionOnElement(this.element, dir_0);
    this.setInnerTextOrHtml(content_0, isHtml);
  }
  this.isDirectionExplicitlySet = true;
}
;
_.setTextOrHtml_0 = function setTextOrHtml_0(content_0, isHtml){
  if (isNull(this.directionEstimator)) {
    this.isSpanWrapped = false;
    this.setInnerTextOrHtml(content_0, isHtml);
    if (jsNotEquals(this.textDir, this.initialElementDir)) {
      this.textDir = this.initialElementDir;
      setDirectionOnElement(this.element, this.initialElementDir);
    }
  }
   else {
    this.setTextOrHtml(content_0, this.directionEstimator.estimateDirection_0(content_0, isHtml), isHtml);
  }
  this.isDirectionExplicitlySet = false;
}
;
_.isDirectionExplicitlySet = false;
_.isElementInline = false;
_.isSpanWrapped = false;
var DEFAULT_DIRECTION_ESTIMATOR_1;
var Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DirectionalTextHelper', 383, Ljava_lang_Object_2_classLit);
function $clinit_FlowPanel(){
  $clinit_FlowPanel = emptyMethod;
  $clinit_ComplexPanel();
}

function FlowPanel(){
  $clinit_FlowPanel();
  FlowPanel_0.call(this, 'div');
}

function FlowPanel_0(tag){
  ComplexPanel.call(this);
  this.$init_721();
  this.setElement($createElement(get_2654(), tag));
}

defineClass(198, 134, {18:1, 45:1, 14:1, 11:1, 1:1}, FlowPanel);
_.$init_721 = function $init_721(){
}
;
_.add_0 = function add_24(w){
  this.add_2(w, this.getElement());
}
;
_.clear_0 = function clear_11(){
  try {
    this.doLogicalClear();
  }
   finally {
    $removeAllChildren(this.getElement());
  }
}
;
var Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'FlowPanel', 198, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit);
function $clinit_Frame(){
  $clinit_Frame = emptyMethod;
  $clinit_Widget();
}

function Frame_0(){
  Widget.call(this);
  this.$init_722();
  this.setElement($createIFrameElement(get_2654()));
  this.setStyleName('gwt-Frame');
}

function Frame_1(url_0){
  $clinit_Frame();
  Frame_0.call(this);
  this.setUrl(url_0);
}

defineClass(403, 11, {18:1, 14:1, 11:1, 1:1}, Frame_1);
_.$init_722 = function $init_722(){
}
;
_.getFrameElement = function getFrameElement(){
  return $cast(this.getElement());
}
;
_.setUrl = function setUrl(url_0){
  $setSrc(this.getFrameElement(), url_0);
}
;
var Lcom_google_gwt_user_client_ui_Frame_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Frame', 403, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $clinit_SourcesTableEvents(){
  $clinit_SourcesTableEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesTableEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesTableEvents');
function $clinit_HTMLTable(){
  $clinit_HTMLTable = emptyMethod;
  $clinit_Panel();
  impl_11 = castTo(new HTMLTable$HTMLTableStandardImpl, 4432);
}

function HTMLTable(){
  $clinit_HTMLTable();
  Panel.call(this);
  this.$init_723();
  this.tableElem = createTable();
  this.bodyElem = createTBody();
  appendChild(this.tableElem, this.bodyElem);
  this.setElement(this.tableElem);
}

defineClass(199, 317, {18:1, 199:1, 45:1, 14:1, 11:1, 1:1});
_.$init_723 = function $init_723(){
  this.widgetMap = new ElementMapperImpl;
}
;
_.checkCellBounds = function checkCellBounds(row, column){
  var cellSize;
  this.checkRowBounds(row);
  if (column < 0) {
    throw toJs(new IndexOutOfBoundsException_0('Column ' + column + ' must be non-negative: ' + column));
  }
  cellSize = this.getCellCount(row);
  if (cellSize <= column) {
    throw toJs(new IndexOutOfBoundsException_0('Column index: ' + column + ', Column size: ' + this.getCellCount(row)));
  }
}
;
_.checkRowBounds = function checkRowBounds(row){
  var rowSize;
  rowSize = this.getRowCount();
  if (row >= rowSize || row < 0) {
    throw toJs(new IndexOutOfBoundsException_0('Row index: ' + row + ', Row size: ' + rowSize));
  }
}
;
_.cleanCell = function cleanCell(row, column, clearInnerHTML){
  var td;
  td = this.getCellFormatter().getRawElement(row, column);
  this.internalClearCell(td, clearInnerHTML);
  return td;
}
;
_.clear_0 = function clear_12(){
  this.clear_1(false);
}
;
_.clear_1 = function clear_13(clearInnerHTML){
  var col, row;
  for (row = 0; row < this.getRowCount(); ++row) {
    for (col = 0; col < this.getCellCount(row); ++col) {
      this.cleanCell(row, col, clearInnerHTML);
    }
  }
}
;
_.createCell = function createCell(){
  return createTD();
}
;
_.getBodyElement = function getBodyElement(){
  return asOld(this.bodyElem);
}
;
_.getCellFormatter = function getCellFormatter(){
  return this.cellFormatter;
}
;
_.getColumnFormatter = function getColumnFormatter(){
  return this.columnFormatter;
}
;
_.getRowFormatter = function getRowFormatter(){
  return this.rowFormatter;
}
;
_.insertCell = function insertCell(row, column){
  var td, tr;
  tr = this.rowFormatter.getRow(this.bodyElem, row);
  td = this.createCell();
  insertChild(tr, td, column);
}
;
_.internalClearCell = function internalClearCell(td, clearInnerHTML){
  return this.internalClearCell_0(asOld(td), clearInnerHTML);
}
;
_.internalClearCell_0 = function internalClearCell_0(td, clearInnerHTML){
  var maybeChild, widget;
  maybeChild = getFirstChild(td);
  widget = null;
  if (isNotNull(maybeChild)) {
    widget = castTo(this.widgetMap.get_3(maybeChild), 11);
  }
  if (isNotNull(widget)) {
    this.remove_0(widget);
    return true;
  }
   else {
    if (clearInnerHTML) {
      $setInnerHTML(td, '');
    }
    return false;
  }
}
;
_.iterator_0 = function iterator_9(){
  return new HTMLTable$1(this);
}
;
_.remove_0 = function remove_19(widget){
  var elem;
  if (jsNotEquals(widget.getParent(), this)) {
    return false;
  }
  try {
    this.orphan(widget);
  }
   finally {
    elem = widget.getElement();
    $removeChild(getParent_1(elem), elem);
    this.widgetMap.removeByElement(elem);
  }
  return true;
}
;
_.removeCell = function removeCell(row, column){
  var td, tr;
  this.checkCellBounds(row, column);
  td = this.cleanCell(row, column, false);
  tr = this.rowFormatter.getRow(this.bodyElem, row);
  $removeChild(tr, td);
}
;
_.removeRow = function removeRow(row){
  var column, columnCount;
  columnCount = this.getCellCount(row);
  for (column = 0; column < columnCount; ++column) {
    this.cleanCell(row, column, false);
  }
  $removeChild(this.bodyElem, this.rowFormatter.getRow(this.bodyElem, row));
}
;
_.setCellFormatter = function setCellFormatter(cellFormatter){
  this.cellFormatter = cellFormatter;
}
;
_.setColumnFormatter = function setColumnFormatter(formatter){
  if (isNotNull(this.columnFormatter)) {
    formatter.columnGroup = this.columnFormatter.columnGroup;
  }
  this.columnFormatter = formatter;
  this.columnFormatter.prepareColumnGroup();
}
;
_.setHTML_1 = function setHTML_6(row, column, html){
  var td;
  this.prepareCell(row, column);
  td = this.cleanCell(row, column, jsEquals(html, null));
  if (jsNotEquals(html, null)) {
    $setInnerHTML(td, html);
  }
}
;
_.setRowFormatter = function setRowFormatter(rowFormatter){
  this.rowFormatter = rowFormatter;
}
;
_.setText_0 = function setText_9(row, column, text_0){
  var td;
  this.prepareCell(row, column);
  td = this.cleanCell(row, column, jsEquals(text_0, null));
  if (jsNotEquals(text_0, null)) {
    $setInnerText(td, text_0);
  }
}
;
_.setWidget_0 = function setWidget_4(row, column, widget){
  var td;
  this.prepareCell(row, column);
  td = this.cleanCell(row, column, true);
  if (isNotNull(widget)) {
    widget.removeFromParent();
    this.widgetMap.put_0(widget);
    appendChild(td, widget.getElement());
    this.adopt(widget);
  }
}
;
var impl_11;
var Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTMLTable', 199, Lcom_google_gwt_user_client_ui_Panel_2_classLit);
function $clinit_Grid(){
  $clinit_Grid = emptyMethod;
  $clinit_HTMLTable();
}

function Grid(){
  HTMLTable.call(this);
  this.$init_724();
  this.setCellFormatter(new HTMLTable$CellFormatter(this));
  this.setRowFormatter(new HTMLTable$RowFormatter(this));
  this.setColumnFormatter(new HTMLTable$ColumnFormatter(this));
}

function Grid_0(rows_0, columns){
  $clinit_Grid();
  Grid.call(this);
  this.resize(rows_0, columns);
}

function addRows(table, rows_0, columns){
  var td = $doc.createElement('td');
  td.innerHTML = '&nbsp;';
  var row = $doc.createElement('tr');
  for (var cellNum = 0; cellNum < columns; cellNum++) {
    var cell = td.cloneNode(true);
    row.appendChild(cell);
  }
  table.appendChild(row);
  for (var rowNum = 1; rowNum < rows_0; rowNum++) {
    table.appendChild(row.cloneNode(true));
  }
}

defineClass(241, 199, {18:1, 199:1, 45:1, 14:1, 11:1, 1:1}, Grid_0);
_.$init_724 = function $init_724(){
}
;
_.createCell = function createCell_0(){
  var td;
  td = getClassPrototype(199).createCell.call(this);
  $setInnerHTML(td, '&nbsp;');
  return asOld(td);
}
;
_.getCellCount = function getCellCount(row){
  return this.numColumns;
}
;
_.getColumnCount = function getColumnCount(){
  return this.numColumns;
}
;
_.getRowCount = function getRowCount(){
  return this.numRows;
}
;
_.prepareCell = function prepareCell(row, column){
  this.prepareRow(row);
  if (column < 0) {
    throw toJs(new IndexOutOfBoundsException_0('Cannot access a column with a negative index: ' + column));
  }
  if (column >= this.numColumns) {
    throw toJs(new IndexOutOfBoundsException_0('Column index: ' + column + ', Column size: ' + this.numColumns));
  }
}
;
_.prepareRow = function prepareRow(row){
  if (row < 0) {
    throw toJs(new IndexOutOfBoundsException_0('Cannot access a row with a negative index: ' + row));
  }
  if (row >= this.numRows) {
    throw toJs(new IndexOutOfBoundsException_0('Row index: ' + row + ', Row size: ' + this.numRows));
  }
}
;
_.removeRow = function removeRow_0(row){
  getClassPrototype(199).removeRow.call(this, row);
  this.numRows--;
}
;
_.resize = function resize(rows_0, columns){
  this.resizeColumns(columns);
  this.resizeRows(rows_0);
}
;
_.resizeColumns = function resizeColumns(columns){
  var i, j;
  if (this.numColumns == columns) {
    return;
  }
  if (columns < 0) {
    throw toJs(new IndexOutOfBoundsException_0('Cannot set number of columns to ' + columns));
  }
  if (this.numColumns > columns) {
    for (i = 0; i < this.numRows; i++) {
      for (j = this.numColumns - 1; j >= columns; j--) {
        this.removeCell(i, j);
      }
    }
  }
   else {
    for (i = 0; i < this.numRows; i++) {
      for (j = this.numColumns; j < columns; j++) {
        this.insertCell(i, j);
      }
    }
  }
  this.numColumns = columns;
  this.getColumnFormatter().resizeColumnGroup(columns, false);
}
;
_.resizeRows = function resizeRows(rows_0){
  if (this.numRows == rows_0) {
    return;
  }
  if (rows_0 < 0) {
    throw toJs(new IndexOutOfBoundsException_0('Cannot set number of rows to ' + rows_0));
  }
  if (this.numRows < rows_0) {
    addRows(this.getBodyElement(), rows_0 - this.numRows, this.numColumns);
    this.numRows = rows_0;
  }
   else {
    while (this.numRows > rows_0) {
      this.removeRow(this.numRows - 1);
    }
  }
}
;
_.numColumns = 0;
_.numRows = 0;
var Lcom_google_gwt_user_client_ui_Grid_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Grid', 241, Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit);
function $clinit_HTMLPanel(){
  $clinit_HTMLPanel = emptyMethod;
  $clinit_ComplexPanel();
}

function HTMLPanel(html){
  $clinit_HTMLPanel();
  ComplexPanel.call(this);
  this.$init_725();
  this.setElement($createDivElement(get_2654()));
  $setInnerHTML(this.getElement(), html);
}

defineClass(810, 134, {18:1, 45:1, 14:1, 11:1, 1:1}, HTMLPanel);
_.$init_725 = function $init_725(){
}
;
_.add_0 = function add_25(widget){
  this.add_2(widget, this.getElement());
}
;
_.add_1 = function add_26(widget, elem){
  getClassPrototype(134).add_1.call(this, widget, elem);
}
;
var Lcom_google_gwt_user_client_ui_HTMLPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTMLPanel', 810, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit);
function $clinit_HTMLTable$1(){
  $clinit_HTMLTable$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function HTMLTable$1(this$0){
  $clinit_HTMLTable$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_726();
}

defineClass(785, 1, {1:1, 63:1}, HTMLTable$1);
_.$init_726 = function $init_726(){
  this.widgetList = this.this$01.widgetMap.getObjectList();
  this.lastIndex = -1;
  this.nextIndex = -1;
  {
    this.findNext();
  }
}
;
_.next_1 = function next_2(){
  return this.next_2();
}
;
_.findNext = function findNext(){
  while (++this.nextIndex < this.widgetList.size_1()) {
    if (jsNotEquals(this.widgetList.get_0(this.nextIndex), null)) {
      return;
    }
  }
}
;
_.hasNext_0 = function hasNext_0(){
  return this.nextIndex < this.widgetList.size_1();
}
;
_.next_2 = function next_1(){
  var result;
  if (!this.hasNext_0()) {
    throw toJs(new NoSuchElementException);
  }
  result = castTo(this.widgetList.get_0(this.nextIndex), 11);
  this.lastIndex = this.nextIndex;
  this.findNext();
  return result;
}
;
_.remove_3 = function remove_20(){
  var w;
  if (this.lastIndex < 0) {
    throw toJs(new IllegalStateException);
  }
  w = castTo(this.widgetList.get_0(this.lastIndex), 11);
  if (!instanceOf(w.getParent(), 199)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  w.removeFromParent();
  this.lastIndex = -1;
}
;
_.lastIndex = 0;
_.nextIndex = 0;
var Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTMLTable/1', 785, Ljava_lang_Object_2_classLit);
function $clinit_HTMLTable$CellFormatter(){
  $clinit_HTMLTable$CellFormatter = emptyMethod;
  $clinit_Object();
}

function HTMLTable$CellFormatter(this$0){
  $clinit_HTMLTable$CellFormatter();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_727();
}

defineClass(782, 1, {1:1}, HTMLTable$CellFormatter);
_.$init_727 = function $init_727(){
}
;
_.getCellElement_0 = function getCellElement_1(tbody, row, col){
  return $get(($clinit_HTMLTable() , impl_11).getCells($get(($clinit_HTMLTable() , impl_11).getRows(tbody), row)), col);
}
;
_.getRawElement = function getRawElement(row, column){
  $clinit_HTMLTable$CellFormatter();
  return this.getCellElement_0(this.this$01.bodyElem, row, column);
}
;
var Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTMLTable/CellFormatter', 782, Ljava_lang_Object_2_classLit);
function $clinit_HTMLTable$ColumnFormatter(){
  $clinit_HTMLTable$ColumnFormatter = emptyMethod;
  $clinit_Object();
}

function HTMLTable$ColumnFormatter(this$0){
  $clinit_HTMLTable$ColumnFormatter();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_728();
}

defineClass(783, 1, {1:1}, HTMLTable$ColumnFormatter);
_.$init_728 = function $init_728(){
}
;
_.prepareColumnGroup = function prepareColumnGroup(){
  $clinit_HTMLTable$ColumnFormatter();
  if (isNull(this.columnGroup)) {
    this.columnGroup = createElement_0('colgroup');
    insertChild(this.this$01.tableElem, this.columnGroup, 0);
    appendChild(this.columnGroup, createElement_0('col'));
  }
}
;
_.resizeColumnGroup = function resizeColumnGroup(columns, growOnly){
  var i, num;
  columns = $wnd.Math.max(columns, 1);
  num = $getChildCount(this.columnGroup);
  if (num < columns) {
    for (i = num; i < columns; i++) {
      $appendChild(this.columnGroup, $createColElement(get_2654()));
    }
  }
   else if (!growOnly && num > columns) {
    for (i = num; i > columns; i--) {
      $removeChild(this.columnGroup, $getLastChild(this.columnGroup));
    }
  }
}
;
var Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTMLTable/ColumnFormatter', 783, Ljava_lang_Object_2_classLit);
function $clinit_HTMLTable$HTMLTableImpl(){
  $clinit_HTMLTable$HTMLTableImpl = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HTMLTable$HTMLTableImpl_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HTMLTable/HTMLTableImpl');
function $clinit_HTMLTable$HTMLTableStandardImpl(){
  $clinit_HTMLTable$HTMLTableStandardImpl = emptyMethod;
  $clinit_Object();
}

function HTMLTable$HTMLTableStandardImpl(){
  $clinit_HTMLTable$HTMLTableStandardImpl();
  Object_0.call(this);
  this.$init_729();
}

defineClass(781, 1, {4432:1, 1:1}, HTMLTable$HTMLTableStandardImpl);
_.$init_729 = function $init_729(){
}
;
_.getCells = function getCells(row){
  return row.cells;
}
;
_.getRows = function getRows(tbody){
  return tbody.rows;
}
;
var Lcom_google_gwt_user_client_ui_HTMLTable$HTMLTableStandardImpl_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTMLTable/HTMLTableStandardImpl', 781, Ljava_lang_Object_2_classLit);
function $clinit_HTMLTable$RowFormatter(){
  $clinit_HTMLTable$RowFormatter = emptyMethod;
  $clinit_Object();
}

function HTMLTable$RowFormatter(this$0){
  $clinit_HTMLTable$RowFormatter();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_730();
}

defineClass(784, 1, {1:1}, HTMLTable$RowFormatter);
_.$init_730 = function $init_730(){
}
;
_.addStyleName_0 = function addStyleName_0(row, styleName){
  setStyleName_0(this.ensureElement(row), styleName, true);
}
;
_.ensureElement = function ensureElement(row){
  this.this$01.prepareRow(row);
  return asOld(this.getRow(this.this$01.bodyElem, row));
}
;
_.getRow = function getRow(tbody, row){
  return this.getRow_0(asOld(tbody), row);
}
;
_.getRow_0 = function getRow_0(tbody, row){
  return asOld($get(($clinit_HTMLTable() , impl_11).getRows(tbody), row));
}
;
var Lcom_google_gwt_user_client_ui_HTMLTable$RowFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HTMLTable/RowFormatter', 784, Ljava_lang_Object_2_classLit);
function $clinit_HasVerticalAlignment(){
  $clinit_HasVerticalAlignment = emptyMethod;
  ALIGN_BOTTOM = new HasVerticalAlignment$VerticalAlignmentConstant('bottom');
  ALIGN_MIDDLE = new HasVerticalAlignment$VerticalAlignmentConstant('middle');
  ALIGN_TOP = new HasVerticalAlignment$VerticalAlignmentConstant('top');
}

var ALIGN_BOTTOM, ALIGN_MIDDLE, ALIGN_TOP;
var Lcom_google_gwt_user_client_ui_HasVerticalAlignment_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasVerticalAlignment');
function $clinit_HasAlignment(){
  $clinit_HasAlignment = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasAlignment_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasAlignment');
function $clinit_HasHorizontalAlignment$AutoHorizontalAlignmentConstant(){
  $clinit_HasHorizontalAlignment$AutoHorizontalAlignmentConstant = emptyMethod;
  $clinit_Object();
}

function HasHorizontalAlignment$AutoHorizontalAlignmentConstant(){
  $clinit_HasHorizontalAlignment$AutoHorizontalAlignmentConstant();
  Object_0.call(this);
  this.$init_731();
}

defineClass(318, 1, {1:1}, HasHorizontalAlignment$AutoHorizontalAlignmentConstant);
_.$init_731 = function $init_731(){
}
;
var Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HasHorizontalAlignment/AutoHorizontalAlignmentConstant', 318, Ljava_lang_Object_2_classLit);
function $clinit_HasHorizontalAlignment$HorizontalAlignmentConstant(){
  $clinit_HasHorizontalAlignment$HorizontalAlignmentConstant = emptyMethod;
  $clinit_HasHorizontalAlignment$AutoHorizontalAlignmentConstant();
}

function HasHorizontalAlignment$HorizontalAlignmentConstant(textAlignString){
  $clinit_HasHorizontalAlignment$HorizontalAlignmentConstant();
  HasHorizontalAlignment$AutoHorizontalAlignmentConstant.call(this);
  this.$init_732();
  this.textAlignString = textAlignString;
}

function endOf(direction){
  $clinit_HasHorizontalAlignment$HorizontalAlignmentConstant();
  return jsEquals(direction, ($clinit_HasDirection$Direction() , LTR))?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):jsEquals(direction, ($clinit_HasDirection$Direction() , RTL))?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_END);
}

function startOf(direction){
  $clinit_HasHorizontalAlignment$HorizontalAlignmentConstant();
  return jsEquals(direction, ($clinit_HasDirection$Direction() , LTR))?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):jsEquals(direction, ($clinit_HasDirection$Direction() , RTL))?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_START);
}

defineClass(189, 318, {189:1, 1:1}, HasHorizontalAlignment$HorizontalAlignmentConstant);
_.$init_732 = function $init_732(){
}
;
_.getTextAlignString = function getTextAlignString(){
  return this.textAlignString;
}
;
var Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HasHorizontalAlignment/HorizontalAlignmentConstant', 189, Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit);
function $clinit_HasHorizontalScrolling(){
  $clinit_HasHorizontalScrolling = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasHorizontalScrolling_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasHorizontalScrolling');
function $clinit_HasVerticalScrolling(){
  $clinit_HasVerticalScrolling = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasVerticalScrolling_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasVerticalScrolling');
function $clinit_HasScrolling(){
  $clinit_HasScrolling = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasScrolling_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasScrolling');
function $clinit_HasTreeItems$ForIsWidget(){
  $clinit_HasTreeItems$ForIsWidget = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_HasTreeItems$ForIsWidget_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'HasTreeItems/ForIsWidget');
function $clinit_HasVerticalAlignment$VerticalAlignmentConstant(){
  $clinit_HasVerticalAlignment$VerticalAlignmentConstant = emptyMethod;
  $clinit_Object();
}

function HasVerticalAlignment$VerticalAlignmentConstant(verticalAlignString){
  $clinit_HasVerticalAlignment$VerticalAlignmentConstant();
  Object_0.call(this);
  this.$init_733();
  this.verticalAlignString = verticalAlignString;
}

defineClass(319, 1, {1:1}, HasVerticalAlignment$VerticalAlignmentConstant);
_.$init_733 = function $init_733(){
}
;
_.getVerticalAlignString = function getVerticalAlignString(){
  return this.verticalAlignString;
}
;
var Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HasVerticalAlignment/VerticalAlignmentConstant', 319, Ljava_lang_Object_2_classLit);
function $clinit_HorizontalPanel(){
  $clinit_HorizontalPanel = emptyMethod;
  $clinit_CellPanel();
}

function HorizontalPanel(){
  $clinit_HorizontalPanel();
  CellPanel.call(this);
  this.$init_734();
  this.tableRow = createTR();
  appendChild(this.getBody(), this.tableRow);
  $setPropertyString(this.getTable(), 'cellSpacing', '0');
  $setPropertyString(this.getTable(), 'cellPadding', '0');
}

defineClass(40, 374, {18:1, 45:1, 14:1, 11:1, 1:1}, HorizontalPanel);
_.$init_734 = function $init_734(){
  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);
  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);
}
;
_.add_0 = function add_27(w){
  var td;
  td = this.createAlignedTd();
  appendChild(this.tableRow, td);
  this.add_1(w, td);
}
;
_.createAlignedTd = function createAlignedTd(){
  var td;
  td = createTD();
  this.setCellHorizontalAlignment(td, this.horzAlign);
  this.setCellVerticalAlignment(td, this.vertAlign);
  return td;
}
;
_.remove_0 = function remove_21(w){
  var removed, td;
  td = getParent_1(w.getElement());
  removed = getClassPrototype(134).remove_0.call(this, w);
  if (removed) {
    $removeChild(this.tableRow, td);
  }
  return removed;
}
;
_.setHorizontalAlignment = function setHorizontalAlignment(align_0){
  this.horzAlign = align_0;
}
;
_.setVerticalAlignment = function setVerticalAlignment(align_0){
  this.vertAlign = align_0;
}
;
var Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'HorizontalPanel', 40, Lcom_google_gwt_user_client_ui_CellPanel_2_classLit);
function $clinit_SourcesLoadEvents(){
  $clinit_SourcesLoadEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesLoadEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesLoadEvents');
function $clinit_Image(){
  $clinit_Image = emptyMethod;
  $clinit_Widget();
  prefetchImages = new HashMap;
}

function Image_0(){
  $clinit_Image();
  Widget.call(this);
  this.$init_735();
  this.changeState(new Image$UnclippedState(this));
  this.setStyleName('gwt-Image');
}

function Image_1(resource){
  $clinit_Image();
  Widget.call(this);
  this.$init_735();
  if (instanceOf(resource, 3)) {
    this.changeState(new Image$ClippedState(this, resource.getSafeUri(), resource.getLeft(), resource.getTop(), resource.getWidth(), resource.getHeight()));
  }
   else {
    this.changeState(new Image$UnclippedState_1(this, resource.getSafeUri(), resource.getWidth(), resource.getHeight()));
  }
  this.setStyleName('gwt-Image');
}

function Image_2(url_0){
  Widget.call(this);
  this.$init_735();
  this.changeState(new Image$UnclippedState_0(this, url_0));
  this.setStyleName('gwt-Image');
}

function Image_3(url_0, left, top_0, width_0, height){
  $clinit_Image();
  Widget.call(this);
  this.$init_735();
  this.changeState(new Image$ClippedState(this, url_0, left, top_0, width_0, height));
  this.setStyleName('gwt-Image');
}

function Image_4(url_0){
  $clinit_Image();
  Image_2.call(this, unsafeCastFromUntrustedString(url_0));
}

function prefetch(url_0){
  $clinit_Image();
  var img;
  img = $createImageElement(get_2654());
  $setSrc_0(img, url_0);
  prefetchImages.put(url_0, img);
}

defineClass(22, 11, {79:1, 77:1, 78:1, 76:1, 18:1, 22:1, 14:1, 11:1, 1:1}, Image_0, Image_1, Image_3, Image_4);
_.$init_735 = function $init_735(){
}
;
_.addClickHandler = function addClickHandler_1(handler){
  return this.addHandler(handler, getType_36());
}
;
_.addLoadHandler = function addLoadHandler(handler){
  return this.addHandler(handler, getType_39());
}
;
_.addMouseDownHandler = function addMouseDownHandler_2(handler){
  return this.addDomHandler(handler, getType_40());
}
;
_.addMouseMoveHandler = function addMouseMoveHandler_2(handler){
  return this.addDomHandler(handler, getType_41());
}
;
_.addMouseOutHandler = function addMouseOutHandler_2(handler){
  return this.addDomHandler(handler, getType_42());
}
;
_.addMouseUpHandler = function addMouseUpHandler_2(handler){
  return this.addDomHandler(handler, getType_44());
}
;
_.changeState = function changeState(newState){
  $clinit_Image();
  this.state = newState;
}
;
_.clearUnhandledEvent = function clearUnhandledEvent(){
  $clinit_Image();
  if (isNotNull(this.state)) {
    $setPropertyString(this.state.getImageElement_0(this), '__gwtLastUnhandledEvent', '');
  }
}
;
_.getHeight = function getHeight_1(){
  return this.state.getHeight_0(this);
}
;
_.getUrl = function getUrl_1(){
  return this.state.getUrl_0(this).asString();
}
;
_.getWidth = function getWidth_1(){
  return this.state.getWidth_0(this);
}
;
_.onBrowserEvent = function onBrowserEvent_5(event_0){
  if ($getTypeInt(event_0) == 32768) {
    this.clearUnhandledEvent();
    this.state.onLoadEvent(this);
  }
  getClassPrototype(11).onBrowserEvent.call(this, event_0);
}
;
_.onLoad = function onLoad_9(){
  getClassPrototype(11).onLoad.call(this);
  this.state.onLoad_1(this);
}
;
_.setAltText = function setAltText(altText){
  $setAlt(this.state.getImageElement_0(this), altText);
}
;
_.setUrl_0 = function setUrl_0(url_0){
  this.state.setUrl_1(this, url_0);
}
;
_.setUrl = function setUrl_1(url_0){
  this.setUrl_0(unsafeCastFromUntrustedString(url_0));
}
;
_.setUrlAndVisibleRect = function setUrlAndVisibleRect(url_0, left, top_0, width_0, height){
  this.state.setUrlAndVisibleRect_1(this, url_0, left, top_0, width_0, height);
}
;
var prefetchImages;
var Lcom_google_gwt_user_client_ui_Image_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Image', 22, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $clinit_Image$State(){
  $clinit_Image$State = emptyMethod;
  $clinit_Object();
}

function Image$State(){
  $clinit_Image$State();
  Object_0.call(this);
  this.$init_736();
}

defineClass(320, 1, {1:1});
_.$init_736 = function $init_736(){
  this.syntheticEventCommand = null;
}
;
_.fireSyntheticLoadEvent = function fireSyntheticLoadEvent(image){
  this.syntheticEventCommand = new Image$State$1(this, image);
  get_2653().scheduleDeferred(this.syntheticEventCommand);
}
;
_.onLoad_1 = function onLoad_10(image){
  var unhandledEvent;
  unhandledEvent = $getPropertyString(this.getImageElement_0(image), '__gwtLastUnhandledEvent');
  if (equals_Ljava_lang_Object__Z__devirtual$_2('load', unhandledEvent)) {
    this.fireSyntheticLoadEvent(image);
  }
}
;
_.onLoadEvent = function onLoadEvent(image){
}
;
var Lcom_google_gwt_user_client_ui_Image$State_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Image/State', 320, Ljava_lang_Object_2_classLit);
function $clinit_Image$ClippedState(){
  $clinit_Image$ClippedState = emptyMethod;
  $clinit_Image$State();
  impl_12 = castTo(new ClippedImageImpl, 236);
}

function Image$ClippedState(image, url_0, left, top_0, width_0, height){
  $clinit_Image$ClippedState();
  Image$State.call(this);
  this.$init_737();
  this.left_0 = left;
  this.top_0 = top_0;
  this.width_0 = width_0;
  this.height_0 = height;
  this.url_0 = url_0;
  image.replaceElement(impl_12.createStructure(url_0, left, top_0, width_0, height));
  image.sinkEvents(1 | 2 | 124 | 131072 | 32768 | 15728640 | 117440512);
}

defineClass(321, 320, {1:1}, Image$ClippedState);
_.$init_737 = function $init_737(){
  this.height_0 = 0;
  this.left_0 = 0;
  this.pendingNativeLoadEvent = true;
  this.top_0 = 0;
  this.url_0 = null;
  this.width_0 = 0;
}
;
_.getHeight_0 = function getHeight_2(image){
  return this.height_0;
}
;
_.getImageElement_0 = function getImageElement_0(image){
  return $cast(impl_12.getImgElement(image));
}
;
_.getUrl_0 = function getUrl_2(image){
  return this.url_0;
}
;
_.getWidth_0 = function getWidth_2(image){
  return this.width_0;
}
;
_.onLoadEvent = function onLoadEvent_0(image){
  this.pendingNativeLoadEvent = false;
  getClassPrototype(320).onLoadEvent.call(this, image);
}
;
_.setUrl_1 = function setUrl_2(image, url_0){
  image.changeState(new Image$UnclippedState_0(image, url_0));
}
;
_.setUrlAndVisibleRect_1 = function setUrlAndVisibleRect_1(image, url_0, left, top_0, width_0, height){
  if (!this.url_0.equals_0(url_0) || this.left_0 != left || this.top_0 != top_0 || this.width_0 != width_0 || this.height_0 != height) {
    this.url_0 = url_0;
    this.left_0 = left;
    this.top_0 = top_0;
    this.width_0 = width_0;
    this.height_0 = height;
    impl_12.adjust(image.getElement(), url_0, left, top_0, width_0, height);
    if (!this.pendingNativeLoadEvent) {
      this.fireSyntheticLoadEvent(image);
    }
  }
}
;
_.height_0 = 0;
_.left_0 = 0;
_.pendingNativeLoadEvent = false;
_.top_0 = 0;
_.width_0 = 0;
var impl_12;
var Lcom_google_gwt_user_client_ui_Image$ClippedState_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Image/ClippedState', 321, Lcom_google_gwt_user_client_ui_Image$State_2_classLit);
function $clinit_Image$State$1(){
  $clinit_Image$State$1 = emptyMethod;
  $clinit_Object();
}

function Image$State$1(this$1, val$image){
  $clinit_Image$State$1();
  this.this$11 = this$1;
  this.val$image2 = val$image;
  Object_0.call(this);
  this.$init_738();
}

defineClass(561, 1, {1:1}, Image$State$1);
_.$init_738 = function $init_738(){
}
;
_.execute = function execute_11(){
  var evt;
  if (jsNotEquals(this.val$image2.state, this.this$11) || jsNotEquals(this, this.this$11.syntheticEventCommand)) {
    return;
  }
  this.this$11.syntheticEventCommand = null;
  if (!this.val$image2.isAttached()) {
    $setPropertyString(this.this$11.getImageElement_0(this.val$image2), '__gwtLastUnhandledEvent', 'load');
    return;
  }
  evt = $createLoadEvent(get_2654());
  $dispatchEvent(this.this$11.getImageElement_0(this.val$image2), evt);
}
;
var Lcom_google_gwt_user_client_ui_Image$State$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Image/State/1', 561, Ljava_lang_Object_2_classLit);
function $clinit_Image$UnclippedState(){
  $clinit_Image$UnclippedState = emptyMethod;
  $clinit_Image$State();
}

function Image$UnclippedState(image){
  $clinit_Image$UnclippedState();
  Image$State.call(this);
  this.$init_739();
  image.replaceElement($createImageElement(get_2654()));
  sinkEvents_2(image.getElement(), 32768);
  image.sinkEvents(1 | 2 | 124 | 32768 | 65536 | 131072 | 15728640 | 117440512);
}

function Image$UnclippedState_0(image, url_0){
  $clinit_Image$UnclippedState();
  Image$UnclippedState.call(this, image);
  this.setUrl_1(image, url_0);
}

function Image$UnclippedState_1(image, url_0, width_0, height){
  $clinit_Image$UnclippedState();
  Image$UnclippedState_0.call(this, image, url_0);
  $setWidth_0(this.getImageElement_0(image), width_0);
  $setHeight_0(this.getImageElement_0(image), height);
}

defineClass(190, 320, {1:1}, Image$UnclippedState, Image$UnclippedState_0, Image$UnclippedState_1);
_.$init_739 = function $init_739(){
}
;
_.getHeight_0 = function getHeight_3(image){
  return $getHeight(this.getImageElement_0(image));
}
;
_.getImageElement_0 = function getImageElement_1(image){
  return $cast(image.getElement());
}
;
_.getUrl_0 = function getUrl_3(image){
  return unsafeCastFromUntrustedString($getSrc(this.getImageElement_0(image)));
}
;
_.getWidth_0 = function getWidth_3(image){
  return $getWidth(this.getImageElement_0(image));
}
;
_.setUrl_1 = function setUrl_4(image, url_0){
  image.clearUnhandledEvent();
  $setSrc_0(this.getImageElement_0(image), url_0.asString());
}
;
_.setUrlAndVisibleRect_1 = function setUrlAndVisibleRect_2(image, url_0, left, top_0, width_0, height){
  image.changeState(new Image$ClippedState(image, url_0, left, top_0, width_0, height));
}
;
var Lcom_google_gwt_user_client_ui_Image$UnclippedState_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Image/UnclippedState', 190, Lcom_google_gwt_user_client_ui_Image$State_2_classLit);
function $clinit_ValueBoxBase(){
  $clinit_ValueBoxBase = emptyMethod;
  $clinit_FocusWidget();
  impl_13 = castTo(new TextBoxImpl, 343);
}

function ValueBoxBase(elem, renderer, parser){
  $clinit_ValueBoxBase();
  FocusWidget_0.call(this, elem);
  this.$init_740();
  this.autoDirHandler = addTo_0(this, isBidiEnabled());
  this.renderer = renderer;
  this.parser = parser;
}

defineClass(330, 208, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1});
_.$init_740 = function $init_740(){
}
;
_.addChangeHandler = function addChangeHandler(handler){
  return this.addDomHandler(handler, getType_35());
}
;
_.addValueChangeHandler = function addValueChangeHandler_4(handler){
  if (!this.valueChangeHandlerInitialized) {
    this.valueChangeHandlerInitialized = true;
    this.addChangeHandler(new ValueBoxBase$1(this));
  }
  return this.addHandler(handler, getType_56());
}
;
_.getDirection = function getDirection_0(){
  return getDirectionOnElement(this.getElement());
}
;
_.getText = function getText_1(){
  return $getPropertyString(this.getElement(), 'value');
}
;
_.getValue_0 = function getValue_3(){
  var e;
  try {
    return this.getValueOrThrow();
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 344)) {
      e = $e0;
      return null;
    }
     else 
      throw toJs($e0);
  }
}
;
_.getValueOrThrow = function getValueOrThrow(){
  var parseResult, text_0;
  text_0 = this.getText();
  parseResult = this.parser.parse_4(text_0);
  if (equals_Ljava_lang_Object__Z__devirtual$_2('', text_0)) {
    return null;
  }
  return parseResult;
}
;
_.onBrowserEvent = function onBrowserEvent_6(event_0){
  var type_0;
  type_0 = eventGetType_0(event_0);
  if ((type_0 & 896) != 0) {
    this.currentEvent = event_0;
    getClassPrototype(11).onBrowserEvent.call(this, event_0);
    this.currentEvent = null;
  }
   else {
    getClassPrototype(11).onBrowserEvent.call(this, event_0);
  }
}
;
_.onLoad = function onLoad_11(){
  getClassPrototype(11).onLoad.call(this);
  this.autoDirHandler.refreshDirection();
}
;
_.setDirection = function setDirection_1(direction){
  setDirectionOnElement(this.getElement(), direction);
}
;
_.setDirectionEstimator_0 = function setDirectionEstimator_1(enabled){
  this.autoDirHandler.setDirectionEstimator_0(enabled);
}
;
_.setText = function setText_10(text_0){
  $setPropertyString(this.getElement(), 'value', jsNotEquals(text_0, null)?text_0:'');
  this.autoDirHandler.refreshDirection();
}
;
_.setValue_1 = function setValue_4(value_0){
  this.setValue_2(value_0, false);
}
;
_.setValue_2 = function setValue_5(value_0, fireEvents){
  var newValue, oldValue;
  oldValue = fireEvents?this.getValue_0():null;
  this.setText(this.renderer.render(value_0));
  if (fireEvents) {
    newValue = this.getValue_0();
    fireIfNotEqual(this, oldValue, newValue);
  }
}
;
_.valueChangeHandlerInitialized = false;
var impl_13;
var Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ValueBoxBase', 330, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit);
function $clinit_ValueBox(){
  $clinit_ValueBox = emptyMethod;
  $clinit_ValueBoxBase();
}

function ValueBox(element, renderer, parser){
  $clinit_ValueBox();
  ValueBoxBase.call(this, element, renderer, parser);
  this.$init_741();
  this.setDirectionEstimator_0(false);
  if (getCurrentLocale().isRTL_0()) {
    this.setDirection(($clinit_HasDirection$Direction() , LTR));
  }
  if (!equalsIgnoreCase_Ljava_lang_String__Z__devirtual$($getType(as_1(element)), 'text')) {
    debugger;
    throw toJs(makeAssertionError());
  }
}

defineClass(983, 330, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1});
_.$init_741 = function $init_741(){
}
;
var Lcom_google_gwt_user_client_ui_ValueBox_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ValueBox', 983, Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit);
function $clinit_IntegerBox(){
  $clinit_IntegerBox = emptyMethod;
  $clinit_ValueBox();
}

function IntegerBox(){
  $clinit_IntegerBox();
  ValueBox.call(this, $createTextInputElement(get_2654()), instance_11(), instance_10());
  this.$init_742();
}

defineClass(298, 983, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, IntegerBox);
_.$init_742 = function $init_742(){
}
;
var Lcom_google_gwt_user_client_ui_IntegerBox_2_classLit = createForClass('com.google.gwt.user.client.ui', 'IntegerBox', 298, Lcom_google_gwt_user_client_ui_ValueBox_2_classLit);
function $clinit_KeyboardListenerCollection(){
  $clinit_KeyboardListenerCollection = emptyMethod;
  $clinit_ArrayList();
}

function getKeyboardModifiers(event_0){
  $clinit_KeyboardListenerCollection();
  return ($getShiftKey(event_0)?1:0) | ($getMetaKey(event_0)?8:0) | ($getCtrlKey(event_0)?2:0) | ($getAltKey(event_0)?4:0);
}

function $clinit_SourcesChangeEvents(){
  $clinit_SourcesChangeEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesChangeEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesChangeEvents');
function $clinit_ListBox(){
  $clinit_ListBox = emptyMethod;
  $clinit_FocusWidget();
  DEFAULT_DIRECTION_ESTIMATOR_2 = get_2658();
  INSERT_AT_END = -1;
}

function ListBox(){
  $clinit_ListBox();
  FocusWidget_0.call(this, $createSelectElement(get_2654()));
  this.$init_743();
  this.setStyleName('gwt-ListBox');
}

defineClass(122, 208, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, ListBox);
_.$init_743 = function $init_743(){
}
;
_.addChangeHandler = function addChangeHandler_0(handler){
  return this.addDomHandler(handler, getType_35());
}
;
_.addItem_2 = function addItem_2(item_0, value_0){
  this.insertItem_2(item_0, value_0, -1);
}
;
_.checkIndex = function checkIndex(index_0){
  if (index_0 < 0 || index_0 >= this.getItemCount()) {
    throw toJs(new IndexOutOfBoundsException);
  }
}
;
_.getItemCount = function getItemCount(){
  return $getLength($getOptions(this.getSelectElement()));
}
;
_.getItemText = function getItemText(index_0){
  this.checkIndex(index_0);
  return this.getOptionText($getItem($getOptions(this.getSelectElement()), index_0));
}
;
_.getOptionText = function getOptionText(option){
  var text_0;
  text_0 = $getText(option);
  if ($hasAttribute(option, 'bidiwrapped') && length__I__devirtual$(text_0) > 1) {
    text_0 = substring_II_Ljava_lang_String___devirtual$(text_0, 1, length__I__devirtual$(text_0) - 1);
  }
  return text_0;
}
;
_.getSelectElement = function getSelectElement(){
  return $cast(this.getElement());
}
;
_.getSelectedIndex = function getSelectedIndex(){
  return $getSelectedIndex(this.getSelectElement());
}
;
_.getValue_4 = function getValue_4(index_0){
  this.checkIndex(index_0);
  return $getValue($getItem($getOptions(this.getSelectElement()), index_0));
}
;
_.insertItem_1 = function insertItem_1(item_0, dir_0, value_0, index_0){
  var before, itemCount, option, select;
  select = this.getSelectElement();
  option = $createOptionElement(get_2654());
  this.setOptionText(option, item_0, dir_0);
  $setValue(option, value_0);
  itemCount = $getLength_0(select);
  if (index_0 < 0 || index_0 > itemCount) {
    index_0 = itemCount;
  }
  if (index_0 == itemCount) {
    $add(select, option, null);
  }
   else {
    before = $getItem($getOptions(select), index_0);
    $add(select, option, before);
  }
}
;
_.insertItem_2 = function insertItem_2(item_0, value_0, index_0){
  this.insertItem_1(item_0, null, value_0, index_0);
}
;
_.setItemSelected = function setItemSelected(index_0, selected){
  this.checkIndex(index_0);
  $setSelected($getItem($getOptions(this.getSelectElement()), index_0), selected);
}
;
_.setOptionText = function setOptionText(option, text_0, dir_0){
  var formattedText;
  if (isNull(dir_0) && isNotNull(this.estimator)) {
    dir_0 = this.estimator.estimateDirection(text_0);
  }
  if (isNull(dir_0)) {
    $setText(option, text_0);
    $removeAttribute(option, 'bidiwrapped');
  }
   else {
    formattedText = getInstanceForCurrentLocale().unicodeWrapWithKnownDir(dir_0, text_0, false, false);
    $setText(option, formattedText);
    if (length__I__devirtual$(formattedText) > length__I__devirtual$(text_0)) {
      $setAttribute(option, 'bidiwrapped', '');
    }
     else {
      $removeAttribute(option, 'bidiwrapped');
    }
  }
}
;
_.setSelectedIndex = function setSelectedIndex(index_0){
  $setSelectedIndex(this.getSelectElement(), index_0);
}
;
_.setVisibleItemCount = function setVisibleItemCount(visibleItems){
  $setSize(this.getSelectElement(), visibleItems);
}
;
var DEFAULT_DIRECTION_ESTIMATOR_2, INSERT_AT_END = 0;
var Lcom_google_gwt_user_client_ui_ListBox_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ListBox', 122, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit);
function $clinit_PopupPanel$1(){
  $clinit_PopupPanel$1 = emptyMethod;
  $clinit_Object();
}

function PopupPanel$1(this$0){
  $clinit_PopupPanel$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_748();
}

defineClass(584, 1, {302:1, 13:1, 1:1}, PopupPanel$1);
_.$init_748 = function $init_748(){
}
;
_.onResize = function onResize_4(event_0){
  var height, style, width_0, winHeight, winWidth;
  style = $getStyle(this.this$01.glass);
  winWidth = getClientWidth();
  winHeight = getClientHeight();
  $setDisplay(style, ($clinit_Style$Display() , NONE));
  $setWidth_1(style, 0, ($clinit_Style$Unit() , PX));
  $setHeight_1(style, 0, ($clinit_Style$Unit() , PX));
  width_0 = $getScrollWidth_0(get_2654());
  height = $getScrollHeight_0(get_2654());
  $setWidth_1(style, $wnd.Math.max(width_0, winWidth), ($clinit_Style$Unit() , PX));
  $setHeight_1(style, $wnd.Math.max(height, winHeight), ($clinit_Style$Unit() , PX));
  $setDisplay(style, ($clinit_Style$Display() , BLOCK));
}
;
var Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'PopupPanel/1', 584, Ljava_lang_Object_2_classLit);
function $clinit_PopupPanel$3(){
  $clinit_PopupPanel$3 = emptyMethod;
  $clinit_Object();
}

function PopupPanel$3(this$0){
  $clinit_PopupPanel$3();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_749();
}

defineClass(585, 1, {13:1, 148:1, 1:1}, PopupPanel$3);
_.$init_749 = function $init_749(){
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_7(event_0){
  this.this$01.previewNativeEvent(event_0);
}
;
var Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui', 'PopupPanel/3', 585, Ljava_lang_Object_2_classLit);
function $clinit_PopupPanel$4(){
  $clinit_PopupPanel$4 = emptyMethod;
  $clinit_Object();
}

function PopupPanel$4(this$0){
  $clinit_PopupPanel$4();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_750();
}

defineClass(586, 1, {75:1, 13:1, 1:1}, PopupPanel$4);
_.$init_750 = function $init_750(){
}
;
_.onValueChange = function onValueChange_25(event_0){
  if (this.this$01.autoHideOnHistoryEvents) {
    this.this$01.hide();
  }
}
;
var Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit = createForClass('com.google.gwt.user.client.ui', 'PopupPanel/4', 586, Ljava_lang_Object_2_classLit);
function $clinit_PopupPanel$AnimationType(){
  $clinit_PopupPanel$AnimationType = emptyMethod;
  $clinit_Enum();
  CENTER_0 = new PopupPanel$AnimationType('CENTER', 0);
  ONE_WAY_CORNER = new PopupPanel$AnimationType('ONE_WAY_CORNER', 1);
  ROLL_DOWN = new PopupPanel$AnimationType('ROLL_DOWN', 2);
}

function PopupPanel$AnimationType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_751();
}

function valueOf_30(name_0){
  $clinit_PopupPanel$AnimationType();
  return valueOf(($clinit_PopupPanel$AnimationType$Map() , $MAP_29), name_0);
}

function values_31(){
  $clinit_PopupPanel$AnimationType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_user_client_ui_PopupPanel$AnimationType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 233, 0, [CENTER_0, ONE_WAY_CORNER, ROLL_DOWN]);
}

defineClass(233, 7, {233:1, 4:1, 8:1, 7:1, 1:1}, PopupPanel$AnimationType);
_.$init_751 = function $init_751(){
}
;
var CENTER_0, ONE_WAY_CORNER, ROLL_DOWN;
var Lcom_google_gwt_user_client_ui_PopupPanel$AnimationType_2_classLit = createForEnum('com.google.gwt.user.client.ui', 'PopupPanel/AnimationType', 233, Ljava_lang_Enum_2_classLit, values_31, valueOf_30);
function $clinit_PopupPanel$AnimationType$Map(){
  $clinit_PopupPanel$AnimationType$Map = emptyMethod;
  $MAP_29 = createValueOfMap(values_31());
}

var $MAP_29;
function $clinit_PopupPanel$ResizeAnimation(){
  $clinit_PopupPanel$ResizeAnimation = emptyMethod;
  $clinit_Animation();
}

function PopupPanel$ResizeAnimation(panel){
  $clinit_PopupPanel$ResizeAnimation();
  Animation_0.call(this);
  this.$init_752();
  this.curPanel = panel;
}

defineClass(582, 160, {1:1}, PopupPanel$ResizeAnimation);
_.$init_752 = function $init_752(){
  this.curPanel = null;
  this.offsetWidth_0 = -1;
}
;
_.getRectString = function getRectString(top_0, right, bottom, left){
  return 'rect(' + top_0 + 'px, ' + right + 'px, ' + bottom + 'px, ' + left + 'px)';
}
;
_.maybeShowGlass = function maybeShowGlass(){
  if (this.showing) {
    if (this.curPanel.isGlassEnabled) {
      $appendChild($getBody(get_2654()), this.curPanel.glass);
      this.resizeRegistration = addResizeHandler(this.curPanel.glassResizer);
      this.curPanel.glassResizer.onResize(null);
      this.glassShowing = true;
    }
  }
   else if (this.glassShowing) {
    $removeChild($getBody(get_2654()), this.curPanel.glass);
    this.resizeRegistration.removeHandler();
    this.resizeRegistration = null;
    this.glassShowing = false;
  }
}
;
_.onComplete = function onComplete_9(){
  if (!this.showing) {
    this.maybeShowGlass();
    if (!this.isUnloading) {
      get_2662().remove_0(this.curPanel);
    }
  }
  ($clinit_PopupPanel() , impl_0).setClip(this.curPanel.getElement(), 'rect(auto, auto, auto, auto)');
  $setProperty_0($getStyle(this.curPanel.getElement()), 'overflow', 'visible');
}
;
_.onInstantaneousRun_0 = function onInstantaneousRun_0(){
  this.maybeShowGlass();
  if (this.showing) {
    $setProperty_0($getStyle(this.curPanel.getElement()), 'position', 'absolute');
    if (this.curPanel.topPosition != -1) {
      this.curPanel.setPopupPosition(this.curPanel.leftPosition, this.curPanel.topPosition);
    }
    get_2662().add_0(this.curPanel);
  }
   else {
    if (!this.isUnloading) {
      get_2662().remove_0(this.curPanel);
    }
  }
  $setProperty_0($getStyle(this.curPanel.getElement()), 'overflow', 'visible');
}
;
_.onStart = function onStart_7(){
  this.offsetHeight_0 = this.curPanel.getOffsetHeight();
  this.offsetWidth_0 = this.curPanel.getOffsetWidth();
  $setProperty_0($getStyle(this.curPanel.getElement()), 'overflow', 'hidden');
  getClassPrototype(160).onStart.call(this);
}
;
_.onUpdate = function onUpdate_4(progress){
  var bottom, height, left, right, top_0, width_0;
  if (!this.showing) {
    progress = 1 - progress;
  }
  top_0 = 0;
  left = 0;
  right = 0;
  bottom = 0;
  height = round_int(progress * this.offsetHeight_0);
  width_0 = round_int(progress * this.offsetWidth_0);
  switch (this.curPanel.animType.ordinal_0()) {
    case ($clinit_PopupPanel$AnimationType() , ROLL_DOWN).ordinal_0():
      right = this.offsetWidth_0;
      bottom = height;
      break;
    case ($clinit_PopupPanel$AnimationType() , CENTER_0).ordinal_0():
      top_0 = this.offsetHeight_0 - height >> 1;
      left = this.offsetWidth_0 - width_0 >> 1;
      right = left + width_0;
      bottom = top_0 + height;
      break;
    case ($clinit_PopupPanel$AnimationType() , ONE_WAY_CORNER).ordinal_0():
      if (getCurrentLocale().isRTL_0()) {
        left = this.offsetWidth_0 - width_0;
      }

      right = left + width_0;
      bottom = top_0 + height;
      break;
  }
  ($clinit_PopupPanel() , impl_0).setClip(this.curPanel.getElement(), this.getRectString(top_0, right, bottom, left));
}
;
_.setState_0 = function setState_1(showing, isUnloading){
  var animate;
  this.isUnloading = isUnloading;
  this.cancel();
  if (isNotNull(this.showTimer)) {
    this.showTimer.cancel();
    this.showTimer = null;
    this.onComplete();
  }
  this.curPanel.showing = showing;
  this.curPanel.updateHandlers();
  animate = !isUnloading && this.curPanel.isAnimationEnabled;
  if (jsNotEquals(this.curPanel.animType, ($clinit_PopupPanel$AnimationType() , CENTER_0)) && !showing) {
    animate = false;
  }
  this.showing = showing;
  if (animate) {
    if (showing) {
      this.maybeShowGlass();
      $setProperty_0($getStyle(this.curPanel.getElement()), 'position', 'absolute');
      if (this.curPanel.topPosition != -1) {
        this.curPanel.setPopupPosition(this.curPanel.leftPosition, this.curPanel.topPosition);
      }
      ($clinit_PopupPanel() , impl_0).setClip(this.curPanel.getElement(), this.getRectString(0, 0, 0, 0));
      get_2662().add_0(this.curPanel);
      this.showTimer = new PopupPanel$ResizeAnimation$1(this);
      this.showTimer.schedule(1);
    }
     else {
      this.run_0(200);
    }
  }
   else {
    this.onInstantaneousRun_0();
  }
}
;
_.glassShowing = false;
_.isUnloading = false;
_.offsetHeight_0 = 0;
_.offsetWidth_0 = 0;
_.showing = false;
var Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui', 'PopupPanel/ResizeAnimation', 582, Lcom_google_gwt_animation_client_Animation_2_classLit);
function $clinit_PopupPanel$ResizeAnimation$1(){
  $clinit_PopupPanel$ResizeAnimation$1 = emptyMethod;
  $clinit_Timer();
}

function PopupPanel$ResizeAnimation$1(this$1){
  $clinit_PopupPanel$ResizeAnimation$1();
  this.this$11 = this$1;
  Timer.call(this);
  this.$init_753();
}

defineClass(583, 93, {1:1}, PopupPanel$ResizeAnimation$1);
_.$init_753 = function $init_753(){
}
;
_.run = function run_21(){
  this.this$11.showTimer = null;
  this.this$11.run_0(200);
}
;
var Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'PopupPanel/ResizeAnimation/1', 583, Lcom_google_gwt_user_client_Timer_2_classLit);
function $clinit_PotentialElement(){
  $clinit_PotentialElement = emptyMethod;
  $clinit_Element();
  {
    declareShim();
  }
}

function $setResolver(this$static, resolver){
  $clinit_PotentialElement();
  this$static.__gwt_resolve = buildResolveCallback(resolver);
}

function as_3(e){
  $clinit_PotentialElement();
  if (!isPotential_0(e)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return e;
}

function buildResolveCallback(resolver){
  return function(){
    this.__gwt_resolve = cannotResolveTwice;
    return resolver.resolvePotentialElement();
  }
  ;
}

function cannotResolveTwice(){
  throw 'A PotentialElement cannot be resolved twice.';
}

function declareShim(){
  var shim = function(){
  }
  ;
  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){
    return this[name_0];
  }
  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){
    this[name_0] = undefined;
  }
  , setAttribute:function(name_0, value_0){
    this[name_0] = value_0;
  }
  , src:'', style:{}, title:''};
  $wnd.GwtPotentialElementShim = shim;
}

function isPotential_0(o){
  $clinit_PotentialElement();
  return isPotential(o);
}

function $clinit_ProvidesResize(){
  $clinit_ProvidesResize = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_ProvidesResize_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'ProvidesResize');
function $clinit_PushButton(){
  $clinit_PushButton = emptyMethod;
  $clinit_CustomButton();
}

function PushButton(){
  $clinit_PushButton();
  CustomButton.call(this);
  this.$init_754();
}

function PushButton_0(upImage){
  $clinit_PushButton();
  CustomButton_0.call(this, upImage);
  this.$init_754();
}

defineClass(71, 153, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, PushButton, PushButton_0);
_.$init_754 = function $init_754(){
  {
    this.setStyleName('gwt-PushButton');
  }
}
;
_.onClick_1 = function onClick_27(){
  this.setDown(false);
  getClassPrototype(153).onClick_1.call(this);
}
;
_.onClickCancel = function onClickCancel_0(){
  this.setDown(false);
}
;
_.onClickStart = function onClickStart_0(){
  this.setDown(true);
}
;
var Lcom_google_gwt_user_client_ui_PushButton_2_classLit = createForClass('com.google.gwt.user.client.ui', 'PushButton', 71, Lcom_google_gwt_user_client_ui_CustomButton_2_classLit);
function $clinit_RadioButton(){
  $clinit_RadioButton = emptyMethod;
  $clinit_CheckBox();
  DEFAULT_DIRECTION_ESTIMATOR_3 = ($clinit_DirectionalTextHelper() , DEFAULT_DIRECTION_ESTIMATOR_1);
}

function RadioButton(name_0){
  CheckBox_0.call(this, createInputRadio(name_0));
  this.$init_755();
  this.setStyleName('gwt-RadioButton');
  this.sinkEvents(1);
  this.sinkEvents(8);
  this.sinkEvents(4096);
  this.sinkEvents(128);
}

function RadioButton_0(name_0, label_0){
  $clinit_RadioButton();
  RadioButton_1.call(this, name_0, label_0.asString(), true);
}

function RadioButton_1(name_0, label_0, asHTML){
  RadioButton.call(this, name_0);
  if (asHTML) {
    this.setHTML_0(label_0);
  }
   else {
    this.setText(label_0);
  }
}

defineClass(169, 145, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 183:1, 14:1, 11:1, 1:1}, RadioButton_0);
_.$init_755 = function $init_755(){
}
;
_.ensureDomEventHandlers = function ensureDomEventHandlers_0(){
}
;
_.onBrowserEvent = function onBrowserEvent_7(event_0){
  var target;
  switch (eventGetType_0(event_0)) {
    case 8:
    case 4096:
    case 128:
      this.oldValue = this.getValue_3();
      break;
    case 1:
      target = $getEventTarget(event_0);
      if (is_0(target) && $isOrHasChild(this.labelElem, as(target))) {
        this.oldValue = this.getValue_3();
        return;
      }

      getClassPrototype(11).onBrowserEvent.call(this, event_0);
      fireIfNotEqual(this, this.oldValue, this.getValue_3());
      return;
  }
  getClassPrototype(11).onBrowserEvent.call(this, event_0);
}
;
_.sinkEvents = function sinkEvents_5(eventBitsToAdd){
  if (this.isOrWasAttached()) {
    sinkEvents_2(this.inputElem, eventBitsToAdd | getEventsSunk_0(this.inputElem));
    sinkEvents_2(this.labelElem, eventBitsToAdd | getEventsSunk_0(this.labelElem));
  }
   else {
    getClassPrototype(145).sinkEvents.call(this, eventBitsToAdd);
  }
}
;
var DEFAULT_DIRECTION_ESTIMATOR_3;
var Lcom_google_gwt_user_client_ui_RadioButton_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RadioButton', 169, Lcom_google_gwt_user_client_ui_CheckBox_2_classLit);
function $clinit_RequiresResize(){
  $clinit_RequiresResize = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_RequiresResize_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'RequiresResize');
function $clinit_RootPanel(){
  $clinit_RootPanel = emptyMethod;
  $clinit_AbsolutePanel();
  maybeDetachCommand = new RootPanel$1;
  rootPanels = new HashMap;
  widgetsToDetach = new HashSet;
}

function RootPanel(elem){
  $clinit_RootPanel();
  AbsolutePanel_0.call(this, elem);
  this.$init_756();
  this.onAttach();
}

function detachNow(widget){
  $clinit_RootPanel();
  if (!widgetsToDetach.contains_0(widget)) {
    debugger;
    throw toJs(makeAssertionError_Object('detachNow() called on a widget not currently in the detach list'));
  }
  try {
    widget.onDetach();
  }
   finally {
    widgetsToDetach.remove_1(widget);
  }
}

function detachOnWindowClose(widget){
  if (!!widgetsToDetach.contains_0(widget)) {
    debugger;
    throw toJs(makeAssertionError_Object('detachOnUnload() called twice for the same widget'));
  }
  if (!!isElementChildOfWidget(widget.getElement())) {
    debugger;
    throw toJs(makeAssertionError_Object('A widget that has an existing parent widget may not be added to the detach list'));
  }
  widgetsToDetach.add_5(widget);
}

function detachWidgets(){
  $clinit_RootPanel();
  try {
    tryCommand(widgetsToDetach, maybeDetachCommand);
  }
   finally {
    widgetsToDetach.clear_0();
    rootPanels.clear_0();
  }
}

function get_2662(){
  $clinit_RootPanel();
  return get_2663(null);
}

function get_2663(id_0){
  $clinit_RootPanel();
  var elem, rp;
  rp = castTo(rootPanels.get_1(id_0), 234);
  elem = null;
  if (jsNotEquals(id_0, null)) {
    if (isNull(elem = $getElementById(get_2654(), id_0))) {
      return null;
    }
  }
  if (isNotNull(rp)) {
    if (isNull(elem) || jsEquals(rp.getElement(), elem)) {
      return rp;
    }
  }
  if (rootPanels.size_1() == 0) {
    hookWindowClosing();
    if (getCurrentLocale().isRTL_0()) {
      setDirectionOnElement(getRootElement(), ($clinit_HasDirection$Direction() , RTL));
    }
  }
  if (isNull(elem)) {
    rp = new RootPanel$DefaultRootPanel;
  }
   else {
    rp = new RootPanel(elem);
  }
  rootPanels.put(id_0, rp);
  detachOnWindowClose(rp);
  return rp;
}

function getBodyElement_0(){
  $clinit_RootPanel();
  return $doc.body;
}

function getRootElement(){
  return $doc;
}

function hookWindowClosing(){
  addCloseHandler(new RootPanel$2);
}

function isElementChildOfWidget(element){
  var body_0;
  element = $getParentElement(element);
  body_0 = $getBody(get_2654());
  while (isNotNull(element) && jsNotEquals(body_0, element)) {
    if (isNotNull(getEventListener_0(element))) {
      return true;
    }
    element = $cast($getParentElement(element));
  }
  return false;
}

function isInDetachList(widget){
  $clinit_RootPanel();
  return widgetsToDetach.contains_0(widget);
}

defineClass(234, 119, {18:1, 45:1, 234:1, 14:1, 11:1, 1:1}, RootPanel);
_.$init_756 = function $init_756(){
}
;
var maybeDetachCommand, rootPanels, widgetsToDetach;
var Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel', 234, Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit);
function $clinit_RootPanel$1(){
  $clinit_RootPanel$1 = emptyMethod;
  $clinit_Object();
}

function RootPanel$1(){
  $clinit_RootPanel$1();
  Object_0.call(this);
  this.$init_757();
}

defineClass(591, 1, {1:1}, RootPanel$1);
_.$init_757 = function $init_757(){
}
;
_.execute_3 = function execute_12(w){
  if (w.isAttached()) {
    w.onDetach();
  }
}
;
var Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel/1', 591, Ljava_lang_Object_2_classLit);
function $clinit_RootPanel$2(){
  $clinit_RootPanel$2 = emptyMethod;
  $clinit_Object();
}

function RootPanel$2(){
  $clinit_RootPanel$2();
  Object_0.call(this);
  this.$init_758();
}

defineClass(592, 1, {252:1, 13:1, 1:1}, RootPanel$2);
_.$init_758 = function $init_758(){
}
;
_.onClose_1 = function onClose_1(closeEvent){
  detachWidgets();
}
;
var Lcom_google_gwt_user_client_ui_RootPanel$2_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel/2', 592, Ljava_lang_Object_2_classLit);
function $clinit_RootPanel$DefaultRootPanel(){
  $clinit_RootPanel$DefaultRootPanel = emptyMethod;
  $clinit_RootPanel();
}

function RootPanel$DefaultRootPanel(){
  $clinit_RootPanel$DefaultRootPanel();
  RootPanel.call(this, getBodyElement_0());
  this.$init_759();
}

defineClass(590, 234, {18:1, 45:1, 234:1, 14:1, 11:1, 1:1}, RootPanel$DefaultRootPanel);
_.$init_759 = function $init_759(){
}
;
_.setWidgetPositionImpl = function setWidgetPositionImpl_0(w, left, top_0){
  left -= $getBodyOffsetLeft(get_2654());
  top_0 -= $getBodyOffsetTop(get_2654());
  getClassPrototype(119).setWidgetPositionImpl.call(this, w, left, top_0);
}
;
var Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel/DefaultRootPanel', 590, Lcom_google_gwt_user_client_ui_RootPanel_2_classLit);
function $clinit_ScrollImpl(){
  $clinit_ScrollImpl = emptyMethod;
  $clinit_Object();
}

function ScrollImpl(){
  Object_0.call(this);
  this.$init_760();
}

function get_2664(){
  $clinit_ScrollImpl();
  if (isNull(impl_14)) {
    impl_14 = castTo(new ScrollImpl, 290);
  }
  return impl_14;
}

defineClass(290, 1, {290:1, 1:1}, ScrollImpl);
_.$init_760 = function $init_760(){
}
;
_.getMaximumHorizontalScrollPosition_0 = function getMaximumHorizontalScrollPosition(scrollable){
  return this.isRtl(scrollable)?0:$getScrollWidth(scrollable) - $getClientWidth(scrollable);
}
;
_.getMinimumHorizontalScrollPosition_0 = function getMinimumHorizontalScrollPosition(scrollable){
  return this.isRtl(scrollable)?$getClientWidth(scrollable) - $getScrollWidth(scrollable):0;
}
;
_.initialize = function initialize(scrollable, container){
}
;
_.isRtl = function isRtl_0(scrollable){
  var computedStyle = $doc.defaultView.getComputedStyle(scrollable, null);
  return computedStyle.getPropertyValue('direction') == 'rtl';
}
;
var impl_14;
var Lcom_google_gwt_user_client_ui_ScrollImpl_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ScrollImpl', 290, Ljava_lang_Object_2_classLit);
function $clinit_ScrollListenerCollection(){
  $clinit_ScrollListenerCollection = emptyMethod;
  $clinit_ArrayList();
}

function ScrollListenerCollection(){
  $clinit_ScrollListenerCollection();
  ArrayList.call(this);
  this.$init_761();
}

defineClass(779, 12, {4:1, 1:1, 12:1, 47:1, 38:1, 158:1}, ScrollListenerCollection);
_.$init_761 = function $init_761(){
}
;
_.fireScroll_0 = function fireScroll_0(sender, scrollLeft, scrollTop){
  var listener, listener$iterator;
  for (listener$iterator = this.iterator_0(); listener$iterator.hasNext_0();) {
    listener = castTo(listener$iterator.next_1(), 307);
    listener.onScroll(sender, scrollLeft, scrollTop);
  }
}
;
var Lcom_google_gwt_user_client_ui_ScrollListenerCollection_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ScrollListenerCollection', 779, Ljava_util_ArrayList_2_classLit);
function $clinit_ScrollPanel(){
  $clinit_ScrollPanel = emptyMethod;
  $clinit_SimplePanel();
}

function ScrollPanel(){
  $clinit_ScrollPanel();
  SimplePanel.call(this);
  this.$init_762();
  this.scrollableElem = this.getElement();
  this.containerElem = $createDivElement(get_2654());
  $appendChild(this.scrollableElem, this.containerElem);
  this.initialize_0();
}

defineClass(275, 112, {18:1, 45:1, 14:1, 11:1, 1:1}, ScrollPanel);
_.$init_762 = function $init_762(){
}
;
_.ensureVisible = function ensureVisible(item_0){
  var element, scroll_0;
  scroll_0 = this.getScrollableElement();
  element = item_0.getElement();
  this.ensureVisibleImpl(scroll_0, element);
}
;
_.ensureVisibleImpl = function ensureVisibleImpl(scroll_0, e){
  if (!e)
    return;
  var item_0 = e;
  var realOffset = 0;
  while (item_0 && item_0 != scroll_0) {
    realOffset += item_0.offsetTop;
    item_0 = item_0.offsetParent;
  }
  scroll_0.scrollTop = realOffset - scroll_0.offsetHeight / 2;
}
;
_.getContainerElement = function getContainerElement_2(){
  return asOld(this.containerElem);
}
;
_.getHorizontalScrollPosition = function getHorizontalScrollPosition_0(){
  return $getScrollLeft(this.getScrollableElement());
}
;
_.getMaximumHorizontalScrollPosition = function getMaximumHorizontalScrollPosition_0(){
  return get_2664().getMaximumHorizontalScrollPosition_0(this.getScrollableElement());
}
;
_.getMaximumVerticalScrollPosition = function getMaximumVerticalScrollPosition(){
  return $getScrollHeight(this.getScrollableElement()) - $getClientHeight(this.getScrollableElement());
}
;
_.getMinimumHorizontalScrollPosition = function getMinimumHorizontalScrollPosition_0(){
  return get_2664().getMinimumHorizontalScrollPosition_0(this.getScrollableElement());
}
;
_.getMinimumVerticalScrollPosition = function getMinimumVerticalScrollPosition(){
  return 0;
}
;
_.getScrollPosition = function getScrollPosition(){
  return $getScrollTop(this.getScrollableElement());
}
;
_.getScrollableElement = function getScrollableElement(){
  return asOld(this.scrollableElem);
}
;
_.getVerticalScrollPosition = function getVerticalScrollPosition_0(){
  return this.getScrollPosition();
}
;
_.initialize_0 = function initialize_0(){
  this.setAlwaysShowScrollBars(false);
  $setPosition($getStyle(this.scrollableElem), ($clinit_Style$Position() , RELATIVE));
  $setPosition($getStyle(this.containerElem), ($clinit_Style$Position() , RELATIVE));
  $setProperty_0($getStyle(this.scrollableElem), 'zoom', '1');
  $setProperty_0($getStyle(this.containerElem), 'zoom', '1');
  this.setTouchScrollingDisabled(false);
  get_2664().initialize(this.scrollableElem, this.containerElem);
}
;
_.isTouchScrollingDisabled = function isTouchScrollingDisabled(){
  return isNull(this.touchScroller);
}
;
_.onAttach = function onAttach_3(){
  getClassPrototype(11).onAttach.call(this);
  setEventListener_0(this.getScrollableElement(), this);
}
;
_.onDetach = function onDetach_2(){
  setEventListener_0(this.getScrollableElement(), null);
  getClassPrototype(11).onDetach.call(this);
}
;
_.scrollToBottom = function scrollToBottom_0(){
  this.setVerticalScrollPosition(this.getMaximumVerticalScrollPosition());
}
;
_.setAlwaysShowScrollBars = function setAlwaysShowScrollBars(alwaysShow){
  $setOverflow($getStyle(this.getScrollableElement()), alwaysShow?($clinit_Style$Overflow() , SCROLL):($clinit_Style$Overflow() , AUTO));
}
;
_.setHeight = function setHeight_1(height){
  getClassPrototype(14).setHeight.call(this, height);
}
;
_.setHorizontalScrollPosition = function setHorizontalScrollPosition(position){
  $setScrollLeft(this.getScrollableElement(), position);
}
;
_.setScrollPosition_0 = function setScrollPosition_1(position){
  $setScrollTop(this.getScrollableElement(), position);
}
;
_.setSize = function setSize_2(width_0, height){
  getClassPrototype(14).setSize.call(this, width_0, height);
}
;
_.setTouchScrollingDisabled = function setTouchScrollingDisabled(isDisabled){
  if (isDisabled == this.isTouchScrollingDisabled()) {
    return isDisabled;
  }
  if (isDisabled) {
    this.touchScroller.setTargetWidget(null);
    this.touchScroller = null;
  }
   else {
    this.touchScroller = createIfSupported_1(this);
  }
  return this.isTouchScrollingDisabled();
}
;
_.setVerticalScrollPosition = function setVerticalScrollPosition(position){
  this.setScrollPosition_0(position);
}
;
_.setWidth = function setWidth_1(width_0){
  getClassPrototype(14).setWidth.call(this, width_0);
}
;
var Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ScrollPanel', 275, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit);
function $clinit_SimplePanel$1(){
  $clinit_SimplePanel$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function SimplePanel$1(this$0){
  $clinit_SimplePanel$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_763();
}

defineClass(562, 1, {1:1, 63:1}, SimplePanel$1);
_.$init_763 = function $init_763(){
  this.hasElement = isNotNull(this.this$01.widget);
  this.returned = null;
}
;
_.next_1 = function next_4(){
  return this.next_2();
}
;
_.hasNext_0 = function hasNext_1(){
  return this.hasElement;
}
;
_.next_2 = function next_3(){
  if (!this.hasElement || isNull(this.this$01.widget)) {
    throw toJs(new NoSuchElementException);
  }
  this.hasElement = false;
  return this.returned = this.this$01.widget;
}
;
_.remove_3 = function remove_22(){
  if (isNotNull(this.returned)) {
    this.this$01.remove_0(this.returned);
  }
}
;
_.hasElement = false;
var Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'SimplePanel/1', 562, Ljava_lang_Object_2_classLit);
function $clinit_SourcesTreeEvents(){
  $clinit_SourcesTreeEvents = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_SourcesTreeEvents_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'SourcesTreeEvents');
function $clinit_TextBoxBase(){
  $clinit_TextBoxBase = emptyMethod;
  $clinit_ValueBoxBase();
  ALIGN_CENTER_0 = new TextBoxBase$TextAlignConstant(($clinit_ValueBoxBase$TextAlignment() , CENTER_1));
  ALIGN_JUSTIFY_0 = new TextBoxBase$TextAlignConstant(($clinit_ValueBoxBase$TextAlignment() , JUSTIFY_0));
  ALIGN_LEFT_0 = new TextBoxBase$TextAlignConstant(($clinit_ValueBoxBase$TextAlignment() , LEFT_0));
  ALIGN_RIGHT_0 = new TextBoxBase$TextAlignConstant(($clinit_ValueBoxBase$TextAlignment() , RIGHT_0));
}

function TextBoxBase(elem){
  $clinit_TextBoxBase();
  ValueBoxBase.call(this, elem, instance_13(), instance_12());
  this.$init_769();
}

defineClass(386, 330, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1});
_.$init_769 = function $init_769(){
}
;
_.getValue_0 = function getValue_5(){
  return this.getValue_2();
}
;
_.getValue_2 = function getValue_6(){
  var raw;
  raw = castToString(getClassPrototype(330).getValue_0.call(this));
  return jsEquals(raw, null)?'':raw;
}
;
var ALIGN_CENTER_0, ALIGN_JUSTIFY_0, ALIGN_LEFT_0, ALIGN_RIGHT_0;
var Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TextBoxBase', 386, Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit);
function $clinit_TextArea(){
  $clinit_TextArea = emptyMethod;
  $clinit_TextBoxBase();
}

function TextArea_0(){
  $clinit_TextArea();
  TextBoxBase.call(this, $createTextAreaElement(get_2654()));
  this.$init_770();
  this.setStyleName('gwt-TextArea');
}

defineClass(408, 386, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, TextArea_0);
_.$init_770 = function $init_770(){
}
;
var Lcom_google_gwt_user_client_ui_TextArea_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TextArea', 408, Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit);
function $clinit_TextBox(){
  $clinit_TextBox = emptyMethod;
  $clinit_TextBoxBase();
}

function TextBox(){
  $clinit_TextBox();
  TextBox_0.call(this, $createTextInputElement(get_2654()), 'gwt-TextBox');
}

function TextBox_0(element, styleName){
  TextBoxBase.call(this, element);
  this.$init_771();
  if (jsNotEquals(styleName, null)) {
    this.setStyleName(styleName);
  }
}

defineClass(124, 386, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, TextBox);
_.$init_771 = function $init_771(){
}
;
var Lcom_google_gwt_user_client_ui_TextBox_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TextBox', 124, Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit);
function $clinit_TextBoxBase$TextAlignConstant(){
  $clinit_TextBoxBase$TextAlignConstant = emptyMethod;
  $clinit_Object();
}

function TextBoxBase$TextAlignConstant(value_0){
  $clinit_TextBoxBase$TextAlignConstant();
  Object_0.call(this);
  this.$init_772();
  this.value_0 = value_0;
}

defineClass(276, 1, {1:1}, TextBoxBase$TextAlignConstant);
_.$init_772 = function $init_772(){
}
;
var Lcom_google_gwt_user_client_ui_TextBoxBase$TextAlignConstant_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TextBoxBase/TextAlignConstant', 276, Ljava_lang_Object_2_classLit);
function $clinit_ToggleButton(){
  $clinit_ToggleButton = emptyMethod;
  $clinit_CustomButton();
}

function ToggleButton(upImage){
  $clinit_ToggleButton();
  CustomButton_0.call(this, upImage);
  this.$init_773();
}

function ToggleButton_0(upText){
  $clinit_ToggleButton();
  CustomButton_1.call(this, upText);
  this.$init_773();
}

defineClass(154, 153, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 14:1, 11:1, 1:1}, ToggleButton, ToggleButton_0);
_.$init_773 = function $init_773(){
  {
    this.setStyleName(STYLENAME_DEFAULT);
  }
}
;
_.addValueChangeHandler = function addValueChangeHandler_5(handler){
  return this.addHandler(handler, getType_56());
}
;
_.isDown = function isDown_0(){
  return getClassPrototype(153).isDown.call(this);
}
;
_.onClick_1 = function onClick_29(){
  this.toggleDown();
  getClassPrototype(153).onClick_1.call(this);
  fire_8(this, valueOf_32(this.isDown()));
}
;
_.setDown = function setDown_0(down){
  getClassPrototype(153).setDown.call(this, down);
}
;
var STYLENAME_DEFAULT = 'gwt-ToggleButton';
var Lcom_google_gwt_user_client_ui_ToggleButton_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ToggleButton', 154, Lcom_google_gwt_user_client_ui_CustomButton_2_classLit);
function $clinit_Tree(){
  $clinit_Tree = emptyMethod;
  $clinit_Widget();
  $clinit_Iterable();
}

function Tree(){
  $clinit_Tree();
  Widget.call(this);
  this.$init_774();
  this.init_49(new Tree$ImageAdapter, false);
}

function shouldTreeDelegateFocusToElement(elem){
  $clinit_Tree();
  var name_0 = elem.nodeName;
  return name_0 == 'SELECT' || (name_0 == 'INPUT' || (name_0 == 'TEXTAREA' || (name_0 == 'OPTION' || (name_0 == 'BUTTON' || name_0 == 'LABEL'))));
}

defineClass(964, 11, {79:1, 77:1, 78:1, 76:1, 18:1, 86:1, 85:1, 45:1, 14:1, 11:1, 1:1}, Tree);
_.$init_774 = function $init_774(){
  this.childWidgets = new HashMap;
  this.isAnimationEnabled = false;
  this.scrollOnSelectEnabled = true;
}
;
_.add_0 = function add_34(widget){
  this.addItem_0(widget);
}
;
_.addItem = function addItem_3(item_0){
  this.root.addItem(item_0);
}
;
_.addItem_0 = function addItem_4(widget){
  return this.root.addItem_0(widget);
}
;
_.addKeyUpHandler = function addKeyUpHandler_3(handler){
  return this.addDomHandler(handler, getType_38());
}
;
_.addSelectionHandler = function addSelectionHandler_1(handler){
  return this.addHandler(handler, getType_55());
}
;
_.adopt_0 = function adopt_0(widget, treeItem){
  if (!!this.childWidgets.containsKey(widget)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.childWidgets.put(widget, treeItem);
  widget.setParent(this);
}
;
_.clear_0 = function clear_16(){
  this.root.removeItems();
}
;
_.collectElementChain = function collectElementChain(chain, hRoot, hElem){
  if (isNull(hElem) || jsEquals(hElem, hRoot)) {
    return;
  }
  this.collectElementChain(chain, hRoot, getParent_1(hElem));
  chain.add_5(hElem);
}
;
_.doAttachChildren = function doAttachChildren_3(){
  try {
    tryCommand(this, ($clinit_AttachDetachException() , attachCommand));
  }
   finally {
    setEventListener(this.focusable, this);
  }
}
;
_.doDetachChildren = function doDetachChildren_3(){
  try {
    tryCommand(this, ($clinit_AttachDetachException() , detachCommand));
  }
   finally {
    setEventListener(this.focusable, null);
  }
}
;
_.elementClicked = function elementClicked(hElem){
  var chain, item_0;
  chain = new ArrayList;
  this.collectElementChain(chain, this.getElement(), hElem);
  item_0 = this.findItemByChain(chain, 0, this.root);
  if (isNotNull(item_0) && jsNotEquals(item_0, this.root)) {
    if (item_0.getChildCount() > 0 && $isOrHasChild(item_0.getImageElement(), hElem)) {
      item_0.setState_0(!item_0.getState(), true);
      return true;
    }
     else if ($isOrHasChild(item_0.getElement(), hElem)) {
      this.onSelection_0(item_0, true, !shouldTreeDelegateFocusToElement(hElem));
      return true;
    }
  }
  return false;
}
;
_.findDeepestOpenChild = function findDeepestOpenChild(item_0){
  if (!item_0.getState()) {
    return item_0;
  }
  return this.findDeepestOpenChild(item_0.getChild(item_0.getChildCount() - 1));
}
;
_.findItemByChain = function findItemByChain(chain, idx, root){
  var child, hCurElem, i, n, retItem;
  if (idx == chain.size_1()) {
    return root;
  }
  hCurElem = castToJso(chain.get_0(idx));
  for (i = 0 , n = root.getChildCount(); i < n; ++i) {
    child = root.getChild(i);
    if (jsEquals(child.getElement(), hCurElem)) {
      retItem = this.findItemByChain(chain, idx + 1, root.getChild(i));
      if (isNull(retItem)) {
        return child;
      }
      return retItem;
    }
  }
  return this.findItemByChain(chain, idx + 1, root);
}
;
_.fireStateChanged = function fireStateChanged(item_0, open_0){
  if (open_0) {
    fire_5(this, item_0);
  }
   else {
    fire_3(this, item_0);
  }
}
;
_.getSelectedItem_0 = function getSelectedItem_0(){
  return this.curSelection;
}
;
_.getTopClosedParent = function getTopClosedParent(item_0){
  var parent_0, topClosedParent;
  topClosedParent = null;
  parent_0 = item_0.getParentItem();
  while (isNotNull(parent_0) && jsNotEquals(parent_0, this.root)) {
    if (!parent_0.getState()) {
      topClosedParent = parent_0;
    }
    parent_0 = parent_0.getParentItem();
  }
  return topClosedParent;
}
;
_.init_49 = function init_51(images, useLeafImages){
  this.setImages(images, useLeafImages);
  this.setElement_0(createDiv());
  $setProperty_0($getStyle(this.getElement()), 'position', 'relative');
  $setProperty_0($getStyle(this.getElement()), 'zoom', '1');
  this.focusable = ($clinit_FocusPanel() , impl_1).createFocusable();
  $setProperty_0($getStyle(this.focusable), 'fontSize', '0');
  $setProperty_0($getStyle(this.focusable), 'position', 'absolute');
  $setProperty_0($getStyle(this.focusable), 'outline', '0px');
  $setAttribute(this.focusable, 'hideFocus', 'true');
  setIntStyleAttribute(this.focusable, 'zIndex', -1);
  appendChild(this.getElement(), this.focusable);
  this.sinkEvents(4 | 1 | 896);
  sinkEvents_1(this.focusable, 6144);
  this.root = new TreeItem_2(true);
  this.root.setTree(this);
  this.setStyleName('gwt-Tree');
  getTreeRole().set_3(this.focusable);
}
;
_.isAnimationEnabled_0 = function isAnimationEnabled(){
  return this.isAnimationEnabled;
}
;
_.isKeyboardNavigationEnabled = function isKeyboardNavigationEnabled(currentItem){
  return true;
}
;
_.iterator_0 = function iterator_11(){
  var widgets;
  widgets = initUnidimensionalArray(Lcom_google_gwt_user_client_ui_Widget_2_classLit, {4:1, 1:1, 5:1}, 11, this.childWidgets.size_1(), 0, 1);
  this.childWidgets.keySet_0().toArray_0(widgets);
  return createWidgetIterator(this, widgets);
}
;
_.keyboardNavigation = function keyboardNavigation(event_0){
  var code_0;
  if (this.isKeyboardNavigationEnabled(this.curSelection)) {
    code_0 = $getKeyCode(event_0);
    switch (maybeSwapArrowKeysForRtl(code_0, getCurrentLocale().isRTL_0())) {
      case 38:
        {
          this.moveSelectionUp(this.curSelection);
          break;
        }

      case 40:
        {
          this.moveSelectionDown(this.curSelection, true);
          break;
        }

      case 37:
        {
          this.maybeCollapseTreeItem();
          break;
        }

      case 39:
        {
          this.maybeExpandTreeItem();
          break;
        }

      default:{
          return;
        }

    }
  }
}
;
_.maybeCollapseTreeItem = function maybeCollapseTreeItem(){
  var parent_0, topClosedParent;
  topClosedParent = this.getTopClosedParent(this.curSelection);
  if (isNotNull(topClosedParent)) {
    this.setSelectedItem(topClosedParent);
  }
   else if (this.curSelection.getState()) {
    this.curSelection.setState(false);
  }
   else {
    parent_0 = this.curSelection.getParentItem();
    if (isNotNull(parent_0)) {
      this.setSelectedItem(parent_0);
    }
  }
}
;
_.maybeExpandTreeItem = function maybeExpandTreeItem(){
  var topClosedParent;
  topClosedParent = this.getTopClosedParent(this.curSelection);
  if (isNotNull(topClosedParent)) {
    this.setSelectedItem(topClosedParent);
  }
   else if (!this.curSelection.getState()) {
    this.curSelection.setState(true);
  }
   else if (this.curSelection.getChildCount() > 0) {
    this.setSelectedItem(this.curSelection.getChild(0));
  }
}
;
_.maybeUpdateSelection = function maybeUpdateSelection(itemThatChangedState, isItemOpening){
  var tempItem;
  if (!isItemOpening) {
    tempItem = this.curSelection;
    while (isNotNull(tempItem)) {
      if (jsEquals(tempItem, itemThatChangedState)) {
        this.setSelectedItem(itemThatChangedState);
        return;
      }
      tempItem = tempItem.getParentItem();
    }
  }
}
;
_.moveFocus = function moveFocus_0(){
  var containerLeft, containerTop, focusableWidget, height, left, selectedElem, top_0, width_0;
  focusableWidget = this.curSelection.getFocusable();
  if (isNotNull(focusableWidget)) {
    focusableWidget.setFocus(true);
    if (this.scrollOnSelectEnabled) {
      $scrollIntoView(castTo(focusableWidget, 11).getElement());
    }
  }
   else {
    if (this.scrollOnSelectEnabled) {
      selectedElem = this.curSelection.getContentElem();
      containerLeft = this.getAbsoluteLeft();
      containerTop = this.getAbsoluteTop();
      left = $getAbsoluteLeft(selectedElem) - containerLeft;
      top_0 = $getAbsoluteTop(selectedElem) - containerTop;
      width_0 = $getPropertyInt(selectedElem, 'offsetWidth');
      height = $getPropertyInt(selectedElem, 'offsetHeight');
      if (width_0 == 0 || height == 0) {
        setIntStyleAttribute(this.focusable, 'left', 0);
        setIntStyleAttribute(this.focusable, 'top', 0);
        return;
      }
      $setProperty_0($getStyle(this.focusable), 'left', left + 'px');
      $setProperty_0($getStyle(this.focusable), 'top', top_0 + 'px');
      $setProperty_0($getStyle(this.focusable), 'width', width_0 + 'px');
      $setProperty_0($getStyle(this.focusable), 'height', height + 'px');
      $scrollIntoView(this.focusable);
    }
    this.updateAriaAttributes();
    this.setFocus(true);
  }
}
;
_.moveSelectionDown = function moveSelectionDown(sel, dig){
  var idx, parent_0, topClosedParent;
  if (jsEquals(sel, this.root)) {
    return;
  }
  topClosedParent = this.getTopClosedParent(sel);
  if (isNotNull(topClosedParent)) {
    this.moveSelectionDown(topClosedParent, false);
    return;
  }
  parent_0 = sel.getParentItem();
  if (isNull(parent_0)) {
    parent_0 = this.root;
  }
  idx = parent_0.getChildIndex(sel);
  if (!dig || !sel.getState()) {
    if (idx < parent_0.getChildCount() - 1) {
      this.onSelection_0(parent_0.getChild(idx + 1), true, true);
    }
     else {
      this.moveSelectionDown(parent_0, false);
    }
  }
   else if (sel.getChildCount() > 0) {
    this.onSelection_0(sel.getChild(0), true, true);
  }
}
;
_.moveSelectionUp = function moveSelectionUp(sel){
  var idx, parent_0, sibling, topClosedParent;
  topClosedParent = this.getTopClosedParent(sel);
  if (isNotNull(topClosedParent)) {
    this.onSelection_0(topClosedParent, true, true);
    return;
  }
  parent_0 = sel.getParentItem();
  if (isNull(parent_0)) {
    parent_0 = this.root;
  }
  idx = parent_0.getChildIndex(sel);
  if (idx > 0) {
    sibling = parent_0.getChild(idx - 1);
    this.onSelection_0(this.findDeepestOpenChild(sibling), true, true);
  }
   else {
    this.onSelection_0(parent_0, true, true);
  }
}
;
_.onBrowserEvent = function onBrowserEvent_9(event_0){
  var chain, e, eventType, item_0;
  eventType = eventGetType_0(event_0);
  switch (eventType) {
    case 128:
      {
        if (isNull(this.curSelection)) {
          if (this.root.getChildCount() > 0) {
            this.onSelection_0(this.root.getChild(0), true, true);
          }
          getClassPrototype(11).onBrowserEvent.call(this, event_0);
          return;
        }
      }

    case 256:
    case 512:
      if ($getAltKey(event_0) || $getMetaKey(event_0)) {
        getClassPrototype(11).onBrowserEvent.call(this, event_0);
        return;
      }

      break;
  }
  switch (eventType) {
    case 1:
      {
        e = eventGetTarget_1(event_0);
        if (shouldTreeDelegateFocusToElement(e)) {
        }
         else if (isNotNull(this.curSelection) && $isOrHasChild(this.curSelection.getContentElem(), e)) {
          this.setFocus(true);
        }
        break;
      }

    case 4:
      {
        if (jsEquals(eventGetCurrentTarget_1(event_0), this.getElement()) && $getButton(event_0) == 1) {
          this.elementClicked(eventGetTarget_1(event_0));
        }
        break;
      }

    case 128:
      {
        this.keyboardNavigation(event_0);
        this.lastWasKeyDown = true;
        break;
      }

    case 256:
      {
        if (!this.lastWasKeyDown) {
          this.keyboardNavigation(event_0);
        }
        this.lastWasKeyDown = false;
        break;
      }

    case 512:
      {
        if ($getKeyCode(event_0) == 9) {
          chain = new ArrayList;
          this.collectElementChain(chain, this.getElement(), eventGetTarget_1(event_0));
          item_0 = this.findItemByChain(chain, 0, this.root);
          if (jsNotEquals(item_0, this.getSelectedItem_0())) {
            this.setSelectedItem_0(item_0, true);
          }
        }
        this.lastWasKeyDown = false;
        break;
      }

  }
  switch (eventType) {
    case 128:
    case 512:
      {
        if (isArrowKey($getKeyCode(event_0))) {
          $stopPropagation(event_0);
          $preventDefault(event_0);
          return;
        }
      }

  }
  getClassPrototype(11).onBrowserEvent.call(this, event_0);
}
;
_.onLoad = function onLoad_12(){
  this.root.updateStateRecursive();
}
;
_.onSelection_0 = function onSelection_2(item_0, fireEvents, moveFocus){
  if (jsEquals(item_0, this.root)) {
    return;
  }
  if (isNotNull(this.curSelection)) {
    this.curSelection.setSelected(false);
  }
  this.curSelection = item_0;
  if (isNotNull(this.curSelection)) {
    if (moveFocus) {
      this.moveFocus();
    }
    this.curSelection.setSelected(true);
    if (fireEvents) {
      fire_7(this, this.curSelection);
    }
  }
}
;
_.orphan_0 = function orphan_0(widget){
  if (!jsEquals(widget.getParent(), this)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  try {
    widget.setParent(null);
  }
   finally {
    this.childWidgets.remove_4(widget);
  }
}
;
_.remove_0 = function remove_25(w){
  var item_0;
  item_0 = castTo(this.childWidgets.get_1(w), 99);
  if (isNull(item_0)) {
    return false;
  }
  item_0.setWidget(null);
  return true;
}
;
_.removeItem = function removeItem_0(item_0){
  this.root.removeItem(item_0);
}
;
_.setFocus = function setFocus_4(focus_0){
  if (focus_0) {
    ($clinit_FocusPanel() , impl_1).focus_0(this.focusable);
  }
   else {
    ($clinit_FocusPanel() , impl_1).blur_1(this.focusable);
  }
}
;
_.setImages = function setImages(images, useLeafImages){
  var image, size_0;
  this.images = images;
  this.useLeafImages = useLeafImages;
  if (!useLeafImages) {
    image = images.treeLeaf_0().createImage();
    $setProperty_0($getStyle(image.getElement()), 'visibility', 'hidden');
    get_2662().add_0(image);
    size_0 = image.getWidth() + 7;
    image.removeFromParent();
    this.indentValue = size_0 + 'px';
  }
}
;
_.setSelectedItem = function setSelectedItem(item_0){
  this.setSelectedItem_0(item_0, true);
}
;
_.setSelectedItem_0 = function setSelectedItem_0(item_0, fireEvents){
  if (isNull(item_0)) {
    if (isNull(this.curSelection)) {
      return;
    }
    this.curSelection.setSelected(false);
    this.curSelection = null;
    return;
  }
  this.onSelection_0(item_0, fireEvents, true);
}
;
_.showClosedImage = function showClosedImage(treeItem){
  this.showImage(treeItem, this.images.treeClosed_0());
}
;
_.showImage = function showImage(treeItem, proto){
  var child, holder;
  holder = treeItem.getImageHolderElement();
  child = getFirstChild(holder);
  if (isNull(child)) {
    appendChild(holder, $cast(proto.createElement_1()));
  }
   else {
    proto.applyTo($cast(child));
  }
}
;
_.showLeafImage = function showLeafImage(treeItem){
  if (this.useLeafImages || treeItem.isFullNode()) {
    this.showImage(treeItem, this.images.treeLeaf_0());
  }
   else if (getCurrentLocale().isRTL_0()) {
    $setProperty_0($getStyle(treeItem.getElement()), 'paddingRight', this.indentValue);
  }
   else {
    $setProperty_0($getStyle(treeItem.getElement()), 'paddingLeft', this.indentValue);
  }
}
;
_.showOpenImage = function showOpenImage(treeItem){
  this.showImage(treeItem, this.images.treeOpen_0());
}
;
_.updateAriaAttributes = function updateAriaAttributes(){
  var curSelectionContentElem, curSelectionIndex, curSelectionLevel, curSelectionParent, tempItem;
  curSelectionContentElem = this.curSelection.getContentElem();
  curSelectionLevel = -1;
  tempItem = this.curSelection;
  while (isNotNull(tempItem)) {
    tempItem = tempItem.getParentItem();
    ++curSelectionLevel;
  }
  getTreeitemRole().setAriaLevelProperty(curSelectionContentElem, curSelectionLevel + 1);
  curSelectionParent = this.curSelection.getParentItem();
  if (isNull(curSelectionParent)) {
    curSelectionParent = this.root;
  }
  getTreeitemRole().setAriaSetsizeProperty(curSelectionContentElem, curSelectionParent.getChildCount());
  curSelectionIndex = curSelectionParent.getChildIndex(this.curSelection);
  getTreeitemRole().setAriaPosinsetProperty(curSelectionContentElem, curSelectionIndex + 1);
  if (this.curSelection.getChildCount() == 0) {
    getTreeitemRole().removeAriaExpandedState(curSelectionContentElem);
  }
   else {
    getTreeitemRole().setAriaExpandedState(curSelectionContentElem, of(this.curSelection.getState()));
  }
  getTreeitemRole().setAriaSelectedState(curSelectionContentElem, of_2(true));
  getTreeRole().setAriaActivedescendantProperty(this.focusable, of_0(curSelectionContentElem));
}
;
_.isAnimationEnabled = false;
_.lastWasKeyDown = false;
_.scrollOnSelectEnabled = false;
_.useLeafImages = false;
var Lcom_google_gwt_user_client_ui_Tree_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Tree', 964, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $clinit_Tree$ImageAdapter(){
  $clinit_Tree$ImageAdapter = emptyMethod;
  $clinit_Object();
  DEFAULT_RESOURCES = castTo(new Tree_Resources_default_StaticClientBundleGenerator, 4436);
}

function Tree$ImageAdapter(){
  $clinit_Tree$ImageAdapter();
  Tree$ImageAdapter_0.call(this, DEFAULT_RESOURCES);
}

function Tree$ImageAdapter_0(resources){
  Object_0.call(this);
  this.$init_775();
  this.treeClosed = create_7(resources.treeClosed_1());
  this.treeLeaf = create_7(resources.treeLeaf_1());
  this.treeOpen = create_7(resources.treeOpen_1());
}

defineClass(420, 1, {1:1}, Tree$ImageAdapter);
_.$init_775 = function $init_775(){
}
;
_.treeClosed_0 = function treeClosed(){
  return this.treeClosed;
}
;
_.treeLeaf_0 = function treeLeaf(){
  return this.treeLeaf;
}
;
_.treeOpen_0 = function treeOpen(){
  return this.treeOpen;
}
;
var DEFAULT_RESOURCES;
var Lcom_google_gwt_user_client_ui_Tree$ImageAdapter_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Tree/ImageAdapter', 420, Ljava_lang_Object_2_classLit);
function $clinit_Tree$Resources(){
  $clinit_Tree$Resources = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_Tree$Resources_2_classLit = createForInterface('com.google.gwt.user.client.ui', 'Tree/Resources');
function $clinit_TreeItem$TreeItemAnimation(){
  $clinit_TreeItem$TreeItemAnimation = emptyMethod;
  $clinit_Animation();
}

function TreeItem$TreeItemAnimation(){
  $clinit_TreeItem$TreeItemAnimation();
  Animation_0.call(this);
  this.$init_776();
}

defineClass(984, 160, {1:1}, TreeItem$TreeItemAnimation);
_.$init_776 = function $init_776(){
  this.curItem = null;
  this.opening = true;
  this.scrollHeight_0 = 0;
}
;
_.onComplete = function onComplete_10(){
  if (isNotNull(this.curItem)) {
    if (this.opening) {
      setVisible(this.curItem.childSpanElem, true);
      this.onUpdate(1);
      $setProperty_0($getStyle(this.curItem.childSpanElem), 'height', 'auto');
    }
     else {
      setVisible(this.curItem.childSpanElem, false);
    }
    $setProperty_0($getStyle(this.curItem.childSpanElem), 'overflow', 'visible');
    $setProperty_0($getStyle(this.curItem.childSpanElem), 'width', 'auto');
    this.curItem = null;
  }
}
;
_.onStart = function onStart_8(){
  this.scrollHeight_0 = 0;
  if (!this.opening) {
    this.scrollHeight_0 = $getScrollHeight(this.curItem.childSpanElem);
  }
  $setProperty_0($getStyle(this.curItem.childSpanElem), 'overflow', 'hidden');
  getClassPrototype(160).onStart.call(this);
  if (this.opening) {
    setVisible(this.curItem.childSpanElem, true);
    this.scrollHeight_0 = $getScrollHeight(this.curItem.childSpanElem);
  }
}
;
_.onUpdate = function onUpdate_5(progress){
  var height, scrollWidth;
  height = round_int(progress * this.scrollHeight_0);
  if (!this.opening) {
    height = this.scrollHeight_0 - height;
  }
  height = $wnd.Math.max(height, 1);
  $setProperty_0($getStyle(this.curItem.childSpanElem), 'height', height + 'px');
  scrollWidth = $getPropertyInt(this.curItem.childSpanElem, 'scrollWidth');
  $setProperty_0($getStyle(this.curItem.childSpanElem), 'width', scrollWidth + 'px');
}
;
_.setItemState = function setItemState(item_0, animate){
  this.cancel();
  if (animate) {
    this.curItem = item_0;
    this.opening = item_0.open_0;
    this.run_0($wnd.Math.min(200, 75 * this.curItem.getChildCount()));
  }
   else {
    setVisible(item_0.childSpanElem, item_0.open_0);
  }
}
;
_.opening = false;
_.scrollHeight_0 = 0;
var Lcom_google_gwt_user_client_ui_TreeItem$TreeItemAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TreeItem/TreeItemAnimation', 984, Lcom_google_gwt_animation_client_Animation_2_classLit);
function $clinit_TreeItem$TreeItemImpl(){
  $clinit_TreeItem$TreeItemImpl = emptyMethod;
  $clinit_Object();
}

function TreeItem$TreeItemImpl(){
  $clinit_TreeItem$TreeItemImpl();
  Object_0.call(this);
  this.$init_777();
  this.initializeClonableElements();
}

defineClass(299, 1, {299:1, 1:1}, TreeItem$TreeItemImpl);
_.$init_777 = function $init_777(){
}
;
_.convertToFullNode_0 = function convertToFullNode_0(item_0){
  var itemTable, tdContent, tdImg, tr;
  if (isNull(item_0.imageHolder)) {
    itemTable = clone_0(($clinit_TreeItem() , BASE_INTERNAL_ELEM), true);
    appendChild(item_0.getElement(), itemTable);
    tr = getFirstChild(getFirstChild(itemTable));
    tdImg = getFirstChild(tr);
    tdContent = getNextSibling(tdImg);
    $setProperty_0($getStyle(item_0.getElement()), 'padding', '0px');
    appendChild(tdContent, item_0.contentElem);
    item_0.imageHolder = tdImg;
  }
}
;
_.initializeClonableElements = function initializeClonableElements(){
  var contentElem, tbody, tdContent, tdImg, tr;
  if (isClient()) {
    $clinit_TreeItem() , BASE_INTERNAL_ELEM = createTable();
    contentElem = createDiv();
    tbody = createTBody();
    tr = createTR();
    tdImg = createTD();
    tdContent = createTD();
    appendChild(($clinit_TreeItem() , BASE_INTERNAL_ELEM), tbody);
    appendChild(tbody, tr);
    appendChild(tr, tdImg);
    appendChild(tr, tdContent);
    $setProperty_0($getStyle(tdImg), 'verticalAlign', 'middle');
    $setProperty_0($getStyle(tdContent), 'verticalAlign', 'middle');
    appendChild(tdContent, contentElem);
    $setProperty_0($getStyle(contentElem), 'display', 'inline');
    setStyleName(contentElem, 'gwt-TreeItem');
    $setProperty_0($getStyle(($clinit_TreeItem() , BASE_INTERNAL_ELEM)), 'whiteSpace', 'nowrap');
    $clinit_TreeItem() , BASE_BARE_ELEM = createDiv();
    $setProperty_0($getStyle(($clinit_TreeItem() , BASE_BARE_ELEM)), 'padding', '3px');
    appendChild(($clinit_TreeItem() , BASE_BARE_ELEM), contentElem);
    getTreeitemRole().set_3(contentElem);
  }
}
;
var Lcom_google_gwt_user_client_ui_TreeItem$TreeItemImpl_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TreeItem/TreeItemImpl', 299, Ljava_lang_Object_2_classLit);
function $clinit_Tree_Resources_default_StaticClientBundleGenerator(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator = emptyMethod;
  $clinit_Object();
  _instance0_53 = new Tree_Resources_default_StaticClientBundleGenerator;
  bundledImage_None_53 = getModuleBaseForStaticFiles() + 'EDC7827FEEA59EE44AD790B1C6430C45.cache.png';
}

function Tree_Resources_default_StaticClientBundleGenerator(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator();
  Object_0.call(this);
  this.$init_778();
}

defineClass(480, 1, {4436:1, 1:1}, Tree_Resources_default_StaticClientBundleGenerator);
_.$init_778 = function $init_778(){
}
;
_.treeClosed_1 = function treeClosed_1(){
  return get_2665();
}
;
_.treeClosedInitializer = function treeClosedInitializer(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator();
  treeClosed_0 = new ImageResourcePrototype$Bundle('treeClosed', fromTrustedString_0(bundledImage_None_53), 32, 0, 16, 16, false, false);
}
;
_.treeLeaf_1 = function treeLeaf_1(){
  return get_2666();
}
;
_.treeLeafInitializer = function treeLeafInitializer(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator();
  treeLeaf_0 = new ImageResourcePrototype$Bundle('treeLeaf', fromTrustedString_0(bundledImage_None_53), 16, 0, 16, 16, false, false);
}
;
_.treeOpen_1 = function treeOpen_1(){
  return get_2667();
}
;
_.treeOpenInitializer = function treeOpenInitializer(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator();
  treeOpen_0 = new ImageResourcePrototype$Bundle('treeOpen', fromTrustedString_0(bundledImage_None_53), 0, 0, 16, 16, false, false);
}
;
var _instance0_53, bundledImage_None_53, treeClosed_0, treeLeaf_0, treeOpen_0;
var Lcom_google_gwt_user_client_ui_Tree_1Resources_1default_1StaticClientBundleGenerator_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Tree_Resources_default_StaticClientBundleGenerator', 480, Ljava_lang_Object_2_classLit);
function $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeClosedInitializer(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeClosedInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Tree_Resources_default_StaticClientBundleGenerator() , _instance0_53).treeClosedInitializer();
  }
}

function get_2665(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeClosedInitializer();
  return $clinit_Tree_Resources_default_StaticClientBundleGenerator() , treeClosed_0;
}

function $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeLeafInitializer(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeLeafInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Tree_Resources_default_StaticClientBundleGenerator() , _instance0_53).treeLeafInitializer();
  }
}

function get_2666(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeLeafInitializer();
  return $clinit_Tree_Resources_default_StaticClientBundleGenerator() , treeLeaf_0;
}

function $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeOpenInitializer(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeOpenInitializer = emptyMethod;
  $clinit_Object();
  {
    ($clinit_Tree_Resources_default_StaticClientBundleGenerator() , _instance0_53).treeOpenInitializer();
  }
}

function get_2667(){
  $clinit_Tree_Resources_default_StaticClientBundleGenerator$treeOpenInitializer();
  return $clinit_Tree_Resources_default_StaticClientBundleGenerator() , treeOpen_0;
}

function $clinit_UIObject$DebugIdImpl(){
  $clinit_UIObject$DebugIdImpl = emptyMethod;
  $clinit_Object();
}

function UIObject$DebugIdImpl(){
  $clinit_UIObject$DebugIdImpl();
  Object_0.call(this);
  this.$init_779();
}

defineClass(266, 1, {266:1, 1:1}, UIObject$DebugIdImpl);
_.$init_779 = function $init_779(){
}
;
var Lcom_google_gwt_user_client_ui_UIObject$DebugIdImpl_2_classLit = createForClass('com.google.gwt.user.client.ui', 'UIObject/DebugIdImpl', 266, Ljava_lang_Object_2_classLit);
function $clinit_ValueBoxBase$1(){
  $clinit_ValueBoxBase$1 = emptyMethod;
  $clinit_Object();
}

function ValueBoxBase$1(this$0){
  $clinit_ValueBoxBase$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_780();
}

defineClass(683, 1, {116:1, 13:1, 1:1}, ValueBoxBase$1);
_.$init_780 = function $init_780(){
}
;
_.onChange = function onChange_16(event_0){
  fire_8(this.this$01, this.this$01.getValue_0());
}
;
var Lcom_google_gwt_user_client_ui_ValueBoxBase$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ValueBoxBase/1', 683, Ljava_lang_Object_2_classLit);
function $clinit_ValueBoxBase$TextAlignment(){
  $clinit_ValueBoxBase$TextAlignment = emptyMethod;
  $clinit_Enum();
  CENTER_1 = new ValueBoxBase$TextAlignment$1('CENTER', 0);
  JUSTIFY_0 = new ValueBoxBase$TextAlignment$2('JUSTIFY', 1);
  LEFT_0 = new ValueBoxBase$TextAlignment$3('LEFT', 2);
  RIGHT_0 = new ValueBoxBase$TextAlignment$4('RIGHT', 3);
}

function ValueBoxBase$TextAlignment(enum$name, enum$ordinal){
  $clinit_ValueBoxBase$TextAlignment();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_781();
}

function valueOf_31(name_0){
  $clinit_ValueBoxBase$TextAlignment();
  return valueOf(($clinit_ValueBoxBase$TextAlignment$Map() , $MAP_30), name_0);
}

function values_32(){
  $clinit_ValueBoxBase$TextAlignment();
  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 155, 0, [CENTER_1, JUSTIFY_0, LEFT_0, RIGHT_0]);
}

defineClass(155, 7, {155:1, 4:1, 8:1, 7:1, 1:1});
_.$init_781 = function $init_781(){
}
;
var CENTER_1, JUSTIFY_0, LEFT_0, RIGHT_0;
var Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForEnum('com.google.gwt.user.client.ui', 'ValueBoxBase/TextAlignment', 155, Ljava_lang_Enum_2_classLit, values_32, valueOf_31);
function $clinit_ValueBoxBase$TextAlignment$1(){
  $clinit_ValueBoxBase$TextAlignment$1 = emptyMethod;
  $clinit_ValueBoxBase$TextAlignment();
}

function ValueBoxBase$TextAlignment$1(enum$name, enum$ordinal){
  $clinit_ValueBoxBase$TextAlignment$1();
  ValueBoxBase$TextAlignment.call(this, enum$name, enum$ordinal);
  this.$init_782();
}

defineClass(679, 155, {155:1, 4:1, 8:1, 7:1, 1:1}, ValueBoxBase$TextAlignment$1);
_.$init_782 = function $init_782(){
}
;
var Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$1_2_classLit = createForEnum('com.google.gwt.user.client.ui', 'ValueBoxBase/TextAlignment/1', 679, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null);
function $clinit_ValueBoxBase$TextAlignment$2(){
  $clinit_ValueBoxBase$TextAlignment$2 = emptyMethod;
  $clinit_ValueBoxBase$TextAlignment();
}

function ValueBoxBase$TextAlignment$2(enum$name, enum$ordinal){
  $clinit_ValueBoxBase$TextAlignment$2();
  ValueBoxBase$TextAlignment.call(this, enum$name, enum$ordinal);
  this.$init_783();
}

defineClass(680, 155, {155:1, 4:1, 8:1, 7:1, 1:1}, ValueBoxBase$TextAlignment$2);
_.$init_783 = function $init_783(){
}
;
var Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$2_2_classLit = createForEnum('com.google.gwt.user.client.ui', 'ValueBoxBase/TextAlignment/2', 680, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null);
function $clinit_ValueBoxBase$TextAlignment$3(){
  $clinit_ValueBoxBase$TextAlignment$3 = emptyMethod;
  $clinit_ValueBoxBase$TextAlignment();
}

function ValueBoxBase$TextAlignment$3(enum$name, enum$ordinal){
  $clinit_ValueBoxBase$TextAlignment$3();
  ValueBoxBase$TextAlignment.call(this, enum$name, enum$ordinal);
  this.$init_784();
}

defineClass(681, 155, {155:1, 4:1, 8:1, 7:1, 1:1}, ValueBoxBase$TextAlignment$3);
_.$init_784 = function $init_784(){
}
;
var Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$3_2_classLit = createForEnum('com.google.gwt.user.client.ui', 'ValueBoxBase/TextAlignment/3', 681, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null);
function $clinit_ValueBoxBase$TextAlignment$4(){
  $clinit_ValueBoxBase$TextAlignment$4 = emptyMethod;
  $clinit_ValueBoxBase$TextAlignment();
}

function ValueBoxBase$TextAlignment$4(enum$name, enum$ordinal){
  $clinit_ValueBoxBase$TextAlignment$4();
  ValueBoxBase$TextAlignment.call(this, enum$name, enum$ordinal);
  this.$init_785();
}

defineClass(682, 155, {155:1, 4:1, 8:1, 7:1, 1:1}, ValueBoxBase$TextAlignment$4);
_.$init_785 = function $init_785(){
}
;
var Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$4_2_classLit = createForEnum('com.google.gwt.user.client.ui', 'ValueBoxBase/TextAlignment/4', 682, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null);
function $clinit_ValueBoxBase$TextAlignment$Map(){
  $clinit_ValueBoxBase$TextAlignment$Map = emptyMethod;
  $MAP_30 = createValueOfMap(values_32());
}

var $MAP_30;
function $clinit_VerticalPanel(){
  $clinit_VerticalPanel = emptyMethod;
  $clinit_CellPanel();
}

function VerticalPanel(){
  $clinit_VerticalPanel();
  CellPanel.call(this);
  this.$init_786();
  $setPropertyString(this.getTable(), 'cellSpacing', '0');
  $setPropertyString(this.getTable(), 'cellPadding', '0');
}

defineClass(54, 374, {18:1, 45:1, 14:1, 54:1, 11:1, 1:1}, VerticalPanel);
_.$init_786 = function $init_786(){
  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);
  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);
}
;
_.add_0 = function add_35(w){
  var td, tr;
  tr = createTR();
  td = this.createAlignedTd_0();
  appendChild(tr, td);
  appendChild(this.getBody(), tr);
  this.add_1(w, td);
}
;
_.createAlignedTd_0 = function createAlignedTd_0(){
  var td;
  td = createTD();
  this.setCellHorizontalAlignment(td, this.horzAlign);
  this.setCellVerticalAlignment(td, this.vertAlign);
  return td;
}
;
_.remove_0 = function remove_26(w){
  var removed, td;
  td = getParent_1(w.getElement());
  removed = getClassPrototype(134).remove_0.call(this, w);
  if (removed) {
    $removeChild(this.getBody(), getParent_1(td));
  }
  return removed;
}
;
_.setHorizontalAlignment = function setHorizontalAlignment_0(align_0){
  this.horzAlign = align_0;
}
;
_.setVerticalAlignment = function setVerticalAlignment_0(align_0){
  this.vertAlign = align_0;
}
;
var Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'VerticalPanel', 54, Lcom_google_gwt_user_client_ui_CellPanel_2_classLit);
function $clinit_WidgetCollection(){
  $clinit_WidgetCollection = emptyMethod;
  $clinit_Object();
  $clinit_Iterable();
}

function WidgetCollection(parent_0){
  $clinit_WidgetCollection();
  Object_0.call(this);
  this.$init_787();
  this.parent_0 = parent_0;
  this.array = initUnidimensionalArray(Lcom_google_gwt_user_client_ui_Widget_2_classLit, {4:1, 1:1, 5:1}, 11, 4, 0, 1);
}

defineClass(382, 1, {1:1}, WidgetCollection);
_.$init_787 = function $init_787(){
}
;
_.add_0 = function add_36(w){
  this.insert_1(w, this.size_0);
}
;
_.indexOf_2 = function indexOf_2(w){
  var i;
  for (i = 0; i < this.size_0; ++i) {
    if (jsEquals(this.array[i], w)) {
      return i;
    }
  }
  return -1;
}
;
_.insert_1 = function insert_7(w, beforeIndex){
  var i, i0, newArray;
  if (beforeIndex < 0 || beforeIndex > this.size_0) {
    throw toJs(new IndexOutOfBoundsException);
  }
  if (this.size_0 == this.array.length) {
    newArray = initUnidimensionalArray(Lcom_google_gwt_user_client_ui_Widget_2_classLit, {4:1, 1:1, 5:1}, 11, this.array.length * 2, 0, 1);
    for (i0 = 0; i0 < this.array.length; ++i0) {
      setCheck(newArray, i0, this.array[i0]);
    }
    this.array = newArray;
  }
  ++this.size_0;
  for (i = this.size_0 - 1; i > beforeIndex; --i) {
    setCheck(this.array, i, this.array[i - 1]);
  }
  setCheck(this.array, beforeIndex, w);
}
;
_.iterator_0 = function iterator_12(){
  return new WidgetCollection$WidgetIterator(this);
}
;
_.remove_8 = function remove_27(index_0){
  var i;
  if (index_0 < 0 || index_0 >= this.size_0) {
    throw toJs(new IndexOutOfBoundsException);
  }
  --this.size_0;
  for (i = index_0; i < this.size_0; ++i) {
    setCheck(this.array, i, this.array[i + 1]);
  }
  setCheck(this.array, this.size_0, null);
}
;
_.remove_9 = function remove_28(w){
  var index_0;
  index_0 = this.indexOf_2(w);
  if (index_0 == -1) {
    throw toJs(new NoSuchElementException);
  }
  this.remove_8(index_0);
}
;
_.size_1 = function size_6(){
  return this.size_0;
}
;
_.size_0 = 0;
var Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui', 'WidgetCollection', 382, Ljava_lang_Object_2_classLit);
function $clinit_WidgetCollection$WidgetIterator(){
  $clinit_WidgetCollection$WidgetIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function WidgetCollection$WidgetIterator(this$0){
  $clinit_WidgetCollection$WidgetIterator();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_788();
}

defineClass(614, 1, {1:1, 63:1}, WidgetCollection$WidgetIterator);
_.$init_788 = function $init_788(){
  this.index_0 = 0;
}
;
_.next_1 = function next_6(){
  return this.next_2();
}
;
_.hasNext_0 = function hasNext_2(){
  return this.index_0 < this.this$01.size_0;
}
;
_.next_2 = function next_5(){
  if (this.index_0 >= this.this$01.size_0) {
    throw toJs(new NoSuchElementException);
  }
  this.currentWidget = this.this$01.array[this.index_0];
  this.index_0++;
  return this.currentWidget;
}
;
_.remove_3 = function remove_29(){
  if (isNull(this.currentWidget)) {
    throw toJs(new IllegalStateException);
  }
  this.this$01.parent_0.remove_0(this.currentWidget);
  this.index_0--;
  this.currentWidget = null;
}
;
_.index_0 = 0;
var Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui', 'WidgetCollection/WidgetIterator', 614, Ljava_lang_Object_2_classLit);
function $clinit_WidgetIterators(){
  $clinit_WidgetIterators = emptyMethod;
  $clinit_Object();
}

function copyWidgetArray(widgets){
  $clinit_WidgetIterators();
  var clone, i;
  clone = initUnidimensionalArray(Lcom_google_gwt_user_client_ui_Widget_2_classLit, {4:1, 1:1, 5:1}, 11, widgets.length, 0, 1);
  for (i = 0; i < widgets.length; i++) {
    setCheck(clone, i, widgets[i]);
  }
  return clone;
}

function createWidgetIterator(container, contained){
  $clinit_WidgetIterators();
  return new WidgetIterators$1(contained, container);
}

function $clinit_WidgetIterators$1(){
  $clinit_WidgetIterators$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function WidgetIterators$1(val$contained, val$container){
  $clinit_WidgetIterators$1();
  this.val$contained1 = val$contained;
  this.val$container2 = val$container;
  Object_0.call(this);
  this.$init_789();
}

defineClass(1008, 1, {1:1, 63:1}, WidgetIterators$1);
_.$init_789 = function $init_789(){
  this.index_0 = -1;
  this.last = -1;
  this.widgetsWasCopied = false;
  this.widgets = this.val$contained1;
  {
    this.gotoNextIndex();
  }
}
;
_.next_1 = function next_8(){
  return this.next_2();
}
;
_.gotoNextIndex = function gotoNextIndex(){
  ++this.index_0;
  while (this.index_0 < this.val$contained1.length) {
    if (isNotNull(this.val$contained1[this.index_0])) {
      return;
    }
    ++this.index_0;
  }
}
;
_.hasNext_0 = function hasNext_3(){
  return this.index_0 < this.val$contained1.length;
}
;
_.next_2 = function next_7(){
  var w;
  if (!this.hasNext_0()) {
    throw toJs(new NoSuchElementException);
  }
  this.last = this.index_0;
  w = this.val$contained1[this.index_0];
  this.gotoNextIndex();
  return w;
}
;
_.remove_3 = function remove_30(){
  if (this.last < 0) {
    throw toJs(new IllegalStateException);
  }
  if (!this.widgetsWasCopied) {
    this.widgets = copyWidgetArray(this.widgets);
    this.widgetsWasCopied = true;
  }
  this.val$container2.remove_0(this.val$contained1[this.last]);
  this.last = -1;
}
;
_.index_0 = 0;
_.last = 0;
_.widgetsWasCopied = false;
var Lcom_google_gwt_user_client_ui_WidgetIterators$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'WidgetIterators/1', 1008, Ljava_lang_Object_2_classLit);
function $clinit_ClippedImageImpl(){
  $clinit_ClippedImageImpl = emptyMethod;
  $clinit_Object();
  clearImage = fromTrustedString_0(getModuleBaseURL() + 'clear.cache.gif');
}

function ClippedImageImpl(){
  $clinit_ClippedImageImpl();
  Object_0.call(this);
  this.$init_790();
}

function createOnLoadHandlerFunction(){
  return function(){
    this.__gwtLastUnhandledEvent = 'load';
  }
  ;
}

defineClass(236, 1, {236:1, 1:1}, ClippedImageImpl);
_.$init_790 = function $init_790(){
}
;
_.adjust = function adjust(img, url_0, left, top_0, width_0, height){
  var style;
  style = 'url("' + url_0.asString() + '") no-repeat ' + (-left + 'px ') + (-top_0 + 'px');
  $setProperty_0($getStyle(img), 'background', style);
  $setPropertyPx($getStyle(img), 'width', width_0);
  $setPropertyPx($getStyle(img), 'height', height);
}
;
_.createStructure = function createStructure(url_0, left, top_0, width_0, height){
  var elem, tmp;
  tmp = $createSpanElement(get_2654());
  $setInnerSafeHtml(tmp, this.getSafeHtml_0(url_0, left, top_0, width_0, height));
  elem = $getFirstChildElement(tmp);
  $setPropertyJSO(elem, 'onload', createOnLoadHandlerFunction());
  return elem;
}
;
_.getDraggableTemplate = function getDraggableTemplate(){
  if (isNull(draggableTemplate)) {
    draggableTemplate = castTo(new ClippedImageImpl_DraggableTemplateImpl, 4428);
  }
  return draggableTemplate;
}
;
_.getImgElement = function getImgElement(image){
  return image.getElement();
}
;
_.getSafeHtml_0 = function getSafeHtml_0(url_0, left, top_0, width_0, height){
  return this.getSafeHtml_1(url_0, left, top_0, width_0, height, false);
}
;
_.getSafeHtml_1 = function getSafeHtml_1(url_0, left, top_0, width_0, height, isDraggable){
  var builder;
  builder = new SafeStylesBuilder;
  builder.width_1(width_0, ($clinit_Style$Unit() , PX)).height_1(height, ($clinit_Style$Unit() , PX)).trustedNameAndValue('background', 'url(' + url_0.asString() + ') ' + 'no-repeat ' + (-left + 'px ') + (-top_0 + 'px'));
  if (!isDraggable) {
    return this.getTemplate().image(clearImage, fromTrustedString(builder.toSafeStyles().asString()));
  }
   else {
    return this.getDraggableTemplate().image(clearImage, fromTrustedString(builder.toSafeStyles().asString()));
  }
}
;
_.getTemplate = function getTemplate(){
  if (isNull(template_0)) {
    template_0 = castTo(new ClippedImageImpl_TemplateImpl, 4429);
  }
  return template_0;
}
;
var clearImage, draggableTemplate, template_0;
var Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'ClippedImageImpl', 236, Ljava_lang_Object_2_classLit);
function $clinit_ClippedImageImpl$DraggableTemplate(){
  $clinit_ClippedImageImpl$DraggableTemplate = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl$DraggableTemplate_2_classLit = createForInterface('com.google.gwt.user.client.ui.impl', 'ClippedImageImpl/DraggableTemplate');
function $clinit_ClippedImageImpl$Template(){
  $clinit_ClippedImageImpl$Template = emptyMethod;
}

var Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl$Template_2_classLit = createForInterface('com.google.gwt.user.client.ui.impl', 'ClippedImageImpl/Template');
function $clinit_ClippedImageImpl_DraggableTemplateImpl(){
  $clinit_ClippedImageImpl_DraggableTemplateImpl = emptyMethod;
  $clinit_Object();
}

function ClippedImageImpl_DraggableTemplateImpl(){
  $clinit_ClippedImageImpl_DraggableTemplateImpl();
  Object_0.call(this);
  this.$init_791();
}

defineClass(846, 1, {4428:1, 1:1}, ClippedImageImpl_DraggableTemplateImpl);
_.$init_791 = function $init_791(){
}
;
_.image = function image_0(arg0, arg1){
  var sb;
  sb = new StringBuilder;
  sb.append_9("<img src='");
  sb.append_9(htmlEscape(arg0.asString()));
  sb.append_9("' style='");
  sb.append_9(htmlEscape(arg1.asString()));
  sb.append_9("' border='0' draggable='true'>");
  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.toString_0());
}
;
var Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl_1DraggableTemplateImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'ClippedImageImpl_DraggableTemplateImpl', 846, Ljava_lang_Object_2_classLit);
function $clinit_ClippedImageImpl_TemplateImpl(){
  $clinit_ClippedImageImpl_TemplateImpl = emptyMethod;
  $clinit_Object();
}

function ClippedImageImpl_TemplateImpl(){
  $clinit_ClippedImageImpl_TemplateImpl();
  Object_0.call(this);
  this.$init_792();
}

defineClass(845, 1, {4429:1, 1:1}, ClippedImageImpl_TemplateImpl);
_.$init_792 = function $init_792(){
}
;
_.image = function image_1(arg0, arg1){
  var sb;
  sb = new StringBuilder;
  sb.append_9("<img src='");
  sb.append_9(htmlEscape(arg0.asString()));
  sb.append_9("' style='");
  sb.append_9(htmlEscape(arg1.asString()));
  sb.append_9("' border='0'>");
  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.toString_0());
}
;
var Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl_1TemplateImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'ClippedImageImpl_TemplateImpl', 845, Ljava_lang_Object_2_classLit);
function $clinit_ClippedImagePrototype(){
  $clinit_ClippedImagePrototype = emptyMethod;
  $clinit_AbstractImagePrototype();
  impl_15 = castTo(new ClippedImageImpl, 236);
}

function ClippedImagePrototype(url_0, left, top_0, width_0, height){
  $clinit_ClippedImagePrototype();
  AbstractImagePrototype.call(this);
  this.$init_793();
  this.url_0 = url_0;
  this.left_0 = left;
  this.top_0 = top_0;
  this.width_0 = width_0;
  this.height_0 = height;
}

function ClippedImagePrototype_0(url_0, left, top_0, width_0, height){
  $clinit_ClippedImagePrototype();
  ClippedImagePrototype.call(this, unsafeCastFromUntrustedString(url_0), left, top_0, width_0, height);
}

defineClass(61, 283, {283:1, 1:1}, ClippedImagePrototype, ClippedImagePrototype_0);
_.$init_793 = function $init_793(){
  this.height_0 = 0;
  this.left_0 = 0;
  this.top_0 = 0;
  this.url_0 = null;
  this.width_0 = 0;
  this.isDraggable = false;
}
;
_.applyTo = function applyTo_0(imageElement){
  impl_15.adjust(imageElement, this.url_0, this.left_0, this.top_0, this.width_0, this.height_0);
}
;
_.applyTo_0 = function applyTo_1(image){
  image.setUrlAndVisibleRect(this.url_0, this.left_0, this.top_0, this.width_0, this.height_0);
}
;
_.createElement_1 = function createElement_2(){
  return impl_15.createStructure(this.url_0, this.left_0, this.top_0, this.width_0, this.height_0);
}
;
_.createImage = function createImage(){
  return new Image_3(this.url_0, this.left_0, this.top_0, this.width_0, this.height_0);
}
;
_.getSafeHtml = function getSafeHtml_2(){
  return impl_15.getSafeHtml_1(this.url_0, this.left_0, this.top_0, this.width_0, this.height_0, this.isDraggable);
}
;
_.height_0 = 0;
_.isDraggable = false;
_.left_0 = 0;
_.top_0 = 0;
_.width_0 = 0;
var impl_15;
var Lcom_google_gwt_user_client_ui_impl_ClippedImagePrototype_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'ClippedImagePrototype', 61, Lcom_google_gwt_user_client_ui_AbstractImagePrototype_2_classLit);
function $clinit_FocusImpl(){
  $clinit_FocusImpl = emptyMethod;
  $clinit_Object();
  implPanel = castTo(new FocusImplSafari, 272);
  implWidget = instanceOf(implPanel, 278)?new FocusImpl:implPanel;
}

function FocusImpl(){
  $clinit_FocusImpl();
  Object_0.call(this);
  this.$init_794();
}

function getFocusImplForPanel(){
  $clinit_FocusImpl();
  return implPanel;
}

function getFocusImplForWidget(){
  $clinit_FocusImpl();
  return implWidget;
}

defineClass(272, 1, {1:1}, FocusImpl);
_.$init_794 = function $init_794(){
}
;
_.blur_1 = function blur_1(elem){
  $blur(elem);
}
;
_.createFocusable = function createFocusable(){
  var e;
  e = $cast($createDivElement(get_2654()));
  $setTabIndex(e, 0);
  return e;
}
;
_.focus_0 = function focus_1(elem){
  $focus(elem);
}
;
_.getTabIndex_0 = function getTabIndex_4(elem){
  return $getTabIndex(elem);
}
;
_.setTabIndex_0 = function setTabIndex_2(elem, index_0){
  $setTabIndex(elem, index_0);
}
;
var implPanel, implWidget;
var Lcom_google_gwt_user_client_ui_impl_FocusImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'FocusImpl', 272, Ljava_lang_Object_2_classLit);
function $clinit_FocusImplStandard(){
  $clinit_FocusImplStandard = emptyMethod;
  $clinit_FocusImpl();
}

function FocusImplStandard(){
  $clinit_FocusImplStandard();
  FocusImpl.call(this);
  this.$init_795();
}

function createFocusable0(focusHandler){
  var div = $doc.createElement('div');
  div.tabIndex = 0;
  var input_0 = $doc.createElement('input');
  input_0.type = 'text';
  input_0.tabIndex = -1;
  input_0.setAttribute('aria-hidden', 'true');
  var style = input_0.style;
  style.opacity = 0;
  style.height = '1px';
  style.width = '1px';
  style.zIndex = -1;
  style.overflow = 'hidden';
  style.position = 'absolute';
  input_0.addEventListener('focus', focusHandler, false);
  div.appendChild(input_0);
  return div;
}

defineClass(278, 272, {278:1, 1:1});
_.$init_795 = function $init_795(){
}
;
_.createFocusHandler = function createFocusHandler(){
  return function(evt){
    var div = this.parentNode;
    if (div.onfocus) {
      $wnd.setTimeout(function(){
        div.focus();
      }
      , 0);
    }
  }
  ;
}
;
_.createFocusable = function createFocusable_0(){
  return createFocusable0(this.ensureFocusHandler());
}
;
_.ensureFocusHandler = function ensureFocusHandler(){
  return isNotNull(focusHandler_0)?focusHandler_0:(focusHandler_0 = this.createFocusHandler());
}
;
var focusHandler_0;
var Lcom_google_gwt_user_client_ui_impl_FocusImplStandard_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'FocusImplStandard', 278, Lcom_google_gwt_user_client_ui_impl_FocusImpl_2_classLit);
function $clinit_FocusImplSafari(){
  $clinit_FocusImplSafari = emptyMethod;
  $clinit_FocusImplStandard();
}

function FocusImplSafari(){
  $clinit_FocusImplSafari();
  FocusImplStandard.call(this);
  this.$init_796();
}

defineClass(704, 278, {272:1, 278:1, 1:1}, FocusImplSafari);
_.$init_796 = function $init_796(){
}
;
_.blur_1 = function blur_2(elem){
  $wnd.setTimeout(function(){
    elem.blur();
  }
  , 0);
}
;
_.focus_0 = function focus_2(elem){
  $wnd.setTimeout(function(){
    elem.focus();
  }
  , 0);
}
;
var Lcom_google_gwt_user_client_ui_impl_FocusImplSafari_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'FocusImplSafari', 704, Lcom_google_gwt_user_client_ui_impl_FocusImplStandard_2_classLit);
function $clinit_PopupImpl(){
  $clinit_PopupImpl = emptyMethod;
  $clinit_Object();
}

function PopupImpl(){
  $clinit_PopupImpl();
  Object_0.call(this);
  this.$init_797();
}

defineClass(336, 1, {336:1, 1:1}, PopupImpl);
_.$init_797 = function $init_797(){
}
;
_.createElement_2 = function createElement_3(){
  return $createDivElement(get_2654());
}
;
_.getContainerElement_0 = function getContainerElement_3(popup){
  return popup;
}
;
_.getStyleElement_0 = function getStyleElement_1(popup){
  return $getParentElement(popup);
}
;
_.setClip = function setClip(popup, rect){
  $setProperty_0($getStyle(popup), 'clip', rect);
}
;
var Lcom_google_gwt_user_client_ui_impl_PopupImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'PopupImpl', 336, Ljava_lang_Object_2_classLit);
function $clinit_TextBoxImpl(){
  $clinit_TextBoxImpl = emptyMethod;
  $clinit_Object();
}

function TextBoxImpl(){
  $clinit_TextBoxImpl();
  Object_0.call(this);
  this.$init_798();
}

defineClass(343, 1, {343:1, 1:1}, TextBoxImpl);
_.$init_798 = function $init_798(){
}
;
var Lcom_google_gwt_user_client_ui_impl_TextBoxImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl', 'TextBoxImpl', 343, Ljava_lang_Object_2_classLit);
function $clinit_UserAgent(){
  $clinit_UserAgent = emptyMethod;
}

var Lcom_google_gwt_useragent_client_UserAgent_2_classLit = createForInterface('com.google.gwt.useragent.client', 'UserAgent');
function $clinit_UserAgentAsserter(){
  $clinit_UserAgentAsserter = emptyMethod;
  $clinit_Object();
}

function UserAgentAsserter(){
  $clinit_UserAgentAsserter();
  Object_0.call(this);
  this.$init_799();
}

function assertCompileTimeUserAgent(){
  var compileTimeValue, impl, runtimeValue;
  impl = castTo(new UserAgentImplSafari, 1123);
  compileTimeValue = impl.getCompileTimeValue();
  runtimeValue = impl.getRuntimeValue();
  if (!equals_Ljava_lang_Object__Z__devirtual$_2(compileTimeValue, runtimeValue)) {
    throw toJs(new UserAgentAsserter$UserAgentAssertionError(compileTimeValue, runtimeValue));
  }
}

function scheduleUserAgentCheck(){
  $wnd.setTimeout($entry(assertCompileTimeUserAgent));
}

defineClass(492, 1, {257:1, 1:1}, UserAgentAsserter);
_.$init_799 = function $init_799(){
}
;
_.onModuleLoad = function onModuleLoad_8(){
  scheduleUserAgentCheck();
}
;
var Lcom_google_gwt_useragent_client_UserAgentAsserter_2_classLit = createForClass('com.google.gwt.useragent.client', 'UserAgentAsserter', 492, Ljava_lang_Object_2_classLit);
function $clinit_Error(){
  $clinit_Error = emptyMethod;
  $clinit_Throwable();
}

function Error_0(){
  $clinit_Error();
  Throwable.call(this);
  this.$init_800();
}

function Error_1(message, cause){
  $clinit_Error();
  Throwable_2.call(this, message, cause);
  this.$init_800();
}

defineClass(174, 24, {4:1, 174:1, 1:1, 24:1});
_.$init_800 = function $init_800(){
}
;
var Ljava_lang_Error_2_classLit = createForClass('java.lang', 'Error', 174, Ljava_lang_Throwable_2_classLit);
function $clinit_AssertionError(){
  $clinit_AssertionError = emptyMethod;
  $clinit_Error();
}

function AssertionError(){
  $clinit_AssertionError();
  Error_0.call(this);
  this.$init_801();
}

function AssertionError_0(message){
  $clinit_AssertionError();
  Error_1.call(this, valueOf_47(message), instanceOf(message, 24)?castTo(message, 24):null);
  this.$init_801();
}

defineClass(65, 174, {4:1, 174:1, 1:1, 24:1}, AssertionError, AssertionError_0);
_.$init_801 = function $init_801(){
}
;
var Ljava_lang_AssertionError_2_classLit = createForClass('java.lang', 'AssertionError', 65, Ljava_lang_Error_2_classLit);
function $clinit_UserAgentAsserter$UserAgentAssertionError(){
  $clinit_UserAgentAsserter$UserAgentAssertionError = emptyMethod;
  $clinit_AssertionError();
}

function UserAgentAsserter$UserAgentAssertionError(compileTimeValue, runtimeValue){
  $clinit_UserAgentAsserter$UserAgentAssertionError();
  AssertionError_0.call(this, 'Possible problem with your *.gwt.xml module file.\nThe compile time user.agent value (' + compileTimeValue + ') ' + 'does not match the runtime user.agent value (' + runtimeValue + ').\n' + 'Expect more errors.');
  this.$init_802();
}

defineClass(498, 65, {4:1, 174:1, 1:1, 24:1}, UserAgentAsserter$UserAgentAssertionError);
_.$init_802 = function $init_802(){
}
;
var Lcom_google_gwt_useragent_client_UserAgentAsserter$UserAgentAssertionError_2_classLit = createForClass('com.google.gwt.useragent.client', 'UserAgentAsserter/UserAgentAssertionError', 498, Ljava_lang_AssertionError_2_classLit);
function $clinit_UserAgentImplSafari(){
  $clinit_UserAgentImplSafari = emptyMethod;
  $clinit_Object();
}

function UserAgentImplSafari(){
  $clinit_UserAgentImplSafari();
  Object_0.call(this);
  this.$init_803();
}

defineClass(497, 1, {1123:1, 1:1}, UserAgentImplSafari);
_.$init_803 = function $init_803(){
}
;
_.getCompileTimeValue = function getCompileTimeValue(){
  return 'safari';
}
;
_.getRuntimeValue = function getRuntimeValue(){
  var ua = navigator.userAgent.toLowerCase();
  var docMode = $doc.documentMode;
  if (function(){
    return ua.indexOf('webkit') != -1;
  }
  ())
    return 'safari';
  if (function(){
    return ua.indexOf('msie') != -1 && (docMode >= 10 && docMode < 11);
  }
  ())
    return 'ie10';
  if (function(){
    return ua.indexOf('msie') != -1 && (docMode >= 9 && docMode < 11);
  }
  ())
    return 'ie9';
  if (function(){
    return ua.indexOf('msie') != -1 && (docMode >= 8 && docMode < 11);
  }
  ())
    return 'ie8';
  if (function(){
    return ua.indexOf('gecko') != -1 || docMode >= 11;
  }
  ())
    return 'gecko1_8';
  return 'unknown';
}
;
var Lcom_google_gwt_useragent_client_UserAgentImplSafari_2_classLit = createForClass('com.google.gwt.useragent.client', 'UserAgentImplSafari', 497, Ljava_lang_Object_2_classLit);
function $clinit_XMLHttpRequest(){
  $clinit_XMLHttpRequest = emptyMethod;
  $clinit_JavaScriptObject();
}

function $abort(this$static){
  $clinit_XMLHttpRequest();
  this$static.abort();
}

function $clearOnReadyStateChange(this$static){
  $clinit_XMLHttpRequest();
  this$static.onreadystatechange = function(){
  }
  ;
}

function $getReadyState(this$static){
  $clinit_XMLHttpRequest();
  return this$static.readyState;
}

function $getResponseText(this$static){
  $clinit_XMLHttpRequest();
  return this$static.responseText;
}

function $getStatus(this$static){
  $clinit_XMLHttpRequest();
  return this$static.status;
}

function $getStatusText(this$static){
  $clinit_XMLHttpRequest();
  return this$static.statusText;
}

function $open_0(this$static, httpMethod, url_0){
  $clinit_XMLHttpRequest();
  this$static.open(httpMethod, url_0, true);
}

function $open_1(this$static, httpMethod, url_0, user){
  $clinit_XMLHttpRequest();
  this$static.open(httpMethod, url_0, true, user);
}

function $open_2(this$static, httpMethod, url_0, user, password){
  $clinit_XMLHttpRequest();
  this$static.open(httpMethod, url_0, true, user, password);
}

function $send(this$static, requestData){
  $clinit_XMLHttpRequest();
  this$static.send(requestData);
}

function $setOnReadyStateChange(this$static, handler){
  $clinit_XMLHttpRequest();
  var _this = this$static;
  this$static.onreadystatechange = $entry(function(){
    handler.onReadyStateChange(_this);
  }
  );
}

function $setRequestHeader(this$static, header, value_0){
  $clinit_XMLHttpRequest();
  this$static.setRequestHeader(header, value_0);
}

function $setWithCredentials(this$static, withCredentials){
  $clinit_XMLHttpRequest();
  this$static.withCredentials = withCredentials;
}

function create_8(){
  $clinit_XMLHttpRequest();
  return new $wnd.XMLHttpRequest;
}

function $clinit_SimpleEventBus$1(){
  $clinit_SimpleEventBus$1 = emptyMethod;
  $clinit_Object();
}

function SimpleEventBus$1(this$0, val$type, val$source, val$handler){
  $clinit_SimpleEventBus$1();
  this.this$01 = this$0;
  this.val$type2 = val$type;
  this.val$source3 = val$source;
  this.val$handler4 = val$handler;
  Object_0.call(this);
  this.$init_804();
}

defineClass(530, 1, {1:1}, SimpleEventBus$1);
_.$init_804 = function $init_804(){
}
;
_.removeHandler = function removeHandler_0(){
  this.this$01.doRemove(this.val$type2, this.val$source3, this.val$handler4);
}
;
var Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus/1', 530, Ljava_lang_Object_2_classLit);
function $clinit_SimpleEventBus$Command(){
  $clinit_SimpleEventBus$Command = emptyMethod;
}

var Lcom_google_web_bindery_event_shared_SimpleEventBus$Command_2_classLit = createForInterface('com.google.web.bindery.event.shared', 'SimpleEventBus/Command');
function $clinit_SimpleEventBus$2(){
  $clinit_SimpleEventBus$2 = emptyMethod;
  $clinit_Object();
}

function SimpleEventBus$2(this$0, val$type, val$source, val$handler){
  $clinit_SimpleEventBus$2();
  this.this$01 = this$0;
  this.val$type2 = val$type;
  this.val$source3 = val$source;
  this.val$handler4 = val$handler;
  Object_0.call(this);
  this.$init_805();
}

defineClass(531, 1, {533:1, 1:1}, SimpleEventBus$2);
_.$init_805 = function $init_805(){
}
;
_.execute = function execute_13(){
  this.this$01.doAddNow(this.val$type2, this.val$source3, this.val$handler4);
}
;
var Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus/2', 531, Ljava_lang_Object_2_classLit);
function $clinit_SimpleEventBus$3(){
  $clinit_SimpleEventBus$3 = emptyMethod;
  $clinit_Object();
}

function SimpleEventBus$3(this$0, val$type, val$source, val$handler){
  $clinit_SimpleEventBus$3();
  this.this$01 = this$0;
  this.val$type2 = val$type;
  this.val$source3 = val$source;
  this.val$handler4 = val$handler;
  Object_0.call(this);
  this.$init_806();
}

defineClass(532, 1, {533:1, 1:1}, SimpleEventBus$3);
_.$init_806 = function $init_806(){
}
;
_.execute = function execute_14(){
  this.this$01.doRemoveNow(this.val$type2, this.val$source3, this.val$handler4);
}
;
var Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus/3', 532, Ljava_lang_Object_2_classLit);
function $clinit_Key_0(){
  $clinit_Key_0 = emptyMethod;
  $clinit_Object();
}

function Key_2(){
  $clinit_Key_0();
  Object_0.call(this);
  this.$init_807();
}

defineClass(181, 1, {181:1, 4:1, 8:1, 1:1}, Key_2);
_.$init_807 = function $init_807(){
}
;
_.compareTo_0 = function compareTo_8(other){
  return this.compareTo_4(castTo(other, 181));
}
;
_.compareTo_4 = function compareTo_7(other){
  return this.raw.compareTo_2(other.raw);
}
;
_.equals_0 = function equals_19(obj){
  if (jsEquals(obj, null))
    return false;
  if (!instanceOf(obj, 181))
    return false;
  return this.compareTo_4(castTo(obj, 181)) == 0;
}
;
_.hashCode_1 = function hashCode_18(){
  return this.raw.hashCode_1();
}
;
_.toString_0 = function toString_52(){
  return 'Key<?>(' + this.raw + ')';
}
;
var Lcom_googlecode_objectify_Key_2_classLit = createForClass('com.googlecode.objectify', 'Key', 181, Ljava_lang_Object_2_classLit);
function $clinit_Key_FieldSerializer(){
  $clinit_Key_FieldSerializer = emptyMethod;
  $clinit_Object();
}

function deserialize_153(streamReader, instance){
  $clinit_Key_FieldSerializer();
  instance.raw = castTo(streamReader.readObject(), 128);
}

function instantiate_141(streamReader){
  $clinit_Key_FieldSerializer();
  return new Key_2;
}

function serialize_148(streamWriter, instance){
  $clinit_Key_FieldSerializer();
  streamWriter.writeObject(instance.raw);
}

function $clinit_AutoCloseable(){
  $clinit_AutoCloseable = emptyMethod;
}

var Ljava_lang_AutoCloseable_2_classLit = createForInterface('java.lang', 'AutoCloseable');
function $clinit_Closeable(){
  $clinit_Closeable = emptyMethod;
}

var Ljava_io_Closeable_2_classLit = createForInterface('java.io', 'Closeable');
function $clinit_Flushable(){
  $clinit_Flushable = emptyMethod;
}

var Ljava_io_Flushable_2_classLit = createForInterface('java.io', 'Flushable');
function $clinit_OutputStream(){
  $clinit_OutputStream = emptyMethod;
  $clinit_Object();
}

function OutputStream(){
  $clinit_OutputStream();
  Object_0.call(this);
  this.$init_808();
}

defineClass(569, 1, {1:1});
_.$init_808 = function $init_808(){
}
;
var Ljava_io_OutputStream_2_classLit = createForClass('java.io', 'OutputStream', 569, Ljava_lang_Object_2_classLit);
function $clinit_FilterOutputStream(){
  $clinit_FilterOutputStream = emptyMethod;
  $clinit_OutputStream();
}

function FilterOutputStream(out){
  $clinit_FilterOutputStream();
  OutputStream.call(this);
  this.$init_809();
  this.out = out;
}

defineClass(570, 569, {1:1});
_.$init_809 = function $init_809(){
}
;
var Ljava_io_FilterOutputStream_2_classLit = createForClass('java.io', 'FilterOutputStream', 570, Ljava_io_OutputStream_2_classLit);
function $clinit_PrintStream(){
  $clinit_PrintStream = emptyMethod;
  $clinit_FilterOutputStream();
}

function PrintStream(out){
  $clinit_PrintStream();
  FilterOutputStream.call(this, out);
  this.$init_810();
}

defineClass(376, 570, {1:1}, PrintStream);
_.$init_810 = function $init_810(){
}
;
_.print_0 = function print_0(s){
}
;
_.println = function println(s){
}
;
var Ljava_io_PrintStream_2_classLit = createForClass('java.io', 'PrintStream', 376, Ljava_io_FilterOutputStream_2_classLit);
function $clinit_Appendable(){
  $clinit_Appendable = emptyMethod;
}

var Ljava_lang_Appendable_2_classLit = createForInterface('java.lang', 'Appendable');
function $clinit_AbstractStringBuilder(){
  $clinit_AbstractStringBuilder = emptyMethod;
  $clinit_Object();
  $clinit_CharSequence();
}

function AbstractStringBuilder(string){
  $clinit_AbstractStringBuilder();
  Object_0.call(this);
  this.$init_811();
  this.string = string;
}

defineClass(225, 1, {221:1, 1:1});
_.$init_811 = function $init_811(){
}
;
_.charAt_0 = function charAt(index_0){
  return charAt_I_C__devirtual$(this.string, index_0);
}
;
_.indexOf_3 = function indexOf_3(x_0, start_0){
  return indexOf_Ljava_lang_String_I_I__devirtual$(this.string, x_0, start_0);
}
;
_.length_0 = function length_1(){
  return length__I__devirtual$(this.string);
}
;
_.replace0 = function replace0(start_0, end, toInsert){
  this.string = substring_II_Ljava_lang_String___devirtual$(this.string, 0, start_0) + ('' + toInsert) + substring_I_Ljava_lang_String___devirtual$(this.string, end);
}
;
_.setCharAt = function setCharAt(index_0, x_0){
  this.replace0(index_0, index_0 + 1, valueOf_42(x_0));
}
;
_.setLength = function setLength(newLength){
  var oldLength;
  oldLength = this.length_0();
  if (newLength < oldLength) {
    this.string = substring_II_Ljava_lang_String___devirtual$(this.string, 0, newLength);
  }
   else if (newLength > oldLength) {
    this.string += '' + valueOf_49(initUnidimensionalArray(C_classLit, {4:1, 1:1}, 29, newLength - oldLength, 15, 1));
  }
}
;
_.substring_0 = function substring(begin){
  return substring_I_Ljava_lang_String___devirtual$(this.string, begin);
}
;
_.toString_0 = function toString_53(){
  return this.string;
}
;
var Ljava_lang_AbstractStringBuilder_2_classLit = createForClass('java.lang', 'AbstractStringBuilder', 225, Ljava_lang_Object_2_classLit);
function $clinit_ArithmeticException(){
  $clinit_ArithmeticException = emptyMethod;
  $clinit_RuntimeException();
}

function ArithmeticException(explanation){
  $clinit_ArithmeticException();
  RuntimeException_1.call(this, explanation);
  this.$init_812();
}

defineClass(191, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, ArithmeticException);
_.$init_812 = function $init_812(){
}
;
var Ljava_lang_ArithmeticException_2_classLit = createForClass('java.lang', 'ArithmeticException', 191, Ljava_lang_RuntimeException_2_classLit);
function $clinit_IndexOutOfBoundsException(){
  $clinit_IndexOutOfBoundsException = emptyMethod;
  $clinit_RuntimeException();
}

function IndexOutOfBoundsException(){
  $clinit_IndexOutOfBoundsException();
  RuntimeException.call(this);
  this.$init_813();
}

function IndexOutOfBoundsException_0(message){
  $clinit_IndexOutOfBoundsException();
  RuntimeException_1.call(this, message);
  this.$init_813();
}

defineClass(62, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, IndexOutOfBoundsException, IndexOutOfBoundsException_0);
_.$init_813 = function $init_813(){
}
;
var Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang', 'IndexOutOfBoundsException', 62, Ljava_lang_RuntimeException_2_classLit);
function $clinit_ArrayIndexOutOfBoundsException(){
  $clinit_ArrayIndexOutOfBoundsException = emptyMethod;
  $clinit_IndexOutOfBoundsException();
}

function ArrayIndexOutOfBoundsException(){
  $clinit_ArrayIndexOutOfBoundsException();
  IndexOutOfBoundsException.call(this);
  this.$init_814();
}

function ArrayIndexOutOfBoundsException_0(msg){
  $clinit_ArrayIndexOutOfBoundsException();
  IndexOutOfBoundsException_0.call(this, msg);
  this.$init_814();
}

defineClass(301, 62, {4:1, 25:1, 1:1, 27:1, 24:1}, ArrayIndexOutOfBoundsException, ArrayIndexOutOfBoundsException_0);
_.$init_814 = function $init_814(){
}
;
var Ljava_lang_ArrayIndexOutOfBoundsException_2_classLit = createForClass('java.lang', 'ArrayIndexOutOfBoundsException', 301, Ljava_lang_IndexOutOfBoundsException_2_classLit);
function $clinit_ArrayStoreException(){
  $clinit_ArrayStoreException = emptyMethod;
  $clinit_RuntimeException();
}

function ArrayStoreException(){
  $clinit_ArrayStoreException();
  RuntimeException.call(this);
  this.$init_815();
}

function ArrayStoreException_0(message){
  $clinit_ArrayStoreException();
  RuntimeException_1.call(this, message);
  this.$init_815();
}

defineClass(381, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, ArrayStoreException, ArrayStoreException_0);
_.$init_815 = function $init_815(){
}
;
var Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang', 'ArrayStoreException', 381, Ljava_lang_RuntimeException_2_classLit);
function $clinit_Byte(){
  $clinit_Byte = emptyMethod;
  $clinit_Number();
  MIN_VALUE_0 = narrow_byte(128);
  MAX_VALUE_0 = narrow_byte(127);
  BYTES = narrow_int(8 / 8);
  TYPE_28 = B_classLit;
}

function Byte(value_0){
  Number_0.call(this);
  this.$init_817();
  this.value_0 = value_0;
}

function compare_3(x_0, y_0){
  $clinit_Byte();
  return x_0 - y_0;
}

function hashCode_21(b){
  return b;
}

function toString_56(b){
  return valueOf_45(b);
}

function valueOf_33(b){
  $clinit_Byte();
  var rebase, result;
  rebase = b + 128;
  result = ($clinit_Byte$BoxedValues() , boxedValues)[rebase];
  if (isNull(result)) {
    result = ($clinit_Byte$BoxedValues() , boxedValues)[rebase] = new Byte(b);
  }
  return result;
}

defineClass(206, 111, {4:1, 206:1, 8:1, 1:1}, Byte);
_.$init_817 = function $init_817(){
}
;
_.compareTo_0 = function compareTo_10(b){
  return this.compareTo_5(castTo(b, 206));
}
;
_.compareTo_5 = function compareTo_9(b){
  return compare_3(this.value_0, b.value_0);
}
;
_.doubleValue = function doubleValue(){
  return this.value_0;
}
;
_.equals_0 = function equals_20(o){
  return instanceOf(o, 206) && castTo(o, 206).value_0 == this.value_0;
}
;
_.hashCode_1 = function hashCode_20(){
  return hashCode_21(this.value_0);
}
;
_.longValue = function longValue_0(){
  return fromInt_0(this.value_0);
}
;
_.toString_0 = function toString_55(){
  return toString_56(this.value_0);
}
;
_.value_0 = 0;
var BYTES = 0, MAX_VALUE_0 = 0, MIN_VALUE_0 = 0, TYPE_28;
var Ljava_lang_Byte_2_classLit = createForClass('java.lang', 'Byte', 206, Ljava_lang_Number_2_classLit);
function $clinit_Byte$BoxedValues(){
  $clinit_Byte$BoxedValues = emptyMethod;
  $clinit_Object();
  boxedValues = initUnidimensionalArray(Ljava_lang_Byte_2_classLit, {4:1, 1:1, 5:1}, 206, 256, 0, 1);
}

var boxedValues;
function $clinit_Supplier(){
  $clinit_Supplier = emptyMethod;
}

var Ljava_util_function_Supplier_2_classLit = createForInterface('java.util.function', 'Supplier');
function $clinit_Character(){
  $clinit_Character = emptyMethod;
  $clinit_Object();
  TYPE_29 = Ljava_lang_Character_2_classLit;
  BYTES_0 = narrow_int(16 / 8);
}

function Character(value_0){
  Object_0.call(this);
  this.$init_818();
  this.value_0 = value_0;
}

function compare_4(x_0, y_0){
  $clinit_Character();
  return x_0 - y_0;
}

function digit_0(c, radix){
  $clinit_Character();
  if (radix < 2 || radix > 36) {
    return -1;
  }
  if (c >= 48 && c < 48 + $wnd.Math.min(radix, 10)) {
    return c - 48;
  }
  if (c >= 97 && c < radix + 97 - 10) {
    return c - 97 + 10;
  }
  if (c >= 65 && c < radix + 65 - 10) {
    return c - 65 + 10;
  }
  return -1;
}

function getHighSurrogate(codePoint){
  $clinit_Character();
  return narrow_char(55296 + (codePoint - 65536 >> 10 & 1023));
}

function getLowSurrogate(codePoint){
  $clinit_Character();
  return narrow_char(56320 + (codePoint - 65536 & 1023));
}

function hashCode_23(c){
  return c;
}

function toString_58(x_0){
  $clinit_Character();
  return valueOf_42(x_0);
}

function valueOf_34(c){
  $clinit_Character();
  var result;
  if (c < 128) {
    result = ($clinit_Character$BoxedValues() , boxedValues_0)[c];
    if (isNull(result)) {
      result = ($clinit_Character$BoxedValues() , boxedValues_0)[c] = new Character(c);
    }
    return result;
  }
  return new Character(c);
}

defineClass(187, 1, {4:1, 187:1, 8:1, 1:1}, Character);
_.$init_818 = function $init_818(){
}
;
_.compareTo_0 = function compareTo_12(c){
  return this.compareTo_6(castTo(c, 187));
}
;
_.compareTo_6 = function compareTo_11(c){
  return compare_4(this.value_0, c.value_0);
}
;
_.equals_0 = function equals_21(o){
  return instanceOf(o, 187) && castTo(o, 187).value_0 == this.value_0;
}
;
_.hashCode_1 = function hashCode_22(){
  return hashCode_23(this.value_0);
}
;
_.toString_0 = function toString_57(){
  return valueOf_42(this.value_0);
}
;
_.value_0 = 0;
var BYTES_0 = 0, TYPE_29;
var Ljava_lang_Character_2_classLit = createForClass('java.lang', 'Character', 187, Ljava_lang_Object_2_classLit);
function $clinit_Character$BoxedValues(){
  $clinit_Character$BoxedValues = emptyMethod;
  $clinit_Object();
  boxedValues_0 = initUnidimensionalArray(Ljava_lang_Character_2_classLit, {4:1, 1:1, 5:1}, 187, 128, 0, 1);
}

var boxedValues_0;
function $clinit_ClassCastException(){
  $clinit_ClassCastException = emptyMethod;
  $clinit_RuntimeException();
}

function ClassCastException(message){
  $clinit_ClassCastException();
  RuntimeException_1.call(this, message);
  this.$init_820();
}

defineClass(547, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, ClassCastException);
_.$init_820 = function $init_820(){
}
;
var Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang', 'ClassCastException', 547, Ljava_lang_RuntimeException_2_classLit);
function $clinit_Float(){
  $clinit_Float = emptyMethod;
  $clinit_Number();
  MIN_EXPONENT_0 = -126;
  NaN_1 = 0 / 0;
  NEGATIVE_INFINITY_0 = -1 / 0;
  POSITIVE_INFINITY_0 = 1 / 0;
  BYTES_2 = narrow_int(32 / 8);
  TYPE_31 = F_classLit;
}

function Float(value_0){
  Number_0.call(this);
  this.$init_821();
  this.value_0 = value_0;
}

function compare_6(x_0, y_0){
  $clinit_Float();
  return compare_5(x_0, y_0);
}

function hashCode_26(f){
  return round_int(f);
}

function toString_62(b){
  return valueOf_44(b);
}

function valueOf_36(f){
  $clinit_Float();
  return new Float(f);
}

defineClass(224, 111, {4:1, 8:1, 224:1, 1:1}, Float);
_.$init_821 = function $init_821(){
}
;
_.compareTo_0 = function compareTo_14(b){
  return this.compareTo_7(castTo(b, 224));
}
;
_.compareTo_7 = function compareTo_13(b){
  return compare_6(this.value_0, b.value_0);
}
;
_.doubleValue = function doubleValue_0(){
  return this.value_0;
}
;
_.equals_0 = function equals_22(o){
  return instanceOf(o, 224) && equals_Ljava_lang_Object__Z__devirtual$_1(valueOf_35(this.value_0), valueOf_35(castTo(o, 224).value_0));
}
;
_.hashCode_1 = function hashCode_25(){
  return hashCode_26(this.value_0);
}
;
_.longValue = function longValue_1(){
  return fromDouble_0(this.value_0);
}
;
_.toString_0 = function toString_61(){
  return toString_62(this.value_0);
}
;
_.value_0 = 0;
var BYTES_2 = 0, MIN_EXPONENT_0 = 0, NEGATIVE_INFINITY_0 = 0, NaN_1 = 0, POSITIVE_INFINITY_0 = 0, TYPE_31;
var Ljava_lang_Float_2_classLit = createForClass('java.lang', 'Float', 224, Ljava_lang_Number_2_classLit);
function $clinit_IllegalArgumentException(){
  $clinit_IllegalArgumentException = emptyMethod;
  $clinit_RuntimeException();
}

function IllegalArgumentException(){
  $clinit_IllegalArgumentException();
  RuntimeException.call(this);
  this.$init_822();
}

function IllegalArgumentException_0(message){
  $clinit_IllegalArgumentException();
  RuntimeException_1.call(this, message);
  this.$init_822();
}

defineClass(41, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, IllegalArgumentException, IllegalArgumentException_0);
_.$init_822 = function $init_822(){
}
;
var Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang', 'IllegalArgumentException', 41, Ljava_lang_RuntimeException_2_classLit);
function $clinit_IllegalStateException(){
  $clinit_IllegalStateException = emptyMethod;
  $clinit_RuntimeException();
}

function IllegalStateException(){
  $clinit_IllegalStateException();
  RuntimeException.call(this);
  this.$init_823();
}

function IllegalStateException_0(s){
  $clinit_IllegalStateException();
  RuntimeException_1.call(this, s);
  this.$init_823();
}

defineClass(94, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, IllegalStateException, IllegalStateException_0);
_.$init_823 = function $init_823(){
}
;
var Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang', 'IllegalStateException', 94, Ljava_lang_RuntimeException_2_classLit);
function $clinit_Integer(){
  $clinit_Integer = emptyMethod;
  $clinit_Number();
  BYTES_3 = narrow_int(32 / 8);
  TYPE_32 = I_classLit;
}

function Integer(value_0){
  Number_0.call(this);
  this.$init_824();
  this.value_0 = value_0;
}

function compare_7(x_0, y_0){
  $clinit_Integer();
  if (x_0 < y_0) {
    return -1;
  }
   else if (x_0 > y_0) {
    return 1;
  }
   else {
    return 0;
  }
}

function hashCode_28(i){
  return i;
}

function numberOfLeadingZeros_0(i){
  $clinit_Integer();
  var m, n, y_0;
  if (i < 0) {
    return 0;
  }
   else if (i == 0) {
    return 32;
  }
   else {
    y_0 = -(i >> 16);
    m = y_0 >> 16 & 16;
    n = 16 - m;
    i = i >> m;
    y_0 = i - 256;
    m = y_0 >> 16 & 8;
    n += m;
    i <<= m;
    y_0 = i - 4096;
    m = y_0 >> 16 & 4;
    n += m;
    i <<= m;
    y_0 = i - 16384;
    m = y_0 >> 16 & 2;
    n += m;
    i <<= m;
    y_0 = i >> 14;
    m = y_0 & ~(y_0 >> 1);
    return n + 2 - m;
  }
}

function numberOfTrailingZeros(i){
  $clinit_Integer();
  var r, rtn;
  if (i == 0) {
    return 32;
  }
   else {
    rtn = 0;
    for (r = 1; (r & i) == 0; r <<= 1) {
      rtn++;
    }
    return rtn;
  }
}

function parseInt_1(s){
  $clinit_Integer();
  return parseInt_2(s, 10);
}

function parseInt_2(s, radix){
  $clinit_Integer();
  return __parseAndValidateInt(s, radix, -2147483648, 2147483647);
}

function toHexString(value_0){
  $clinit_Integer();
  return toUnsignedString(value_0, 16);
}

function toRadixString(value_0, radix){
  var number;
  number = uncheckedCast(value_0);
  return number.toString(radix);
}

function toString_64(value_0){
  $clinit_Integer();
  return valueOf_45(value_0);
}

function toUnsigned(value_0){
  return value_0 >>> 0;
}

function toUnsignedString(value_0, radix){
  return toRadixString(toUnsigned(value_0), radix);
}

function valueOf_37(i){
  $clinit_Integer();
  var rebase, result;
  if (i > -129 && i < 128) {
    rebase = i + 128;
    result = ($clinit_Integer$BoxedValues() , boxedValues_1)[rebase];
    if (isNull(result)) {
      result = ($clinit_Integer$BoxedValues() , boxedValues_1)[rebase] = new Integer(i);
    }
    return result;
  }
  return new Integer(i);
}

defineClass(28, 111, {4:1, 8:1, 28:1, 1:1}, Integer);
_.$init_824 = function $init_824(){
}
;
_.compareTo_0 = function compareTo_16(b){
  return this.compareTo_8(castTo(b, 28));
}
;
_.compareTo_8 = function compareTo_15(b){
  return compare_7(this.value_0, b.value_0);
}
;
_.doubleValue = function doubleValue_1(){
  return this.value_0;
}
;
_.equals_0 = function equals_23(o){
  return instanceOf(o, 28) && castTo(o, 28).value_0 == this.value_0;
}
;
_.hashCode_1 = function hashCode_27(){
  return hashCode_28(this.value_0);
}
;
_.intValue = function intValue(){
  return this.value_0;
}
;
_.longValue = function longValue_2(){
  return fromInt_0(this.value_0);
}
;
_.toString_0 = function toString_63(){
  return toString_64(this.value_0);
}
;
_.value_0 = 0;
var BYTES_3 = 0, TYPE_32;
var Ljava_lang_Integer_2_classLit = createForClass('java.lang', 'Integer', 28, Ljava_lang_Number_2_classLit);
function $clinit_Integer$BoxedValues(){
  $clinit_Integer$BoxedValues = emptyMethod;
  $clinit_Object();
  boxedValues_1 = initUnidimensionalArray(Ljava_lang_Integer_2_classLit, {4:1, 1:1, 5:1}, 28, 256, 0, 1);
}

var boxedValues_1;
function $clinit_Integer$NativeNumber(){
  $clinit_Integer$NativeNumber = emptyMethod;
}

function $clinit_Long(){
  $clinit_Long = emptyMethod;
  $clinit_Number();
  BYTES_4 = narrow_int(64 / 8);
  TYPE_33 = J_classLit;
}

function Long(value_0){
  Number_0.call(this);
  this.$init_825();
  this.value_0 = value_0;
}

function compare_8(x_0, y_0){
  $clinit_Long();
  if (lt(x_0, y_0)) {
    return -1;
  }
   else if (gt(x_0, y_0)) {
    return 1;
  }
   else {
    return 0;
  }
}

function hashCode_30(l){
  return toInt_0(l);
}

function numberOfLeadingZeros_1(i){
  $clinit_Long();
  var high;
  high = toInt_0(shr_0(i, 32));
  if (high != 0) {
    return numberOfLeadingZeros_0(high);
  }
   else {
    return numberOfLeadingZeros_0(toInt_0(i)) + 32;
  }
}

function parseLong(s){
  $clinit_Long();
  return parseLong_0(s, 10);
}

function parseLong_0(s, radix){
  $clinit_Long();
  return __parseAndValidateLong(s, radix);
}

function toString_66(value_0){
  $clinit_Long();
  return valueOf_46(value_0);
}

function valueOf_40(i){
  $clinit_Long();
  var rebase, result;
  if (gt(i, fromInt_0(-129)) && lt(i, 128)) {
    rebase = toInt_0(i) + 128;
    result = ($clinit_Long$BoxedValues() , boxedValues_2)[rebase];
    if (isNull(result)) {
      result = ($clinit_Long$BoxedValues() , boxedValues_2)[rebase] = new Long(i);
    }
    return result;
  }
  return new Long(i);
}

defineClass(66, 111, {4:1, 8:1, 66:1, 1:1}, Long);
_.$init_825 = function $init_825(){
}
;
_.compareTo_0 = function compareTo_18(b){
  return this.compareTo_9(castTo(b, 66));
}
;
_.compareTo_9 = function compareTo_17(b){
  return compare_8(this.value_0, b.value_0);
}
;
_.doubleValue = function doubleValue_2(){
  return toDouble_0(this.value_0);
}
;
_.equals_0 = function equals_24(o){
  return instanceOf(o, 66) && eq(castTo(o, 66).value_0, this.value_0);
}
;
_.hashCode_1 = function hashCode_29(){
  return hashCode_30(this.value_0);
}
;
_.intValue = function intValue_0(){
  return toInt_0(this.value_0);
}
;
_.longValue = function longValue_3(){
  return this.value_0;
}
;
_.toString_0 = function toString_65(){
  return toString_66(this.value_0);
}
;
_.value_0 = 0;
var BYTES_4 = 0, TYPE_33;
var Ljava_lang_Long_2_classLit = createForClass('java.lang', 'Long', 66, Ljava_lang_Number_2_classLit);
function $clinit_Long$BoxedValues(){
  $clinit_Long$BoxedValues = emptyMethod;
  $clinit_Object();
  boxedValues_2 = initUnidimensionalArray(Ljava_lang_Long_2_classLit, {4:1, 1:1, 5:1}, 66, 256, 0, 1);
}

var boxedValues_2;
function $clinit_Math(){
  $clinit_Math = emptyMethod;
  $clinit_Object();
  PI_OVER_180 = 3.141592653589793 / 180;
  PI_UNDER_180 = 180 / 3.141592653589793;
}

function rint(x_0){
  $clinit_Math();
  var mod2;
  if ($wnd.Math.abs(x_0) < toDouble_0(shl_0(1, 52))) {
    mod2 = x_0 % 2;
    if (mod2 == -1.5 || mod2 == 0.5) {
      x_0 = $wnd.Math.floor(x_0);
    }
     else {
      x_0 = toDouble_0(round_0(x_0));
    }
  }
  return x_0;
}

function round_0(x_0){
  $clinit_Math();
  return fromDouble_0($wnd.Math.round(x_0));
}

function round_1(x_0){
  $clinit_Math();
  return round_int($wnd.Math.round(x_0));
}

defineClass(1181, 1, {1:1});
var PI_OVER_180 = 0, PI_UNDER_180 = 0;
var Ljava_lang_Math_2_classLit = createForClass('java.lang', 'Math', 1181, Ljava_lang_Object_2_classLit);
function $clinit_Math$NativeMath(){
  $clinit_Math$NativeMath = emptyMethod;
  $clinit_Object();
}

function $clinit_NullPointerException(){
  $clinit_NullPointerException = emptyMethod;
  $clinit_JsException();
}

function NullPointerException(){
  $clinit_NullPointerException();
  JsException.call(this);
  this.$init_826();
}

function NullPointerException_0(message){
  $clinit_NullPointerException();
  JsException_1.call(this, message);
  this.$init_826();
}

defineClass(117, 316, {4:1, 25:1, 1:1, 27:1, 24:1}, NullPointerException, NullPointerException_0);
_.$init_826 = function $init_826(){
}
;
_.createError = function createError_0(msg){
  return new TypeError(msg);
}
;
var Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang', 'NullPointerException', 117, Ljava_lang_JsException_2_classLit);
function $clinit_NullPointerException$NativeTypeError(){
  $clinit_NullPointerException$NativeTypeError = emptyMethod;
  $clinit_Object();
}

function $clinit_Number$JavaLangNumber(){
  $clinit_Number$JavaLangNumber = emptyMethod;
  $clinit_Object();
}

function $clinit_Number$__ParseLong(){
  $clinit_Number$__ParseLong = emptyMethod;
  var i;
  $clinit_Object();
  maxDigitsForRadix = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [-1, -1, 30, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5]);
  maxDigitsRadixPower = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, 37, 15, 1);
  maxLengthForRadix = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [-1, -1, 63, 40, 32, 28, 25, 23, 21, 20, 19, 19, 18, 18, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13]);
  maxValueForRadix = initUnidimensionalArray(J_classLit, {4:1, 1:1}, 29, 37, 14, 1);
  {
    for (i = 2; i <= 36; i++) {
      maxDigitsRadixPower[i] = round_int($wnd.Math.pow(i, maxDigitsForRadix[i]));
      maxValueForRadix[i] = div_1({l:4194303, m:4194303, h:524287}, fromInt_0(maxDigitsRadixPower[i]));
    }
  }
}

var maxDigitsForRadix, maxDigitsRadixPower, maxLengthForRadix, maxValueForRadix;
function $clinit_NumberFormatException(){
  $clinit_NumberFormatException = emptyMethod;
  $clinit_IllegalArgumentException();
}

function NumberFormatException(message){
  $clinit_NumberFormatException();
  IllegalArgumentException_0.call(this, message);
  this.$init_827();
}

function forInputString(s){
  $clinit_NumberFormatException();
  return new NumberFormatException('For input string: "' + s + '"');
}

function forNullInputString(){
  $clinit_NumberFormatException();
  return new NumberFormatException('null');
}

function forRadix(radix){
  $clinit_NumberFormatException();
  return new NumberFormatException('radix ' + radix + ' out of range');
}

defineClass(133, 41, {4:1, 25:1, 133:1, 1:1, 27:1, 24:1}, NumberFormatException);
_.$init_827 = function $init_827(){
}
;
var Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang', 'NumberFormatException', 133, Ljava_lang_IllegalArgumentException_2_classLit);
function $clinit_Short(){
  $clinit_Short = emptyMethod;
  $clinit_Number();
  MIN_VALUE_1 = narrow_short(32768);
  MAX_VALUE_1 = narrow_short(32767);
  BYTES_5 = narrow_int(16 / 8);
  TYPE_34 = S_classLit;
}

function Short(value_0){
  Number_0.call(this);
  this.$init_828();
  this.value_0 = value_0;
}

function compare_9(x_0, y_0){
  $clinit_Short();
  return x_0 - y_0;
}

function hashCode_32(s){
  return s;
}

function toString_68(b){
  return valueOf_45(b);
}

function valueOf_41(s){
  $clinit_Short();
  var rebase, result;
  if (s > -129 && s < 128) {
    rebase = s + 128;
    result = ($clinit_Short$BoxedValues() , boxedValues_3)[rebase];
    if (isNull(result)) {
      result = ($clinit_Short$BoxedValues() , boxedValues_3)[rebase] = new Short(s);
    }
    return result;
  }
  return new Short(s);
}

defineClass(188, 111, {4:1, 8:1, 1:1, 188:1}, Short);
_.$init_828 = function $init_828(){
}
;
_.compareTo_0 = function compareTo_19(b){
  return this.compareTo_10(castTo(b, 188));
}
;
_.compareTo_10 = function compareTo_20(b){
  return compare_9(this.value_0, b.value_0);
}
;
_.doubleValue = function doubleValue_3(){
  return this.value_0;
}
;
_.equals_0 = function equals_25(o){
  return instanceOf(o, 188) && castTo(o, 188).value_0 == this.value_0;
}
;
_.hashCode_1 = function hashCode_31(){
  return hashCode_32(this.value_0);
}
;
_.longValue = function longValue_4(){
  return fromInt_0(this.value_0);
}
;
_.toString_0 = function toString_67(){
  return toString_68(this.value_0);
}
;
_.value_0 = 0;
var BYTES_5 = 0, MAX_VALUE_1 = 0, MIN_VALUE_1 = 0, TYPE_34;
var Ljava_lang_Short_2_classLit = createForClass('java.lang', 'Short', 188, Ljava_lang_Number_2_classLit);
function $clinit_Short$BoxedValues(){
  $clinit_Short$BoxedValues = emptyMethod;
  $clinit_Object();
  boxedValues_3 = initUnidimensionalArray(Ljava_lang_Short_2_classLit, {4:1, 1:1, 5:1}, 188, 256, 0, 1);
}

var boxedValues_3;
function $clinit_StackTraceElement(){
  $clinit_StackTraceElement = emptyMethod;
  $clinit_Object();
}

function StackTraceElement(className, methodName, fileName, lineNumber){
  $clinit_StackTraceElement();
  Object_0.call(this);
  this.$init_829();
  if (!jsNotEquals(className, null)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!jsNotEquals(methodName, null)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.className_0 = className;
  this.methodName = methodName;
  this.fileName = fileName;
  this.lineNumber = lineNumber;
}

defineClass(159, 1, {4:1, 1:1, 159:1}, StackTraceElement);
_.$init_829 = function $init_829(){
}
;
_.equals_0 = function equals_26(other){
  var st;
  if (instanceOf(other, 159)) {
    st = castTo(other, 159);
    return this.lineNumber == st.lineNumber && equals_41(this.methodName, st.methodName) && equals_41(this.className_0, st.className_0) && equals_41(this.fileName, st.fileName);
  }
  return false;
}
;
_.getMethodName = function getMethodName(){
  return this.methodName;
}
;
_.hashCode_1 = function hashCode_33(){
  return hash_1(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), {4:1, 1:1, 5:1}, 1, 5, [valueOf_37(this.lineNumber), this.className_0, this.methodName, this.fileName]));
}
;
_.toString_0 = function toString_69(){
  return this.className_0 + '.' + this.methodName + '(' + (jsNotEquals(this.fileName, null)?this.fileName:'Unknown Source') + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';
}
;
_.lineNumber = 0;
var Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang', 'StackTraceElement', 159, Ljava_lang_Object_2_classLit);
function $clinit_String$NativeFunction(){
  $clinit_String$NativeFunction = emptyMethod;
  $clinit_Object();
}

function $clinit_String$NativeString(){
  $clinit_String$NativeString = emptyMethod;
  $clinit_Object();
}

function $clinit_StringBuffer(){
  $clinit_StringBuffer = emptyMethod;
  $clinit_AbstractStringBuilder();
}

function StringBuffer(){
  $clinit_StringBuffer();
  AbstractStringBuilder.call(this, '');
  this.$init_831();
}

function StringBuffer_0(ignoredCapacity){
  $clinit_StringBuffer();
  AbstractStringBuilder.call(this, '');
  this.$init_831();
}

defineClass(226, 225, {221:1, 1:1}, StringBuffer, StringBuffer_0);
_.$init_831 = function $init_831(){
}
;
_.append_1 = function append_2(x_0){
  this.string += charToString(x_0);
  return this;
}
;
_.append_2 = function append_3(x_0){
  this.string += x_0;
  return this;
}
;
_.append_3 = function append_4(x_0){
  this.string += '' + x_0;
  return this;
}
;
var Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang', 'StringBuffer', 226, Ljava_lang_AbstractStringBuilder_2_classLit);
function $clinit_StringBuilder(){
  $clinit_StringBuilder = emptyMethod;
  $clinit_AbstractStringBuilder();
}

function StringBuilder(){
  $clinit_StringBuilder();
  AbstractStringBuilder.call(this, '');
  this.$init_832();
}

function StringBuilder_0(ignoredCapacity){
  $clinit_StringBuilder();
  AbstractStringBuilder.call(this, '');
  this.$init_832();
}

function StringBuilder_1(s){
  $clinit_StringBuilder();
  AbstractStringBuilder.call(this, castToString(checkNotNull(s)));
  this.$init_832();
}

defineClass(70, 225, {221:1, 1:1}, StringBuilder, StringBuilder_0, StringBuilder_1);
_.$init_832 = function $init_832(){
}
;
_.append_4 = function append_5(x_0){
  this.string += charToString(x_0);
  return this;
}
;
_.append_5 = function append_6(x_0){
  this.string += x_0;
  return this;
}
;
_.append_6 = function append_7(x_0){
  this.string += toString_45(x_0);
  return this;
}
;
_.append_7 = function append_8(x_0){
  this.string += '' + x_0;
  return this;
}
;
_.append_8 = function append_9(x_0){
  this.string += '' + x_0;
  return this;
}
;
_.append_9 = function append_10(x_0){
  this.string += '' + x_0;
  return this;
}
;
_.append_10 = function append_11(x_0, start_0, len){
  this.string += '' + valueOf_50(x_0, start_0, len);
  return this;
}
;
_.delete_0 = function delete_0(start_0, end){
  this.replace0(start_0, end, '');
  return this;
}
;
_.deleteCharAt = function deleteCharAt(start_0){
  this.replace0(start_0, start_0 + 1, '');
  return this;
}
;
_.insert_4 = function insert_8(index_0, x_0){
  return this.insert_6(index_0, valueOf_42(x_0));
}
;
_.insert_5 = function insert_9(index_0, chars){
  return this.insert_6(index_0, valueOf_47(chars));
}
;
_.insert_6 = function insert_10(index_0, x_0){
  this.replace0(index_0, index_0, x_0);
  return this;
}
;
_.insert_7 = function insert_11(index_0, x_0, offset, len){
  return this.insert_6(index_0, valueOf_50(x_0, offset, len));
}
;
_.replace_1 = function replace_1(start_0, end, toInsert){
  this.replace0(start_0, end, toInsert);
  return this;
}
;
var Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang', 'StringBuilder', 70, Ljava_lang_AbstractStringBuilder_2_classLit);
function $clinit_StringIndexOutOfBoundsException(){
  $clinit_StringIndexOutOfBoundsException = emptyMethod;
  $clinit_IndexOutOfBoundsException();
}

function StringIndexOutOfBoundsException(message){
  $clinit_StringIndexOutOfBoundsException();
  IndexOutOfBoundsException_0.call(this, message);
  this.$init_833();
}

defineClass(375, 62, {4:1, 25:1, 1:1, 27:1, 24:1}, StringIndexOutOfBoundsException);
_.$init_833 = function $init_833(){
}
;
var Ljava_lang_StringIndexOutOfBoundsException_2_classLit = createForClass('java.lang', 'StringIndexOutOfBoundsException', 375, Ljava_lang_IndexOutOfBoundsException_2_classLit);
function $clinit_System(){
  $clinit_System = emptyMethod;
  $clinit_Object();
  err = new PrintStream(null);
  out_0 = new PrintStream(null);
}

function arrayTypeMatch(srcComp, destComp){
  if (srcComp.isPrimitive()) {
    return equals_Ljava_lang_Object__Z__devirtual$(srcComp, destComp);
  }
   else {
    return !destComp.isPrimitive();
  }
}

function arraycopy(src_0, srcOfs, dest, destOfs, len){
  $clinit_System();
  var destArray, destComp, destEnd, destType, destlen, srcArray, srcComp, srcType, srclen;
  checkNotNull_0(src_0, 'src');
  checkNotNull_0(dest, 'dest');
  srcType = getClass__Ljava_lang_Class___devirtual$(src_0);
  destType = getClass__Ljava_lang_Class___devirtual$(dest);
  checkArrayType_0(srcType.isArray_0(), 'srcType is not an array');
  checkArrayType_0(destType.isArray_0(), 'destType is not an array');
  srcComp = srcType.getComponentType();
  destComp = destType.getComponentType();
  checkArrayType_0(arrayTypeMatch(srcComp, destComp), "Array types don't match");
  srclen = getLength_0(src_0);
  destlen = getLength_0(dest);
  if (srcOfs < 0 || destOfs < 0 || len < 0 || srcOfs + len > srclen || destOfs + len > destlen) {
    throw toJs(new IndexOutOfBoundsException);
  }
  if (isTypeChecked() && !srcComp.isPrimitive() && !equals_Ljava_lang_Object__Z__devirtual$(srcType, destType)) {
    srcArray = castToArray(src_0);
    destArray = castToArray(dest);
    if (maskUndefined(src_0) === maskUndefined(dest) && srcOfs < destOfs) {
      srcOfs += len;
      for (destEnd = destOfs + len; destEnd-- > destOfs;) {
        setCheck(destArray, destEnd, srcArray[--srcOfs]);
      }
    }
     else {
      for (destEnd = destOfs + len; destOfs < destEnd;) {
        setCheck(destArray, destOfs++, srcArray[srcOfs++]);
      }
    }
  }
   else if (len > 0) {
    copy(src_0, srcOfs, dest, destOfs, len);
  }
}

function currentTimeMillis_2(){
  $clinit_System();
  return fromDouble_0(Date.now());
}

function identityHashCode(o){
  $clinit_System();
  return getIdentityHashCode(o);
}

defineClass(1184, 1, {1:1});
var err, out_0;
var Ljava_lang_System_2_classLit = createForClass('java.lang', 'System', 1184, Ljava_lang_Object_2_classLit);
function $clinit_Throwable$HasJavaThrowable(){
  $clinit_Throwable$HasJavaThrowable = emptyMethod;
}

function $clinit_Throwable$NativeError(){
  $clinit_Throwable$NativeError = emptyMethod;
  $clinit_Object();
}

function $clinit_Throwable$NativeTypeError(){
  $clinit_Throwable$NativeTypeError = emptyMethod;
  $clinit_Object();
}

function $clinit_Function(){
  $clinit_Function = emptyMethod;
}

function identity_0(){
  $clinit_Function();
  return new Function$lambda$0$Type;
}

function lambda$0_0(t_0){
  $clinit_Function();
  return t_0;
}

var Ljava_util_function_Function_2_classLit = createForInterface('java.util.function', 'Function');
function $clinit_Throwable$lambda$0$Type(){
  $clinit_Throwable$lambda$0$Type = emptyMethod;
}

function Throwable$lambda$0$Type(){
  $clinit_Throwable$lambda$0$Type();
}

defineClass(499, 1, {1:1}, Throwable$lambda$0$Type);
_.apply_0 = function apply_1(arg0){
  return lambda$0(castTo(arg0, 24));
}
;
var Ljava_lang_Throwable$lambda$0$Type_2_classLit = createForClass('java.lang', 'Throwable/lambda$0$Type', 499, Ljava_lang_Object_2_classLit);
function $clinit_UnsupportedOperationException(){
  $clinit_UnsupportedOperationException = emptyMethod;
  $clinit_RuntimeException();
}

function UnsupportedOperationException(){
  $clinit_UnsupportedOperationException();
  RuntimeException.call(this);
  this.$init_834();
}

function UnsupportedOperationException_0(message){
  $clinit_UnsupportedOperationException();
  RuntimeException_1.call(this, message);
  this.$init_834();
}

defineClass(56, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, UnsupportedOperationException, UnsupportedOperationException_0);
_.$init_834 = function $init_834(){
}
;
var Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang', 'UnsupportedOperationException', 56, Ljava_lang_RuntimeException_2_classLit);
function $clinit_BigDecimal(){
  $clinit_BigDecimal = emptyMethod;
  var i, j, j0;
  $clinit_Number();
  ONE_0 = new BigDecimal_0(1, 0);
  TEN = new BigDecimal_0(10, 0);
  ZERO_0 = new BigDecimal_0(0, 0);
  BI_SCALED_BY_ZERO = initUnidimensionalArray(Ljava_math_BigDecimal_2_classLit, {4:1, 1:1, 5:1}, 90, 11, 0, 1);
  CH_ZEROS = initUnidimensionalArray(C_classLit, {4:1, 1:1}, 29, 100, 15, 1);
  DOUBLE_FIVE_POW = stampJavaTypeInfo(getClassLiteralForArray(D_classLit, 1), {4:1, 1:1}, 29, 15, [1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125, 6103515625, 30517578125, 152587890625, 762939453125, 3814697265625, 19073486328125, 95367431640625, 476837158203125, 2384185791015625]);
  DOUBLE_FIVE_POW_BIT_LENGTH = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, DOUBLE_FIVE_POW.length, 15, 1);
  DOUBLE_TEN_POW = stampJavaTypeInfo(getClassLiteralForArray(D_classLit, 1), {4:1, 1:1}, 29, 15, [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000, 10000000000000000]);
  DOUBLE_TEN_POW_BIT_LENGTH = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, DOUBLE_TEN_POW.length, 15, 1);
  ZERO_SCALED_BY = initUnidimensionalArray(Ljava_math_BigDecimal_2_classLit, {4:1, 1:1, 5:1}, 90, 11, 0, 1);
  {
    i = 0;
    for (; i < ZERO_SCALED_BY.length; i++) {
      setCheck(BI_SCALED_BY_ZERO, i, new BigDecimal_0(fromInt_0(i), 0));
      setCheck(ZERO_SCALED_BY, i, new BigDecimal_0(0, i));
      CH_ZEROS[i] = 48;
    }
    for (; i < CH_ZEROS.length; i++) {
      CH_ZEROS[i] = 48;
    }
    for (j0 = 0; j0 < DOUBLE_FIVE_POW_BIT_LENGTH.length; j0++) {
      DOUBLE_FIVE_POW_BIT_LENGTH[j0] = bitLength(DOUBLE_FIVE_POW[j0]);
    }
    for (j = 0; j < DOUBLE_TEN_POW_BIT_LENGTH.length; j++) {
      DOUBLE_TEN_POW_BIT_LENGTH[j] = bitLength(DOUBLE_TEN_POW[j]);
    }
    TEN_POW = ($clinit_Multiplication() , bigTenPows);
    FIVE_POW = ($clinit_Multiplication() , bigFivePows);
  }
}

function BigDecimal(smallValue, scale){
  Number_0.call(this);
  this.$init_835();
  this.smallValue = smallValue;
  this.scale = scale;
  this.bitLength = bitLength(smallValue);
}

function BigDecimal_0(smallValue, scale){
  Number_0.call(this);
  this.$init_835();
  this.scale = scale;
  this.bitLength = bitLength_0(smallValue);
  if (this.bitLength < 54) {
    this.smallValue = toDouble_0(smallValue);
  }
   else {
    this.intVal = valueOf_55(smallValue);
  }
}

function BigDecimal_1(unscaledVal, scale){
  Number_0.call(this);
  this.$init_835();
  this.scale = scale;
  this.setUnscaledValue(castTo(checkNotNull(unscaledVal), 48));
}

function BigDecimal_2(unscaledVal, scale){
  BigDecimal_1.call(this, unscaledVal, scale);
}

function bitLength(value_0){
  var negative, result;
  if (value_0 > -140737488355328 && value_0 < 140737488355328) {
    if (value_0 == 0) {
      return 0;
    }
    negative = value_0 < 0;
    if (negative) {
      value_0 = -value_0;
    }
    result = round_int($wnd.Math.floor($wnd.Math.log(value_0) / 0.6931471805599453));
    if (!negative || value_0 != $wnd.Math.pow(2, result)) {
      result++;
    }
    return result;
  }
  return bitLength_0(fromDouble_0(value_0));
}

function bitLength_0(value_0){
  if (lt(value_0, 0)) {
    value_0 = not_0(value_0);
  }
  return 64 - numberOfLeadingZeros_1(value_0);
}

function toIntScale(doubleScale){
  if (doubleScale < -2147483648) {
    throw toJs(new ArithmeticException('Overflow'));
  }
   else if (doubleScale > 2147483647) {
    throw toJs(new ArithmeticException('Underflow'));
  }
   else {
    return round_int(doubleScale);
  }
}

function valueOf_51(smallValue, scale){
  return new BigDecimal(smallValue, scale);
}

function valueOf_52(unscaledVal){
  $clinit_BigDecimal();
  if (gte_0(unscaledVal, 0) && lt(unscaledVal, 11)) {
    return BI_SCALED_BY_ZERO[toInt_0(unscaledVal)];
  }
  return new BigDecimal_0(unscaledVal, 0);
}

function valueOf_53(unscaledVal, scale){
  if (scale == 0) {
    return valueOf_52(unscaledVal);
  }
  if (eq(unscaledVal, 0) && scale >= 0 && scale < ZERO_SCALED_BY.length) {
    return ZERO_SCALED_BY[scale];
  }
  return new BigDecimal_0(unscaledVal, scale);
}

function zeroScaledBy(doubleScale){
  if (doubleScale == round_int(doubleScale)) {
    return valueOf_53(0, round_int(doubleScale));
  }
  if (doubleScale >= 0) {
    return new BigDecimal_0(0, 2147483647);
  }
  return new BigDecimal_0(0, -2147483648);
}

defineClass(90, 111, {4:1, 8:1, 1:1, 90:1}, BigDecimal, BigDecimal_0, BigDecimal_1, BigDecimal_2);
_.$init_835 = function $init_835(){
}
;
_.compareTo_0 = function compareTo_21(val){
  return this.compareTo_11(castTo(val, 90));
}
;
_.approxPrecision = function approxPrecision(){
  return this.precision > 0?this.precision:$wnd.Math.floor((this.bitLength - 1) * 0.3010299956639812) + 1;
}
;
_.compareTo_11 = function compareTo_22(val){
  var diffPrecision, diffScale, thisSign, thisUnscaled, valUnscaled, valueSign;
  thisSign = this.signum();
  valueSign = val.signum();
  if (thisSign == valueSign) {
    if (this.scale == val.scale && this.bitLength < 54 && val.bitLength < 54) {
      return this.smallValue < val.smallValue?-1:this.smallValue > val.smallValue?1:0;
    }
    diffScale = this.scale - val.scale;
    diffPrecision = this.approxPrecision() - val.approxPrecision();
    if (diffPrecision > diffScale + 1) {
      return thisSign;
    }
     else if (diffPrecision < diffScale - 1) {
      return -thisSign;
    }
     else {
      thisUnscaled = this.getUnscaledValue();
      valUnscaled = val.getUnscaledValue();
      if (diffScale < 0) {
        thisUnscaled = thisUnscaled.multiply_0(powerOf10(-diffScale));
      }
       else if (diffScale > 0) {
        valUnscaled = valUnscaled.multiply_0(powerOf10(diffScale));
      }
      return thisUnscaled.compareTo_12(valUnscaled);
    }
  }
   else if (thisSign < valueSign) {
    return -1;
  }
   else {
    return 1;
  }
}
;
_.doubleValue = function doubleValue_4(){
  return parseDouble(this.toString_0());
}
;
_.equals_0 = function equals_28(x_0){
  var x1;
  if (maskUndefined(this) === maskUndefined(x_0)) {
    return true;
  }
  if (instanceOf(x_0, 90)) {
    x1 = castTo(x_0, 90);
    return this.scale == x1.scale && this.compareTo_11(x1) == 0;
  }
  return false;
}
;
_.getUnscaledValue = function getUnscaledValue(){
  if (isNull(this.intVal)) {
    this.intVal = valueOf_54(this.smallValue);
  }
  return this.intVal;
}
;
_.hashCode_1 = function hashCode_34(){
  var longValue;
  if (this.hashCode_0 != 0) {
    return this.hashCode_0;
  }
  if (this.bitLength < 54) {
    longValue = fromDouble_0(this.smallValue);
    this.hashCode_0 = toInt_0(and_0(longValue, -1));
    this.hashCode_0 = 33 * this.hashCode_0 + toInt_0(and_0(shr_0(longValue, 32), -1));
    this.hashCode_0 = 17 * this.hashCode_0 + round_int(this.scale);
    return this.hashCode_0;
  }
  this.hashCode_0 = 17 * this.intVal.hashCode_1() + round_int(this.scale);
  return this.hashCode_0;
}
;
_.isZero = function isZero_0(){
  return this.bitLength == 0 && this.smallValue != -1;
}
;
_.longValue = function longValue_5(){
  return this.scale <= -64 || this.scale > this.approxPrecision()?0:this.toBigInteger().longValue();
}
;
_.multiply = function multiply(multiplicand){
  var newScale;
  newScale = this.scale + multiplicand.scale;
  if (this.isZero() || multiplicand.isZero()) {
    return zeroScaledBy(newScale);
  }
  if (this.bitLength + multiplicand.bitLength < 54) {
    return valueOf_51(this.smallValue * multiplicand.smallValue, toIntScale(newScale));
  }
  return new BigDecimal_2(this.getUnscaledValue().multiply_0(multiplicand.getUnscaledValue()), toIntScale(newScale));
}
;
_.negate = function negate_0(){
  if (this.bitLength < 54) {
    return valueOf_51(-this.smallValue, this.scale);
  }
  return new BigDecimal_1(this.getUnscaledValue().negate_0(), this.scale);
}
;
_.scale_0 = function scale_0(){
  return round_int(this.scale);
}
;
_.setUnscaledValue = function setUnscaledValue(unscaledValue){
  this.intVal = unscaledValue;
  this.bitLength = unscaledValue.bitLength_0();
  if (this.bitLength < 54) {
    this.smallValue = toDouble_0(unscaledValue.longValue());
  }
}
;
_.signum = function signum_0(){
  if (this.bitLength < 54) {
    return this.smallValue < 0?-1:this.smallValue > 0?1:0;
  }
  return this.getUnscaledValue().signum();
}
;
_.toBigInteger = function toBigInteger(){
  if (this.scale == 0 || this.isZero()) {
    return this.getUnscaledValue();
  }
   else if (this.scale < 0) {
    return this.getUnscaledValue().multiply_0(powerOf10(-this.scale));
  }
   else {
    return this.getUnscaledValue().divide(powerOf10(this.scale));
  }
}
;
_.toString_0 = function toString_70(){
  var begin, end, exponent, intString, result;
  if (jsNotEquals(this.toStringImage, null)) {
    return this.toStringImage;
  }
  if (this.bitLength < 32) {
    this.toStringImage = toDecimalScaledString(fromDouble_0(this.smallValue), round_int(this.scale));
    return this.toStringImage;
  }
  intString = this.getUnscaledValue().toString_0();
  if (this.scale == 0) {
    return intString;
  }
  begin = this.getUnscaledValue().signum() < 0?2:1;
  end = length__I__devirtual$(intString);
  exponent = -this.scale + end - begin;
  result = new StringBuilder;
  result.append_9(intString);
  if (this.scale > 0 && exponent >= -6) {
    if (exponent >= 0) {
      result.insert_4(end - round_int(this.scale), 46);
    }
     else {
      result.insert_6(begin - 1, '0.');
      result.insert_7(begin + 1, CH_ZEROS, 0, -round_int(exponent) - 1);
    }
  }
   else {
    if (end - begin >= 1) {
      result.insert_4(begin, 46);
      end++;
    }
    result.insert_4(end, 69);
    if (exponent > 0) {
      result.insert_4(++end, 43);
    }
    result.insert_6(++end, toString_66(fromDouble_0(exponent)));
  }
  this.toStringImage = result.toString_0();
  return this.toStringImage;
}
;
_.unscaledValue = function unscaledValue_0(){
  return this.getUnscaledValue();
}
;
_.bitLength = 0;
_.hashCode_0 = 0;
_.precision = 0;
_.scale = 0;
_.smallValue = 0;
var BI_SCALED_BY_ZERO, CH_ZEROS, DOUBLE_FIVE_POW, DOUBLE_FIVE_POW_BIT_LENGTH, DOUBLE_TEN_POW, DOUBLE_TEN_POW_BIT_LENGTH, FIVE_POW, ONE_0, TEN, TEN_POW, ZERO_0, ZERO_SCALED_BY;
var Ljava_math_BigDecimal_2_classLit = createForClass('java.math', 'BigDecimal', 90, Ljava_lang_Number_2_classLit);
function $clinit_BigDecimal$NativeNumber(){
  $clinit_BigDecimal$NativeNumber = emptyMethod;
}

function $clinit_BigInteger(){
  $clinit_BigInteger = emptyMethod;
  var i;
  $clinit_Number();
  ONE_1 = new BigInteger_0(1, 1);
  TEN_0 = new BigInteger_0(1, 10);
  ZERO_1 = new BigInteger_0(0, 0);
  LESS = -1;
  MINUS_ONE = new BigInteger_0(-1, 1);
  SMALL_VALUES = stampJavaTypeInfo(getClassLiteralForArray(Ljava_math_BigInteger_2_classLit, 1), {4:1, 1:1, 5:1}, 48, 0, [ZERO_1, ONE_1, new BigInteger_0(1, 2), new BigInteger_0(1, 3), new BigInteger_0(1, 4), new BigInteger_0(1, 5), new BigInteger_0(1, 6), new BigInteger_0(1, 7), new BigInteger_0(1, 8), new BigInteger_0(1, 9), TEN_0]);
  serialVersionUID_5 = neg_0({l:263395, m:229723, h:471094});
  {
    TWO_POWS = initUnidimensionalArray(Ljava_math_BigInteger_2_classLit, {4:1, 1:1, 5:1}, 48, 32, 0, 1);
    for (i = 0; i < TWO_POWS.length; i++) {
      setCheck(TWO_POWS, i, valueOf_55(shl_0(1, i)));
    }
  }
}

function BigInteger(sign, val){
  Number_0.call(this);
  this.$init_836();
  this.sign = sign;
  if (val < 4294967296) {
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [toUnsignedInt(val)]);
  }
   else {
    this.numberLength = 2;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [toUnsignedInt(val % 4294967296), toUnsignedInt(val / 4294967296)]);
  }
}

function BigInteger_0(sign, value_0){
  $clinit_BigInteger();
  Number_0.call(this);
  this.$init_836();
  this.sign = sign;
  this.numberLength = 1;
  this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [value_0]);
}

function BigInteger_1(sign, numberLength, digits){
  $clinit_BigInteger();
  Number_0.call(this);
  this.$init_836();
  this.sign = sign;
  this.numberLength = numberLength;
  this.digits = digits;
}

function BigInteger_2(sign, val){
  Number_0.call(this);
  this.$init_836();
  this.sign = sign;
  if (eq(and_0(val, -4294967296), 0)) {
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [toInt_0(val)]);
  }
   else {
    this.numberLength = 2;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [toInt_0(val), toInt_0(shr_0(val, 32))]);
  }
}

function BigInteger_3(signum, digits){
  $clinit_BigInteger();
  Number_0.call(this);
  this.$init_836();
  if (digits.length == 0) {
    this.sign = 0;
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [0]);
  }
   else {
    this.sign = signum;
    this.numberLength = digits.length;
    this.digits = digits;
    this.cutOffLeadingZeroes();
  }
}

function getPowerOfTwo(exp_0){
  var bitN, intCount, resDigits;
  if (exp_0 < TWO_POWS.length) {
    return TWO_POWS[exp_0];
  }
  intCount = exp_0 >> 5;
  bitN = exp_0 & 31;
  resDigits = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, intCount + 1, 15, 1);
  resDigits[intCount] = 1 << bitN;
  return new BigInteger_1(1, intCount + 1, resDigits);
}

function toUnsignedInt(val){
  return val | 0;
}

function valueOf_54(val){
  $clinit_BigInteger();
  if (val < 0) {
    if (val != -1) {
      return new BigInteger(-1, -val);
    }
    return MINUS_ONE;
  }
   else if (val <= 10) {
    return SMALL_VALUES[round_int(val)];
  }
   else {
    return new BigInteger(1, val);
  }
}

function valueOf_55(val){
  $clinit_BigInteger();
  if (lt(val, 0)) {
    if (neq(val, fromInt_0(-1))) {
      return new BigInteger_2(-1, neg_0(val));
    }
    return MINUS_ONE;
  }
   else if (lte(val, 10)) {
    return SMALL_VALUES[toInt_0(val)];
  }
   else {
    return new BigInteger_2(1, val);
  }
}

defineClass(48, 111, {4:1, 8:1, 1:1, 48:1}, BigInteger, BigInteger_0, BigInteger_1, BigInteger_2, BigInteger_3);
_.$init_836 = function $init_836(){
  this.firstNonzeroDigit = -2;
  this.hashCode_0 = 0;
}
;
_.compareTo_0 = function compareTo_23(val){
  return this.compareTo_12(castTo(val, 48));
}
;
_.add_11 = function add_37(val){
  return add_38(this, val);
}
;
_.bitLength_0 = function bitLength_1(){
  return bitLength_2(this);
}
;
_.compareTo_12 = function compareTo_24(val){
  if (this.sign > val.sign) {
    return 1;
  }
  if (this.sign < val.sign) {
    return -1;
  }
  if (this.numberLength > val.numberLength) {
    return this.sign;
  }
  if (this.numberLength < val.numberLength) {
    return -val.sign;
  }
  return this.sign * compareArrays(this.digits, val.digits, this.numberLength);
}
;
_.cutOffLeadingZeroes = function cutOffLeadingZeroes(){
  while (this.numberLength > 0 && this.digits[--this.numberLength] == 0) {
  }
  if (this.digits[this.numberLength++] == 0) {
    this.sign = 0;
  }
}
;
_.divide = function divide(divisor){
  var cmp, divisorLen, divisorSign, resDigits, resLength, resSign, result, thisLen, thisSign, val;
  if (divisor.sign == 0) {
    throw toJs(new ArithmeticException('BigInteger divide by zero'));
  }
  divisorSign = divisor.sign;
  if (divisor.isOne()) {
    return divisor.sign > 0?this:this.negate_0();
  }
  thisSign = this.sign;
  thisLen = this.numberLength;
  divisorLen = divisor.numberLength;
  if (thisLen + divisorLen == 2) {
    val = div_1(and_0(fromInt_0(this.digits[0]), 4294967295), and_0(fromInt_0(divisor.digits[0]), 4294967295));
    if (thisSign != divisorSign) {
      val = neg_0(val);
    }
    return valueOf_55(val);
  }
  cmp = thisLen != divisorLen?thisLen > divisorLen?1:-1:compareArrays(this.digits, divisor.digits, thisLen);
  if (cmp == 0) {
    return thisSign == divisorSign?ONE_1:MINUS_ONE;
  }
  if (cmp == -1) {
    return ZERO_1;
  }
  resLength = thisLen - divisorLen + 1;
  resDigits = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, resLength, 15, 1);
  resSign = thisSign == divisorSign?1:-1;
  if (divisorLen == 1) {
    divideArrayByInt(resDigits, this.digits, thisLen, divisor.digits[0]);
  }
   else {
    divide_0(resDigits, resLength, this.digits, thisLen, divisor.digits, divisorLen);
  }
  result = new BigInteger_1(resSign, resLength, resDigits);
  result.cutOffLeadingZeroes();
  return result;
}
;
_.doubleValue = function doubleValue_5(){
  return parseDouble(this.toString_0());
}
;
_.equals_0 = function equals_29(x_0){
  var x1;
  if (maskUndefined(this) === maskUndefined(x_0)) {
    return true;
  }
  if (instanceOf(x_0, 48)) {
    x1 = castTo(x_0, 48);
    return this.sign == x1.sign && this.numberLength == x1.numberLength && this.equalsArrays(x1.digits);
  }
  return false;
}
;
_.equalsArrays = function equalsArrays(b){
  var i;
  for (i = this.numberLength - 1; i >= 0 && this.digits[i] == b[i]; i--) {
  }
  return i < 0;
}
;
_.getFirstNonzeroDigit = function getFirstNonzeroDigit(){
  var i;
  if (this.firstNonzeroDigit == -2) {
    if (this.sign == 0) {
      i = -1;
    }
     else {
      for (i = 0; this.digits[i] == 0; i++) {
      }
    }
    this.firstNonzeroDigit = i;
  }
  return this.firstNonzeroDigit;
}
;
_.hashCode_1 = function hashCode_35(){
  var i;
  if (this.hashCode_0 != 0) {
    return this.hashCode_0;
  }
  for (i = 0; i < this.digits.length; i++) {
    this.hashCode_0 = this.hashCode_0 * 33 + (this.digits[i] & -1);
  }
  this.hashCode_0 = this.hashCode_0 * this.sign;
  return this.hashCode_0;
}
;
_.isOne = function isOne(){
  return this.numberLength == 1 && this.digits[0] == 1;
}
;
_.longValue = function longValue_6(){
  var value_0;
  value_0 = this.numberLength > 1?or_0(shl_0(fromInt_0(this.digits[1]), 32), and_0(fromInt_0(this.digits[0]), 4294967295)):and_0(fromInt_0(this.digits[0]), 4294967295);
  return mul_0(fromInt_0(this.sign), value_0);
}
;
_.multiply_0 = function multiply_0(val){
  if (val.sign == 0) {
    return ZERO_1;
  }
  if (this.sign == 0) {
    return ZERO_1;
  }
  return multiply_1(this, val);
}
;
_.negate_0 = function negate_1(){
  return this.sign == 0?this:new BigInteger_1(-this.sign, this.numberLength, this.digits);
}
;
_.pow_0 = function pow_0(exp_0){
  var x_0;
  if (exp_0 < 0) {
    throw toJs(new ArithmeticException('Negative exponent'));
  }
  if (exp_0 == 0) {
    return ONE_1;
  }
   else if (exp_0 == 1 || this.equals_0(ONE_1) || this.equals_0(ZERO_1)) {
    return this;
  }
  if (!this.testBit(0)) {
    x_0 = 1;
    while (!this.testBit(x_0)) {
      x_0++;
    }
    return getPowerOfTwo(x_0 * exp_0).multiply_0(this.shiftRight(x_0).pow_0(exp_0));
  }
  return pow_1(this, exp_0);
}
;
_.shiftLeft = function shiftLeft(n){
  if (n == 0 || this.sign == 0) {
    return this;
  }
  return n > 0?shiftLeft_0(this, n):shiftRight_0(this, -n);
}
;
_.shiftRight = function shiftRight(n){
  if (n == 0 || this.sign == 0) {
    return this;
  }
  return n > 0?shiftRight_0(this, n):shiftLeft_0(this, -n);
}
;
_.signum = function signum_1(){
  return this.sign;
}
;
_.subtract = function subtract(val){
  return subtract_0(this, val);
}
;
_.testBit = function testBit(n){
  var digit, firstNonZeroDigit, intCount;
  if (n == 0) {
    return (this.digits[0] & 1) != 0;
  }
  if (n < 0) {
    throw toJs(new ArithmeticException('Negative bit address'));
  }
  intCount = n >> 5;
  if (intCount >= this.numberLength) {
    return this.sign < 0;
  }
  digit = this.digits[intCount];
  n = 1 << (n & 31);
  if (this.sign < 0) {
    firstNonZeroDigit = this.getFirstNonzeroDigit();
    if (intCount < firstNonZeroDigit) {
      return false;
    }
     else if (firstNonZeroDigit == intCount) {
      digit = -digit;
    }
     else {
      digit = ~digit;
    }
  }
  return (digit & n) != 0;
}
;
_.toString_0 = function toString_71(){
  return toDecimalScaledString_0(this, 0);
}
;
_.firstNonzeroDigit = 0;
_.hashCode_0 = 0;
_.numberLength = 0;
_.sign = 0;
var LESS = 0, MINUS_ONE, ONE_1, SMALL_VALUES, TEN_0, TWO_POWS, ZERO_1, serialVersionUID_5 = 0;
var Ljava_math_BigInteger_2_classLit = createForClass('java.math', 'BigInteger', 48, Ljava_lang_Number_2_classLit);
function $clinit_BitLevel(){
  $clinit_BitLevel = emptyMethod;
  $clinit_Object();
}

function bitLength_2(val){
  $clinit_BitLevel();
  var bLength, highDigit, i;
  if (val.sign == 0) {
    return 0;
  }
  bLength = val.numberLength << 5;
  highDigit = val.digits[val.numberLength - 1];
  if (val.sign < 0) {
    i = val.getFirstNonzeroDigit();
    if (i == val.numberLength - 1) {
      highDigit--;
      highDigit = ensureInt(highDigit);
    }
  }
  bLength -= numberOfLeadingZeros_0(highDigit);
  return bLength;
}

function shiftLeft_0(source, count){
  $clinit_BitLevel();
  var intCount, resDigits, resLength, result;
  intCount = count >> 5;
  count &= 31;
  resLength = source.numberLength + intCount + (count == 0?0:1);
  resDigits = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, resLength, 15, 1);
  shiftLeft_1(resDigits, source.digits, intCount, count);
  result = new BigInteger_1(source.sign, resLength, resDigits);
  result.cutOffLeadingZeroes();
  return result;
}

function shiftLeft_1(result, source, intCount, count){
  $clinit_BitLevel();
  var i, i0, rightShiftCount;
  if (count == 0) {
    arraycopy(source, 0, result, intCount, result.length - intCount);
  }
   else {
    rightShiftCount = 32 - count;
    result[result.length - 1] = 0;
    for (i0 = result.length - 1; i0 > intCount; i0--) {
      result[i0] |= source[i0 - intCount - 1] >>> rightShiftCount;
      result[i0 - 1] = source[i0 - intCount - 1] << count;
    }
  }
  for (i = 0; i < intCount; i++) {
    result[i] = 0;
  }
}

function shiftLeftOneBit(result, source, srcLen){
  $clinit_BitLevel();
  var carry, i, val;
  carry = 0;
  for (i = 0; i < srcLen; i++) {
    val = source[i];
    result[i] = val << 1 | carry;
    carry = val >>> 31;
  }
  if (carry != 0) {
    result[srcLen] = carry;
  }
}

function shiftRight_0(source, count){
  $clinit_BitLevel();
  var i, intCount, resDigits, resLength, result;
  intCount = count >> 5;
  count &= 31;
  if (intCount >= source.numberLength) {
    return source.sign < 0?($clinit_BigInteger() , MINUS_ONE):($clinit_BigInteger() , ZERO_1);
  }
  resLength = source.numberLength - intCount;
  resDigits = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, resLength + 1, 15, 1);
  shiftRight_1(resDigits, resLength, source.digits, intCount, count);
  if (source.sign < 0) {
    for (i = 0; i < intCount && source.digits[i] == 0; i++) {
    }
    if (i < intCount || count > 0 && source.digits[i] << 32 - count != 0) {
      for (i = 0; i < resLength && resDigits[i] == -1; i++) {
        resDigits[i] = 0;
      }
      if (i == resLength) {
        resLength++;
      }
      resDigits[i]++;
    }
  }
  result = new BigInteger_1(source.sign, resLength, resDigits);
  result.cutOffLeadingZeroes();
  return result;
}

function shiftRight_1(result, resultLen, source, intCount, count){
  $clinit_BitLevel();
  var allZero, i, leftShiftCount;
  allZero = true;
  for (i = 0; i < intCount; i++) {
    allZero = allZero & source[i] == 0;
  }
  if (count == 0) {
    arraycopy(source, intCount, result, 0, resultLen);
    i = resultLen;
  }
   else {
    leftShiftCount = 32 - count;
    allZero = allZero & source[i] << leftShiftCount == 0;
    for (i = 0; i < resultLen - 1; i++) {
      result[i] = source[i + intCount] >>> count | source[i + intCount + 1] << leftShiftCount;
    }
    result[i] = source[i + intCount] >>> count;
    i++;
  }
  return allZero;
}

function $clinit_Conversion(){
  $clinit_Conversion = emptyMethod;
  $clinit_Object();
  bigRadices = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [-2147483648, 1162261467, 1073741824, 1220703125, 362797056, 1977326743, 1073741824, 387420489, 1000000000, 214358881, 429981696, 815730721, 1475789056, 170859375, 268435456, 410338673, 612220032, 893871739, 1280000000, 1801088541, 113379904, 148035889, 191102976, 244140625, 308915776, 387420489, 481890304, 594823321, 729000000, 887503681, 1073741824, 1291467969, 1544804416, 1838265625, 60466176]);
  digitFitInInt = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [-1, -1, 31, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5]);
}

function divideLongByBillion(a){
  var aPos, bLong, bPos, quot, rem;
  if (gte_0(a, 0)) {
    bLong = 1000000000;
    quot = div_1(a, bLong);
    rem = mod_0(a, bLong);
  }
   else {
    aPos = shru_0(a, 1);
    bPos = shru_0(1000000000, 1);
    quot = div_1(aPos, bPos);
    rem = mod_0(aPos, bPos);
    rem = add_19(shl_0(rem, 1), and_0(a, 1));
  }
  return or_0(shl_0(rem, 32), and_0(quot, 4294967295));
}

function toDecimalScaledString(value_0, scale){
  $clinit_Conversion();
  var currentChar, endPoint, exponent, insertPoint, j, j0, negNumber, prev, resLengthInChars, result, result1, result10, startPoint, v;
  negNumber = lt(value_0, 0);
  if (negNumber) {
    value_0 = neg_0(value_0);
  }
  if (eq(value_0, 0)) {
    switch (scale) {
      case 0:
        return '0';
      case 1:
        return '0.0';
      case 2:
        return '0.00';
      case 3:
        return '0.000';
      case 4:
        return '0.0000';
      case 5:
        return '0.00000';
      case 6:
        return '0.000000';
      default:result10 = new StringBuilder;
        if (scale < 0) {
          result10.append_9('0E+');
        }
         else {
          result10.append_9('0E');
        }

        result10.append_9(scale == -2147483648?'2147483648':toString_64(-scale));
        return result10.toString_0();
    }
  }
  resLengthInChars = 18;
  result = initUnidimensionalArray(C_classLit, {4:1, 1:1}, 29, resLengthInChars + 1, 15, 1);
  currentChar = resLengthInChars;
  v = value_0;
  do {
    prev = v;
    v = div_1(v, 10);
    result[--currentChar] = narrow_char(toInt_0(add_19(48, sub_1(prev, mul_0(v, 10)))));
  }
   while (neq(v, 0));
  exponent = sub_1(sub_1(sub_1(fromInt_0(resLengthInChars), fromInt_0(currentChar)), fromInt_0(scale)), 1);
  if (scale == 0) {
    if (negNumber) {
      result[--currentChar] = 45;
    }
    return $create_3(result, currentChar, resLengthInChars - currentChar);
  }
  if (scale > 0 && gte_0(exponent, fromInt_0(-6))) {
    if (gte_0(exponent, 0)) {
      insertPoint = currentChar + toInt_0(exponent);
      for (j0 = resLengthInChars - 1; j0 >= insertPoint; j0--) {
        result[j0 + 1] = result[j0];
      }
      result[++insertPoint] = 46;
      if (negNumber) {
        result[--currentChar] = 45;
      }
      return $create_3(result, currentChar, resLengthInChars - currentChar + 1);
    }
    for (j = 2; lt(fromInt_0(j), add_19(neg_0(exponent), 1)); j++) {
      result[--currentChar] = 48;
    }
    result[--currentChar] = 46;
    result[--currentChar] = 48;
    if (negNumber) {
      result[--currentChar] = 45;
    }
    return $create_3(result, currentChar, resLengthInChars - currentChar);
  }
  startPoint = currentChar + 1;
  endPoint = resLengthInChars;
  result1 = new StringBuilder_0(16 + endPoint - startPoint);
  if (negNumber) {
    result1.append_4(45);
  }
  if (endPoint - startPoint >= 1) {
    result1.append_4(result[currentChar]);
    result1.append_4(46);
    result1.append_10(result, currentChar + 1, resLengthInChars - currentChar - 1);
  }
   else {
    result1.append_10(result, currentChar, resLengthInChars - currentChar);
  }
  result1.append_4(69);
  if (gt(exponent, 0)) {
    result1.append_4(43);
  }
  result1.append_9(toString_66(exponent));
  return result1.toString_0();
}

function toDecimalScaledString_0(val, scale){
  $clinit_Conversion();
  var currentChar, delta, digits, endPoint, exponent, highDigit, i, i1, insertPoint, j, j0, negNumber, numberLength, prev, previous, res, resDigit, resLengthInChars, result, result1, result10, result11, sign, startPoint, temp, temp1, tempLen, v;
  sign = val.sign;
  numberLength = val.numberLength;
  digits = val.digits;
  if (sign == 0) {
    switch (scale) {
      case 0:
        return '0';
      case 1:
        return '0.0';
      case 2:
        return '0.00';
      case 3:
        return '0.000';
      case 4:
        return '0.0000';
      case 5:
        return '0.00000';
      case 6:
        return '0.000000';
      default:result10 = new StringBuilder;
        if (scale < 0) {
          result10.append_9('0E+');
        }
         else {
          result10.append_9('0E');
        }

        result10.append_5(-scale);
        return result10.toString_0();
    }
  }
  resLengthInChars = numberLength * 10 + 1 + 7;
  result = initUnidimensionalArray(C_classLit, {4:1, 1:1}, 29, resLengthInChars + 1, 15, 1);
  currentChar = resLengthInChars;
  if (numberLength == 1) {
    highDigit = digits[0];
    if (highDigit < 0) {
      v = and_0(fromInt_0(highDigit), 4294967295);
      do {
        prev = v;
        v = div_1(v, 10);
        result[--currentChar] = narrow_char(48 + toInt_0(sub_1(prev, mul_0(v, 10))));
      }
       while (neq(v, 0));
    }
     else {
      v = highDigit;
      do {
        prev = v;
        v = narrow_int(v / 10);
        result[--currentChar] = narrow_char(48 + (prev - v * 10));
      }
       while (v != 0);
    }
  }
   else {
    temp = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, numberLength, 15, 1);
    tempLen = numberLength;
    arraycopy(digits, 0, temp, 0, tempLen);
    BIG_LOOP: while (true) {
      result11 = 0;
      for (i1 = tempLen - 1; i1 >= 0; i1--) {
        temp1 = add_19(shl_0(result11, 32), and_0(fromInt_0(temp[i1]), 4294967295));
        res = divideLongByBillion(temp1);
        temp[i1] = toInt_0(res);
        result11 = fromInt_0(toInt_0(shr_0(res, 32)));
      }
      resDigit = toInt_0(result11);
      previous = currentChar;
      do {
        result[--currentChar] = narrow_char(48 + resDigit % 10);
      }
       while ((resDigit = narrow_int(resDigit / 10)) != 0 && currentChar != 0);
      delta = 9 - previous + currentChar;
      for (i = 0; i < delta && currentChar > 0; i++) {
        result[--currentChar] = 48;
      }
      j = tempLen - 1;
      for (; temp[j] == 0; j--) {
        if (j == 0) {
          break BIG_LOOP;
        }
      }
      tempLen = j + 1;
    }
    while (result[currentChar] == 48) {
      currentChar++;
    }
  }
  negNumber = sign < 0;
  exponent = resLengthInChars - currentChar - scale - 1;
  if (scale == 0) {
    if (negNumber) {
      result[--currentChar] = 45;
    }
    return $create_3(result, currentChar, resLengthInChars - currentChar);
  }
  if (scale > 0 && exponent >= -6) {
    if (exponent >= 0) {
      insertPoint = currentChar + exponent;
      for (j0 = resLengthInChars - 1; j0 >= insertPoint; j0--) {
        result[j0 + 1] = result[j0];
      }
      result[++insertPoint] = 46;
      if (negNumber) {
        result[--currentChar] = 45;
      }
      return $create_3(result, currentChar, resLengthInChars - currentChar + 1);
    }
    for (j = 2; j < -exponent + 1; j++) {
      result[--currentChar] = 48;
    }
    result[--currentChar] = 46;
    result[--currentChar] = 48;
    if (negNumber) {
      result[--currentChar] = 45;
    }
    return $create_3(result, currentChar, resLengthInChars - currentChar);
  }
  startPoint = currentChar + 1;
  endPoint = resLengthInChars;
  result1 = new StringBuilder_0(16 + endPoint - startPoint);
  if (negNumber) {
    result1.append_4(45);
  }
  if (endPoint - startPoint >= 1) {
    result1.append_4(result[currentChar]);
    result1.append_4(46);
    result1.append_10(result, currentChar + 1, resLengthInChars - currentChar - 1);
  }
   else {
    result1.append_10(result, currentChar, resLengthInChars - currentChar);
  }
  result1.append_4(69);
  if (exponent > 0) {
    result1.append_4(43);
  }
  result1.append_9(toString_64(exponent));
  return result1.toString_0();
}

var bigRadices, digitFitInInt;
function $clinit_Division(){
  $clinit_Division = emptyMethod;
  $clinit_Object();
}

function divide_0(quot, quotLength, a, aLength, b, bLength){
  $clinit_Division();
  var borrow, carry, divisorShift, firstDivisorDigit, guessDigit, i, j, k, leftHand, longR, normA, normB, normBLength, product, rOverflowed, rem, res, rightHand;
  normA = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, aLength + 1, 15, 1);
  normB = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, bLength + 1, 15, 1);
  normBLength = bLength;
  divisorShift = numberOfLeadingZeros_0(b[bLength - 1]);
  if (divisorShift != 0) {
    shiftLeft_1(normB, b, 0, divisorShift);
    shiftLeft_1(normA, a, 0, divisorShift);
  }
   else {
    arraycopy(a, 0, normA, 0, aLength);
    arraycopy(b, 0, normB, 0, bLength);
  }
  firstDivisorDigit = normB[normBLength - 1];
  i = quotLength - 1;
  j = aLength;
  while (i >= 0) {
    guessDigit = 0;
    if (normA[j] == firstDivisorDigit) {
      guessDigit = -1;
    }
     else {
      product = add_19(shl_0(and_0(fromInt_0(normA[j]), 4294967295), 32), and_0(fromInt_0(normA[j - 1]), 4294967295));
      res = divideLongByInt(product, firstDivisorDigit);
      guessDigit = toInt_0(res);
      rem = toInt_0(shr_0(res, 32));
      if (guessDigit != 0) {
        leftHand = 0;
        rightHand = 0;
        rOverflowed = false;
        guessDigit++;
        do {
          guessDigit--;
          if (rOverflowed) {
            break;
          }
          leftHand = mul_0(and_0(fromInt_0(guessDigit), 4294967295), and_0(fromInt_0(normB[normBLength - 2]), 4294967295));
          rightHand = add_19(shl_0(fromInt_0(rem), 32), and_0(fromInt_0(normA[j - 2]), 4294967295));
          longR = add_19(and_0(fromInt_0(rem), 4294967295), and_0(fromInt_0(firstDivisorDigit), 4294967295));
          if (numberOfLeadingZeros_0(toInt_0(shru_0(longR, 32))) < 32) {
            rOverflowed = true;
          }
           else {
            rem = toInt_0(longR);
          }
        }
         while (gt(xor_0(leftHand, {l:0, m:0, h:524288}), xor_0(rightHand, {l:0, m:0, h:524288})));
      }
    }
    if (guessDigit != 0) {
      borrow = multiplyAndSubtract(normA, j - normBLength, normB, normBLength, guessDigit);
      if (borrow != 0) {
        guessDigit--;
        carry = 0;
        for (k = 0; k < normBLength; k++) {
          carry = add_19(carry, add_19(and_0(fromInt_0(normA[j - normBLength + k]), 4294967295), and_0(fromInt_0(normB[k]), 4294967295)));
          normA[j - normBLength + k] = toInt_0(carry);
          carry = shru_0(carry, 32);
        }
      }
    }
    if (jsNotEquals(quot, null)) {
      quot[i] = guessDigit;
    }
    j--;
    i--;
  }
  if (divisorShift != 0) {
    shiftRight_1(normB, normBLength, normA, 0, divisorShift);
    return normB;
  }
  arraycopy(normA, 0, normB, 0, bLength);
  return normA;
}

function divideArrayByInt(dest, src_0, srcLength, divisor){
  $clinit_Division();
  var aPos, bLong, bPos, i, quot, rem, temp;
  rem = 0;
  bLong = and_0(fromInt_0(divisor), 4294967295);
  for (i = srcLength - 1; i >= 0; i--) {
    temp = or_0(shl_0(rem, 32), and_0(fromInt_0(src_0[i]), 4294967295));
    if (gte_0(temp, 0)) {
      quot = div_1(temp, bLong);
      rem = mod_0(temp, bLong);
    }
     else {
      aPos = shru_0(temp, 1);
      bPos = fromInt_0(divisor >>> 1);
      quot = div_1(aPos, bPos);
      rem = mod_0(aPos, bPos);
      rem = add_19(shl_0(rem, 1), and_0(temp, 1));
      if ((divisor & 1) != 0) {
        if (lte(quot, rem)) {
          rem = sub_1(rem, quot);
        }
         else {
          if (lte(sub_1(quot, rem), bLong)) {
            rem = add_19(rem, sub_1(bLong, quot));
            quot = sub_1(quot, 1);
          }
           else {
            rem = add_19(rem, sub_1(shl_0(bLong, 1), quot));
            quot = sub_1(quot, 2);
          }
        }
      }
    }
    dest[i] = toInt_0(and_0(quot, 4294967295));
  }
  return toInt_0(rem);
}

function divideLongByInt(a, b){
  var aPos, bLong, bPos, quot, rem;
  bLong = and_0(fromInt_0(b), 4294967295);
  if (gte_0(a, 0)) {
    quot = div_1(a, bLong);
    rem = mod_0(a, bLong);
  }
   else {
    aPos = shru_0(a, 1);
    bPos = fromInt_0(b >>> 1);
    quot = div_1(aPos, bPos);
    rem = mod_0(aPos, bPos);
    rem = add_19(shl_0(rem, 1), and_0(a, 1));
    if ((b & 1) != 0) {
      if (lte(quot, rem)) {
        rem = sub_1(rem, quot);
      }
       else {
        if (lte(sub_1(quot, rem), bLong)) {
          rem = add_19(rem, sub_1(bLong, quot));
          quot = sub_1(quot, 1);
        }
         else {
          rem = add_19(rem, sub_1(shl_0(bLong, 1), quot));
          quot = sub_1(quot, 2);
        }
      }
    }
  }
  return or_0(shl_0(rem, 32), and_0(quot, 4294967295));
}

function multiplyAndSubtract(a, start_0, b, bLen, c){
  var carry0, carry1, i;
  carry0 = 0;
  carry1 = 0;
  for (i = 0; i < bLen; i++) {
    carry0 = unsignedMultAddAdd(b[i], c, toInt_0(carry0), 0);
    carry1 = add_19(sub_1(and_0(fromInt_0(a[start_0 + i]), 4294967295), and_0(carry0, 4294967295)), carry1);
    a[start_0 + i] = toInt_0(carry1);
    carry1 = shr_0(carry1, 32);
    carry0 = shru_0(carry0, 32);
  }
  carry1 = add_19(sub_1(and_0(fromInt_0(a[start_0 + bLen]), 4294967295), carry0), carry1);
  a[start_0 + bLen] = toInt_0(carry1);
  return toInt_0(shr_0(carry1, 32));
}

function $clinit_Elementary(){
  $clinit_Elementary = emptyMethod;
  $clinit_Object();
}

function add_38(op1, op2){
  $clinit_Elementary();
  var a, b, cmp, op1Len, op1Sign, op2Len, op2Sign, res, res0, resDigits, resSign, valueHi, valueLo;
  op1Sign = op1.sign;
  op2Sign = op2.sign;
  if (op1Sign == 0) {
    return op2;
  }
  if (op2Sign == 0) {
    return op1;
  }
  op1Len = op1.numberLength;
  op2Len = op2.numberLength;
  if (op1Len + op2Len == 2) {
    a = and_0(fromInt_0(op1.digits[0]), 4294967295);
    b = and_0(fromInt_0(op2.digits[0]), 4294967295);
    if (op1Sign == op2Sign) {
      res0 = add_19(a, b);
      valueLo = toInt_0(res0);
      valueHi = toInt_0(shru_0(res0, 32));
      return valueHi == 0?new BigInteger_0(op1Sign, valueLo):new BigInteger_1(op1Sign, 2, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [valueLo, valueHi]));
    }
    return valueOf_55(op1Sign < 0?sub_1(b, a):sub_1(a, b));
  }
   else if (op1Sign == op2Sign) {
    resSign = op1Sign;
    resDigits = op1Len >= op2Len?add_39(op1.digits, op1Len, op2.digits, op2Len):add_39(op2.digits, op2Len, op1.digits, op1Len);
  }
   else {
    cmp = op1Len != op2Len?op1Len > op2Len?1:-1:compareArrays(op1.digits, op2.digits, op1Len);
    if (cmp == 0) {
      return $clinit_BigInteger() , ZERO_1;
    }
    if (cmp == 1) {
      resSign = op1Sign;
      resDigits = subtract_1(op1.digits, op1Len, op2.digits, op2Len);
    }
     else {
      resSign = op2Sign;
      resDigits = subtract_1(op2.digits, op2Len, op1.digits, op1Len);
    }
  }
  res = new BigInteger_1(resSign, resDigits.length, resDigits);
  res.cutOffLeadingZeroes();
  return res;
}

function add_39(a, aSize, b, bSize){
  var res;
  res = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, aSize + 1, 15, 1);
  add_40(res, a, aSize, b, bSize);
  return res;
}

function add_40(res, a, aSize, b, bSize){
  var carry, i;
  carry = add_19(and_0(fromInt_0(a[0]), 4294967295), and_0(fromInt_0(b[0]), 4294967295));
  res[0] = toInt_0(carry);
  carry = shr_0(carry, 32);
  if (aSize >= bSize) {
    for (i = 1; i < bSize; i++) {
      carry = add_19(carry, add_19(and_0(fromInt_0(a[i]), 4294967295), and_0(fromInt_0(b[i]), 4294967295)));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
    for (; i < aSize; i++) {
      carry = add_19(carry, and_0(fromInt_0(a[i]), 4294967295));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
  }
   else {
    for (i = 1; i < aSize; i++) {
      carry = add_19(carry, add_19(and_0(fromInt_0(a[i]), 4294967295), and_0(fromInt_0(b[i]), 4294967295)));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
    for (; i < bSize; i++) {
      carry = add_19(carry, and_0(fromInt_0(b[i]), 4294967295));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
  }
  if (neq(carry, 0)) {
    res[i] = toInt_0(carry);
  }
}

function compareArrays(a, b, size_0){
  $clinit_Elementary();
  var i;
  for (i = size_0 - 1; i >= 0 && a[i] == b[i]; i--) {
  }
  return i < 0?0:lt(and_0(fromInt_0(a[i]), 4294967295), and_0(fromInt_0(b[i]), 4294967295))?-1:1;
}

function subtract_0(op1, op2){
  $clinit_Elementary();
  var a, b, cmp, op1Len, op1Sign, op2Len, op2Sign, res, resDigits, resSign;
  op1Sign = op1.sign;
  op2Sign = op2.sign;
  if (op2Sign == 0) {
    return op1;
  }
  if (op1Sign == 0) {
    return op2.negate_0();
  }
  op1Len = op1.numberLength;
  op2Len = op2.numberLength;
  if (op1Len + op2Len == 2) {
    a = and_0(fromInt_0(op1.digits[0]), 4294967295);
    b = and_0(fromInt_0(op2.digits[0]), 4294967295);
    if (op1Sign < 0) {
      a = neg_0(a);
    }
    if (op2Sign < 0) {
      b = neg_0(b);
    }
    return valueOf_55(sub_1(a, b));
  }
  cmp = op1Len != op2Len?op1Len > op2Len?1:-1:compareArrays(op1.digits, op2.digits, op1Len);
  if (cmp == -1) {
    resSign = -op2Sign;
    resDigits = op1Sign == op2Sign?subtract_1(op2.digits, op2Len, op1.digits, op1Len):add_39(op2.digits, op2Len, op1.digits, op1Len);
  }
   else {
    resSign = op1Sign;
    if (op1Sign == op2Sign) {
      if (cmp == 0) {
        return $clinit_BigInteger() , ZERO_1;
      }
      resDigits = subtract_1(op1.digits, op1Len, op2.digits, op2Len);
    }
     else {
      resDigits = add_39(op1.digits, op1Len, op2.digits, op2Len);
    }
  }
  res = new BigInteger_1(resSign, resDigits.length, resDigits);
  res.cutOffLeadingZeroes();
  return res;
}

function subtract_1(a, aSize, b, bSize){
  var res;
  res = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, aSize, 15, 1);
  subtract_2(res, a, aSize, b, bSize);
  return res;
}

function subtract_2(res, a, aSize, b, bSize){
  var borrow, i;
  borrow = 0;
  for (i = 0; i < bSize; i++) {
    borrow = add_19(borrow, sub_1(and_0(fromInt_0(a[i]), 4294967295), and_0(fromInt_0(b[i]), 4294967295)));
    res[i] = toInt_0(borrow);
    borrow = shr_0(borrow, 32);
  }
  for (; i < aSize; i++) {
    borrow = add_19(borrow, and_0(fromInt_0(a[i]), 4294967295));
    res[i] = toInt_0(borrow);
    borrow = shr_0(borrow, 32);
  }
}

function $clinit_Multiplication(){
  $clinit_Multiplication = emptyMethod;
  var fivePow, i;
  $clinit_Object();
  bigFivePows = initUnidimensionalArray(Ljava_math_BigInteger_2_classLit, {4:1, 1:1, 5:1}, 48, 32, 0, 1);
  bigTenPows = initUnidimensionalArray(Ljava_math_BigInteger_2_classLit, {4:1, 1:1, 5:1}, 48, 32, 0, 1);
  fivePows = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125]);
  tenPows = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
  {
    fivePow = 1;
    for (i = 0; i <= 18; i++) {
      setCheck(bigFivePows, i, valueOf_55(fivePow));
      setCheck(bigTenPows, i, valueOf_55(shl_0(fivePow, i)));
      fivePow = mul_0(fivePow, 5);
    }
    for (; i < bigTenPows.length; i++) {
      setCheck(bigFivePows, i, bigFivePows[i - 1].multiply_0(bigFivePows[1]));
      setCheck(bigTenPows, i, bigTenPows[i - 1].multiply_0(($clinit_BigInteger() , TEN_0)));
    }
  }
}

function karatsuba(op1, op2){
  var lower, lowerOp1, lowerOp2, middle, ndiv2, temp, upper, upperOp1, upperOp2;
  if (op2.numberLength > op1.numberLength) {
    temp = op1;
    op1 = op2;
    op2 = temp;
  }
  if (op2.numberLength < 63) {
    return multiplyPAP(op1, op2);
  }
  ndiv2 = (op1.numberLength & -2) << 4;
  upperOp1 = op1.shiftRight(ndiv2);
  upperOp2 = op2.shiftRight(ndiv2);
  lowerOp1 = op1.subtract(upperOp1.shiftLeft(ndiv2));
  lowerOp2 = op2.subtract(upperOp2.shiftLeft(ndiv2));
  upper = karatsuba(upperOp1, upperOp2);
  lower = karatsuba(lowerOp1, lowerOp2);
  middle = karatsuba(upperOp1.subtract(lowerOp1), lowerOp2.subtract(upperOp2));
  middle = middle.add_11(upper).add_11(lower);
  middle = middle.shiftLeft(ndiv2);
  upper = upper.shiftLeft(ndiv2 << 1);
  return upper.add_11(middle).add_11(lower);
}

function multArraysPAP(aDigits, aLen, bDigits, bLen, resDigits){
  if (aLen == 0 || bLen == 0) {
    return;
  }
  if (aLen == 1) {
    resDigits[bLen] = multiplyByInt(resDigits, bDigits, bLen, aDigits[0]);
  }
   else if (bLen == 1) {
    resDigits[aLen] = multiplyByInt(resDigits, aDigits, aLen, bDigits[0]);
  }
   else {
    multPAP(aDigits, bDigits, resDigits, aLen, bLen);
  }
}

function multPAP(a, b, t, aLen, bLen){
  var aI, carry, i, j;
  if (maskUndefined(a) === maskUndefined(b) && aLen == bLen) {
    square(a, aLen, t);
    return;
  }
  for (i = 0; i < aLen; i++) {
    carry = 0;
    aI = a[i];
    for (j = 0; j < bLen; j++) {
      carry = unsignedMultAddAdd(aI, b[j], t[i + j], toInt_0(carry));
      t[i + j] = toInt_0(carry);
      carry = shru_0(carry, 32);
    }
    t[i + bLen] = toInt_0(carry);
  }
}

function multiply_1(x_0, y_0){
  $clinit_Multiplication();
  return karatsuba(x_0, y_0);
}

function multiplyByInt(res, a, aSize, factor){
  var carry, i;
  carry = 0;
  for (i = 0; i < aSize; i++) {
    carry = unsignedMultAddAdd(a[i], factor, toInt_0(carry), 0);
    res[i] = toInt_0(carry);
    carry = shru_0(carry, 32);
  }
  return toInt_0(carry);
}

function multiplyPAP(a, b){
  var aDigits, aLen, bDigits, bLen, resDigits, resLength, resSign, result, val, valueHi, valueLo;
  aLen = a.numberLength;
  bLen = b.numberLength;
  resLength = aLen + bLen;
  resSign = a.sign != b.sign?-1:1;
  if (resLength == 2) {
    val = unsignedMultAddAdd(a.digits[0], b.digits[0], 0, 0);
    valueLo = toInt_0(val);
    valueHi = toInt_0(shru_0(val, 32));
    return valueHi == 0?new BigInteger_0(resSign, valueLo):new BigInteger_1(resSign, 2, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), {49:1, 4:1, 1:1}, 29, 15, [valueLo, valueHi]));
  }
  aDigits = a.digits;
  bDigits = b.digits;
  resDigits = initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, resLength, 15, 1);
  multArraysPAP(aDigits, aLen, bDigits, bLen, resDigits);
  result = new BigInteger_1(resSign, resLength, resDigits);
  result.cutOffLeadingZeroes();
  return result;
}

function pow_1(base, exponent){
  $clinit_Multiplication();
  var acc, res;
  res = ($clinit_BigInteger() , ONE_1);
  acc = base;
  for (; exponent > 1; exponent >>= 1) {
    if ((exponent & 1) != 0) {
      res = res.multiply_0(acc);
    }
    if (acc.numberLength == 1) {
      acc = acc.multiply_0(acc);
    }
     else {
      acc = new BigInteger_3(1, square(acc.digits, acc.numberLength, initUnidimensionalArray(I_classLit, {49:1, 4:1, 1:1}, 29, acc.numberLength << 1, 15, 1)));
    }
  }
  res = res.multiply_0(acc);
  return res;
}

function powerOf10(exp_0){
  $clinit_Multiplication();
  var intExp, longExp, powerOfFive, res;
  intExp = round_int(exp_0);
  if (exp_0 < bigTenPows.length) {
    return bigTenPows[intExp];
  }
   else if (exp_0 <= 50) {
    return ($clinit_BigInteger() , TEN_0).pow_0(intExp);
  }
   else if (exp_0 <= 1000) {
    return bigFivePows[1].pow_0(intExp).shiftLeft(intExp);
  }
  if (exp_0 > 1000000) {
    throw toJs(new ArithmeticException('power of ten too big'));
  }
  if (exp_0 <= 2147483647) {
    return bigFivePows[1].pow_0(intExp).shiftLeft(intExp);
  }
  powerOfFive = bigFivePows[1].pow_0(2147483647);
  res = powerOfFive;
  longExp = fromDouble_0(exp_0 - 2147483647);
  intExp = round_int(exp_0 % 2147483647);
  while (gt(longExp, 2147483647)) {
    res = res.multiply_0(powerOfFive);
    longExp = sub_1(longExp, 2147483647);
  }
  res = res.multiply_0(bigFivePows[1].pow_0(intExp));
  res = res.shiftLeft(2147483647);
  longExp = fromDouble_0(exp_0 - 2147483647);
  while (gt(longExp, 2147483647)) {
    res = res.shiftLeft(2147483647);
    longExp = sub_1(longExp, 2147483647);
  }
  res = res.shiftLeft(intExp);
  return res;
}

function square(a, aLen, res){
  var carry, i, i0, index_0, j;
  for (i0 = 0; i0 < aLen; i0++) {
    carry = 0;
    for (j = i0 + 1; j < aLen; j++) {
      carry = unsignedMultAddAdd(a[i0], a[j], res[i0 + j], toInt_0(carry));
      res[i0 + j] = toInt_0(carry);
      carry = shru_0(carry, 32);
    }
    res[i0 + aLen] = toInt_0(carry);
  }
  shiftLeftOneBit(res, res, aLen << 1);
  carry = 0;
  for (i = 0 , index_0 = 0; i < aLen; i++ , index_0++) {
    carry = unsignedMultAddAdd(a[i], a[i], res[index_0], toInt_0(carry));
    res[index_0] = toInt_0(carry);
    carry = shru_0(carry, 32);
    index_0++;
    carry = add_19(carry, and_0(fromInt_0(res[index_0]), 4294967295));
    res[index_0] = toInt_0(carry);
    carry = shru_0(carry, 32);
  }
  return res;
}

function unsignedMultAddAdd(a, b, c, d){
  $clinit_Multiplication();
  return add_19(add_19(mul_0(and_0(fromInt_0(a), 4294967295), and_0(fromInt_0(b), 4294967295)), and_0(fromInt_0(c), 4294967295)), and_0(fromInt_0(d), 4294967295));
}

var bigFivePows, bigTenPows, fivePows, tenPows;
function $clinit_Date_0(){
  $clinit_Date_0 = emptyMethod;
  $clinit_Date();
}

function Date_2(date){
  $clinit_Date_0();
  Date_1.call(this, date);
  this.$init_837();
}

defineClass(827, 30, {4:1, 8:1, 1:1, 30:1}, Date_2);
_.$init_837 = function $init_837(){
}
;
_.getHours_0 = function getHours_1(){
  throw toJs(new IllegalArgumentException);
}
;
_.getMinutes_0 = function getMinutes_1(){
  throw toJs(new IllegalArgumentException);
}
;
_.getSeconds_0 = function getSeconds_1(){
  throw toJs(new IllegalArgumentException);
}
;
_.toString_0 = function toString_72(){
  return valueOf_45(1900 + this.getYear_0()) + '-' + padTwo(this.getMonth_0() + 1) + '-' + padTwo(this.getDate_1());
}
;
var Ljava_sql_Date_2_classLit = createForClass('java.sql', 'Date', 827, Ljava_util_Date_2_classLit);
function $clinit_Time(){
  $clinit_Time = emptyMethod;
  $clinit_Date();
}

function Time(time){
  $clinit_Time();
  Date_1.call(this, time);
  this.$init_838();
}

defineClass(828, 30, {4:1, 8:1, 1:1, 30:1}, Time);
_.$init_838 = function $init_838(){
}
;
_.getDate_1 = function getDate_2(){
  throw toJs(new IllegalArgumentException);
}
;
_.getDay_0 = function getDay_0(){
  throw toJs(new IllegalArgumentException);
}
;
_.getMonth_0 = function getMonth_1(){
  throw toJs(new IllegalArgumentException);
}
;
_.getYear_0 = function getYear_1(){
  throw toJs(new IllegalArgumentException);
}
;
_.toString_0 = function toString_73(){
  return padTwo(this.getHours_0()) + ':' + padTwo(this.getMinutes_0()) + ':' + padTwo(this.getSeconds_0());
}
;
var Ljava_sql_Time_2_classLit = createForClass('java.sql', 'Time', 828, Ljava_util_Date_2_classLit);
function $clinit_Timestamp(){
  $clinit_Timestamp = emptyMethod;
  $clinit_Date();
}

function Timestamp(time){
  $clinit_Timestamp();
  Date_1.call(this, time);
  this.$init_839();
  this.nanos = toInt_0(mod_0(time, 1000)) * 1000000;
}

function padNine(value_0){
  var asString, toReturn;
  toReturn = new StringBuilder_1('000000000');
  if (!(toReturn.length_0() == 9)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  asString = valueOf_45(value_0);
  toReturn = toReturn.replace_1(9 - length__I__devirtual$(asString), 9, asString);
  if (!(toReturn.length_0() == 9)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return toReturn.toString_0();
}

defineClass(202, 30, {4:1, 8:1, 1:1, 202:1, 30:1}, Timestamp);
_.$init_839 = function $init_839(){
}
;
_.compareTo_13 = function compareTo_25(o){
  var cmp;
  cmp = compare_8(this.getTime_1(), o.getTime_1());
  return cmp == 0?compare_7(this.getNanos(), o.getNanos()):cmp;
}
;
_.compareTo_3 = function compareTo_26(o){
  if (instanceOf(o, 202)) {
    return this.compareTo_13(castTo(o, 202));
  }
   else {
    return this.compareTo_13(new Timestamp(o.getTime_1()));
  }
}
;
_.equals_0 = function equals_30(ts){
  return instanceOf(ts, 202) && this.equals_4(castTo(ts, 202));
}
;
_.equals_4 = function equals_31(ts){
  return isNotNull(ts) && eq(this.getTime_1(), ts.getTime_1()) && this.getNanos() == ts.getNanos();
}
;
_.getNanos = function getNanos(){
  return this.nanos;
}
;
_.getTime_1 = function getTime_1(){
  return getClassPrototype(30).getTime_1.call(this);
}
;
_.hashCode_1 = function hashCode_36(){
  return getClassPrototype(30).hashCode_1.call(this);
}
;
_.setNanos = function setNanos(n){
  if (n < 0 || n > 999999999) {
    throw toJs(new IllegalArgumentException_0('nanos out of range ' + n));
  }
  this.nanos = n;
  getClassPrototype(30).setTime_0.call(this, add_19(mul_0(div_1(this.getTime_1(), 1000), 1000), fromInt_0(narrow_int(this.nanos / 1000000))));
}
;
_.setTime_0 = function setTime_0(time){
  getClassPrototype(30).setTime_0.call(this, time);
  this.nanos = toInt_0(mod_0(time, 1000)) * 1000000;
}
;
_.toString_0 = function toString_74(){
  return valueOf_45(1900 + this.getYear_0()) + '-' + padTwo(1 + this.getMonth_0()) + '-' + padTwo(this.getDate_1()) + ' ' + padTwo(this.getHours_0()) + ':' + padTwo(this.getMinutes_0()) + ':' + padTwo(this.getSeconds_0()) + '.' + padNine(this.getNanos());
}
;
_.nanos = 0;
var Ljava_sql_Timestamp_2_classLit = createForClass('java.sql', 'Timestamp', 202, Ljava_util_Date_2_classLit);
function $clinit_ParseException(){
  $clinit_ParseException = emptyMethod;
  $clinit_Exception();
}

function ParseException(s, errorOffset){
  $clinit_ParseException();
  Exception_1.call(this, s);
  this.$init_840();
  this.errorOffset = errorOffset;
}

defineClass(344, 25, {4:1, 25:1, 1:1, 24:1, 344:1}, ParseException);
_.$init_840 = function $init_840(){
}
;
_.errorOffset = 0;
var Ljava_text_ParseException_2_classLit = createForClass('java.text', 'ParseException', 344, Ljava_lang_Exception_2_classLit);
function $clinit_Set(){
  $clinit_Set = emptyMethod;
}

var Ljava_util_Set_2_classLit = createForInterface('java.util', 'Set');
function $clinit_AbstractSet(){
  $clinit_AbstractSet = emptyMethod;
  $clinit_AbstractCollection();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_Set();
}

function AbstractSet(){
  $clinit_AbstractSet();
  AbstractCollection.call(this);
  this.$init_841();
}

defineClass(135, 325, {1:1, 47:1, 53:1});
_.$init_841 = function $init_841(){
}
;
_.equals_0 = function equals_32(o){
  var other;
  if (maskUndefined(o) === maskUndefined(this)) {
    return true;
  }
  if (!instanceOf(o, 53)) {
    return false;
  }
  other = castTo(o, 53);
  if (other.size_1() != this.size_1()) {
    return false;
  }
  return this.containsAll(other);
}
;
_.hashCode_1 = function hashCode_37(){
  return hashCode_41(this);
}
;
_.removeAll = function removeAll_1(c){
  var iter, o, o$iterator, size_0;
  checkNotNull(c);
  size_0 = this.size_1();
  if (size_0 < c.size_1()) {
    for (iter = this.iterator_0(); iter.hasNext_0();) {
      o = iter.next_1();
      if (c.contains_0(o)) {
        iter.remove_3();
      }
    }
  }
   else {
    for (o$iterator = c.iterator_0(); o$iterator.hasNext_0();) {
      o = o$iterator.next_1();
      this.remove_1(o);
    }
  }
  return size_0 != this.size_1();
}
;
var Ljava_util_AbstractSet_2_classLit = createForClass('java.util', 'AbstractSet', 135, Ljava_util_AbstractCollection_2_classLit);
function $clinit_AbstractHashMap$EntrySet(){
  $clinit_AbstractHashMap$EntrySet = emptyMethod;
  $clinit_AbstractSet();
}

function AbstractHashMap$EntrySet(this$0){
  $clinit_AbstractHashMap$EntrySet();
  this.this$01 = this$0;
  AbstractSet.call(this);
  this.$init_842();
}

defineClass(573, 135, {1:1, 47:1, 53:1}, AbstractHashMap$EntrySet);
_.$init_842 = function $init_842(){
}
;
_.clear_0 = function clear_17(){
  this.this$01.clear_0();
}
;
_.contains_0 = function contains_2(o){
  if (instanceOf(o, 39)) {
    return this.this$01.containsEntry(castTo(o, 39));
  }
  return false;
}
;
_.iterator_0 = function iterator_13(){
  return new AbstractHashMap$EntrySetIterator(this.this$01);
}
;
_.remove_1 = function remove_31(entry){
  var key;
  if (this.contains_0(entry)) {
    key = castTo(entry, 39).getKey();
    this.this$01.remove_4(key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_7(){
  return this.this$01.size_1();
}
;
var Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util', 'AbstractHashMap/EntrySet', 573, Ljava_util_AbstractSet_2_classLit);
function $clinit_AbstractHashMap$EntrySetIterator(){
  $clinit_AbstractHashMap$EntrySetIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function AbstractHashMap$EntrySetIterator(this$0){
  $clinit_AbstractHashMap$EntrySetIterator();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_843();
  recordLastKnownStructure(this$0, this);
}

defineClass(574, 1, {1:1, 63:1}, AbstractHashMap$EntrySetIterator);
_.$init_843 = function $init_843(){
  this.stringMapEntries = this.this$01.stringMap.iterator_0();
  this.current = this.stringMapEntries;
  this.hasNext = this.computeHasNext();
}
;
_.next_1 = function next_9(){
  return this.next_3();
}
;
_.computeHasNext = function computeHasNext(){
  if (this.current.hasNext_0()) {
    return true;
  }
  if (jsNotEquals(this.current, this.stringMapEntries)) {
    return false;
  }
  this.current = this.this$01.hashCodeMap.iterator_0();
  return this.current.hasNext_0();
}
;
_.hasNext_0 = function hasNext_4(){
  return this.hasNext;
}
;
_.next_3 = function next_10(){
  var rv;
  checkStructuralChange(this.this$01, this);
  checkElement(this.hasNext_0());
  this.last = this.current;
  rv = castTo(this.current.next_1(), 39);
  this.hasNext = this.computeHasNext();
  return rv;
}
;
_.remove_3 = function remove_32(){
  checkState(isNotNull(this.last));
  checkStructuralChange(this.this$01, this);
  this.last.remove_3();
  this.last = null;
  this.hasNext = this.computeHasNext();
  recordLastKnownStructure(this.this$01, this);
}
;
_.hasNext = false;
var Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util', 'AbstractHashMap/EntrySetIterator', 574, Ljava_lang_Object_2_classLit);
function $clinit_AbstractList$IteratorImpl(){
  $clinit_AbstractList$IteratorImpl = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function AbstractList$IteratorImpl(this$0){
  $clinit_AbstractList$IteratorImpl();
  this.this$01_0 = this$0;
  Object_0.call(this);
  this.$init_844();
}

defineClass(327, 1, {1:1, 63:1}, AbstractList$IteratorImpl);
_.$init_844 = function $init_844(){
  this.i = 0;
  this.last = -1;
}
;
_.hasNext_0 = function hasNext_5(){
  return this.i < this.this$01_0.size_1();
}
;
_.next_1 = function next_11(){
  checkElement(this.hasNext_0());
  return this.this$01_0.get_0(this.last = this.i++);
}
;
_.remove_3 = function remove_33(){
  checkState(this.last != -1);
  this.this$01_0.remove_2(this.last);
  this.i = this.last;
  this.last = -1;
}
;
_.i = 0;
_.last = 0;
var Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util', 'AbstractList/IteratorImpl', 327, Ljava_lang_Object_2_classLit);
function $clinit_ListIterator(){
  $clinit_ListIterator = emptyMethod;
}

var Ljava_util_ListIterator_2_classLit = createForInterface('java.util', 'ListIterator');
function $clinit_AbstractList$ListIteratorImpl(){
  $clinit_AbstractList$ListIteratorImpl = emptyMethod;
  $clinit_AbstractList$IteratorImpl();
  $clinit_Iterator();
}

function AbstractList$ListIteratorImpl(this$0, start_0){
  $clinit_AbstractList$ListIteratorImpl();
  this.this$01 = this$0;
  AbstractList$IteratorImpl.call(this, this$0);
  this.$init_845();
  checkPositionIndex(start_0, this$0.size_1());
  this.i = start_0;
}

defineClass(606, 327, {1:1, 63:1}, AbstractList$ListIteratorImpl);
_.$init_845 = function $init_845(){
}
;
_.remove_3 = function remove_34(){
  getClassPrototype(327).remove_3.call(this);
}
;
_.add_12 = function add_41(o){
  this.this$01.add_6(this.i, o);
  this.i++;
  this.last = -1;
}
;
_.hasPrevious = function hasPrevious(){
  return this.i > 0;
}
;
_.previous = function previous_0(){
  checkElement(this.hasPrevious());
  return this.this$01.get_0(this.last = --this.i);
}
;
_.set_5 = function set_8(o){
  checkState(this.last != -1);
  this.this$01.set_1(this.last, o);
}
;
var Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util', 'AbstractList/ListIteratorImpl', 606, Ljava_util_AbstractList$IteratorImpl_2_classLit);
function $clinit_AbstractMap$1(){
  $clinit_AbstractMap$1 = emptyMethod;
  $clinit_AbstractSet();
}

function AbstractMap$1(this$0){
  $clinit_AbstractMap$1();
  this.this$01 = this$0;
  AbstractSet.call(this);
  this.$init_846();
}

defineClass(576, 135, {1:1, 47:1, 53:1}, AbstractMap$1);
_.$init_846 = function $init_846(){
}
;
_.clear_0 = function clear_18(){
  this.this$01.clear_0();
}
;
_.contains_0 = function contains_3(key){
  return this.this$01.containsKey(key);
}
;
_.iterator_0 = function iterator_14(){
  var outerIter;
  outerIter = this.this$01.entrySet().iterator_0();
  return new AbstractMap$1$1(this, outerIter);
}
;
_.remove_1 = function remove_35(key){
  if (this.this$01.containsKey(key)) {
    this.this$01.remove_4(key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_8(){
  return this.this$01.size_1();
}
;
var Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util', 'AbstractMap/1', 576, Ljava_util_AbstractSet_2_classLit);
function $clinit_AbstractMap$1$1(){
  $clinit_AbstractMap$1$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function AbstractMap$1$1(this$1, val$outerIter){
  $clinit_AbstractMap$1$1();
  this.this$11 = this$1;
  this.val$outerIter2 = val$outerIter;
  Object_0.call(this);
  this.$init_847();
}

defineClass(577, 1, {1:1, 63:1}, AbstractMap$1$1);
_.$init_847 = function $init_847(){
}
;
_.hasNext_0 = function hasNext_6(){
  return this.val$outerIter2.hasNext_0();
}
;
_.next_1 = function next_12(){
  var entry;
  entry = castTo(this.val$outerIter2.next_1(), 39);
  return entry.getKey();
}
;
_.remove_3 = function remove_36(){
  this.val$outerIter2.remove_3();
}
;
var Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util', 'AbstractMap/1/1', 577, Ljava_lang_Object_2_classLit);
function $clinit_AbstractMap$2(){
  $clinit_AbstractMap$2 = emptyMethod;
  $clinit_AbstractCollection();
}

function AbstractMap$2(this$0){
  $clinit_AbstractMap$2();
  this.this$01 = this$0;
  AbstractCollection.call(this);
  this.$init_848();
}

defineClass(578, 325, {1:1, 47:1}, AbstractMap$2);
_.$init_848 = function $init_848(){
}
;
_.clear_0 = function clear_19(){
  this.this$01.clear_0();
}
;
_.contains_0 = function contains_4(value_0){
  return this.this$01.containsValue(value_0);
}
;
_.iterator_0 = function iterator_15(){
  var outerIter;
  outerIter = this.this$01.entrySet().iterator_0();
  return new AbstractMap$2$1(this, outerIter);
}
;
_.size_1 = function size_9(){
  return this.this$01.size_1();
}
;
var Ljava_util_AbstractMap$2_2_classLit = createForClass('java.util', 'AbstractMap/2', 578, Ljava_util_AbstractCollection_2_classLit);
function $clinit_AbstractMap$2$1(){
  $clinit_AbstractMap$2$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function AbstractMap$2$1(this$1, val$outerIter){
  $clinit_AbstractMap$2$1();
  this.this$11 = this$1;
  this.val$outerIter2 = val$outerIter;
  Object_0.call(this);
  this.$init_849();
}

defineClass(579, 1, {1:1, 63:1}, AbstractMap$2$1);
_.$init_849 = function $init_849(){
}
;
_.hasNext_0 = function hasNext_7(){
  return this.val$outerIter2.hasNext_0();
}
;
_.next_1 = function next_13(){
  var entry;
  entry = castTo(this.val$outerIter2.next_1(), 39);
  return entry.getValue_0();
}
;
_.remove_3 = function remove_37(){
  this.val$outerIter2.remove_3();
}
;
var Ljava_util_AbstractMap$2$1_2_classLit = createForClass('java.util', 'AbstractMap/2/1', 579, Ljava_lang_Object_2_classLit);
function $clinit_Map$Entry(){
  $clinit_Map$Entry = emptyMethod;
}

var Ljava_util_Map$Entry_2_classLit = createForInterface('java.util', 'Map/Entry');
function $clinit_AbstractMap$AbstractEntry(){
  $clinit_AbstractMap$AbstractEntry = emptyMethod;
  $clinit_Object();
}

function AbstractMap$AbstractEntry(key, value_0){
  $clinit_AbstractMap$AbstractEntry();
  Object_0.call(this);
  this.$init_850();
  this.key = key;
  this.value_0 = value_0;
}

defineClass(575, 1, {1:1, 39:1});
_.$init_850 = function $init_850(){
}
;
_.equals_0 = function equals_33(other){
  var entry;
  if (!instanceOf(other, 39)) {
    return false;
  }
  entry = castTo(other, 39);
  return equals_40(this.key, entry.getKey()) && equals_40(this.value_0, entry.getValue_0());
}
;
_.getKey = function getKey(){
  return this.key;
}
;
_.getValue_0 = function getValue_7(){
  return this.value_0;
}
;
_.hashCode_1 = function hashCode_38(){
  return hashCode_45(this.key) ^ hashCode_45(this.value_0);
}
;
_.setValue_6 = function setValue_6(value_0){
  var oldValue;
  oldValue = this.value_0;
  this.value_0 = value_0;
  return oldValue;
}
;
_.toString_0 = function toString_75(){
  return this.key + '=' + this.value_0;
}
;
var Ljava_util_AbstractMap$AbstractEntry_2_classLit = createForClass('java.util', 'AbstractMap/AbstractEntry', 575, Ljava_lang_Object_2_classLit);
function $clinit_AbstractMap$SimpleEntry(){
  $clinit_AbstractMap$SimpleEntry = emptyMethod;
  $clinit_AbstractMap$AbstractEntry();
}

function AbstractMap$SimpleEntry(key, value_0){
  $clinit_AbstractMap$SimpleEntry();
  AbstractMap$AbstractEntry.call(this, key, value_0);
  this.$init_851();
}

defineClass(268, 575, {1:1, 39:1}, AbstractMap$SimpleEntry);
_.$init_851 = function $init_851(){
}
;
var Ljava_util_AbstractMap$SimpleEntry_2_classLit = createForClass('java.util', 'AbstractMap/SimpleEntry', 268, Ljava_util_AbstractMap$AbstractEntry_2_classLit);
function $clinit_AbstractMapEntry(){
  $clinit_AbstractMapEntry = emptyMethod;
  $clinit_Object();
}

function AbstractMapEntry(){
  $clinit_AbstractMapEntry();
  Object_0.call(this);
  this.$init_852();
}

defineClass(388, 1, {1:1, 39:1});
_.$init_852 = function $init_852(){
}
;
_.equals_0 = function equals_34(other){
  var entry;
  if (!instanceOf(other, 39)) {
    return false;
  }
  entry = castTo(other, 39);
  return equals_40(this.getKey(), entry.getKey()) && equals_40(this.getValue_0(), entry.getValue_0());
}
;
_.hashCode_1 = function hashCode_39(){
  return hashCode_45(this.getKey()) ^ hashCode_45(this.getValue_0());
}
;
_.toString_0 = function toString_76(){
  return this.getKey() + '=' + this.getValue_0();
}
;
var Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util', 'AbstractMapEntry', 388, Ljava_lang_Object_2_classLit);
function $clinit_SortedMap(){
  $clinit_SortedMap = emptyMethod;
}

var Ljava_util_SortedMap_2_classLit = createForInterface('java.util', 'SortedMap');
function $clinit_NavigableMap(){
  $clinit_NavigableMap = emptyMethod;
}

var Ljava_util_NavigableMap_2_classLit = createForInterface('java.util', 'NavigableMap');
function $clinit_AbstractNavigableMap(){
  $clinit_AbstractNavigableMap = emptyMethod;
  $clinit_AbstractMap();
  $clinit_Map();
}

function AbstractNavigableMap(){
  $clinit_AbstractNavigableMap();
  AbstractMap.call(this);
  this.$init_853();
}

defineClass(836, 231, {1:1, 82:1});
_.$init_853 = function $init_853(){
}
;
_.containsEntry = function containsEntry_0(entry){
  var key, lookupEntry;
  key = entry.getKey();
  lookupEntry = this.getEntry(key);
  return isNotNull(lookupEntry) && equals_40(lookupEntry.getValue_0(), entry.getValue_0());
}
;
_.containsKey = function containsKey_1(k){
  var key;
  key = k;
  return isNotNull(this.getEntry(key));
}
;
_.entrySet = function entrySet_1(){
  return new AbstractNavigableMap$EntrySet(this);
}
;
_.get_1 = function get_2669(k){
  var key;
  key = k;
  return getEntryValueOrNull(this.getEntry(key));
}
;
_.keySet_0 = function keySet_0(){
  return this.navigableKeySet();
}
;
_.navigableKeySet = function navigableKeySet(){
  return new AbstractNavigableMap$NavigableKeySet(this);
}
;
var Ljava_util_AbstractNavigableMap_2_classLit = createForClass('java.util', 'AbstractNavigableMap', 836, Ljava_util_AbstractMap_2_classLit);
function $clinit_AbstractNavigableMap$EntrySet(){
  $clinit_AbstractNavigableMap$EntrySet = emptyMethod;
  $clinit_AbstractSet();
}

function AbstractNavigableMap$EntrySet(this$0){
  $clinit_AbstractNavigableMap$EntrySet();
  this.this$01_0 = this$0;
  AbstractSet.call(this);
  this.$init_854();
}

defineClass(419, 135, {1:1, 47:1, 53:1}, AbstractNavigableMap$EntrySet);
_.$init_854 = function $init_854(){
}
;
_.contains_0 = function contains_5(o){
  return instanceOf(o, 39) && this.this$01_0.containsEntry(castTo(o, 39));
}
;
_.iterator_0 = function iterator_16(){
  return this.this$01_0.entryIterator();
}
;
_.remove_1 = function remove_38(o){
  var entry;
  if (instanceOf(o, 39)) {
    entry = castTo(o, 39);
    return this.this$01_0.removeEntry(entry);
  }
  return false;
}
;
_.size_1 = function size_10(){
  return this.this$01_0.size_1();
}
;
var Ljava_util_AbstractNavigableMap$EntrySet_2_classLit = createForClass('java.util', 'AbstractNavigableMap/EntrySet', 419, Ljava_util_AbstractSet_2_classLit);
function $clinit_SortedSet(){
  $clinit_SortedSet = emptyMethod;
}

var Ljava_util_SortedSet_2_classLit = createForInterface('java.util', 'SortedSet');
function $clinit_NavigableSet(){
  $clinit_NavigableSet = emptyMethod;
}

var Ljava_util_NavigableSet_2_classLit = createForInterface('java.util', 'NavigableSet');
function $clinit_AbstractNavigableMap$NavigableKeySet(){
  $clinit_AbstractNavigableMap$NavigableKeySet = emptyMethod;
  $clinit_AbstractSet();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_Set();
  $clinit_SortedSet();
}

function AbstractNavigableMap$NavigableKeySet(map_0){
  $clinit_AbstractNavigableMap$NavigableKeySet();
  AbstractSet.call(this);
  this.$init_855();
  this.map_0 = map_0;
}

defineClass(841, 135, {1:1, 47:1, 53:1}, AbstractNavigableMap$NavigableKeySet);
_.$init_855 = function $init_855(){
}
;
_.clear_0 = function clear_20(){
  this.map_0.clear_0();
}
;
_.contains_0 = function contains_6(o){
  return this.map_0.containsKey(o);
}
;
_.iterator_0 = function iterator_17(){
  var entryIterator;
  entryIterator = this.map_0.entrySet().iterator_0();
  return new AbstractNavigableMap$NavigableKeySet$1(this, entryIterator);
}
;
_.remove_1 = function remove_39(o){
  if (this.map_0.containsKey(o)) {
    this.map_0.remove_4(o);
    return true;
  }
  return false;
}
;
_.size_1 = function size_11(){
  return this.map_0.size_1();
}
;
var Ljava_util_AbstractNavigableMap$NavigableKeySet_2_classLit = createForClass('java.util', 'AbstractNavigableMap/NavigableKeySet', 841, Ljava_util_AbstractSet_2_classLit);
function $clinit_AbstractNavigableMap$NavigableKeySet$1(){
  $clinit_AbstractNavigableMap$NavigableKeySet$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function AbstractNavigableMap$NavigableKeySet$1(this$1, val$entryIterator){
  $clinit_AbstractNavigableMap$NavigableKeySet$1();
  this.this$11 = this$1;
  this.val$entryIterator2 = val$entryIterator;
  Object_0.call(this);
  this.$init_856();
}

defineClass(842, 1, {1:1, 63:1}, AbstractNavigableMap$NavigableKeySet$1);
_.$init_856 = function $init_856(){
}
;
_.hasNext_0 = function hasNext_8(){
  return this.val$entryIterator2.hasNext_0();
}
;
_.next_1 = function next_14(){
  var entry;
  entry = castTo(this.val$entryIterator2.next_1(), 39);
  return entry.getKey();
}
;
_.remove_3 = function remove_40(){
  this.val$entryIterator2.remove_3();
}
;
var Ljava_util_AbstractNavigableMap$NavigableKeySet$1_2_classLit = createForClass('java.util', 'AbstractNavigableMap/NavigableKeySet/1', 842, Ljava_lang_Object_2_classLit);
function $clinit_Queue(){
  $clinit_Queue = emptyMethod;
}

var Ljava_util_Queue_2_classLit = createForInterface('java.util', 'Queue');
function $clinit_AbstractSequentialList(){
  $clinit_AbstractSequentialList = emptyMethod;
  $clinit_AbstractList();
}

function AbstractSequentialList(){
  $clinit_AbstractSequentialList();
  AbstractList.call(this);
  this.$init_857();
}

defineClass(711, 192, {1:1, 47:1, 38:1});
_.$init_857 = function $init_857(){
}
;
_.add_6 = function add_42(index_0, element){
  var iter;
  iter = this.listIterator_0(index_0);
  iter.add_12(element);
}
;
_.get_0 = function get_2670(index_0){
  var e, iter;
  iter = this.listIterator_0(index_0);
  try {
    return iter.next_1();
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 125)) {
      e = $e0;
      throw toJs(new IndexOutOfBoundsException_0("Can't get element " + index_0));
    }
     else 
      throw toJs($e0);
  }
}
;
_.iterator_0 = function iterator_18(){
  return this.listIterator();
}
;
_.remove_2 = function remove_41(index_0){
  var e, iter, old;
  iter = this.listIterator_0(index_0);
  try {
    old = iter.next_1();
    iter.remove_3();
    return old;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 125)) {
      e = $e0;
      throw toJs(new IndexOutOfBoundsException_0("Can't remove element " + index_0));
    }
     else 
      throw toJs($e0);
  }
}
;
_.set_1 = function set_9(index_0, element){
  var e, iter, old;
  iter = this.listIterator_0(index_0);
  try {
    old = iter.next_1();
    iter.set_5(element);
    return old;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 125)) {
      e = $e0;
      throw toJs(new IndexOutOfBoundsException_0("Can't set element " + index_0));
    }
     else 
      throw toJs($e0);
  }
}
;
var Ljava_util_AbstractSequentialList_2_classLit = createForClass('java.util', 'AbstractSequentialList', 711, Ljava_util_AbstractList_2_classLit);
function $clinit_ArrayList$1(){
  $clinit_ArrayList$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function ArrayList$1(this$0){
  $clinit_ArrayList$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_858();
}

defineClass(605, 1, {1:1, 63:1}, ArrayList$1);
_.$init_858 = function $init_858(){
  this.i = 0;
  this.last = -1;
}
;
_.hasNext_0 = function hasNext_9(){
  return this.i < this.this$01.array.length;
}
;
_.next_1 = function next_15(){
  checkElement(this.hasNext_0());
  this.last = this.i++;
  return this.this$01.array[this.last];
}
;
_.remove_3 = function remove_42(){
  checkState(this.last != -1);
  this.this$01.remove_2(this.i = this.last);
  this.last = -1;
}
;
_.i = 0;
_.last = 0;
var Ljava_util_ArrayList$1_2_classLit = createForClass('java.util', 'ArrayList/1', 605, Ljava_lang_Object_2_classLit);
function $clinit_Arrays(){
  $clinit_Arrays = emptyMethod;
  $clinit_Object();
}

function asList(array){
  $clinit_Arrays();
  return new Arrays$ArrayList(array);
}

function hashCode_40(a){
  $clinit_Arrays();
  var e, e$array, e$index, e$max, hashCode;
  if (jsEquals(a, null)) {
    return 0;
  }
  hashCode = 1;
  for (e$array = a , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + hashCode_45(e);
    hashCode = ensureInt(hashCode);
  }
  return hashCode;
}

function insertionSort(array, low, high, comp){
  var i, j, t;
  for (i = low + 1; i < high; ++i) {
    for (j = i; j > low && comp.compare(array[j - 1], array[j]) > 0; --j) {
      t = array[j];
      setCheck(array, j, array[j - 1]);
      setCheck(array, j - 1, t);
    }
  }
}

function merge(src_0, srcLow, srcMid, srcHigh, dest, destLow, destHigh, comp){
  var topIdx;
  topIdx = srcMid;
  while (destLow < destHigh) {
    if (topIdx >= srcHigh || srcLow < srcMid && comp.compare(src_0[srcLow], src_0[topIdx]) <= 0) {
      setCheck(dest, destLow++, src_0[srcLow++]);
    }
     else {
      setCheck(dest, destLow++, src_0[topIdx++]);
    }
  }
}

function mergeSort(x_0, fromIndex, toIndex, comp){
  var temp;
  comp = nullToNaturalOrder(comp);
  temp = unsafeClone(x_0, fromIndex, toIndex);
  mergeSort_0(temp, x_0, fromIndex, toIndex, -fromIndex, castTo(comp, 107));
}

function mergeSort_0(temp, array, low, high, ofs, comp){
  var length_0, tempHigh, tempLow, tempMid;
  length_0 = high - low;
  if (length_0 < 7) {
    insertionSort(array, low, high, comp);
    return;
  }
  tempLow = low + ofs;
  tempHigh = high + ofs;
  tempMid = tempLow + (tempHigh - tempLow >> 1);
  mergeSort_0(array, temp, tempLow, tempMid, -ofs, comp);
  mergeSort_0(array, temp, tempMid, tempHigh, -ofs, comp);
  if (comp.compare(temp[tempMid - 1], temp[tempMid]) <= 0) {
    while (low < high) {
      setCheck(array, low++, temp[tempLow++]);
    }
    return;
  }
  merge(temp, tempLow, tempMid, tempHigh, array, low, high, comp);
}

function sort_3(x_0, fromIndex, toIndex, c){
  $clinit_Arrays();
  checkCriticalArrayBounds_0(fromIndex, toIndex, x_0.length);
  mergeSort(x_0, fromIndex, toIndex, c);
}

function sort_4(x_0, c){
  $clinit_Arrays();
  mergeSort(x_0, 0, x_0.length, c);
}

function spliterator_0(array, startInclusive, endExclusive){
  return spliterator_1(array, startInclusive, endExclusive, 1024 | 16);
}

function stream_0(array){
  $clinit_Arrays();
  return stream_1(array, 0, array.length);
}

function stream_1(array, startInclusive, endExclusive){
  return stream_2(spliterator_0(array, startInclusive, endExclusive), false);
}

function $clinit_Arrays$ArrayList(){
  $clinit_Arrays$ArrayList = emptyMethod;
  $clinit_AbstractList();
}

function Arrays$ArrayList(array){
  $clinit_Arrays$ArrayList();
  AbstractList.call(this);
  this.$init_859();
  checkNotNull(array);
  this.array = array;
}

defineClass(844, 192, {4:1, 1:1, 47:1, 38:1, 158:1}, Arrays$ArrayList);
_.$init_859 = function $init_859(){
}
;
_.contains_0 = function contains_7(o){
  return this.indexOf_0(o) != -1;
}
;
_.get_0 = function get_2671(index_0){
  checkElementIndex(index_0, this.size_1());
  return this.array[index_0];
}
;
_.set_1 = function set_10(index_0, value_0){
  var was;
  was = this.get_0(index_0);
  setCheck(this.array, index_0, value_0);
  return was;
}
;
_.size_1 = function size_12(){
  return this.array.length;
}
;
_.sort_0 = function sort_5(c){
  sort_3(this.array, 0, this.array.length, c);
}
;
_.toArray = function toArray_5(){
  return this.toArray_0(initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, this.array.length, 5, 1));
}
;
_.toArray_0 = function toArray_6(out){
  var i, size_0;
  size_0 = this.array.length;
  if (out.length < size_0) {
    out = createFrom(out, size_0);
  }
  for (i = 0; i < size_0; ++i) {
    setCheck(out, i, this.array[i]);
  }
  if (out.length > size_0) {
    setCheck(out, size_0, null);
  }
  return out;
}
;
var Ljava_util_Arrays$ArrayList_2_classLit = createForClass('java.util', 'Arrays/ArrayList', 844, Ljava_util_AbstractList_2_classLit);
function $clinit_Collections(){
  $clinit_Collections = emptyMethod;
  $clinit_Object();
  EMPTY_LIST = new Collections$EmptyList;
  EMPTY_MAP = new Collections$EmptyMap;
  EMPTY_SET = new Collections$EmptySet;
}

function emptyIterator(){
  $clinit_Collections();
  return castTo(($clinit_Collections$EmptyListIterator() , INSTANCE_7), 63);
}

function emptyList(){
  $clinit_Collections();
  return castTo(EMPTY_LIST, 38);
}

function emptyListIterator(){
  $clinit_Collections();
  return castTo(($clinit_Collections$EmptyListIterator() , INSTANCE_7), 4427);
}

function emptyMap(){
  $clinit_Collections();
  return castTo(EMPTY_MAP, 82);
}

function emptySet(){
  $clinit_Collections();
  return castTo(EMPTY_SET, 53);
}

function hashCode_41(collection){
  $clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 0;
  for (e$iterator = collection.iterator_0(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    hashCode = hashCode + hashCode_45(e);
    hashCode = ensureInt(hashCode);
  }
  return hashCode;
}

function hashCode_42(list){
  $clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 1;
  for (e$iterator = list.iterator_0(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    hashCode = 31 * hashCode + hashCode_45(e);
    hashCode = ensureInt(hashCode);
  }
  return hashCode;
}

function singletonList(o){
  $clinit_Collections();
  return new Collections$SingletonList(o);
}

function sort_6(target){
  $clinit_Collections();
  target.sort_0(null);
}

function unmodifiableList(list){
  $clinit_Collections();
  return instanceOf(list, 158)?new Collections$UnmodifiableRandomAccessList(list):new Collections$UnmodifiableList(list);
}

var EMPTY_LIST, EMPTY_MAP, EMPTY_SET;
function $clinit_Collections$EmptyList(){
  $clinit_Collections$EmptyList = emptyMethod;
  $clinit_AbstractList();
}

function Collections$EmptyList(){
  $clinit_Collections$EmptyList();
  AbstractList.call(this);
  this.$init_860();
}

defineClass(687, 192, {4:1, 1:1, 47:1, 38:1, 158:1}, Collections$EmptyList);
_.$init_860 = function $init_860(){
}
;
_.contains_0 = function contains_8(object){
  return false;
}
;
_.get_0 = function get_2672(location_0){
  checkElementIndex(location_0, 0);
  return null;
}
;
_.iterator_0 = function iterator_19(){
  return emptyIterator();
}
;
_.listIterator = function listIterator_3(){
  return emptyListIterator();
}
;
_.size_1 = function size_13(){
  return 0;
}
;
var Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util', 'Collections/EmptyList', 687, Ljava_util_AbstractList_2_classLit);
function $clinit_Collections$EmptyListIterator(){
  $clinit_Collections$EmptyListIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
  INSTANCE_7 = new Collections$EmptyListIterator;
}

function Collections$EmptyListIterator(){
  Object_0.call(this);
  this.$init_861();
}

defineClass(688, 1, {1:1, 63:1, 4427:1}, Collections$EmptyListIterator);
_.$init_861 = function $init_861(){
}
;
_.add_12 = function add_43(o){
  throw toJs(new UnsupportedOperationException);
}
;
_.hasNext_0 = function hasNext_10(){
  return false;
}
;
_.hasPrevious = function hasPrevious_0(){
  return false;
}
;
_.next_1 = function next_16(){
  throw toJs(new NoSuchElementException);
}
;
_.previous = function previous_1(){
  throw toJs(new NoSuchElementException);
}
;
_.remove_3 = function remove_43(){
  throw toJs(new IllegalStateException);
}
;
_.set_5 = function set_11(o){
  throw toJs(new IllegalStateException);
}
;
var INSTANCE_7;
var Ljava_util_Collections$EmptyListIterator_2_classLit = createForClass('java.util', 'Collections/EmptyListIterator', 688, Ljava_lang_Object_2_classLit);
function $clinit_Collections$EmptyMap(){
  $clinit_Collections$EmptyMap = emptyMethod;
  $clinit_AbstractMap();
}

function Collections$EmptyMap(){
  $clinit_Collections$EmptyMap();
  AbstractMap.call(this);
  this.$init_862();
}

defineClass(690, 231, {4:1, 1:1, 82:1}, Collections$EmptyMap);
_.$init_862 = function $init_862(){
}
;
_.containsKey = function containsKey_2(key){
  return false;
}
;
_.containsValue = function containsValue_2(value_0){
  return false;
}
;
_.entrySet = function entrySet_2(){
  return $clinit_Collections() , EMPTY_SET;
}
;
_.get_1 = function get_2673(key){
  return null;
}
;
_.keySet_0 = function keySet_1(){
  return $clinit_Collections() , EMPTY_SET;
}
;
_.size_1 = function size_14(){
  return 0;
}
;
_.values_0 = function values_33(){
  return $clinit_Collections() , EMPTY_LIST;
}
;
var Ljava_util_Collections$EmptyMap_2_classLit = createForClass('java.util', 'Collections/EmptyMap', 690, Ljava_util_AbstractMap_2_classLit);
function $clinit_Collections$EmptySet(){
  $clinit_Collections$EmptySet = emptyMethod;
  $clinit_AbstractSet();
}

function Collections$EmptySet(){
  $clinit_Collections$EmptySet();
  AbstractSet.call(this);
  this.$init_863();
}

defineClass(689, 135, {4:1, 1:1, 47:1, 53:1}, Collections$EmptySet);
_.$init_863 = function $init_863(){
}
;
_.contains_0 = function contains_9(object){
  return false;
}
;
_.iterator_0 = function iterator_20(){
  return emptyIterator();
}
;
_.size_1 = function size_15(){
  return 0;
}
;
var Ljava_util_Collections$EmptySet_2_classLit = createForClass('java.util', 'Collections/EmptySet', 689, Ljava_util_AbstractSet_2_classLit);
function $clinit_Collections$SingletonList(){
  $clinit_Collections$SingletonList = emptyMethod;
  $clinit_AbstractList();
}

function Collections$SingletonList(element){
  $clinit_Collections$SingletonList();
  AbstractList.call(this);
  this.$init_864();
  this.element = element;
}

defineClass(691, 192, {4:1, 1:1, 47:1, 38:1}, Collections$SingletonList);
_.$init_864 = function $init_864(){
}
;
_.contains_0 = function contains_10(item_0){
  return equals_40(this.element, item_0);
}
;
_.get_0 = function get_2674(index_0){
  checkElementIndex(index_0, 1);
  return this.element;
}
;
_.size_1 = function size_16(){
  return 1;
}
;
var Ljava_util_Collections$SingletonList_2_classLit = createForClass('java.util', 'Collections/SingletonList', 691, Ljava_util_AbstractList_2_classLit);
function $clinit_Collections$UnmodifiableCollection(){
  $clinit_Collections$UnmodifiableCollection = emptyMethod;
  $clinit_Object();
  $clinit_Iterable();
  $clinit_Collection();
}

function Collections$UnmodifiableCollection(coll){
  $clinit_Collections$UnmodifiableCollection();
  Object_0.call(this);
  this.$init_865();
  this.coll = coll;
}

defineClass(692, 1, {1:1, 47:1});
_.$init_865 = function $init_865(){
}
;
_.add_5 = function add_44(o){
  throw toJs(new UnsupportedOperationException);
}
;
_.addAll = function addAll_2(c){
  throw toJs(new UnsupportedOperationException);
}
;
_.clear_0 = function clear_21(){
  throw toJs(new UnsupportedOperationException);
}
;
_.contains_0 = function contains_11(o){
  return this.coll.contains_0(o);
}
;
_.isEmpty = function isEmpty_6(){
  return this.coll.isEmpty();
}
;
_.iterator_0 = function iterator_21(){
  return new Collections$UnmodifiableCollectionIterator(this.coll.iterator_0());
}
;
_.remove_1 = function remove_44(o){
  throw toJs(new UnsupportedOperationException);
}
;
_.removeAll = function removeAll_2(c){
  throw toJs(new UnsupportedOperationException);
}
;
_.size_1 = function size_17(){
  return this.coll.size_1();
}
;
_.toArray = function toArray_7(){
  return this.coll.toArray();
}
;
_.toArray_0 = function toArray_8(a){
  return this.coll.toArray_0(a);
}
;
_.toString_0 = function toString_77(){
  return toString_46(this.coll);
}
;
var Ljava_util_Collections$UnmodifiableCollection_2_classLit = createForClass('java.util', 'Collections/UnmodifiableCollection', 692, Ljava_lang_Object_2_classLit);
function $clinit_Collections$UnmodifiableCollectionIterator(){
  $clinit_Collections$UnmodifiableCollectionIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function Collections$UnmodifiableCollectionIterator(it){
  $clinit_Collections$UnmodifiableCollectionIterator();
  Object_0.call(this);
  this.$init_866();
  this.it = it;
}

defineClass(332, 1, {1:1, 63:1}, Collections$UnmodifiableCollectionIterator);
_.$init_866 = function $init_866(){
}
;
_.hasNext_0 = function hasNext_11(){
  return this.it.hasNext_0();
}
;
_.next_1 = function next_17(){
  return this.it.next_1();
}
;
_.remove_3 = function remove_45(){
  throw toJs(new UnsupportedOperationException);
}
;
var Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit = createForClass('java.util', 'Collections/UnmodifiableCollectionIterator', 332, Ljava_lang_Object_2_classLit);
function $clinit_Collections$UnmodifiableList(){
  $clinit_Collections$UnmodifiableList = emptyMethod;
  $clinit_Collections$UnmodifiableCollection();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_List();
}

function Collections$UnmodifiableList(list){
  $clinit_Collections$UnmodifiableList();
  Collections$UnmodifiableCollection.call(this, list);
  this.$init_867();
  this.list = list;
}

defineClass(387, 692, {1:1, 47:1, 38:1}, Collections$UnmodifiableList);
_.$init_867 = function $init_867(){
}
;
_.add_6 = function add_45(index_0, element){
  throw toJs(new UnsupportedOperationException);
}
;
_.equals_0 = function equals_35(o){
  return equals_Ljava_lang_Object__Z__devirtual$(this.list, o);
}
;
_.get_0 = function get_2675(index_0){
  return this.list.get_0(index_0);
}
;
_.hashCode_1 = function hashCode_43(){
  return hashCode__I__devirtual$(this.list);
}
;
_.isEmpty = function isEmpty_7(){
  return this.list.isEmpty();
}
;
_.listIterator = function listIterator_4(){
  return this.listIterator_0(0);
}
;
_.listIterator_0 = function listIterator_5(from){
  return new Collections$UnmodifiableListIterator(this.list.listIterator_0(from));
}
;
_.remove_2 = function remove_46(index_0){
  throw toJs(new UnsupportedOperationException);
}
;
_.set_1 = function set_12(index_0, element){
  throw toJs(new UnsupportedOperationException);
}
;
_.sort_0 = function sort_7(c){
  throw toJs(new UnsupportedOperationException);
}
;
var Ljava_util_Collections$UnmodifiableList_2_classLit = createForClass('java.util', 'Collections/UnmodifiableList', 387, Ljava_util_Collections$UnmodifiableCollection_2_classLit);
function $clinit_Collections$UnmodifiableListIterator(){
  $clinit_Collections$UnmodifiableListIterator = emptyMethod;
  $clinit_Collections$UnmodifiableCollectionIterator();
  $clinit_Iterator();
}

function Collections$UnmodifiableListIterator(lit){
  $clinit_Collections$UnmodifiableListIterator();
  Collections$UnmodifiableCollectionIterator.call(this, lit);
  this.$init_868();
  this.lit = lit;
}

defineClass(694, 332, {1:1, 63:1}, Collections$UnmodifiableListIterator);
_.$init_868 = function $init_868(){
}
;
_.remove_3 = function remove_47(){
  getClassPrototype(332).remove_3.call(this);
}
;
_.add_12 = function add_46(o){
  throw toJs(new UnsupportedOperationException);
}
;
_.hasPrevious = function hasPrevious_1(){
  return this.lit.hasPrevious();
}
;
_.previous = function previous_2(){
  return this.lit.previous();
}
;
_.set_5 = function set_13(o){
  throw toJs(new UnsupportedOperationException);
}
;
var Ljava_util_Collections$UnmodifiableListIterator_2_classLit = createForClass('java.util', 'Collections/UnmodifiableListIterator', 694, Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit);
function $clinit_Collections$UnmodifiableRandomAccessList(){
  $clinit_Collections$UnmodifiableRandomAccessList = emptyMethod;
  $clinit_Collections$UnmodifiableList();
}

function Collections$UnmodifiableRandomAccessList(list){
  $clinit_Collections$UnmodifiableRandomAccessList();
  Collections$UnmodifiableList.call(this, list);
  this.$init_869();
}

defineClass(693, 387, {1:1, 47:1, 38:1, 158:1}, Collections$UnmodifiableRandomAccessList);
_.$init_869 = function $init_869(){
}
;
var Ljava_util_Collections$UnmodifiableRandomAccessList_2_classLit = createForClass('java.util', 'Collections/UnmodifiableRandomAccessList', 693, Ljava_util_Collections$UnmodifiableList_2_classLit);
function $clinit_Comparators(){
  $clinit_Comparators = emptyMethod;
  $clinit_Object();
  INTERNAL_NATURAL_ORDER = new Comparators$NaturalOrderComparator;
  NATURAL_ORDER = new Comparators$NaturalOrderComparator;
  REVERSE_NATURAL_ORDER = new Comparators$ReverseNaturalOrderComparator;
}

function naturalOrderToNull(cmp){
  $clinit_Comparators();
  return jsEquals(cmp, INTERNAL_NATURAL_ORDER)?null:cmp;
}

function nullToNaturalOrder(cmp){
  $clinit_Comparators();
  return isNull(cmp)?castTo(INTERNAL_NATURAL_ORDER, 107):cmp;
}

var INTERNAL_NATURAL_ORDER, NATURAL_ORDER, REVERSE_NATURAL_ORDER;
function $clinit_Comparators$NaturalOrderComparator(){
  $clinit_Comparators$NaturalOrderComparator = emptyMethod;
  $clinit_Object();
  $clinit_Comparator();
}

function Comparators$NaturalOrderComparator(){
  $clinit_Comparators$NaturalOrderComparator();
  Object_0.call(this);
  this.$init_870();
}

defineClass(422, 1, {4:1, 1:1, 107:1}, Comparators$NaturalOrderComparator);
_.$init_870 = function $init_870(){
}
;
_.compare = function compare_13(a, b){
  return this.compare_1(castTo(a, 8), castTo(b, 8));
}
;
_.equals_0 = function equals_36(other){
  return getClassPrototype(1).equals_0.call(this, other);
}
;
_.compare_1 = function compare_12(a, b){
  return compareTo_Ljava_lang_Object__I__devirtual$(castTo(checkNotNull(a), 8), checkNotNull(b));
}
;
var Ljava_util_Comparators$NaturalOrderComparator_2_classLit = createForClass('java.util', 'Comparators/NaturalOrderComparator', 422, Ljava_lang_Object_2_classLit);
function $clinit_Comparators$ReverseNaturalOrderComparator(){
  $clinit_Comparators$ReverseNaturalOrderComparator = emptyMethod;
  $clinit_Object();
  $clinit_Comparator();
}

function Comparators$ReverseNaturalOrderComparator(){
  $clinit_Comparators$ReverseNaturalOrderComparator();
  Object_0.call(this);
  this.$init_871();
}

defineClass(994, 1, {4:1, 1:1, 107:1}, Comparators$ReverseNaturalOrderComparator);
_.$init_871 = function $init_871(){
}
;
_.compare = function compare_15(a, b){
  return this.compare_1(castTo(a, 8), castTo(b, 8));
}
;
_.equals_0 = function equals_37(other){
  return getClassPrototype(1).equals_0.call(this, other);
}
;
_.compare_1 = function compare_14(a, b){
  return compareTo_Ljava_lang_Object__I__devirtual$(castTo(checkNotNull(b), 8), checkNotNull(a));
}
;
var Ljava_util_Comparators$ReverseNaturalOrderComparator_2_classLit = createForClass('java.util', 'Comparators/ReverseNaturalOrderComparator', 994, Ljava_lang_Object_2_classLit);
function $clinit_ConcurrentModificationDetector(){
  $clinit_ConcurrentModificationDetector = emptyMethod;
  $clinit_Object();
  API_CHECK = isApiChecked();
}

function checkStructuralChange(host, iterator){
  $clinit_ConcurrentModificationDetector();
  if (!API_CHECK) {
    return;
  }
  if (castToUnknownNative(iterator).$modCount != castToUnknownNative(host).$modCount) {
    throw toJs(new ConcurrentModificationException);
  }
}

function recordLastKnownStructure(host, iterator){
  $clinit_ConcurrentModificationDetector();
  if (!API_CHECK) {
    return;
  }
  castToUnknownNative(iterator).$modCount = castToUnknownNative(host).$modCount;
}

function structureChanged(host){
  $clinit_ConcurrentModificationDetector();
  var modCount, modCountable;
  if (!API_CHECK) {
    return;
  }
  modCountable = castToUnknownNative(host);
  modCount = modCountable.$modCount | 0;
  modCountable.$modCount = modCount + 1;
}

var API_CHECK = false;
function $clinit_ConcurrentModificationDetector$ModCountable(){
  $clinit_ConcurrentModificationDetector$ModCountable = emptyMethod;
}

function $clinit_ConcurrentModificationException(){
  $clinit_ConcurrentModificationException = emptyMethod;
  $clinit_RuntimeException();
}

function ConcurrentModificationException(){
  $clinit_ConcurrentModificationException();
  RuntimeException.call(this);
  this.$init_872();
}

defineClass(995, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, ConcurrentModificationException);
_.$init_872 = function $init_872(){
}
;
var Ljava_util_ConcurrentModificationException_2_classLit = createForClass('java.util', 'ConcurrentModificationException', 995, Ljava_lang_RuntimeException_2_classLit);
function $clinit_Date$NativeDate(){
  $clinit_Date$NativeDate = emptyMethod;
  $clinit_Object();
}

function $clinit_Date$StringData(){
  $clinit_Date$StringData = emptyMethod;
  $clinit_Object();
  DAYS = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);
  MONTHS = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), {4:1, 1:1, 5:1}, 2, 6, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);
}

var DAYS, MONTHS;
function $clinit_Deque(){
  $clinit_Deque = emptyMethod;
}

var Ljava_util_Deque_2_classLit = createForInterface('java.util', 'Deque');
function $clinit_EmptyStackException(){
  $clinit_EmptyStackException = emptyMethod;
  $clinit_RuntimeException();
}

function EmptyStackException(){
  $clinit_EmptyStackException();
  RuntimeException.call(this);
  this.$init_873();
}

defineClass(484, 27, {4:1, 25:1, 1:1, 27:1, 24:1}, EmptyStackException);
_.$init_873 = function $init_873(){
}
;
var Ljava_util_EmptyStackException_2_classLit = createForClass('java.util', 'EmptyStackException', 484, Ljava_lang_RuntimeException_2_classLit);
function $clinit_EnumMap(){
  $clinit_EnumMap = emptyMethod;
  $clinit_AbstractMap();
}

function EnumMap(type_0){
  $clinit_EnumMap();
  AbstractMap.call(this);
  this.$init_874();
  this.init_50(type_0);
}

defineClass(829, 231, {1:1, 82:1}, EnumMap);
_.$init_874 = function $init_874(){
}
;
_.put = function put_3(key, value_0){
  return this.put_1(castTo(key, 7), value_0);
}
;
_.asKey = function asKey(key){
  return castTo(key, 7);
}
;
_.asOrdinal = function asOrdinal(key){
  return this.asKey(key).ordinal_0();
}
;
_.clear_0 = function clear_22(){
  this.keySet.clear_0();
  this.values = castToArray(initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, this.values.length, 5, 1));
}
;
_.containsKey = function containsKey_3(key){
  return this.keySet.contains_0(key);
}
;
_.containsValue = function containsValue_3(value_0){
  var key, key$iterator;
  for (key$iterator = this.keySet.iterator_0(); key$iterator.hasNext_0();) {
    key = castTo(key$iterator.next_1(), 7);
    if (equals_40(value_0, this.values[key.ordinal_0()])) {
      return true;
    }
  }
  return false;
}
;
_.entrySet = function entrySet_3(){
  return new EnumMap$EntrySet(this);
}
;
_.get_1 = function get_2676(k){
  return this.keySet.contains_0(k)?this.values[this.asOrdinal(k)]:null;
}
;
_.init_50 = function init_52(type_0){
  this.keySet = noneOf(type_0);
  this.values = castToArray(initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, this.keySet.capacity(), 5, 1));
}
;
_.put_1 = function put_2(key, value_0){
  this.keySet.add_5(key);
  return this.set_6(key.ordinal_0(), value_0);
}
;
_.remove_4 = function remove_48(key){
  return this.keySet.remove_1(key)?this.set_6(this.asOrdinal(key), null):null;
}
;
_.set_6 = function set_14(ordinal, value_0){
  $clinit_EnumMap();
  var was;
  was = this.values[ordinal];
  setCheck(this.values, ordinal, value_0);
  return was;
}
;
_.size_1 = function size_18(){
  return this.keySet.size_1();
}
;
var Ljava_util_EnumMap_2_classLit = createForClass('java.util', 'EnumMap', 829, Ljava_util_AbstractMap_2_classLit);
function $clinit_EnumMap$EntrySet(){
  $clinit_EnumMap$EntrySet = emptyMethod;
  $clinit_AbstractSet();
}

function EnumMap$EntrySet(this$0){
  $clinit_EnumMap$EntrySet();
  this.this$01 = this$0;
  AbstractSet.call(this);
  this.$init_875();
}

defineClass(830, 135, {1:1, 47:1, 53:1}, EnumMap$EntrySet);
_.$init_875 = function $init_875(){
}
;
_.clear_0 = function clear_23(){
  this.this$01.clear_0();
}
;
_.contains_0 = function contains_12(o){
  if (instanceOf(o, 39)) {
    return this.this$01.containsEntry(castTo(o, 39));
  }
  return false;
}
;
_.iterator_0 = function iterator_22(){
  return new EnumMap$EntrySetIterator(this.this$01);
}
;
_.remove_1 = function remove_49(entry){
  var key;
  if (this.contains_0(entry)) {
    key = castTo(entry, 39).getKey();
    this.this$01.remove_4(key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_19(){
  return this.this$01.size_1();
}
;
var Ljava_util_EnumMap$EntrySet_2_classLit = createForClass('java.util', 'EnumMap/EntrySet', 830, Ljava_util_AbstractSet_2_classLit);
function $clinit_EnumMap$EntrySetIterator(){
  $clinit_EnumMap$EntrySetIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function EnumMap$EntrySetIterator(this$0){
  $clinit_EnumMap$EntrySetIterator();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_876();
}

defineClass(831, 1, {1:1, 63:1}, EnumMap$EntrySetIterator);
_.$init_876 = function $init_876(){
  this.it = this.this$01.keySet.iterator_0();
}
;
_.next_1 = function next_18(){
  return this.next_3();
}
;
_.hasNext_0 = function hasNext_12(){
  return this.it.hasNext_0();
}
;
_.next_3 = function next_19(){
  this.key = castTo(this.it.next_1(), 7);
  return new EnumMap$MapEntry(this.this$01, this.key);
}
;
_.remove_3 = function remove_50(){
  checkState(isNotNull(this.key));
  this.this$01.remove_4(this.key);
  this.key = null;
}
;
var Ljava_util_EnumMap$EntrySetIterator_2_classLit = createForClass('java.util', 'EnumMap/EntrySetIterator', 831, Ljava_lang_Object_2_classLit);
function $clinit_EnumMap$MapEntry(){
  $clinit_EnumMap$MapEntry = emptyMethod;
  $clinit_AbstractMapEntry();
}

function EnumMap$MapEntry(this$0, key){
  $clinit_EnumMap$MapEntry();
  this.this$01 = this$0;
  AbstractMapEntry.call(this);
  this.$init_877();
  this.key = key;
}

defineClass(832, 388, {1:1, 39:1}, EnumMap$MapEntry);
_.$init_877 = function $init_877(){
}
;
_.getKey = function getKey_1(){
  return this.getKey_0();
}
;
_.getKey_0 = function getKey_0(){
  return this.key;
}
;
_.getValue_0 = function getValue_8(){
  return this.this$01.values[this.key.ordinal_0()];
}
;
_.setValue_6 = function setValue_7(value_0){
  return this.this$01.set_6(this.key.ordinal_0(), value_0);
}
;
var Ljava_util_EnumMap$MapEntry_2_classLit = createForClass('java.util', 'EnumMap/MapEntry', 832, Ljava_util_AbstractMapEntry_2_classLit);
function $clinit_EnumSet(){
  $clinit_EnumSet = emptyMethod;
  $clinit_AbstractSet();
}

function EnumSet(){
  $clinit_EnumSet();
  AbstractSet.call(this);
  this.$init_878();
}

function noneOf(elementType){
  $clinit_EnumSet();
  var all;
  all = castTo(elementType.getEnumConstants(), 16);
  return new EnumSet$EnumSetImpl(all, castTo(createFrom(all, all.length), 16), 0);
}

defineClass(991, 135, {1:1, 47:1, 53:1});
_.$init_878 = function $init_878(){
}
;
var Ljava_util_EnumSet_2_classLit = createForClass('java.util', 'EnumSet', 991, Ljava_util_AbstractSet_2_classLit);
function $clinit_EnumSet$EnumSetImpl(){
  $clinit_EnumSet$EnumSetImpl = emptyMethod;
  $clinit_EnumSet();
}

function EnumSet$EnumSetImpl(all, set_0, size_0){
  $clinit_EnumSet$EnumSetImpl();
  EnumSet.call(this);
  this.$init_879();
  this.all = all;
  this.set_0 = set_0;
  this.size_0 = size_0;
}

defineClass(992, 991, {1:1, 47:1, 53:1}, EnumSet$EnumSetImpl);
_.$init_879 = function $init_879(){
}
;
_.add_5 = function add_48(e){
  return this.add_13(castTo(e, 7));
}
;
_.add_13 = function add_47(e){
  var ordinal;
  checkNotNull(e);
  ordinal = e.ordinal_0();
  if (isNull(this.set_0[ordinal])) {
    setCheck(this.set_0, ordinal, e);
    ++this.size_0;
    return true;
  }
  return false;
}
;
_.capacity = function capacity(){
  return this.all.length;
}
;
_.contains_0 = function contains_13(o){
  return instanceOf(o, 7) && this.containsEnum(castTo(o, 7));
}
;
_.containsEnum = function containsEnum(e){
  return isNotNull(e) && jsEquals(this.set_0[e.ordinal_0()], e);
}
;
_.iterator_0 = function iterator_23(){
  return new EnumSet$EnumSetImpl$IteratorImpl(this);
}
;
_.remove_1 = function remove_51(o){
  return instanceOf(o, 7) && this.removeEnum(castTo(o, 7));
}
;
_.removeEnum = function removeEnum(e){
  if (isNotNull(e) && jsEquals(this.set_0[e.ordinal_0()], e)) {
    setCheck(this.set_0, e.ordinal_0(), null);
    --this.size_0;
    return true;
  }
  return false;
}
;
_.size_1 = function size_20(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_EnumSet$EnumSetImpl_2_classLit = createForClass('java.util', 'EnumSet/EnumSetImpl', 992, Ljava_util_EnumSet_2_classLit);
function $clinit_EnumSet$EnumSetImpl$IteratorImpl(){
  $clinit_EnumSet$EnumSetImpl$IteratorImpl = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function EnumSet$EnumSetImpl$IteratorImpl(this$1){
  $clinit_EnumSet$EnumSetImpl$IteratorImpl();
  this.this$11 = this$1;
  Object_0.call(this);
  this.$init_880();
  this.findNext_0();
}

defineClass(993, 1, {1:1, 63:1}, EnumSet$EnumSetImpl$IteratorImpl);
_.$init_880 = function $init_880(){
  this.i = -1;
  this.last = -1;
}
;
_.next_1 = function next_21(){
  return this.next_4();
}
;
_.findNext_0 = function findNext_0(){
  var c;
  ++this.i;
  for (c = this.this$11.capacity(); this.i < c; ++this.i) {
    if (isNotNull(this.this$11.set_0[this.i])) {
      return;
    }
  }
}
;
_.hasNext_0 = function hasNext_13(){
  return this.i < this.this$11.capacity();
}
;
_.next_4 = function next_20(){
  checkElement(this.hasNext_0());
  this.last = this.i;
  this.findNext_0();
  return this.this$11.set_0[this.last];
}
;
_.remove_3 = function remove_52(){
  checkState(this.last != -1);
  if (!isNotNull(this.this$11.set_0[this.last])) {
    debugger;
    throw toJs(makeAssertionError());
  }
  setCheck(this.this$11.set_0, this.last, null);
  --this.this$11.size_0;
  this.last = -1;
}
;
_.i = 0;
_.last = 0;
var Ljava_util_EnumSet$EnumSetImpl$IteratorImpl_2_classLit = createForClass('java.util', 'EnumSet/EnumSetImpl/IteratorImpl', 993, Ljava_lang_Object_2_classLit);
function $clinit_HashSet(){
  $clinit_HashSet = emptyMethod;
  $clinit_AbstractSet();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_Set();
}

function HashSet(){
  $clinit_HashSet();
  AbstractSet.call(this);
  this.$init_881();
  this.map_0 = new HashMap;
}

function HashSet_0(c){
  $clinit_HashSet();
  AbstractSet.call(this);
  this.$init_881();
  this.map_0 = new HashMap_0(c.size_1());
  this.addAll(c);
}

function HashSet_1(map_0){
  $clinit_HashSet();
  AbstractSet.call(this);
  this.$init_881();
  this.map_0 = map_0;
}

defineClass(52, 135, {4:1, 1:1, 47:1, 53:1}, HashSet, HashSet_0);
_.$init_881 = function $init_881(){
}
;
_.add_5 = function add_49(o){
  var old;
  old = this.map_0.put(o, this);
  return jsEquals(old, null);
}
;
_.clear_0 = function clear_24(){
  this.map_0.clear_0();
}
;
_.contains_0 = function contains_14(o){
  return this.map_0.containsKey(o);
}
;
_.isEmpty = function isEmpty_8(){
  return this.map_0.isEmpty();
}
;
_.iterator_0 = function iterator_24(){
  return this.map_0.keySet_0().iterator_0();
}
;
_.remove_1 = function remove_53(o){
  return jsNotEquals(this.map_0.remove_4(o), null);
}
;
_.size_1 = function size_21(){
  return this.map_0.size_1();
}
;
var Ljava_util_HashSet_2_classLit = createForClass('java.util', 'HashSet', 52, Ljava_util_AbstractSet_2_classLit);
function $clinit_IdentityHashMap(){
  $clinit_IdentityHashMap = emptyMethod;
  $clinit_AbstractHashMap();
  $clinit_Map();
}

function IdentityHashMap(){
  $clinit_IdentityHashMap();
  AbstractHashMap.call(this);
  this.$init_882();
}

defineClass(413, 232, {4:1, 1:1, 82:1}, IdentityHashMap);
_.$init_882 = function $init_882(){
}
;
_.equals_0 = function equals_38(obj){
  var entry, entry$iterator, otherKey, otherMap, otherValue;
  if (maskUndefined(obj) === maskUndefined(this)) {
    return true;
  }
  if (!instanceOf(obj, 82)) {
    return false;
  }
  otherMap = castTo(obj, 82);
  if (this.size_1() != otherMap.size_1()) {
    return false;
  }
  for (entry$iterator = otherMap.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    otherKey = entry.getKey();
    otherValue = entry.getValue_0();
    if (!this.containsKey(otherKey)) {
      return false;
    }
    if (maskUndefined(otherValue) !== maskUndefined(this.get_1(otherKey))) {
      return false;
    }
  }
  return true;
}
;
_.equals_1 = function equals_39(value1, value2){
  return maskUndefined(value1) === maskUndefined(value2);
}
;
_.getHashCode = function getHashCode_0(key){
  return getObjectIdentityHashCode(key);
}
;
_.hashCode_1 = function hashCode_44(){
  var entry, entry$iterator, hashCode;
  hashCode = 0;
  for (entry$iterator = this.entrySet().iterator_0(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 39);
    hashCode += identityHashCode(entry.getKey());
    hashCode += identityHashCode(entry.getValue_0());
  }
  return hashCode;
}
;
var Ljava_util_IdentityHashMap_2_classLit = createForClass('java.util', 'IdentityHashMap', 413, Ljava_util_AbstractHashMap_2_classLit);
function $clinit_InternalHashCodeMap(){
  $clinit_InternalHashCodeMap = emptyMethod;
  $clinit_Object();
  $clinit_Iterable();
}

function InternalHashCodeMap(host){
  $clinit_InternalHashCodeMap();
  Object_0.call(this);
  this.$init_883();
  this.host = host;
}

defineClass(708, 1, {1:1}, InternalHashCodeMap);
_.$init_883 = function $init_883(){
  this.backingMap = newJsMap();
}
;
_.findEntryInChain = function findEntryInChain(key, chain){
  var entry, entry$array, entry$index, entry$max;
  for (entry$array = chain , entry$index = 0 , entry$max = entry$array.length; entry$index < entry$max; ++entry$index) {
    entry = entry$array[entry$index];
    if (this.host.equals_1(key, entry.getKey())) {
      return entry;
    }
  }
  return null;
}
;
_.getChainOrEmpty = function getChainOrEmpty(hashCode){
  var chain;
  chain = uncheckedCast(this.backingMap.get(hashCode));
  return jsEquals(chain, null)?this.newEntryChain():chain;
}
;
_.getEntry_0 = function getEntry(key){
  return this.findEntryInChain(key, this.getChainOrEmpty(this.hash_0(key)));
}
;
_.hash_0 = function hash_0(key){
  return jsEquals(key, null)?0:this.host.getHashCode(key);
}
;
_.iterator_0 = function iterator_25(){
  return new InternalHashCodeMap$1(this);
}
;
_.newEntryChain = function newEntryChain(){
  $clinit_InternalHashCodeMap();
  return uncheckedCast(new Array);
}
;
_.put = function put_4(key, value_0){
  var chain, entry, hashCode;
  hashCode = this.hash_0(key);
  chain = this.getChainOrEmpty(hashCode);
  if (chain.length == 0) {
    this.backingMap.set(hashCode, chain);
  }
   else {
    entry = this.findEntryInChain(key, chain);
    if (isNotNull(entry)) {
      return entry.setValue_6(value_0);
    }
  }
  setCheck(chain, chain.length, new AbstractMap$SimpleEntry(key, value_0));
  this.size_0++;
  structureChanged(this.host);
  return null;
}
;
_.remove_4 = function remove_54(key){
  var chain, entry, hashCode, i;
  hashCode = this.hash_0(key);
  chain = this.getChainOrEmpty(hashCode);
  for (i = 0; i < chain.length; i++) {
    entry = chain[i];
    if (this.host.equals_1(key, entry.getKey())) {
      if (chain.length == 1) {
        setLength_0(chain, 0);
        $delete(this.backingMap, hashCode);
      }
       else {
        removeFrom(chain, i, 1);
      }
      this.size_0--;
      structureChanged(this.host);
      return entry.getValue_0();
    }
  }
  return null;
}
;
_.size_1 = function size_22(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_InternalHashCodeMap_2_classLit = createForClass('java.util', 'InternalHashCodeMap', 708, Ljava_lang_Object_2_classLit);
function $clinit_InternalHashCodeMap$1(){
  $clinit_InternalHashCodeMap$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function InternalHashCodeMap$1(this$0){
  $clinit_InternalHashCodeMap$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_884();
}

defineClass(709, 1, {1:1, 63:1}, InternalHashCodeMap$1);
_.$init_884 = function $init_884(){
  this.chains = this.this$01.backingMap.entries();
  this.itemIndex = 0;
  this.chain = this.this$01.newEntryChain();
  this.lastEntry = null;
}
;
_.next_1 = function next_22(){
  return this.next_3();
}
;
_.hasNext_0 = function hasNext_14(){
  var current;
  if (this.itemIndex < this.chain.length) {
    return true;
  }
  current = this.chains.next();
  if (!current.done) {
    this.chain = uncheckedCast($getValue_0(current));
    this.itemIndex = 0;
    return true;
  }
  return false;
}
;
_.next_3 = function next_23(){
  this.lastEntry = this.chain[this.itemIndex++];
  return this.lastEntry;
}
;
_.remove_3 = function remove_55(){
  this.this$01.remove_4(this.lastEntry.getKey());
  if (this.itemIndex != 0) {
    this.itemIndex--;
  }
}
;
_.itemIndex = 0;
var Ljava_util_InternalHashCodeMap$1_2_classLit = createForClass('java.util', 'InternalHashCodeMap/1', 709, Ljava_lang_Object_2_classLit);
function $clinit_InternalJsMap(){
  $clinit_InternalJsMap = emptyMethod;
}

function $delete(this$static, key){
  $clinit_InternalJsMap();
  var fn;
  fn = getProperty(this$static, 'delete');
  fn.call(this$static, key);
}

function $delete_0(this$static, key){
  $clinit_InternalJsMap();
  var fn;
  fn = getProperty(this$static, 'delete');
  fn.call(this$static, key);
}

function $clinit_InternalJsMap$DeleteFunction(){
  $clinit_InternalJsMap$DeleteFunction = emptyMethod;
}

function $clinit_InternalJsMap$Iterator(){
  $clinit_InternalJsMap$Iterator = emptyMethod;
}

function $clinit_InternalJsMap$IteratorEntry(){
  $clinit_InternalJsMap$IteratorEntry = emptyMethod;
}

function $getKey(this$static){
  $clinit_InternalJsMap$IteratorEntry();
  return uncheckedCast(this$static.value[0]);
}

function $getValue_0(this$static){
  $clinit_InternalJsMap$IteratorEntry();
  return uncheckedCast(this$static.value[1]);
}

function $clinit_InternalJsMapFactory(){
  $clinit_InternalJsMapFactory = emptyMethod;
  $clinit_Object();
  jsMapCtor = getJsMapConstructor();
}

function canHandleObjectCreateAndProto(){
  if (!Object.create || !Object.getOwnPropertyNames) {
    return false;
  }
  var protoField = '__proto__';
  var map_0 = Object.create(null);
  if (map_0[protoField] !== undefined) {
    return false;
  }
  var keys_0 = Object.getOwnPropertyNames(map_0);
  if (keys_0.length != 0) {
    return false;
  }
  map_0[protoField] = 42;
  if (map_0[protoField] !== 42) {
    return false;
  }
  if (Object.getOwnPropertyNames(map_0).length == 0) {
    return false;
  }
  return true;
}

function getJsMapConstructor(){
  function isCorrectIterationProtocol(){
    try {
      return (new Map).entries().next().done;
    }
     catch (e) {
      return false;
    }
  }

  if (typeof Map === 'function' && (Map.prototype.entries && isCorrectIterationProtocol())) {
    return Map;
  }
   else {
    return getJsMapPolyFill();
  }
}

function getJsMapPolyFill(){
  function Stringmap(){
    this.obj = this.createObject();
  }

  ;
  Stringmap.prototype.createObject = function(key){
    return Object.create(null);
  }
  ;
  Stringmap.prototype.get = function(key){
    return this.obj[key];
  }
  ;
  Stringmap.prototype.set = function(key, value_0){
    this.obj[key] = value_0;
  }
  ;
  Stringmap.prototype['delete'] = function(key){
    delete this.obj[key];
  }
  ;
  Stringmap.prototype.keys = function(){
    return Object.getOwnPropertyNames(this.obj);
  }
  ;
  Stringmap.prototype.entries = function(){
    var keys_0 = this.keys();
    var map_0 = this;
    var nextIndex = 0;
    return {next:function(){
      if (nextIndex >= keys_0.length)
        return {done:true};
      var key = keys_0[nextIndex++];
      return {value:[key, map_0.get(key)], done:false};
    }
    };
  }
  ;
  if (!canHandleObjectCreateAndProto()) {
    Stringmap.prototype.createObject = function(){
      return {};
    }
    ;
    Stringmap.prototype.get = function(key){
      return this.obj[':' + key];
    }
    ;
    Stringmap.prototype.set = function(key, value_0){
      this.obj[':' + key] = value_0;
    }
    ;
    Stringmap.prototype['delete'] = function(key){
      delete this.obj[':' + key];
    }
    ;
    Stringmap.prototype.keys = function(){
      var result = [];
      for (var key in this.obj) {
        if (key.charCodeAt(0) == 58) {
          result.push(key.substring(1));
        }
      }
      return result;
    }
    ;
  }
  return Stringmap;
}

function newJsMap(){
  $clinit_InternalJsMapFactory();
  return new jsMapCtor;
}

var jsMapCtor;
function $clinit_InternalStringMap(){
  $clinit_InternalStringMap = emptyMethod;
  $clinit_Object();
  $clinit_Iterable();
}

function InternalStringMap(host){
  $clinit_InternalStringMap();
  Object_0.call(this);
  this.$init_885();
  this.host = host;
}

function toNullIfUndefined(value_0){
  return isUndefined(value_0)?null:value_0;
}

defineClass(705, 1, {1:1}, InternalStringMap);
_.$init_885 = function $init_885(){
  this.backingMap = newJsMap();
}
;
_.contains_1 = function contains_15(key){
  return !isUndefined(this.backingMap.get(key));
}
;
_.get_5 = function get_2677(key){
  return this.backingMap.get(key);
}
;
_.iterator_0 = function iterator_26(){
  return new InternalStringMap$1(this);
}
;
_.newMapEntry = function newMapEntry(entry, lastValueMod){
  $clinit_InternalStringMap();
  return new InternalStringMap$2(this, entry, lastValueMod);
}
;
_.put_2 = function put_5(key, value_0){
  var oldValue;
  oldValue = this.backingMap.get(key);
  this.backingMap.set(key, toNullIfUndefined(value_0));
  if (isUndefined(oldValue)) {
    this.size_0++;
    structureChanged(this.host);
  }
   else {
    this.valueMod++;
  }
  return oldValue;
}
;
_.remove_10 = function remove_56(key){
  var value_0;
  value_0 = this.backingMap.get(key);
  if (!isUndefined(value_0)) {
    $delete_0(this.backingMap, key);
    this.size_0--;
    structureChanged(this.host);
  }
   else {
    this.valueMod++;
  }
  return value_0;
}
;
_.size_1 = function size_23(){
  return this.size_0;
}
;
_.size_0 = 0;
_.valueMod = 0;
var Ljava_util_InternalStringMap_2_classLit = createForClass('java.util', 'InternalStringMap', 705, Ljava_lang_Object_2_classLit);
function $clinit_InternalStringMap$1(){
  $clinit_InternalStringMap$1 = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function InternalStringMap$1(this$0){
  $clinit_InternalStringMap$1();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_886();
}

defineClass(706, 1, {1:1, 63:1}, InternalStringMap$1);
_.$init_886 = function $init_886(){
  this.entries_0 = this.this$01.backingMap.entries();
  this.current = this.entries_0.next();
}
;
_.next_1 = function next_24(){
  return this.next_3();
}
;
_.hasNext_0 = function hasNext_15(){
  return !this.current.done;
}
;
_.next_3 = function next_25(){
  this.last = this.current;
  this.current = this.entries_0.next();
  return this.this$01.newMapEntry(this.last, this.this$01.valueMod);
}
;
_.remove_3 = function remove_57(){
  this.this$01.remove_10($getKey(this.last));
}
;
var Ljava_util_InternalStringMap$1_2_classLit = createForClass('java.util', 'InternalStringMap/1', 706, Ljava_lang_Object_2_classLit);
function $clinit_InternalStringMap$2(){
  $clinit_InternalStringMap$2 = emptyMethod;
  $clinit_AbstractMapEntry();
}

function InternalStringMap$2(this$0, val$entry, val$lastValueMod){
  $clinit_InternalStringMap$2();
  this.this$01 = this$0;
  this.val$entry2 = val$entry;
  this.val$lastValueMod3 = val$lastValueMod;
  AbstractMapEntry.call(this);
  this.$init_887();
}

defineClass(707, 388, {1:1, 39:1}, InternalStringMap$2);
_.$init_887 = function $init_887(){
}
;
_.getKey = function getKey_2(){
  return $getKey(this.val$entry2);
}
;
_.getValue_0 = function getValue_9(){
  if (this.this$01.valueMod != this.val$lastValueMod3) {
    return this.this$01.get_5($getKey(this.val$entry2));
  }
  return $getValue_0(this.val$entry2);
}
;
_.setValue_6 = function setValue_8(object){
  return this.this$01.put_2($getKey(this.val$entry2), object);
}
;
_.val$lastValueMod3 = 0;
var Ljava_util_InternalStringMap$2_2_classLit = createForClass('java.util', 'InternalStringMap/2', 707, Ljava_util_AbstractMapEntry_2_classLit);
function $clinit_LinkedHashMap(){
  $clinit_LinkedHashMap = emptyMethod;
  $clinit_HashMap();
  $clinit_Map();
}

function LinkedHashMap(){
  $clinit_LinkedHashMap();
  HashMap.call(this);
  this.$init_888();
  this.resetChainEntries();
}

function LinkedHashMap_0(ignored, alsoIgnored, accessOrder){
  $clinit_LinkedHashMap();
  HashMap_1.call(this, ignored, alsoIgnored);
  this.$init_888();
  this.accessOrder = accessOrder;
  this.resetChainEntries();
}

defineClass(414, 35, {4:1, 1:1, 82:1}, LinkedHashMap, LinkedHashMap_0);
_.$init_888 = function $init_888(){
  this.head_0 = new LinkedHashMap$ChainEntry(this);
  this.map_0 = new HashMap;
}
;
_.clear_0 = function clear_25(){
  this.map_0.clear_0();
  this.resetChainEntries();
}
;
_.containsKey = function containsKey_4(key){
  return this.map_0.containsKey(key);
}
;
_.containsValue = function containsValue_4(value_0){
  var node;
  node = this.head_0.next_0;
  while (jsNotEquals(node, this.head_0)) {
    if (equals_40(node.getValue_0(), value_0)) {
      return true;
    }
    node = node.next_0;
  }
  return false;
}
;
_.entrySet = function entrySet_4(){
  return new LinkedHashMap$EntrySet(this);
}
;
_.get_1 = function get_2678(key){
  var entry;
  entry = castTo(this.map_0.get_1(key), 203);
  if (isNotNull(entry)) {
    this.recordAccess(entry);
    return entry.getValue_0();
  }
  return null;
}
;
_.put = function put_6(key, value_0){
  var eldest, newEntry, old, oldValue;
  old = castTo(this.map_0.get_1(key), 203);
  if (isNull(old)) {
    newEntry = new LinkedHashMap$ChainEntry_0(this, key, value_0);
    this.map_0.put(key, newEntry);
    newEntry.addToEnd();
    eldest = this.head_0.next_0;
    if (this.removeEldestEntry(eldest)) {
      eldest.remove_3();
      this.map_0.remove_4(eldest.getKey());
    }
    return null;
  }
   else {
    oldValue = old.setValue_6(value_0);
    this.recordAccess(old);
    return oldValue;
  }
}
;
_.recordAccess = function recordAccess(entry){
  if (this.accessOrder) {
    entry.remove_3();
    entry.addToEnd();
  }
}
;
_.remove_4 = function remove_58(key){
  var entry;
  entry = castTo(this.map_0.remove_4(key), 203);
  if (isNotNull(entry)) {
    entry.remove_3();
    return entry.getValue_0();
  }
  return null;
}
;
_.removeEldestEntry = function removeEldestEntry(eldest){
  return false;
}
;
_.resetChainEntries = function resetChainEntries(){
  this.head_0.prev = this.head_0;
  this.head_0.next_0 = this.head_0;
}
;
_.size_1 = function size_24(){
  return this.map_0.size_1();
}
;
_.accessOrder = false;
var Ljava_util_LinkedHashMap_2_classLit = createForClass('java.util', 'LinkedHashMap', 414, Ljava_util_HashMap_2_classLit);
function $clinit_LinkedHashMap$ChainEntry(){
  $clinit_LinkedHashMap$ChainEntry = emptyMethod;
  $clinit_AbstractMap$SimpleEntry();
}

function LinkedHashMap$ChainEntry(this$0){
  $clinit_LinkedHashMap$ChainEntry();
  LinkedHashMap$ChainEntry_0.call(this, this$0, null, null);
}

function LinkedHashMap$ChainEntry_0(this$0, key, value_0){
  $clinit_LinkedHashMap$ChainEntry();
  this.this$01 = this$0;
  AbstractMap$SimpleEntry.call(this, key, value_0);
  this.$init_889();
}

defineClass(203, 268, {1:1, 203:1, 39:1}, LinkedHashMap$ChainEntry, LinkedHashMap$ChainEntry_0);
_.$init_889 = function $init_889(){
}
;
_.addToEnd = function addToEnd(){
  var tail;
  tail = this.this$01.head_0.prev;
  if (!(isNotNull(this.this$01.head_0) && isNotNull(tail))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  if (!(isNull(this.next_0) && isNull(this.prev))) {
    debugger;
    throw toJs(makeAssertionError());
  }
  this.prev = tail;
  this.next_0 = this.this$01.head_0;
  tail.next_0 = this.this$01.head_0.prev = this;
}
;
_.remove_3 = function remove_59(){
  this.next_0.prev = this.prev;
  this.prev.next_0 = this.next_0;
  this.next_0 = this.prev = null;
}
;
var Ljava_util_LinkedHashMap$ChainEntry_2_classLit = createForClass('java.util', 'LinkedHashMap/ChainEntry', 203, Ljava_util_AbstractMap$SimpleEntry_2_classLit);
function $clinit_LinkedHashMap$EntrySet(){
  $clinit_LinkedHashMap$EntrySet = emptyMethod;
  $clinit_AbstractSet();
}

function LinkedHashMap$EntrySet(this$0){
  $clinit_LinkedHashMap$EntrySet();
  this.this$01 = this$0;
  AbstractSet.call(this);
  this.$init_890();
}

defineClass(833, 135, {1:1, 47:1, 53:1}, LinkedHashMap$EntrySet);
_.$init_890 = function $init_890(){
}
;
_.clear_0 = function clear_26(){
  this.this$01.clear_0();
}
;
_.contains_0 = function contains_16(o){
  if (instanceOf(o, 39)) {
    return this.this$01.containsEntry(castTo(o, 39));
  }
  return false;
}
;
_.iterator_0 = function iterator_27(){
  return new LinkedHashMap$EntrySet$EntryIterator(this);
}
;
_.remove_1 = function remove_60(entry){
  var key;
  if (this.contains_0(entry)) {
    key = castTo(entry, 39).getKey();
    this.this$01.remove_4(key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_25(){
  return this.this$01.size_1();
}
;
var Ljava_util_LinkedHashMap$EntrySet_2_classLit = createForClass('java.util', 'LinkedHashMap/EntrySet', 833, Ljava_util_AbstractSet_2_classLit);
function $clinit_LinkedHashMap$EntrySet$EntryIterator(){
  $clinit_LinkedHashMap$EntrySet$EntryIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function LinkedHashMap$EntrySet$EntryIterator(this$1){
  $clinit_LinkedHashMap$EntrySet$EntryIterator();
  this.this$11 = this$1;
  Object_0.call(this);
  this.$init_891();
  this.next_0 = this$1.this$01.head_0.next_0;
  recordLastKnownStructure(this$1.this$01.map_0, this);
}

defineClass(834, 1, {1:1, 63:1}, LinkedHashMap$EntrySet$EntryIterator);
_.$init_891 = function $init_891(){
}
;
_.next_1 = function next_26(){
  return this.next_3();
}
;
_.hasNext_0 = function hasNext_16(){
  return jsNotEquals(this.next_0, this.this$11.this$01.head_0);
}
;
_.next_3 = function next_27(){
  checkStructuralChange(this.this$11.this$01.map_0, this);
  checkCriticalElement(this.hasNext_0());
  this.last = this.next_0;
  this.next_0 = this.next_0.next_0;
  return this.last;
}
;
_.remove_3 = function remove_61(){
  checkState(isNotNull(this.last));
  checkStructuralChange(this.this$11.this$01.map_0, this);
  this.last.remove_3();
  this.this$11.this$01.map_0.remove_4(this.last.getKey());
  recordLastKnownStructure(this.this$11.this$01.map_0, this);
  this.last = null;
}
;
var Ljava_util_LinkedHashMap$EntrySet$EntryIterator_2_classLit = createForClass('java.util', 'LinkedHashMap/EntrySet/EntryIterator', 834, Ljava_lang_Object_2_classLit);
function $clinit_LinkedHashSet(){
  $clinit_LinkedHashSet = emptyMethod;
  $clinit_HashSet();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_Set();
}

function LinkedHashSet(){
  $clinit_LinkedHashSet();
  HashSet_1.call(this, new LinkedHashMap);
  this.$init_892();
}

defineClass(835, 52, {4:1, 1:1, 47:1, 53:1}, LinkedHashSet);
_.$init_892 = function $init_892(){
}
;
var Ljava_util_LinkedHashSet_2_classLit = createForClass('java.util', 'LinkedHashSet', 835, Ljava_util_HashSet_2_classLit);
function $clinit_LinkedList(){
  $clinit_LinkedList = emptyMethod;
  $clinit_AbstractSequentialList();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_List();
  $clinit_Iterable();
  $clinit_Collection();
}

function LinkedList(){
  $clinit_LinkedList();
  AbstractSequentialList.call(this);
  this.$init_893();
  this.reset_1();
}

defineClass(196, 711, {4:1, 1:1, 47:1, 38:1}, LinkedList);
_.$init_893 = function $init_893(){
  this.header = new LinkedList$Node;
  this.tail = new LinkedList$Node;
}
;
_.add_5 = function add_50(o){
  this.addLast(o);
  return true;
}
;
_.addFirst = function addFirst(o){
  this.addNode(o, this.header, this.header.next_0);
}
;
_.addLast = function addLast(o){
  this.addNode(o, this.tail.prev, this.tail);
}
;
_.addNode = function addNode(o, prev, next){
  $clinit_LinkedList();
  var node;
  node = new LinkedList$Node;
  node.value_0 = o;
  node.prev = prev;
  node.next_0 = next;
  next.prev = prev.next_0 = node;
  ++this.size_0;
}
;
_.clear_0 = function clear_27(){
  this.reset_1();
}
;
_.listIterator_0 = function listIterator_6(index_0){
  var i, node;
  checkPositionIndex(index_0, this.size_0);
  if (index_0 >= this.size_0 >> 1) {
    node = this.tail;
    for (i = this.size_0; i > index_0; --i) {
      node = node.prev;
    }
  }
   else {
    node = this.header.next_0;
    for (i = 0; i < index_0; ++i) {
      node = node.next_0;
    }
  }
  return new LinkedList$ListIteratorImpl(this, index_0, node);
}
;
_.removeNode = function removeNode(node){
  $clinit_LinkedList();
  var oldValue;
  oldValue = node.value_0;
  node.next_0.prev = node.prev;
  node.prev.next_0 = node.next_0;
  node.next_0 = node.prev = null;
  node.value_0 = null;
  --this.size_0;
  return oldValue;
}
;
_.reset_1 = function reset_1(){
  this.header.next_0 = this.tail;
  this.tail.prev = this.header;
  this.header.prev = this.tail.next_0 = null;
  this.size_0 = 0;
}
;
_.size_1 = function size_26(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_LinkedList_2_classLit = createForClass('java.util', 'LinkedList', 196, Ljava_util_AbstractSequentialList_2_classLit);
function $clinit_LinkedList$ListIteratorImpl(){
  $clinit_LinkedList$ListIteratorImpl = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function LinkedList$ListIteratorImpl(this$0, index_0, startNode){
  $clinit_LinkedList$ListIteratorImpl();
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_894();
  this.currentNode = startNode;
  this.currentIndex = index_0;
}

defineClass(712, 1, {1:1, 63:1}, LinkedList$ListIteratorImpl);
_.$init_894 = function $init_894(){
  this.lastNode = null;
}
;
_.add_12 = function add_51(o){
  this.this$01.addNode(o, this.currentNode.prev, this.currentNode);
  ++this.currentIndex;
  this.lastNode = null;
}
;
_.hasNext_0 = function hasNext_17(){
  return jsNotEquals(this.currentNode, this.this$01.tail);
}
;
_.hasPrevious = function hasPrevious_2(){
  return jsNotEquals(this.currentNode.prev, this.this$01.header);
}
;
_.next_1 = function next_28(){
  checkElement(this.hasNext_0());
  this.lastNode = this.currentNode;
  this.currentNode = this.currentNode.next_0;
  ++this.currentIndex;
  return this.lastNode.value_0;
}
;
_.previous = function previous_3(){
  checkElement(this.hasPrevious());
  this.lastNode = this.currentNode = this.currentNode.prev;
  --this.currentIndex;
  return this.lastNode.value_0;
}
;
_.remove_3 = function remove_62(){
  var nextNode;
  checkState(isNotNull(this.lastNode));
  nextNode = this.lastNode.next_0;
  this.this$01.removeNode(this.lastNode);
  if (jsEquals(this.currentNode, this.lastNode)) {
    this.currentNode = nextNode;
  }
   else {
    --this.currentIndex;
  }
  this.lastNode = null;
}
;
_.set_5 = function set_15(o){
  checkState(isNotNull(this.lastNode));
  this.lastNode.value_0 = o;
}
;
_.currentIndex = 0;
var Ljava_util_LinkedList$ListIteratorImpl_2_classLit = createForClass('java.util', 'LinkedList/ListIteratorImpl', 712, Ljava_lang_Object_2_classLit);
function $clinit_LinkedList$Node(){
  $clinit_LinkedList$Node = emptyMethod;
  $clinit_Object();
}

function LinkedList$Node(){
  $clinit_LinkedList$Node();
  Object_0.call(this);
  this.$init_895();
}

defineClass(334, 1, {1:1}, LinkedList$Node);
_.$init_895 = function $init_895(){
}
;
var Ljava_util_LinkedList$Node_2_classLit = createForClass('java.util', 'LinkedList/Node', 334, Ljava_lang_Object_2_classLit);
function $clinit_Locale(){
  $clinit_Locale = emptyMethod;
  $clinit_Object();
  ROOT = new Locale$1;
  ENGLISH = new Locale$2;
  US = new Locale$3;
  defaultLocale = new Locale$4;
}

function Locale(){
  $clinit_Locale();
  Object_0.call(this);
  this.$init_896();
}

function getDefault_0(){
  $clinit_Locale();
  return defaultLocale;
}

defineClass(263, 1, {1:1});
_.$init_896 = function $init_896(){
}
;
var ENGLISH, ROOT, US, defaultLocale;
var Ljava_util_Locale_2_classLit = createForClass('java.util', 'Locale', 263, Ljava_lang_Object_2_classLit);
function $clinit_Locale$1(){
  $clinit_Locale$1 = emptyMethod;
  $clinit_Locale();
}

function Locale$1(){
  $clinit_Locale$1();
  Locale.call(this);
  this.$init_897();
}

defineClass(548, 263, {1:1}, Locale$1);
_.$init_897 = function $init_897(){
}
;
_.toString_0 = function toString_78(){
  return '';
}
;
var Ljava_util_Locale$1_2_classLit = createForClass('java.util', 'Locale/1', 548, Ljava_util_Locale_2_classLit);
function $clinit_Locale$2(){
  $clinit_Locale$2 = emptyMethod;
  $clinit_Locale();
}

function Locale$2(){
  $clinit_Locale$2();
  Locale.call(this);
  this.$init_898();
}

defineClass(549, 263, {1:1}, Locale$2);
_.$init_898 = function $init_898(){
}
;
_.toString_0 = function toString_79(){
  return 'en';
}
;
var Ljava_util_Locale$2_2_classLit = createForClass('java.util', 'Locale/2', 549, Ljava_util_Locale_2_classLit);
function $clinit_Locale$3(){
  $clinit_Locale$3 = emptyMethod;
  $clinit_Locale();
}

function Locale$3(){
  $clinit_Locale$3();
  Locale.call(this);
  this.$init_899();
}

defineClass(550, 263, {1:1}, Locale$3);
_.$init_899 = function $init_899(){
}
;
_.toString_0 = function toString_80(){
  return 'en_US';
}
;
var Ljava_util_Locale$3_2_classLit = createForClass('java.util', 'Locale/3', 550, Ljava_util_Locale_2_classLit);
function $clinit_Locale$4(){
  $clinit_Locale$4 = emptyMethod;
  $clinit_Locale();
}

function Locale$4(){
  $clinit_Locale$4();
  Locale.call(this);
  this.$init_900();
}

defineClass(551, 263, {1:1}, Locale$4);
_.$init_900 = function $init_900(){
}
;
_.toString_0 = function toString_81(){
  return 'unknown';
}
;
var Ljava_util_Locale$4_2_classLit = createForClass('java.util', 'Locale/4', 551, Ljava_util_Locale_2_classLit);
function $clinit_NoSuchElementException(){
  $clinit_NoSuchElementException = emptyMethod;
  $clinit_RuntimeException();
}

function NoSuchElementException(){
  $clinit_NoSuchElementException();
  RuntimeException.call(this);
  this.$init_901();
}

defineClass(125, 27, {4:1, 25:1, 1:1, 27:1, 24:1, 125:1}, NoSuchElementException);
_.$init_901 = function $init_901(){
}
;
var Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util', 'NoSuchElementException', 125, Ljava_lang_RuntimeException_2_classLit);
function $clinit_Objects(){
  $clinit_Objects = emptyMethod;
  $clinit_Object();
}

function equals_40(a, b){
  $clinit_Objects();
  return maskUndefined(a) === maskUndefined(b) || jsNotEquals(a, null) && equals_Ljava_lang_Object__Z__devirtual$(a, b);
}

function equals_41(a, b){
  $clinit_Objects();
  return jsEquals(a, b);
}

function hash_1(values){
  $clinit_Objects();
  return hashCode_40(values);
}

function hashCode_45(o){
  $clinit_Objects();
  return jsNotEquals(o, null)?hashCode__I__devirtual$(o):0;
}

function $clinit_Spliterator(){
  $clinit_Spliterator = emptyMethod;
}

function $forEachRemaining(this$static, consumer){
  while (this$static.tryAdvance(consumer)) {
  }
}

var Ljava_util_Spliterator_2_classLit = createForInterface('java.util', 'Spliterator');
function $clinit_Spliterators(){
  $clinit_Spliterators = emptyMethod;
  $clinit_Object();
}

function checkCriticalArrayBounds(start_0, end, length_0){
  if (start_0 > end || start_0 < 0 || end > length_0) {
    throw toJs(new ArrayIndexOutOfBoundsException_0('fromIndex: ' + start_0 + ', toIndex: ' + end + ', length: ' + length_0));
  }
}

function sizeKnownSpliteratorCharacteristics(characteristics){
  $clinit_Spliterators();
  return characteristics | 64 | 16384;
}

function spliterator_1(array, fromIndex, toIndex, characteristics){
  $clinit_Spliterators();
  checkCriticalArrayBounds(fromIndex, toIndex, array.length);
  return new Spliterators$ArraySpliterator(array, fromIndex, toIndex, characteristics);
}

function $clinit_Spliterators$BaseSpliterator(){
  $clinit_Spliterators$BaseSpliterator = emptyMethod;
  $clinit_Object();
  $clinit_Spliterator();
}

function Spliterators$BaseSpliterator(size_0, characteristics){
  $clinit_Spliterators$BaseSpliterator();
  Object_0.call(this);
  this.$init_902();
  this.sizeEstimate = size_0;
  this.characteristics = (characteristics & 64) != 0?characteristics | 16384:characteristics;
}

defineClass(696, 1, {1:1, 58:1});
_.$init_902 = function $init_902(){
}
;
_.forEachRemaining = function forEachRemaining(consumer){
  $forEachRemaining(this, consumer);
}
;
_.characteristics_0 = function characteristics_0(){
  return this.characteristics;
}
;
_.estimateSize = function estimateSize(){
  return this.sizeEstimate;
}
;
_.characteristics = 0;
_.sizeEstimate = 0;
var Ljava_util_Spliterators$BaseSpliterator_2_classLit = createForClass('java.util', 'Spliterators/BaseSpliterator', 696, Ljava_lang_Object_2_classLit);
function $clinit_Spliterators$AbstractSpliterator(){
  $clinit_Spliterators$AbstractSpliterator = emptyMethod;
  $clinit_Spliterators$BaseSpliterator();
  $clinit_Spliterator();
}

function Spliterators$AbstractSpliterator(size_0, characteristics){
  $clinit_Spliterators$AbstractSpliterator();
  Spliterators$BaseSpliterator.call(this, size_0, characteristics);
  this.$init_903();
}

defineClass(697, 696, {1:1, 58:1});
_.$init_903 = function $init_903(){
}
;
var Ljava_util_Spliterators$AbstractSpliterator_2_classLit = createForClass('java.util', 'Spliterators/AbstractSpliterator', 697, Ljava_util_Spliterators$BaseSpliterator_2_classLit);
function $clinit_Spliterators$BaseArraySpliterator(){
  $clinit_Spliterators$BaseArraySpliterator = emptyMethod;
  $clinit_Object();
  $clinit_Spliterator();
}

function Spliterators$BaseArraySpliterator(from, limit, characteristics){
  $clinit_Spliterators$BaseArraySpliterator();
  Object_0.call(this);
  this.$init_904();
  this.index_0 = from;
  this.limit = limit;
  this.characteristics = sizeKnownSpliteratorCharacteristics(characteristics);
}

defineClass(699, 1, {1:1, 58:1});
_.$init_904 = function $init_904(){
}
;
_.forEachRemaining = function forEachRemaining_1(consumer){
  $forEachRemaining(this, consumer);
}
;
_.characteristics_0 = function characteristics_1(){
  return this.characteristics;
}
;
_.estimateSize = function estimateSize_0(){
  return fromInt_0(this.limit - this.index_0);
}
;
_.forEachRemaining_0 = function forEachRemaining_0(consumer){
  checkNotNull(consumer);
  while (this.index_0 < this.limit) {
    this.consume_0(consumer, this.index_0++);
  }
}
;
_.tryAdvance_0 = function tryAdvance(consumer){
  checkNotNull(consumer);
  if (this.index_0 < this.limit) {
    this.consume_0(consumer, this.index_0++);
    return true;
  }
  return false;
}
;
_.characteristics = 0;
_.index_0 = 0;
_.limit = 0;
var Ljava_util_Spliterators$BaseArraySpliterator_2_classLit = createForClass('java.util', 'Spliterators/BaseArraySpliterator', 699, Ljava_lang_Object_2_classLit);
function $clinit_Spliterators$ArraySpliterator(){
  $clinit_Spliterators$ArraySpliterator = emptyMethod;
  $clinit_Spliterators$BaseArraySpliterator();
  $clinit_Spliterator();
}

function Spliterators$ArraySpliterator(array, from, limit, characteristics){
  $clinit_Spliterators$ArraySpliterator();
  Spliterators$BaseArraySpliterator.call(this, from, limit, characteristics);
  this.$init_905();
  this.array = array;
}

defineClass(700, 699, {1:1, 58:1}, Spliterators$ArraySpliterator);
_.$init_905 = function $init_905(){
}
;
_.consume_0 = function consume_0(consumer, index_0){
  this.consume_1(castTo(consumer, 92), index_0);
}
;
_.forEachRemaining = function forEachRemaining_2(consumer){
  this.forEachRemaining_0(consumer);
}
;
_.tryAdvance = function tryAdvance_0(consumer){
  return this.tryAdvance_0(consumer);
}
;
_.consume_1 = function consume_1(consumer, index_0){
  consumer.accept(this.array[index_0]);
}
;
var Ljava_util_Spliterators$ArraySpliterator_2_classLit = createForClass('java.util', 'Spliterators/ArraySpliterator', 700, Ljava_util_Spliterators$BaseArraySpliterator_2_classLit);
function $clinit_Consumer(){
  $clinit_Consumer = emptyMethod;
}

var Ljava_util_function_Consumer_2_classLit = createForInterface('java.util.function', 'Consumer');
function $clinit_Vector(){
  $clinit_Vector = emptyMethod;
  $clinit_AbstractList();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_List();
}

function Vector(){
  $clinit_Vector();
  AbstractList.call(this);
  this.$init_906();
  this.arrayList = new ArrayList;
}

function checkArrayElementIndex(index_0, size_0){
  if (index_0 < 0 || index_0 >= size_0) {
    throw toJs(new ArrayIndexOutOfBoundsException);
  }
}

defineClass(415, 192, {4:1, 1:1, 47:1, 38:1, 158:1}, Vector);
_.$init_906 = function $init_906(){
}
;
_.add_6 = function add_52(index_0, o){
  checkArrayElementIndex(index_0, this.size_1() + 1);
  this.arrayList.add_6(index_0, o);
}
;
_.add_5 = function add_53(o){
  return this.arrayList.add_5(o);
}
;
_.addAll = function addAll_3(c){
  return this.arrayList.addAll(c);
}
;
_.clear_0 = function clear_28(){
  this.arrayList.clear_0();
}
;
_.contains_0 = function contains_17(elem){
  return this.arrayList.contains_0(elem);
}
;
_.containsAll = function containsAll_0(c){
  return this.arrayList.containsAll(c);
}
;
_.get_0 = function get_2679(index_0){
  checkArrayElementIndex(index_0, this.size_1());
  return this.arrayList.get_0(index_0);
}
;
_.indexOf_0 = function indexOf_4(elem){
  return this.arrayList.indexOf_0(elem);
}
;
_.isEmpty = function isEmpty_9(){
  return this.arrayList.size_1() == 0;
}
;
_.iterator_0 = function iterator_28(){
  return this.arrayList.iterator_0();
}
;
_.remove_2 = function remove_63(index_0){
  checkArrayElementIndex(index_0, this.size_1());
  return this.arrayList.remove_2(index_0);
}
;
_.removeAll = function removeAll_3(c){
  return this.arrayList.removeAll(c);
}
;
_.removeRange = function removeRange_1(fromIndex, endIndex){
  this.arrayList.removeRange(fromIndex, endIndex);
}
;
_.set_1 = function set_16(index_0, elem){
  checkArrayElementIndex(index_0, this.size_1());
  return this.arrayList.set_1(index_0, elem);
}
;
_.size_1 = function size_27(){
  return this.arrayList.size_1();
}
;
_.sort_0 = function sort_8(c){
  this.arrayList.sort_0(c);
}
;
_.toArray = function toArray_9(){
  return this.arrayList.toArray();
}
;
_.toArray_0 = function toArray_10(a){
  return this.arrayList.toArray_0(a);
}
;
_.toString_0 = function toString_82(){
  return this.arrayList.toString_0();
}
;
var Ljava_util_Vector_2_classLit = createForClass('java.util', 'Vector', 415, Ljava_util_AbstractList_2_classLit);
function $clinit_Stack(){
  $clinit_Stack = emptyMethod;
  $clinit_Vector();
}

function Stack(){
  $clinit_Stack();
  Vector.call(this);
  this.$init_907();
}

defineClass(416, 415, {4:1, 1:1, 47:1, 38:1, 158:1}, Stack);
_.$init_907 = function $init_907(){
}
;
_.peek_0 = function peek_0(){
  var sz;
  sz = this.size_1();
  if (sz > 0) {
    return this.get_0(sz - 1);
  }
   else {
    throw toJs(new EmptyStackException);
  }
}
;
_.pop_0 = function pop_0(){
  var sz;
  sz = this.size_1();
  if (sz > 0) {
    return this.remove_2(sz - 1);
  }
   else {
    throw toJs(new EmptyStackException);
  }
}
;
_.push_0 = function push_1(o){
  this.add_5(o);
  return o;
}
;
var Ljava_util_Stack_2_classLit = createForClass('java.util', 'Stack', 416, Ljava_util_Vector_2_classLit);
function $clinit_StringJoiner(){
  $clinit_StringJoiner = emptyMethod;
  $clinit_Object();
}

function StringJoiner(delimiter, prefix, suffix){
  $clinit_StringJoiner();
  Object_0.call(this);
  this.$init_908();
  this.delimiter = toString_46(delimiter);
  this.prefix = toString_46(prefix);
  this.suffix = toString_46(suffix);
  this.emptyValue = this.prefix + ('' + this.suffix);
}

defineClass(220, 1, {1:1}, StringJoiner);
_.$init_908 = function $init_908(){
}
;
_.add_14 = function add_54(newElement){
  this.initBuilderOrAddDelimiter();
  this.builder.append_7(newElement);
  return this;
}
;
_.initBuilderOrAddDelimiter = function initBuilderOrAddDelimiter(){
  if (isNull(this.builder)) {
    this.builder = new StringBuilder_1(this.prefix);
  }
   else {
    this.builder.append_9(this.delimiter);
  }
}
;
_.toString_0 = function toString_83(){
  if (isNull(this.builder)) {
    return this.emptyValue;
  }
   else if (isEmpty__Z__devirtual$(this.suffix)) {
    return this.builder.toString_0();
  }
   else {
    return this.builder.toString_0() + ('' + this.suffix);
  }
}
;
var Ljava_util_StringJoiner_2_classLit = createForClass('java.util', 'StringJoiner', 220, Ljava_lang_Object_2_classLit);
function $clinit_TreeMap(){
  $clinit_TreeMap = emptyMethod;
  $clinit_AbstractNavigableMap();
}

function TreeMap(c){
  $clinit_TreeMap();
  AbstractNavigableMap.call(this);
  this.$init_909();
  this.root = null;
  this.cmp = nullToNaturalOrder(c);
}

function otherChild(child){
  if (!(child == 0 || child == 1)) {
    debugger;
    throw toJs(makeAssertionError());
  }
  return 1 - child;
}

defineClass(417, 836, {4:1, 1:1, 82:1}, TreeMap);
_.$init_909 = function $init_909(){
  this.size_0 = 0;
}
;
_.clear_0 = function clear_29(){
  this.root = null;
  this.size_0 = 0;
}
;
_.comparator = function comparator(){
  return naturalOrderToNull(this.cmp);
}
;
_.entryIterator = function entryIterator_0(){
  return new TreeMap$EntryIterator(this);
}
;
_.entrySet = function entrySet_5(){
  return new TreeMap$EntrySet(this);
}
;
_.getEntry = function getEntry_0(key){
  var c, childNum, tree;
  tree = this.root;
  while (isNotNull(tree)) {
    c = this.cmp.compare(key, tree.getKey());
    if (c == 0) {
      return tree;
    }
    childNum = c < 0?0:1;
    tree = tree.child[childNum];
  }
  return null;
}
;
_.inOrderAdd = function inOrderAdd(list, type_0, current, fromKey, fromInclusive, toKey, toInclusive){
  $clinit_TreeMap();
  var leftNode, rightNode;
  if (isNull(current)) {
    return;
  }
  leftNode = current.child[0];
  if (isNotNull(leftNode)) {
    this.inOrderAdd(list, type_0, leftNode, fromKey, fromInclusive, toKey, toInclusive);
  }
  if (this.inRange(type_0, current.getKey(), fromKey, fromInclusive, toKey, toInclusive)) {
    list.add_5(current);
  }
  rightNode = current.child[1];
  if (isNotNull(rightNode)) {
    this.inOrderAdd(list, type_0, rightNode, fromKey, fromInclusive, toKey, toInclusive);
  }
}
;
_.inRange = function inRange(type_0, key, fromKey, fromInclusive, toKey, toInclusive){
  if (type_0.fromKeyValid() && this.smaller(key, fromKey, !fromInclusive)) {
    return false;
  }
  if (type_0.toKeyValid() && this.larger(key, toKey, !toInclusive)) {
    return false;
  }
  return true;
}
;
_.insert_8 = function insert_12(tree, newNode, state){
  var c, childNum;
  if (isNull(tree)) {
    return newNode;
  }
   else {
    c = this.cmp.compare(newNode.getKey(), tree.getKey());
    if (c == 0) {
      state.value_0 = tree.setValue_6(newNode.getValue_0());
      state.found = true;
      return tree;
    }
    childNum = c < 0?0:1;
    setCheck(tree.child, childNum, this.insert_8(tree.child[childNum], newNode, state));
    if (this.isRed_0(tree.child[childNum])) {
      if (this.isRed_0(tree.child[otherChild(childNum)])) {
        tree.isRed = true;
        tree.child[0].isRed = false;
        tree.child[1].isRed = false;
      }
       else {
        if (this.isRed_0(tree.child[childNum].child[childNum])) {
          tree = this.rotateSingle(tree, otherChild(childNum));
        }
         else if (this.isRed_0(tree.child[childNum].child[otherChild(childNum)])) {
          tree = this.rotateDouble(tree, otherChild(childNum));
        }
      }
    }
  }
  return tree;
}
;
_.isRed_0 = function isRed_0(node){
  return isNotNull(node) && node.isRed;
}
;
_.larger = function larger(a, b, orEqual){
  var compare;
  compare = this.cmp.compare(a, b);
  return compare > 0 || orEqual && compare == 0;
}
;
_.put = function put_7(key, value_0){
  var node, state;
  node = new TreeMap$Node(key, value_0);
  state = new TreeMap$State;
  this.root = this.insert_8(this.root, node, state);
  if (!state.found) {
    ++this.size_0;
  }
  this.root.isRed = false;
  return state.value_0;
}
;
_.remove_4 = function remove_64(k){
  var key, state;
  key = k;
  state = new TreeMap$State;
  this.removeWithState(key, state);
  return state.value_0;
}
;
_.removeEntry = function removeEntry(entry){
  var state;
  state = new TreeMap$State;
  state.matchValue = true;
  state.value_0 = entry.getValue_0();
  return this.removeWithState(entry.getKey(), state);
}
;
_.removeWithState = function removeWithState(key, state){
  var c, dir_0, dir2, found, grandparent, head, last, newNode, node, parent_0, sibling;
  if (isNull(this.root)) {
    return false;
  }
  found = null;
  parent_0 = null;
  head = new TreeMap$Node(null, null);
  dir_0 = 1;
  setCheck(head.child, 1, this.root);
  node = head;
  while (isNotNull(node.child[dir_0])) {
    last = dir_0;
    grandparent = parent_0;
    parent_0 = node;
    node = node.child[dir_0];
    c = this.cmp.compare(key, node.getKey());
    dir_0 = c < 0?0:1;
    if (c == 0 && (!state.matchValue || equals_40(node.getValue_0(), state.value_0))) {
      found = node;
    }
    if (!this.isRed_0(node) && !this.isRed_0(node.child[dir_0])) {
      if (this.isRed_0(node.child[otherChild(dir_0)])) {
        parent_0 = setCheck(parent_0.child, last, this.rotateSingle(node, dir_0));
      }
       else if (!this.isRed_0(node.child[otherChild(dir_0)])) {
        sibling = parent_0.child[otherChild(last)];
        if (isNotNull(sibling)) {
          if (!this.isRed_0(sibling.child[otherChild(last)]) && !this.isRed_0(sibling.child[last])) {
            parent_0.isRed = false;
            sibling.isRed = true;
            node.isRed = true;
          }
           else {
            if (!isNotNull(grandparent)) {
              debugger;
              throw toJs(makeAssertionError());
            }
            dir2 = jsEquals(grandparent.child[1], parent_0)?1:0;
            if (this.isRed_0(sibling.child[last])) {
              setCheck(grandparent.child, dir2, this.rotateDouble(parent_0, last));
            }
             else if (this.isRed_0(sibling.child[otherChild(last)])) {
              setCheck(grandparent.child, dir2, this.rotateSingle(parent_0, last));
            }
            node.isRed = grandparent.child[dir2].isRed = true;
            grandparent.child[dir2].child[0].isRed = false;
            grandparent.child[dir2].child[1].isRed = false;
          }
        }
      }
    }
  }
  if (isNotNull(found)) {
    state.found = true;
    state.value_0 = found.getValue_0();
    if (jsNotEquals(node, found)) {
      newNode = new TreeMap$Node(node.getKey(), node.getValue_0());
      this.replaceNode_0(head, found, newNode);
      if (jsEquals(parent_0, found)) {
        parent_0 = newNode;
      }
    }
    setCheck(parent_0.child, jsEquals(parent_0.child[1], node)?1:0, node.child[isNull(node.child[0])?1:0]);
    this.size_0--;
  }
  this.root = head.child[1];
  if (isNotNull(this.root)) {
    this.root.isRed = false;
  }
  return state.found;
}
;
_.replaceNode_0 = function replaceNode_0(head, node, newNode){
  var direction, parent_0;
  parent_0 = head;
  direction = jsEquals(parent_0.getKey(), null) || this.cmp.compare(node.getKey(), parent_0.getKey()) > 0?1:0;
  while (jsNotEquals(parent_0.child[direction], node)) {
    parent_0 = parent_0.child[direction];
    if (!isNotNull(parent_0)) {
      debugger;
      throw toJs(makeAssertionError());
    }
    direction = this.cmp.compare(node.getKey(), parent_0.getKey()) > 0?1:0;
  }
  setCheck(parent_0.child, direction, newNode);
  newNode.isRed = node.isRed;
  setCheck(newNode.child, 0, node.child[0]);
  setCheck(newNode.child, 1, node.child[1]);
  setCheck(node.child, 0, null);
  setCheck(node.child, 1, null);
}
;
_.rotateDouble = function rotateDouble(tree, rotateDirection){
  var otherChildDir;
  otherChildDir = otherChild(rotateDirection);
  setCheck(tree.child, otherChildDir, this.rotateSingle(tree.child[otherChildDir], otherChildDir));
  return this.rotateSingle(tree, rotateDirection);
}
;
_.rotateSingle = function rotateSingle(tree, rotateDirection){
  var otherChildDir, save;
  otherChildDir = otherChild(rotateDirection);
  save = tree.child[otherChildDir];
  setCheck(tree.child, otherChildDir, save.child[rotateDirection]);
  setCheck(save.child, rotateDirection, tree);
  tree.isRed = true;
  save.isRed = false;
  return save;
}
;
_.size_1 = function size_28(){
  return this.size_0;
}
;
_.smaller = function smaller(a, b, orEqual){
  var compare;
  compare = this.cmp.compare(a, b);
  return compare < 0 || orEqual && compare == 0;
}
;
_.size_0 = 0;
var Ljava_util_TreeMap_2_classLit = createForClass('java.util', 'TreeMap', 417, Ljava_util_AbstractNavigableMap_2_classLit);
function $clinit_TreeMap$EntryIterator(){
  $clinit_TreeMap$EntryIterator = emptyMethod;
  $clinit_Object();
  $clinit_Iterator();
}

function TreeMap$EntryIterator(this$0){
  $clinit_TreeMap$EntryIterator();
  TreeMap$EntryIterator_0.call(this, this$0, ($clinit_TreeMap$SubMapType() , All), null, false, null, false);
}

function TreeMap$EntryIterator_0(this$0, type_0, fromKey, fromInclusive, toKey, toInclusive){
  var list;
  this.this$01 = this$0;
  Object_0.call(this);
  this.$init_910();
  list = new ArrayList;
  this$0.inOrderAdd(list, type_0, this$0.root, fromKey, fromInclusive, toKey, toInclusive);
  this.iter = list.listIterator();
}

defineClass(418, 1, {1:1, 63:1}, TreeMap$EntryIterator);
_.$init_910 = function $init_910(){
}
;
_.next_1 = function next_29(){
  return this.next_3();
}
;
_.hasNext_0 = function hasNext_18(){
  return this.iter.hasNext_0();
}
;
_.next_3 = function next_30(){
  return this.last = castTo(this.iter.next_1(), 39);
}
;
_.remove_3 = function remove_65(){
  this.iter.remove_3();
  this.this$01.removeEntry(this.last);
  this.last = null;
}
;
var Ljava_util_TreeMap$EntryIterator_2_classLit = createForClass('java.util', 'TreeMap/EntryIterator', 418, Ljava_lang_Object_2_classLit);
function $clinit_TreeMap$EntrySet(){
  $clinit_TreeMap$EntrySet = emptyMethod;
  $clinit_AbstractNavigableMap$EntrySet();
}

function TreeMap$EntrySet(this$0){
  $clinit_TreeMap$EntrySet();
  this.this$01 = this$0;
  AbstractNavigableMap$EntrySet.call(this, this$0);
  this.$init_911();
}

defineClass(837, 419, {1:1, 47:1, 53:1}, TreeMap$EntrySet);
_.$init_911 = function $init_911(){
}
;
_.clear_0 = function clear_30(){
  this.this$01.clear_0();
}
;
var Ljava_util_TreeMap$EntrySet_2_classLit = createForClass('java.util', 'TreeMap/EntrySet', 837, Ljava_util_AbstractNavigableMap$EntrySet_2_classLit);
function $clinit_TreeMap$Node(){
  $clinit_TreeMap$Node = emptyMethod;
  $clinit_AbstractMap$SimpleEntry();
}

function TreeMap$Node(key, value_0){
  $clinit_TreeMap$Node();
  TreeMap$Node_0.call(this, key, value_0, true);
}

function TreeMap$Node_0(key, value_0, isRed){
  AbstractMap$SimpleEntry.call(this, key, value_0);
  this.$init_912();
  this.isRed = isRed;
}

defineClass(217, 268, {1:1, 39:1, 217:1}, TreeMap$Node);
_.$init_912 = function $init_912(){
  this.child = initUnidimensionalArray(Ljava_util_TreeMap$Node_2_classLit, {4:1, 1:1, 5:1}, 217, 2, 0, 1);
}
;
_.isRed = false;
var Ljava_util_TreeMap$Node_2_classLit = createForClass('java.util', 'TreeMap/Node', 217, Ljava_util_AbstractMap$SimpleEntry_2_classLit);
function $clinit_TreeMap$State(){
  $clinit_TreeMap$State = emptyMethod;
  $clinit_Object();
}

function TreeMap$State(){
  $clinit_TreeMap$State();
  Object_0.call(this);
  this.$init_913();
}

defineClass(349, 1, {1:1}, TreeMap$State);
_.$init_913 = function $init_913(){
}
;
_.toString_0 = function toString_84(){
  return 'State: mv=' + this.matchValue + ' value=' + this.value_0 + ' done=' + this.done_0 + ' found=' + this.found;
}
;
_.done_0 = false;
_.found = false;
_.matchValue = false;
var Ljava_util_TreeMap$State_2_classLit = createForClass('java.util', 'TreeMap/State', 349, Ljava_lang_Object_2_classLit);
function $clinit_TreeMap$SubMapType(){
  $clinit_TreeMap$SubMapType = emptyMethod;
  $clinit_Enum();
  All = new TreeMap$SubMapType('All', 0);
  Head = new TreeMap$SubMapType$1('Head', 1);
  Range_0 = new TreeMap$SubMapType$2('Range', 2);
  Tail = new TreeMap$SubMapType$3('Tail', 3);
}

function TreeMap$SubMapType(enum$name, enum$ordinal){
  $clinit_TreeMap$SubMapType();
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_914();
}

function valueOf_56(name_0){
  $clinit_TreeMap$SubMapType();
  return valueOf(($clinit_TreeMap$SubMapType$Map() , $MAP_31), name_0);
}

function values_34(){
  $clinit_TreeMap$SubMapType();
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_TreeMap$SubMapType_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 168, 0, [All, Head, Range_0, Tail]);
}

defineClass(168, 7, {4:1, 8:1, 7:1, 1:1, 168:1}, TreeMap$SubMapType);
_.$init_914 = function $init_914(){
}
;
_.fromKeyValid = function fromKeyValid(){
  return false;
}
;
_.toKeyValid = function toKeyValid(){
  return false;
}
;
var All, Head, Range_0, Tail;
var Ljava_util_TreeMap$SubMapType_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType', 168, Ljava_lang_Enum_2_classLit, values_34, valueOf_56);
function $clinit_TreeMap$SubMapType$1(){
  $clinit_TreeMap$SubMapType$1 = emptyMethod;
  $clinit_TreeMap$SubMapType();
}

function TreeMap$SubMapType$1(enum$name, enum$ordinal){
  $clinit_TreeMap$SubMapType$1();
  TreeMap$SubMapType.call(this, enum$name, enum$ordinal);
  this.$init_915();
}

defineClass(838, 168, {4:1, 8:1, 7:1, 1:1, 168:1}, TreeMap$SubMapType$1);
_.$init_915 = function $init_915(){
}
;
_.toKeyValid = function toKeyValid_0(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$1_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/1', 838, Ljava_util_TreeMap$SubMapType_2_classLit, null, null);
function $clinit_TreeMap$SubMapType$2(){
  $clinit_TreeMap$SubMapType$2 = emptyMethod;
  $clinit_TreeMap$SubMapType();
}

function TreeMap$SubMapType$2(enum$name, enum$ordinal){
  $clinit_TreeMap$SubMapType$2();
  TreeMap$SubMapType.call(this, enum$name, enum$ordinal);
  this.$init_916();
}

defineClass(839, 168, {4:1, 8:1, 7:1, 1:1, 168:1}, TreeMap$SubMapType$2);
_.$init_916 = function $init_916(){
}
;
_.fromKeyValid = function fromKeyValid_0(){
  return true;
}
;
_.toKeyValid = function toKeyValid_1(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$2_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/2', 839, Ljava_util_TreeMap$SubMapType_2_classLit, null, null);
function $clinit_TreeMap$SubMapType$3(){
  $clinit_TreeMap$SubMapType$3 = emptyMethod;
  $clinit_TreeMap$SubMapType();
}

function TreeMap$SubMapType$3(enum$name, enum$ordinal){
  $clinit_TreeMap$SubMapType$3();
  TreeMap$SubMapType.call(this, enum$name, enum$ordinal);
  this.$init_917();
}

defineClass(840, 168, {4:1, 8:1, 7:1, 1:1, 168:1}, TreeMap$SubMapType$3);
_.$init_917 = function $init_917(){
}
;
_.fromKeyValid = function fromKeyValid_1(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$3_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/3', 840, Ljava_util_TreeMap$SubMapType_2_classLit, null, null);
function $clinit_TreeMap$SubMapType$Map(){
  $clinit_TreeMap$SubMapType$Map = emptyMethod;
  $MAP_31 = createValueOfMap(values_34());
}

var $MAP_31;
function $clinit_TreeSet(){
  $clinit_TreeSet = emptyMethod;
  $clinit_AbstractSet();
  $clinit_Iterable();
  $clinit_Collection();
  $clinit_Set();
  $clinit_SortedSet();
}

function TreeSet(c){
  $clinit_TreeSet();
  AbstractSet.call(this);
  this.$init_918();
  this.map_0 = new TreeMap(c);
}

defineClass(843, 135, {4:1, 1:1, 47:1, 53:1}, TreeSet);
_.$init_918 = function $init_918(){
}
;
_.add_5 = function add_55(o){
  return jsEquals(this.map_0.put(o, ($clinit_Boolean() , FALSE_2)), null);
}
;
_.clear_0 = function clear_31(){
  this.map_0.clear_0();
}
;
_.comparator = function comparator_0(){
  return this.map_0.comparator();
}
;
_.contains_0 = function contains_18(o){
  return this.map_0.containsKey(o);
}
;
_.iterator_0 = function iterator_29(){
  return this.map_0.keySet_0().iterator_0();
}
;
_.remove_1 = function remove_66(o){
  return jsNotEquals(this.map_0.remove_4(o), null);
}
;
_.size_1 = function size_29(){
  return this.map_0.size_1();
}
;
var Ljava_util_TreeSet_2_classLit = createForClass('java.util', 'TreeSet', 843, Ljava_util_AbstractSet_2_classLit);
function $clinit_BiConsumer(){
  $clinit_BiConsumer = emptyMethod;
}

var Ljava_util_function_BiConsumer_2_classLit = createForInterface('java.util.function', 'BiConsumer');
function $clinit_BiFunction(){
  $clinit_BiFunction = emptyMethod;
}

var Ljava_util_function_BiFunction_2_classLit = createForInterface('java.util.function', 'BiFunction');
function $clinit_BinaryOperator(){
  $clinit_BinaryOperator = emptyMethod;
}

var Ljava_util_function_BinaryOperator_2_classLit = createForInterface('java.util.function', 'BinaryOperator');
function $clinit_Function$lambda$0$Type(){
  $clinit_Function$lambda$0$Type = emptyMethod;
}

function Function$lambda$0$Type(){
  $clinit_Function$lambda$0$Type();
}

defineClass(500, 1, {1:1}, Function$lambda$0$Type);
_.apply_0 = function apply_2(t){
  return lambda$0_0(t);
}
;
var Ljava_util_function_Function$lambda$0$Type_2_classLit = createForClass('java.util.function', 'Function/lambda$0$Type', 500, Ljava_lang_Object_2_classLit);
function $clinit_IntFunction(){
  $clinit_IntFunction = emptyMethod;
}

var Ljava_util_function_IntFunction_2_classLit = createForInterface('java.util.function', 'IntFunction');
function $clinit_Handler(){
  $clinit_Handler = emptyMethod;
  $clinit_Object();
}

function Handler(){
  $clinit_Handler();
  Object_0.call(this);
  this.$init_919();
}

defineClass(239, 1, {1:1, 239:1});
_.$init_919 = function $init_919(){
}
;
_.getLevel_0 = function getLevel_0(){
  if (isNotNull(this.level)) {
    return this.level;
  }
  return $clinit_Level() , ALL_0;
}
;
_.isLoggable = function isLoggable(record){
  return this.getLevel_0().intValue() <= record.getLevel_0().intValue();
}
;
var Ljava_util_logging_Handler_2_classLit = createForClass('java.util.logging', 'Handler', 239, Ljava_lang_Object_2_classLit);
function $clinit_Level(){
  $clinit_Level = emptyMethod;
  $clinit_Object();
  ALL_0 = new Level$LevelAll;
  CONFIG = new Level$LevelConfig;
  FINE = new Level$LevelFine;
  FINER = new Level$LevelFiner;
  FINEST = new Level$LevelFinest;
  INFO = new Level$LevelInfo;
  OFF = new Level$LevelOff;
  SEVERE = new Level$LevelSevere;
  WARNING = new Level$LevelWarning;
}

function Level(){
  $clinit_Level();
  Object_0.call(this);
  this.$init_920();
}

defineClass(161, 1, {4:1, 1:1});
_.$init_920 = function $init_920(){
}
;
_.getName = function getName_5(){
  return 'DUMMY';
}
;
_.intValue = function intValue_1(){
  return -1;
}
;
_.toString_0 = function toString_85(){
  return this.getName();
}
;
var ALL_0, CONFIG, FINE, FINER, FINEST, INFO, OFF, SEVERE, WARNING;
var Ljava_util_logging_Level_2_classLit = createForClass('java.util.logging', 'Level', 161, Ljava_lang_Object_2_classLit);
function $clinit_Level$LevelAll(){
  $clinit_Level$LevelAll = emptyMethod;
  $clinit_Level();
}

function Level$LevelAll(){
  $clinit_Level$LevelAll();
  Level.call(this);
  this.$init_921();
}

defineClass(662, 161, {4:1, 1:1}, Level$LevelAll);
_.$init_921 = function $init_921(){
}
;
_.getName = function getName_6(){
  return 'ALL';
}
;
_.intValue = function intValue_2(){
  return -2147483648;
}
;
var Ljava_util_logging_Level$LevelAll_2_classLit = createForClass('java.util.logging', 'Level/LevelAll', 662, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelConfig(){
  $clinit_Level$LevelConfig = emptyMethod;
  $clinit_Level();
}

function Level$LevelConfig(){
  $clinit_Level$LevelConfig();
  Level.call(this);
  this.$init_922();
}

defineClass(663, 161, {4:1, 1:1}, Level$LevelConfig);
_.$init_922 = function $init_922(){
}
;
_.getName = function getName_7(){
  return 'CONFIG';
}
;
_.intValue = function intValue_3(){
  return 700;
}
;
var Ljava_util_logging_Level$LevelConfig_2_classLit = createForClass('java.util.logging', 'Level/LevelConfig', 663, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelFine(){
  $clinit_Level$LevelFine = emptyMethod;
  $clinit_Level();
}

function Level$LevelFine(){
  $clinit_Level$LevelFine();
  Level.call(this);
  this.$init_923();
}

defineClass(664, 161, {4:1, 1:1}, Level$LevelFine);
_.$init_923 = function $init_923(){
}
;
_.getName = function getName_8(){
  return 'FINE';
}
;
_.intValue = function intValue_4(){
  return 500;
}
;
var Ljava_util_logging_Level$LevelFine_2_classLit = createForClass('java.util.logging', 'Level/LevelFine', 664, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelFiner(){
  $clinit_Level$LevelFiner = emptyMethod;
  $clinit_Level();
}

function Level$LevelFiner(){
  $clinit_Level$LevelFiner();
  Level.call(this);
  this.$init_924();
}

defineClass(665, 161, {4:1, 1:1}, Level$LevelFiner);
_.$init_924 = function $init_924(){
}
;
_.getName = function getName_9(){
  return 'FINER';
}
;
_.intValue = function intValue_5(){
  return 400;
}
;
var Ljava_util_logging_Level$LevelFiner_2_classLit = createForClass('java.util.logging', 'Level/LevelFiner', 665, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelFinest(){
  $clinit_Level$LevelFinest = emptyMethod;
  $clinit_Level();
}

function Level$LevelFinest(){
  $clinit_Level$LevelFinest();
  Level.call(this);
  this.$init_925();
}

defineClass(666, 161, {4:1, 1:1}, Level$LevelFinest);
_.$init_925 = function $init_925(){
}
;
_.getName = function getName_10(){
  return 'FINEST';
}
;
_.intValue = function intValue_6(){
  return 300;
}
;
var Ljava_util_logging_Level$LevelFinest_2_classLit = createForClass('java.util.logging', 'Level/LevelFinest', 666, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelInfo(){
  $clinit_Level$LevelInfo = emptyMethod;
  $clinit_Level();
}

function Level$LevelInfo(){
  $clinit_Level$LevelInfo();
  Level.call(this);
  this.$init_926();
}

defineClass(667, 161, {4:1, 1:1}, Level$LevelInfo);
_.$init_926 = function $init_926(){
}
;
_.getName = function getName_11(){
  return 'INFO';
}
;
_.intValue = function intValue_7(){
  return 800;
}
;
var Ljava_util_logging_Level$LevelInfo_2_classLit = createForClass('java.util.logging', 'Level/LevelInfo', 667, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelOff(){
  $clinit_Level$LevelOff = emptyMethod;
  $clinit_Level();
}

function Level$LevelOff(){
  $clinit_Level$LevelOff();
  Level.call(this);
  this.$init_927();
}

defineClass(668, 161, {4:1, 1:1}, Level$LevelOff);
_.$init_927 = function $init_927(){
}
;
_.getName = function getName_12(){
  return 'OFF';
}
;
_.intValue = function intValue_8(){
  return 2147483647;
}
;
var Ljava_util_logging_Level$LevelOff_2_classLit = createForClass('java.util.logging', 'Level/LevelOff', 668, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelSevere(){
  $clinit_Level$LevelSevere = emptyMethod;
  $clinit_Level();
}

function Level$LevelSevere(){
  $clinit_Level$LevelSevere();
  Level.call(this);
  this.$init_928();
}

defineClass(669, 161, {4:1, 1:1}, Level$LevelSevere);
_.$init_928 = function $init_928(){
}
;
_.getName = function getName_13(){
  return 'SEVERE';
}
;
_.intValue = function intValue_9(){
  return 1000;
}
;
var Ljava_util_logging_Level$LevelSevere_2_classLit = createForClass('java.util.logging', 'Level/LevelSevere', 669, Ljava_util_logging_Level_2_classLit);
function $clinit_Level$LevelWarning(){
  $clinit_Level$LevelWarning = emptyMethod;
  $clinit_Level();
}

function Level$LevelWarning(){
  $clinit_Level$LevelWarning();
  Level.call(this);
  this.$init_929();
}

defineClass(670, 161, {4:1, 1:1}, Level$LevelWarning);
_.$init_929 = function $init_929(){
}
;
_.getName = function getName_14(){
  return 'WARNING';
}
;
_.intValue = function intValue_10(){
  return 900;
}
;
var Ljava_util_logging_Level$LevelWarning_2_classLit = createForClass('java.util.logging', 'Level/LevelWarning', 670, Ljava_util_logging_Level_2_classLit);
function $clinit_LogManager(){
  $clinit_LogManager = emptyMethod;
  $clinit_Object();
}

function LogManager(){
  Object_0.call(this);
  this.$init_930();
}

function getLogManager(){
  $clinit_LogManager();
  var rootLogger;
  if (isNull(singleton_0)) {
    singleton_0 = new LogManager;
    rootLogger = new Logger('', null);
    rootLogger.setLevel(($clinit_Level() , INFO));
    singleton_0.addLoggerImpl(rootLogger);
  }
  return singleton_0;
}

defineClass(609, 1, {1:1}, LogManager);
_.$init_930 = function $init_930(){
  this.loggerMap = new HashMap;
}
;
_.addLoggerAndEnsureParents = function addLoggerAndEnsureParents(logger){
  var name_0, parentName;
  name_0 = logger.getName();
  parentName = substring_II_Ljava_lang_String___devirtual$(name_0, 0, $wnd.Math.max(0, lastIndexOf_I_I__devirtual$(name_0, 46)));
  logger.setParent_0(this.ensureLogger(parentName));
  this.addLoggerImpl(logger);
}
;
_.addLoggerImpl = function addLoggerImpl(logger){
  if (equals_Ljava_lang_Object__Z__devirtual$_2('ENABLED', 'ENABLED')) {
    if (isEmpty__Z__devirtual$(logger.getName())) {
      logger.addHandler_2(new SimpleConsoleLogHandler);
    }
  }
  this.loggerMap.put(logger.getName(), logger);
}
;
_.ensureLogger = function ensureLogger(name_0){
  var logger, newLogger;
  logger = this.getLogger(name_0);
  if (isNull(logger)) {
    newLogger = new Logger(name_0, null);
    this.addLoggerAndEnsureParents(newLogger);
    return newLogger;
  }
  return logger;
}
;
_.getLogger = function getLogger(name_0){
  return castTo(this.loggerMap.get_1(name_0), 229);
}
;
var singleton_0;
var Ljava_util_logging_LogManager_2_classLit = createForClass('java.util.logging', 'LogManager', 609, Ljava_lang_Object_2_classLit);
function $clinit_LogRecord(){
  $clinit_LogRecord = emptyMethod;
  $clinit_Object();
}

function LogRecord(level, msg){
  $clinit_LogRecord();
  Object_0.call(this);
  this.$init_931();
  this.level = level;
  this.msg = msg;
  this.millis_0 = currentTimeMillis_2();
}

defineClass(796, 1, {4:1, 1:1}, LogRecord);
_.$init_931 = function $init_931(){
  this.loggerName = '';
  this.thrown = null;
}
;
_.getLevel_0 = function getLevel_1(){
  return this.level;
}
;
_.getMessage = function getMessage_7(){
  return this.msg;
}
;
_.getThrown_0 = function getThrown_0(){
  return this.thrown;
}
;
_.setLoggerName = function setLoggerName(newName){
  this.loggerName = newName;
}
;
_.setThrown = function setThrown(newThrown){
  this.thrown = newThrown;
}
;
_.millis_0 = 0;
var Ljava_util_logging_LogRecord_2_classLit = createForClass('java.util.logging', 'LogRecord', 796, Ljava_lang_Object_2_classLit);
function $clinit_Logger(){
  $clinit_Logger = emptyMethod;
  var level;
  $clinit_Object();
  {
    level = 'OFF';
    if (jsNotEquals(level, 'ALL') && jsNotEquals(level, 'INFO') && jsNotEquals(level, 'WARNING') && jsNotEquals(level, 'SEVERE') && jsNotEquals(level, 'OFF')) {
      throw toJs(new AssertionError_0("Undefined value for jre.logging.logLevel: '" + level + "'"));
    }
    LOGGING_OFF = jsEquals(level, 'OFF');
    ALL_ENABLED = jsEquals(level, 'ALL');
    INFO_ENABLED = jsEquals(level, 'ALL') || jsEquals(level, 'INFO');
    WARNING_ENABLED = jsEquals(level, 'ALL') || jsEquals(level, 'INFO') || jsEquals(level, 'WARNING');
    SEVERE_ENABLED = jsEquals(level, 'ALL') || jsEquals(level, 'INFO') || jsEquals(level, 'WARNING') || jsEquals(level, 'SEVERE');
  }
}

function Logger(name_0, resourceName){
  $clinit_Logger();
  Object_0.call(this);
  this.$init_932();
  if (LOGGING_OFF) {
    return;
  }
  this.name_0 = name_0;
  this.useParentHandlers = true;
  this.handlers = new ArrayList;
}

function getLogger_0(name_0){
  $clinit_Logger();
  if (LOGGING_OFF) {
    return new Logger(null, null);
  }
  return getLogManager().ensureLogger(name_0);
}

defineClass(229, 1, {1:1, 229:1}, Logger);
_.$init_932 = function $init_932(){
}
;
_.actuallyLog = function actuallyLog(level, msg, thrown){
  var record;
  record = new LogRecord(level, msg);
  record.setThrown(thrown);
  record.setLoggerName(this.getName());
  this.actuallyLog_0(record);
}
;
_.actuallyLog_0 = function actuallyLog_0(record){
  var handler, handler$array, handler$array0, handler$index, handler$index0, handler$max, handler$max0, logger;
  for (handler$array0 = this.getHandlers() , handler$index0 = 0 , handler$max0 = handler$array0.length; handler$index0 < handler$max0; ++handler$index0) {
    handler = handler$array0[handler$index0];
    handler.publish(record);
  }
  logger = this.getUseParentHandlers()?this.getParent_1():null;
  while (isNotNull(logger)) {
    for (handler$array = logger.getHandlers() , handler$index = 0 , handler$max = handler$array.length; handler$index < handler$max; ++handler$index) {
      handler = handler$array[handler$index];
      handler.publish(record);
    }
    logger = logger.getUseParentHandlers()?logger.getParent_1():null;
  }
}
;
_.addHandler_2 = function addHandler_5(handler){
  if (LOGGING_OFF) {
    return;
  }
  this.handlers.add_5(handler);
}
;
_.getEffectiveLevel = function getEffectiveLevel(){
  var effectiveLevel, logger;
  if (isNotNull(this.level)) {
    return this.level;
  }
  logger = this.getParent_1();
  while (isNotNull(logger)) {
    effectiveLevel = logger.getLevel_0();
    if (isNotNull(effectiveLevel)) {
      return effectiveLevel;
    }
    logger = logger.getParent_1();
  }
  return $clinit_Level() , INFO;
}
;
_.getHandlers = function getHandlers_0(){
  if (LOGGING_OFF) {
    return initUnidimensionalArray(Ljava_util_logging_Handler_2_classLit, {4:1, 1:1, 5:1, 1053:1}, 239, 0, 0, 1);
  }
  return castTo(this.handlers.toArray_0(initUnidimensionalArray(Ljava_util_logging_Handler_2_classLit, {4:1, 1:1, 5:1, 1053:1}, 239, this.handlers.size_1(), 0, 1)), 1053);
}
;
_.getLevel_0 = function getLevel_2(){
  return LOGGING_OFF?null:this.level;
}
;
_.getName = function getName_15(){
  return LOGGING_OFF?null:this.name_0;
}
;
_.getParent_1 = function getParent_2(){
  return LOGGING_OFF?null:this.parent_0;
}
;
_.getUseParentHandlers = function getUseParentHandlers(){
  return LOGGING_OFF?false:this.useParentHandlers;
}
;
_.isLoggable_0 = function isLoggable_0(messageLevel){
  if (ALL_ENABLED) {
    return messageLevel.intValue() >= this.getEffectiveLevel().intValue();
  }
   else if (INFO_ENABLED) {
    return messageLevel.intValue() >= ($clinit_Level() , INFO).intValue();
  }
   else if (WARNING_ENABLED) {
    return messageLevel.intValue() >= ($clinit_Level() , WARNING).intValue();
  }
   else if (SEVERE_ENABLED) {
    return messageLevel.intValue() >= ($clinit_Level() , SEVERE).intValue();
  }
   else {
    return false;
  }
}
;
_.log_1 = function log_5(level, msg){
  this.log_2(level, msg, null);
}
;
_.log_2 = function log_6(level, msg, thrown){
  if (this.isLoggable_0(level)) {
    this.actuallyLog(level, msg, thrown);
  }
}
;
_.setLevel = function setLevel(newLevel){
  if (LOGGING_OFF) {
    return;
  }
  this.level = newLevel;
}
;
_.setParent_0 = function setParent_0(newParent){
  if (LOGGING_OFF) {
    return;
  }
  if (isNotNull(newParent)) {
    this.parent_0 = newParent;
  }
}
;
_.severe = function severe(msg){
  if (!SEVERE_ENABLED) {
    return;
  }
  this.log_1(($clinit_Level() , SEVERE), msg);
}
;
_.warning = function warning_1(msg){
  if (!WARNING_ENABLED) {
    return;
  }
  this.log_1(($clinit_Level() , WARNING), msg);
}
;
_.useParentHandlers = false;
var ALL_ENABLED = false, INFO_ENABLED = false, LOGGING_OFF = false, SEVERE_ENABLED = false, WARNING_ENABLED = false;
var Ljava_util_logging_Logger_2_classLit = createForClass('java.util.logging', 'Logger', 229, Ljava_lang_Object_2_classLit);
function $clinit_SimpleConsoleLogHandler(){
  $clinit_SimpleConsoleLogHandler = emptyMethod;
  $clinit_Handler();
}

function SimpleConsoleLogHandler(){
  $clinit_SimpleConsoleLogHandler();
  Handler.call(this);
  this.$init_933();
}

defineClass(750, 239, {1:1, 239:1}, SimpleConsoleLogHandler);
_.$init_933 = function $init_933(){
}
;
_.publish = function publish(record){
  var console_0, level;
  console_0 = createIfSupported_2();
  if (isNull(console_0)) {
    return;
  }
  if (!this.isLoggable(record)) {
    return;
  }
  level = this.toConsoleLogLevel(record.getLevel_0());
  console_0.log_3(level, record.getMessage());
  if (isNotNull(record.getThrown_0())) {
    console_0.log_0(level, record.getThrown_0());
  }
}
;
_.toConsoleLogLevel = function toConsoleLogLevel(level){
  var val;
  val = level.intValue();
  if (val >= ($clinit_Level() , SEVERE).intValue()) {
    return 'error';
  }
   else if (val >= ($clinit_Level() , WARNING).intValue()) {
    return 'warn';
  }
   else if (val >= ($clinit_Level() , INFO).intValue()) {
    return 'info';
  }
   else {
    return 'log';
  }
}
;
var Ljava_util_logging_SimpleConsoleLogHandler_2_classLit = createForClass('java.util.logging', 'SimpleConsoleLogHandler', 750, Ljava_util_logging_Handler_2_classLit);
function $clinit_BaseStream(){
  $clinit_BaseStream = emptyMethod;
}

var Ljava_util_stream_BaseStream_2_classLit = createForInterface('java.util.stream', 'BaseStream');
function $clinit_Collector(){
  $clinit_Collector = emptyMethod;
}

function of_3(supplier, accumulator, combiner, characteristics){
  $clinit_Collector();
  checkNotNull(supplier);
  checkNotNull(accumulator);
  checkNotNull(combiner);
  checkNotNull(characteristics);
  return new CollectorImpl(supplier, accumulator, combiner, identity_0(), characteristics);
}

var Ljava_util_stream_Collector_2_classLit = createForInterface('java.util.stream', 'Collector');
function $clinit_Collector$Characteristics(){
  $clinit_Collector$Characteristics = emptyMethod;
  $clinit_Enum();
  CONCURRENT = new Collector$Characteristics('CONCURRENT', 0);
  IDENTITY_FINISH = new Collector$Characteristics('IDENTITY_FINISH', 1);
  UNORDERED = new Collector$Characteristics('UNORDERED', 2);
}

function Collector$Characteristics(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
  this.$init_934();
}

function valueOf_57(name_0){
  $clinit_Collector$Characteristics();
  return valueOf(($clinit_Collector$Characteristics$Map() , $MAP_32), name_0);
}

function values_35(){
  $clinit_Collector$Characteristics();
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 218, 0, [CONCURRENT, IDENTITY_FINISH, UNORDERED]);
}

defineClass(218, 7, {4:1, 8:1, 7:1, 1:1, 218:1}, Collector$Characteristics);
_.$init_934 = function $init_934(){
}
;
var CONCURRENT, IDENTITY_FINISH, UNORDERED;
var Ljava_util_stream_Collector$Characteristics_2_classLit = createForEnum('java.util.stream', 'Collector/Characteristics', 218, Ljava_lang_Enum_2_classLit, values_35, valueOf_57);
function $clinit_Collector$Characteristics$Map(){
  $clinit_Collector$Characteristics$Map = emptyMethod;
  $MAP_32 = createValueOfMap(values_35());
}

var $MAP_32;
function $clinit_CollectorImpl(){
  $clinit_CollectorImpl = emptyMethod;
  $clinit_Object();
}

function CollectorImpl(supplier, accumulator, combiner, finisher, characteristics){
  $clinit_CollectorImpl();
  Object_0.call(this);
  this.$init_935();
  this.supplier = supplier;
  this.accumulator = accumulator;
  this.characteristics = emptySet();
  this.combiner = combiner;
  this.finisher = finisher;
}

defineClass(1046, 1, {1:1}, CollectorImpl);
_.$init_935 = function $init_935(){
}
;
_.accumulator_0 = function accumulator_0(){
  return this.accumulator;
}
;
_.combiner_0 = function combiner_0(){
  return this.combiner;
}
;
_.finisher_0 = function finisher_0(){
  return this.finisher;
}
;
_.supplier_0 = function supplier_0(){
  return this.supplier;
}
;
var Ljava_util_stream_CollectorImpl_2_classLit = createForClass('java.util.stream', 'CollectorImpl', 1046, Ljava_lang_Object_2_classLit);
function $clinit_Collectors(){
  $clinit_Collectors = emptyMethod;
  $clinit_Object();
}

function addAll_4(collection, items){
  collection.addAll(items);
  return collection;
}

function lambda$42(c1_0, c2_1){
  $clinit_Collectors();
  return addAll_4(c1_0, c2_1);
}

function toCollection(collectionFactory){
  return of_3(collectionFactory, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), {4:1, 16:1, 1:1, 5:1}, 218, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]));
}

function toList(){
  $clinit_Collectors();
  return toCollection(new Collectors$21methodref$ctor$Type);
}

function $clinit_Collectors$20methodref$add$Type(){
  $clinit_Collectors$20methodref$add$Type = emptyMethod;
}

function Collectors$20methodref$add$Type(){
  $clinit_Collectors$20methodref$add$Type();
}

defineClass(1038, 1, {1:1}, Collectors$20methodref$add$Type);
_.accept_0 = function accept(arg0, arg1){
  castTo(arg0, 47).add_5(arg1);
}
;
var Ljava_util_stream_Collectors$20methodref$add$Type_2_classLit = createForClass('java.util.stream', 'Collectors/20methodref$add$Type', 1038, Ljava_lang_Object_2_classLit);
function $clinit_Collectors$21methodref$ctor$Type(){
  $clinit_Collectors$21methodref$ctor$Type = emptyMethod;
}

function Collectors$21methodref$ctor$Type(){
  $clinit_Collectors$21methodref$ctor$Type();
}

defineClass(1040, 1, {1:1}, Collectors$21methodref$ctor$Type);
_.get_6 = function get_2680(){
  return new ArrayList;
}
;
var Ljava_util_stream_Collectors$21methodref$ctor$Type_2_classLit = createForClass('java.util.stream', 'Collectors/21methodref$ctor$Type', 1040, Ljava_lang_Object_2_classLit);
function $clinit_Collectors$lambda$42$Type(){
  $clinit_Collectors$lambda$42$Type = emptyMethod;
}

function Collectors$lambda$42$Type(){
  $clinit_Collectors$lambda$42$Type();
}

defineClass(1039, 1, {1:1}, Collectors$lambda$42$Type);
_.apply_1 = function apply_3(arg0, arg1){
  return lambda$42(castTo(arg0, 47), castTo(arg1, 47));
}
;
var Ljava_util_stream_Collectors$lambda$42$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$42$Type', 1039, Ljava_lang_Object_2_classLit);
function $clinit_Stream(){
  $clinit_Stream = emptyMethod;
}

var Ljava_util_stream_Stream_2_classLit = createForInterface('java.util.stream', 'Stream');
function $clinit_TerminatableStream(){
  $clinit_TerminatableStream = emptyMethod;
  $clinit_Object();
}

function TerminatableStream(previous){
  $clinit_TerminatableStream();
  Object_0.call(this);
  this.$init_936();
  if (isNull(previous)) {
    this.root = null;
    this.onClose = new ArrayList;
  }
   else {
    this.root = previous;
    this.onClose = null;
  }
}

defineClass(478, 1, {1:1});
_.$init_936 = function $init_936(){
  this.terminated = false;
}
;
_.terminate = function terminate(){
  if (isNull(this.root)) {
    this.throwIfTerminated();
    this.terminated = true;
  }
   else {
    this.root.terminate();
  }
}
;
_.throwIfTerminated = function throwIfTerminated(){
  if (isNotNull(this.root)) {
    this.root.throwIfTerminated();
  }
   else if (this.terminated) {
    throw toJs(new IllegalStateException_0("Stream already terminated, can't be modified or used"));
  }
}
;
_.terminated = false;
var Ljava_util_stream_TerminatableStream_2_classLit = createForClass('java.util.stream', 'TerminatableStream', 478, Ljava_lang_Object_2_classLit);
function $clinit_StreamImpl(){
  $clinit_StreamImpl = emptyMethod;
  $clinit_TerminatableStream();
  NULL_CONSUMER = new StreamImpl$lambda$0$Type;
}

function StreamImpl(prev, spliterator){
  $clinit_StreamImpl();
  TerminatableStream.call(this, prev);
  this.$init_937();
  this.spliterator = spliterator;
}

function lambda$0_1(value_0){
  $clinit_StreamImpl();
  {
  }
}

function lambda$2(arg0){
  $clinit_StreamImpl();
  return initUnidimensionalArray(Ljava_lang_Object_2_classLit, {4:1, 1:1, 5:1}, 1, arg0, 5, 1);
}

function lambda$4(collector_0, a_1, t_2){
  $clinit_StreamImpl();
  {
    collector_0.accumulator_0().accept_0(a_1, t_2);
    return a_1;
  }
}

function lambda$5(consumer_0, accumulator_1, item_2){
  $clinit_StreamImpl();
  {
    consumer_0.accept(accumulator_1.apply_1(consumer_0.value_0, item_2));
  }
}

defineClass(479, 478, {1:1}, StreamImpl);
_.$init_937 = function $init_937(){
}
;
_.collect_0 = function collect_1(collector){
  return collector.finisher_0().apply_0(this.reduce(collector.supplier_0().get_6(), new StreamImpl$lambda$4$Type(collector), collector.combiner_0()));
}
;
_.map_2 = function map_2(mapper){
  this.throwIfTerminated();
  return new StreamImpl(this, new StreamImpl$MapToObjSpliterator(mapper, this.spliterator));
}
;
_.reduce = function reduce(identity, accumulator, combiner){
  var consumer;
  this.terminate();
  consumer = new StreamImpl$ValueConsumer;
  consumer.value_0 = identity;
  this.spliterator.forEachRemaining(new StreamImpl$lambda$5$Type(consumer, accumulator));
  return consumer.value_0;
}
;
_.toArray = function toArray_11(){
  return this.toArray_1(new StreamImpl$0methodref$lambda$2$Type);
}
;
_.toArray_1 = function toArray_12(generator){
  var collected;
  collected = castTo(this.collect_0(toList()), 38);
  return collected.toArray_0(castToArray(generator.apply_2(collected.size_1())));
}
;
var NULL_CONSUMER;
var Ljava_util_stream_StreamImpl_2_classLit = createForClass('java.util.stream', 'StreamImpl', 479, Ljava_util_stream_TerminatableStream_2_classLit);
function $clinit_StreamImpl$0methodref$lambda$2$Type(){
  $clinit_StreamImpl$0methodref$lambda$2$Type = emptyMethod;
}

function StreamImpl$0methodref$lambda$2$Type(){
  $clinit_StreamImpl$0methodref$lambda$2$Type();
}

defineClass(1015, 1, {1:1}, StreamImpl$0methodref$lambda$2$Type);
_.apply_2 = function apply_4(arg0){
  return lambda$2(arg0);
}
;
var Ljava_util_stream_StreamImpl$0methodref$lambda$2$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/0methodref$lambda$2$Type', 1015, Ljava_lang_Object_2_classLit);
function $clinit_StreamImpl$MapToObjSpliterator(){
  $clinit_StreamImpl$MapToObjSpliterator = emptyMethod;
  $clinit_Spliterators$AbstractSpliterator();
}

function StreamImpl$MapToObjSpliterator(map_0, original){
  $clinit_StreamImpl$MapToObjSpliterator();
  Spliterators$AbstractSpliterator.call(this, original.estimateSize(), original.characteristics_0() & ~(4 | 1));
  this.$init_938();
  checkNotNull(map_0);
  this.map_0 = map_0;
  this.original = original;
}

defineClass(1011, 697, {1:1, 58:1}, StreamImpl$MapToObjSpliterator);
_.$init_938 = function $init_938(){
}
;
_.lambda$0 = function lambda$0_2(action_1, u_1){
  $clinit_StreamImpl$MapToObjSpliterator();
  action_1.accept(this.map_0.apply_0(u_1));
}
;
_.tryAdvance = function tryAdvance_1(action){
  return this.original.tryAdvance(new StreamImpl$MapToObjSpliterator$lambda$0$Type(this, action));
}
;
var Ljava_util_stream_StreamImpl$MapToObjSpliterator_2_classLit = createForClass('java.util.stream', 'StreamImpl/MapToObjSpliterator', 1011, Ljava_util_Spliterators$AbstractSpliterator_2_classLit);
function $clinit_StreamImpl$MapToObjSpliterator$lambda$0$Type(){
  $clinit_StreamImpl$MapToObjSpliterator$lambda$0$Type = emptyMethod;
}

function StreamImpl$MapToObjSpliterator$lambda$0$Type($$outer_0, action_1){
  $clinit_StreamImpl$MapToObjSpliterator$lambda$0$Type();
  this.$$outer_0 = $$outer_0;
  this.action_1 = action_1;
}

defineClass(1013, 1, {1:1, 92:1}, StreamImpl$MapToObjSpliterator$lambda$0$Type);
_.accept = function accept_0(arg0){
  this.$$outer_0.lambda$0(this.action_1, arg0);
}
;
var Ljava_util_stream_StreamImpl$MapToObjSpliterator$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/MapToObjSpliterator/lambda$0$Type', 1013, Ljava_lang_Object_2_classLit);
function $clinit_StreamImpl$ValueConsumer(){
  $clinit_StreamImpl$ValueConsumer = emptyMethod;
  $clinit_Object();
  $clinit_Consumer();
}

function StreamImpl$ValueConsumer(){
  $clinit_StreamImpl$ValueConsumer();
  Object_0.call(this);
  this.$init_939();
}

defineClass(1012, 1, {1:1, 92:1}, StreamImpl$ValueConsumer);
_.$init_939 = function $init_939(){
}
;
_.accept = function accept_1(value_0){
  this.value_0 = value_0;
}
;
var Ljava_util_stream_StreamImpl$ValueConsumer_2_classLit = createForClass('java.util.stream', 'StreamImpl/ValueConsumer', 1012, Ljava_lang_Object_2_classLit);
function $clinit_StreamImpl$lambda$0$Type(){
  $clinit_StreamImpl$lambda$0$Type = emptyMethod;
}

function StreamImpl$lambda$0$Type(){
  $clinit_StreamImpl$lambda$0$Type();
}

defineClass(1014, 1, {1:1, 92:1}, StreamImpl$lambda$0$Type);
_.accept = function accept_2(arg0){
  lambda$0_1(arg0);
}
;
var Ljava_util_stream_StreamImpl$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/lambda$0$Type', 1014, Ljava_lang_Object_2_classLit);
function $clinit_StreamImpl$lambda$4$Type(){
  $clinit_StreamImpl$lambda$4$Type = emptyMethod;
}

function StreamImpl$lambda$4$Type(collector_0){
  $clinit_StreamImpl$lambda$4$Type();
  this.collector_0 = collector_0;
}

defineClass(1016, 1, {1:1}, StreamImpl$lambda$4$Type);
_.apply_1 = function apply_5(arg0, arg1){
  return lambda$4(this.collector_0, arg0, arg1);
}
;
var Ljava_util_stream_StreamImpl$lambda$4$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/lambda$4$Type', 1016, Ljava_lang_Object_2_classLit);
function $clinit_StreamImpl$lambda$5$Type(){
  $clinit_StreamImpl$lambda$5$Type = emptyMethod;
}

function StreamImpl$lambda$5$Type(consumer_0, accumulator_1){
  $clinit_StreamImpl$lambda$5$Type();
  this.consumer_0 = consumer_0;
  this.accumulator_1 = accumulator_1;
}

defineClass(1017, 1, {1:1, 92:1}, StreamImpl$lambda$5$Type);
_.accept = function accept_3(arg0){
  lambda$5(this.consumer_0, this.accumulator_1, arg0);
}
;
var Ljava_util_stream_StreamImpl$lambda$5$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/lambda$5$Type', 1017, Ljava_lang_Object_2_classLit);
function $clinit_StreamSupport(){
  $clinit_StreamSupport = emptyMethod;
  $clinit_Object();
}

function stream_2(spliterator, parallel){
  $clinit_StreamSupport();
  return new StreamImpl(null, spliterator);
}

function $clinit_ArrayHelper(){
  $clinit_ArrayHelper = emptyMethod;
  $clinit_Object();
}

function asNativeArray(array){
  return uncheckedCast(array);
}

function clone_1(array, fromIndex, toIndex){
  $clinit_ArrayHelper();
  var result;
  result = unsafeClone(array, fromIndex, toIndex);
  return stampJavaTypeInfo_1(result, array);
}

function copy(array, srcOfs, dest, destOfs, len){
  $clinit_ArrayHelper();
  copy_0(array, srcOfs, dest, destOfs, len, true);
}

function copy_0(src_0, srcOfs, dest, destOfs, len, overwrite){
  var batchEnd, batchStart, destArray, end, spliceArgs;
  if (maskUndefined(src_0) === maskUndefined(dest)) {
    src_0 = unsafeClone(src_0, srcOfs, srcOfs + len);
    srcOfs = 0;
  }
  destArray = asNativeArray(dest);
  for (batchStart = srcOfs , end = srcOfs + len; batchStart < end;) {
    batchEnd = $wnd.Math.min(batchStart + 10000, end);
    len = batchEnd - batchStart;
    spliceArgs = unsafeClone(src_0, batchStart, batchEnd);
    asNativeArray(spliceArgs).splice(0, 0, destOfs, overwrite?len:0);
    Array.prototype.splice.apply(destArray, spliceArgs);
    batchStart = batchEnd;
    destOfs += len;
  }
}

function createFrom(array, length_0){
  $clinit_ArrayHelper();
  return stampJavaTypeInfo_1(new Array(length_0), array);
}

function getLength_0(array){
  $clinit_ArrayHelper();
  return asNativeArray(array).length;
}

function insertTo(array, index_0, value_0){
  $clinit_ArrayHelper();
  asNativeArray(array).splice(index_0, 0, value_0);
}

function insertTo_0(array, index_0, values){
  $clinit_ArrayHelper();
  copy_0(values, 0, array, index_0, values.length, false);
}

function removeFrom(array, index_0, deleteCount){
  $clinit_ArrayHelper();
  asNativeArray(array).splice(index_0, deleteCount);
}

function setLength_0(array, length_0){
  $clinit_ArrayHelper();
  asNativeArray(array).length = length_0;
}

function unsafeClone(array, fromIndex, toIndex){
  $clinit_ArrayHelper();
  return asNativeArray(array).slice(fromIndex, toIndex);
}

defineClass(1182, 1, {1:1});
var Ljavaemul_internal_ArrayHelper_2_classLit = createForClass('javaemul.internal', 'ArrayHelper', 1182, Ljava_lang_Object_2_classLit);
function $clinit_ArrayHelper$NativeFunction(){
  $clinit_ArrayHelper$NativeFunction = emptyMethod;
  $clinit_Object();
}

function $clinit_ArrayStamper(){
  $clinit_ArrayStamper = emptyMethod;
  $clinit_Object();
}

function stampJavaTypeInfo_1(array, referenceType){
  $clinit_ArrayStamper();
  return stampJavaTypeInfo_0(array, referenceType);
}

function $clinit_Coercions(){
  $clinit_Coercions = emptyMethod;
  $clinit_Object();
}

function ensureInt(value_0){
  $clinit_Coercions();
  return value_0 | 0;
}

function $clinit_ConsoleLogger(){
  $clinit_ConsoleLogger = emptyMethod;
  $clinit_Object();
}

function ConsoleLogger(){
  Object_0.call(this);
  this.$init_940();
}

function createIfSupported_2(){
  $clinit_ConsoleLogger();
  return equals_Ljava_lang_Object__Z__devirtual$_2(typeof(console), 'undefined')?null:new ConsoleLogger;
}

function getBackingErrorStack(t){
  var backingError = t.backingJsObject_0;
  function stringify(fnStack){
    if (!fnStack || fnStack.length == 0) {
      return '';
    }
    return '\t' + fnStack.join('\n\t');
  }

  return backingError && (backingError.stack || stringify(t['fnStack']));
}

defineClass(981, 1, {1:1}, ConsoleLogger);
_.$init_940 = function $init_940(){
}
;
_.getGroupStartFn = function getGroupStartFn(expanded){
  if (!expanded && jsNotEquals(($clinit_ConsoleLogger$Console() , console.groupCollapsed), null)) {
    return $clinit_ConsoleLogger$Console() , console.groupCollapsed;
  }
   else if (jsNotEquals(($clinit_ConsoleLogger$Console() , console.group), null)) {
    return $clinit_ConsoleLogger$Console() , console.group;
  }
   else {
    return $clinit_ConsoleLogger$Console() , console.log;
  }
}
;
_.groupEnd_0 = function groupEnd(){
  if (jsNotEquals(($clinit_ConsoleLogger$Console() , console.groupEnd), null)) {
    ($clinit_ConsoleLogger$Console() , console.groupEnd).call(console);
  }
}
;
_.groupStart = function groupStart(msg, expanded){
  this.getGroupStartFn(expanded).call(console, msg);
}
;
_.log_3 = function log_7(level, message){
  var logFn;
  logFn = getProperty(console, level);
  logFn.call(console, message);
}
;
_.log_0 = function log_8(level, t){
  this.log_4(level, t, 'Exception: ', true);
}
;
_.log_4 = function log_9(level, t, label_0, expanded){
  var cause, suppressed, suppressed$array, suppressed$index, suppressed$max;
  this.groupStart(label_0 + ('' + t.toString_0()), expanded);
  this.log_3(level, getBackingErrorStack(t));
  cause = t.getCause();
  if (isNotNull(cause)) {
    this.log_4(level, cause, 'Caused by: ', false);
  }
  for (suppressed$array = t.getSuppressed() , suppressed$index = 0 , suppressed$max = suppressed$array.length; suppressed$index < suppressed$max; ++suppressed$index) {
    suppressed = suppressed$array[suppressed$index];
    this.log_4(level, suppressed, 'Suppressed: ', false);
  }
  this.groupEnd_0();
}
;
var Ljavaemul_internal_ConsoleLogger_2_classLit = createForClass('javaemul.internal', 'ConsoleLogger', 981, Ljava_lang_Object_2_classLit);
function $clinit_ConsoleLogger$Console(){
  $clinit_ConsoleLogger$Console = emptyMethod;
  $clinit_Object();
}

function $clinit_ConsoleLogger$LogFn(){
  $clinit_ConsoleLogger$LogFn = emptyMethod;
}

function $clinit_HashCodes(){
  $clinit_HashCodes = emptyMethod;
  $clinit_Object();
}

function getIdentityHashCode(o){
  $clinit_HashCodes();
  switch (typeof(o)) {
    case 'string':
      return getStringHashCode(uncheckedCast(o));
    case 'number':
      return hashCode_24(unsafeCastToDouble(o));
    case 'boolean':
      return hashCode_19(unsafeCastToBoolean(o));
    default:return jsEquals(o, null)?0:getObjectIdentityHashCode(o);
  }
}

function getObjectIdentityHashCode(o){
  $clinit_HashCodes();
  return getHashCode_1(o);
}

function getStringHashCode(s){
  $clinit_HashCodes();
  return getHashCode_2(s);
}

function $clinit_InternalPreconditions(){
  $clinit_InternalPreconditions = emptyMethod;
  $clinit_Object();
  LEVEL_NORMAL_OR_HIGHER = jsEquals('NORMAL', 'NORMAL');
  LEVEL_OPT_OR_HIGHER = jsEquals('NORMAL', 'OPTIMIZED') || jsEquals('NORMAL', 'NORMAL');
  LEVEL_MINIMAL_OR_HIGHER = jsEquals('NORMAL', 'MINIMAL') || jsEquals('NORMAL', 'OPTIMIZED') || jsEquals('NORMAL', 'NORMAL');
  {
    if (!LEVEL_MINIMAL_OR_HIGHER) {
      throw toJs(new IllegalStateException_0('Incorrect level: ' + 'NORMAL'));
    }
  }
  IS_TYPE_CHECKED = jsEquals(CHECK_TYPE, 'AUTO') && LEVEL_OPT_OR_HIGHER || jsEquals(CHECK_TYPE, 'ENABLED');
  IS_BOUNDS_CHECKED = jsEquals(CHECK_BOUNDS, 'AUTO') && LEVEL_NORMAL_OR_HIGHER || jsEquals(CHECK_BOUNDS, 'ENABLED');
  IS_API_CHECKED = jsEquals(CHECK_API, 'AUTO') && LEVEL_NORMAL_OR_HIGHER || jsEquals(CHECK_API, 'ENABLED');
  IS_NUMERIC_CHECKED = jsEquals(CHECK_NUMERIC, 'AUTO') && LEVEL_NORMAL_OR_HIGHER || jsEquals(CHECK_NUMERIC, 'ENABLED');
  IS_ASSERTED = jsEquals('DISABLED', 'ENABLED');
}

function checkArgument(expression, errorMessage){
  $clinit_InternalPreconditions();
  var e;
  if (IS_API_CHECKED) {
    checkCriticalArgument(expression, errorMessage);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalArgument(expression, errorMessage);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkArrayType(expression){
  $clinit_InternalPreconditions();
  var e;
  if (IS_TYPE_CHECKED) {
    checkCriticalArrayType(expression);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalArrayType(expression);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkArrayType_0(expression, errorMessage){
  $clinit_InternalPreconditions();
  var e;
  if (IS_TYPE_CHECKED) {
    checkCriticalArrayType_0(expression, errorMessage);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalArrayType_0(expression, errorMessage);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkCriticalArgument(expression, errorMessage){
  $clinit_InternalPreconditions();
  if (!expression) {
    throw toJs(new IllegalArgumentException_0(valueOf_47(errorMessage)));
  }
}

function checkCriticalArgument_0(expression, errorMessageTemplate, errorMessageArgs){
  $clinit_InternalPreconditions();
  if (!expression) {
    throw toJs(new IllegalArgumentException_0(format_5(errorMessageTemplate, errorMessageArgs)));
  }
}

function checkCriticalArrayBounds_0(start_0, end, length_0){
  $clinit_InternalPreconditions();
  if (start_0 > end) {
    throw toJs(new IllegalArgumentException_0('fromIndex: ' + start_0 + ' > toIndex: ' + end));
  }
  if (start_0 < 0 || end > length_0) {
    throw toJs(new ArrayIndexOutOfBoundsException_0('fromIndex: ' + start_0 + ', toIndex: ' + end + ', length: ' + length_0));
  }
}

function checkCriticalArrayType(expression){
  if (!expression) {
    throw toJs(new ArrayStoreException);
  }
}

function checkCriticalArrayType_0(expression, errorMessage){
  if (!expression) {
    throw toJs(new ArrayStoreException_0(valueOf_47(errorMessage)));
  }
}

function checkCriticalElement(expression){
  $clinit_InternalPreconditions();
  if (!expression) {
    throw toJs(new NoSuchElementException);
  }
}

function checkCriticalElementIndex(index_0, size_0){
  if (index_0 < 0 || index_0 >= size_0) {
    throw toJs(new IndexOutOfBoundsException_0('Index: ' + index_0 + ', Size: ' + size_0));
  }
}

function checkCriticalNotNull(reference){
  if (jsEquals(reference, null)) {
    throw toJs(new NullPointerException);
  }
  return reference;
}

function checkCriticalNotNull_0(reference, errorMessage){
  if (jsEquals(reference, null)) {
    throw toJs(new NullPointerException_0(valueOf_47(errorMessage)));
  }
}

function checkCriticalPositionIndex(index_0, size_0){
  if (index_0 < 0 || index_0 > size_0) {
    throw toJs(new IndexOutOfBoundsException_0('Index: ' + index_0 + ', Size: ' + size_0));
  }
}

function checkCriticalPositionIndexes(start_0, end, size_0){
  if (start_0 < 0 || end > size_0) {
    throw toJs(new IndexOutOfBoundsException_0('fromIndex: ' + start_0 + ', toIndex: ' + end + ', size: ' + size_0));
  }
  if (start_0 > end) {
    throw toJs(new IllegalArgumentException_0('fromIndex: ' + start_0 + ' > toIndex: ' + end));
  }
}

function checkCriticalState(expression){
  if (!expression) {
    throw toJs(new IllegalStateException);
  }
}

function checkCriticalState_0(expression, errorMessage){
  if (!expression) {
    throw toJs(new IllegalStateException_0(valueOf_47(errorMessage)));
  }
}

function checkCriticalStringBounds(start_0, end, length_0){
  $clinit_InternalPreconditions();
  if (start_0 < 0 || end > length_0 || end < start_0) {
    throw toJs(new StringIndexOutOfBoundsException('fromIndex: ' + start_0 + ', toIndex: ' + end + ', length: ' + length_0));
  }
}

function checkCriticalStringElementIndex(index_0, size_0){
  if (index_0 < 0 || index_0 >= size_0) {
    throw toJs(new StringIndexOutOfBoundsException('Index: ' + index_0 + ', Size: ' + size_0));
  }
}

function checkCriticalType(expression, message){
  if (!expression) {
    throw toJs(new ClassCastException(message));
  }
}

function checkElement(expression){
  $clinit_InternalPreconditions();
  var e;
  if (IS_API_CHECKED) {
    checkCriticalElement(expression);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalElement(expression);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkElementIndex(index_0, size_0){
  $clinit_InternalPreconditions();
  var e;
  if (IS_BOUNDS_CHECKED) {
    checkCriticalElementIndex(index_0, size_0);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalElementIndex(index_0, size_0);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkNotNull(reference){
  $clinit_InternalPreconditions();
  var e;
  if (IS_API_CHECKED) {
    checkCriticalNotNull(reference);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalNotNull(reference);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
  return reference;
}

function checkNotNull_0(reference, errorMessage){
  $clinit_InternalPreconditions();
  var e;
  if (IS_API_CHECKED) {
    checkCriticalNotNull_0(reference, errorMessage);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalNotNull_0(reference, errorMessage);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkPositionIndex(index_0, size_0){
  $clinit_InternalPreconditions();
  var e;
  if (IS_BOUNDS_CHECKED) {
    checkCriticalPositionIndex(index_0, size_0);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalPositionIndex(index_0, size_0);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkPositionIndexes(start_0, end, size_0){
  $clinit_InternalPreconditions();
  var e;
  if (IS_BOUNDS_CHECKED) {
    checkCriticalPositionIndexes(start_0, end, size_0);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalPositionIndexes(start_0, end, size_0);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkState(expression){
  $clinit_InternalPreconditions();
  var e;
  if (IS_API_CHECKED) {
    checkCriticalState(expression);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalState(expression);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkState_0(expression, errorMessage){
  $clinit_InternalPreconditions();
  var e;
  if (IS_API_CHECKED) {
    checkCriticalState_0(expression, errorMessage);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalState_0(expression, errorMessage);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkStringElementIndex(index_0, size_0){
  $clinit_InternalPreconditions();
  var e;
  if (IS_BOUNDS_CHECKED) {
    checkCriticalStringElementIndex(index_0, size_0);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalStringElementIndex(index_0, size_0);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function checkType(expression){
  $clinit_InternalPreconditions();
  checkType_0(expression, null);
}

function checkType_0(expression, message){
  var e;
  if (IS_TYPE_CHECKED) {
    checkCriticalType(expression, message);
  }
   else if (IS_ASSERTED) {
    try {
      checkCriticalType(expression, message);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 25)) {
        e = $e0;
        throw toJs(new AssertionError_0(e));
      }
       else 
        throw toJs($e0);
    }
  }
}

function format_5(template, args){
  var builder, i, placeholderStart, templateStart;
  template = valueOf_47(template);
  builder = new StringBuilder_0(length__I__devirtual$(template) + 16 * args.length);
  templateStart = 0;
  i = 0;
  while (i < args.length) {
    placeholderStart = indexOf_Ljava_lang_String_I_I__devirtual$(template, '%s', templateStart);
    if (placeholderStart == -1) {
      break;
    }
    builder.append_9(substring_II_Ljava_lang_String___devirtual$(template, templateStart, placeholderStart));
    builder.append_8(args[i++]);
    templateStart = placeholderStart + 2;
  }
  builder.append_9(substring_I_Ljava_lang_String___devirtual$(template, templateStart));
  if (i < args.length) {
    builder.append_9(' [');
    builder.append_8(args[i++]);
    while (i < args.length) {
      builder.append_9(', ');
      builder.append_8(args[i++]);
    }
    builder.append_4(93);
  }
  return builder.toString_0();
}

function isApiChecked(){
  $clinit_InternalPreconditions();
  return IS_API_CHECKED || IS_ASSERTED;
}

function isTypeChecked(){
  $clinit_InternalPreconditions();
  return IS_TYPE_CHECKED || IS_ASSERTED;
}

var CHECK_API = 'AUTO', CHECK_BOUNDS = 'AUTO', CHECK_NUMERIC = 'AUTO', CHECK_TYPE = 'AUTO', IS_API_CHECKED = false, IS_ASSERTED = false, IS_BOUNDS_CHECKED = false, IS_NUMERIC_CHECKED = false, IS_TYPE_CHECKED = false, LEVEL_MINIMAL_OR_HIGHER = false, LEVEL_NORMAL_OR_HIGHER = false, LEVEL_OPT_OR_HIGHER = false;
function $clinit_NativeArray(){
  $clinit_NativeArray = emptyMethod;
  $clinit_Object();
}

function $clinit_NativeRegExp(){
  $clinit_NativeRegExp = emptyMethod;
  $clinit_Object();
}

function $clinit_NativeRegExp$Match(){
  $clinit_NativeRegExp$Match = emptyMethod;
}

function $asArray(this$static){
  $clinit_NativeRegExp$Match();
  return uncheckedCast(this$static);
}

function $clinit_ObjectHashing(){
  $clinit_ObjectHashing = emptyMethod;
  $clinit_Object();
}

function getHashCode_1(o){
  $clinit_ObjectHashing();
  return o.$H || (o.$H = getNextHashId());
}

function getNextHashId(){
  return ++nextHashId;
}

var nextHashId = 0;
function $clinit_StringHashCache(){
  $clinit_StringHashCache = emptyMethod;
  $clinit_Object();
  back_1 = new Object_0;
  front = new Object_0;
}

function compute(str){
  var hashCode, i, n, nBatch;
  hashCode = 0;
  n = length__I__devirtual$(str);
  nBatch = n - 4;
  i = 0;
  while (i < nBatch) {
    hashCode = charAt_I_C__devirtual$(str, i + 3) + 31 * (charAt_I_C__devirtual$(str, i + 2) + 31 * (charAt_I_C__devirtual$(str, i + 1) + 31 * (charAt_I_C__devirtual$(str, i) + 31 * hashCode)));
    hashCode = ensureInt(hashCode);
    i += 4;
  }
  while (i < n) {
    hashCode = hashCode * 31 + charAt_I_C__devirtual$(str, i++);
  }
  hashCode = ensureInt(hashCode);
  return hashCode;
}

function getHashCode_2(str){
  $clinit_StringHashCache();
  var hashCode, key, result;
  key = ':' + str;
  result = getProperty(front, key);
  if (jsNotEquals(result, null)) {
    return intValue__I__devirtual$(result);
  }
  result = getProperty(back_1, key);
  hashCode = jsEquals(result, null)?compute(str):intValue__I__devirtual$(result);
  increment();
  setProperty(front, key, valueOf_35(hashCode));
  return hashCode;
}

function increment(){
  if (count_0 == 256) {
    back_1 = front;
    front = new Object_0;
    count_0 = 0;
  }
  ++count_0;
}

var back_1, count_0 = 0, front;
var Z_classLit = createForPrimitive('boolean', 'Z');
var B_classLit = createForPrimitive('byte', 'B');
var C_classLit = createForPrimitive('char', 'C');
var D_classLit = createForPrimitive('double', 'D');
var F_classLit = createForPrimitive('float', 'F');
var I_classLit = createForPrimitive('int', 'I');
var J_classLit = createForPrimitive('long', 'J');
var S_classLit = createForPrimitive('short', 'S');
var $entry = registerEntry_0();
var gwtOnLoad = gwtOnLoad = gwtOnLoad_0;
addInitFunctions(init_50);
setGwtProperty('permProps', [[['locale', 'default'], ['user.agent', 'safari']]]);
$sendStats('moduleStartup', 'moduleEvalEnd');
gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);
$sendStats('moduleStartup', 'end');
$gwt && $gwt.permProps && __gwtModuleFunction.__moduleStartupDone($gwt.permProps);
//# sourceURL=game-0.js

